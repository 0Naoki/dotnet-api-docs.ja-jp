<Type Name="Utf8JsonWriter" FullName="System.Text.Json.Utf8JsonWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f3fe7c9f43d78e08083ff3bf78a5adad02329b8" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68434910" /></Metadata><TypeSignature Language="C#" Value="public sealed class Utf8JsonWriter : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Utf8JsonWriter extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Utf8JsonWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Utf8JsonWriter&#xA;Implements IAsyncDisposable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8JsonWriter sealed : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="F#" Value="type Utf8JsonWriter = class&#xA;    interface IAsyncDisposable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-3.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>UTF-8 でエンコードされた JSON テキストの前方参照、非キャッシュの書き込みのために、高パフォーマンスの API を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

`Utf8JsonWriter`キャッシュなしでテキストをシーケンシャルに書き込みます。また、コメントの書き込みを除き、既定では[JSON RFC](https://tools.ietf.org/html/rfc8259)に準拠します。

検証が有効になっているときに無効な JSON を書き込もう<xref:System.InvalidOperationException>とするメソッドは、コンテキスト固有のエラーメッセージを使用してをスローします。

この型は ref 構造体であるため、非同期的には直接サポートされません。 ただし、部分的なデータを書き込めるように再入をサポートし、チャンクの書き込みを続行します。

出力をインデントおよび空白で書式設定したり、検証をスキップしたりできるようにするに<xref:System.Text.Json.JsonWriterOptions>は、のインスタンスを作成し、それをライターに渡します。

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.Buffers.IBufferWriter{System.Byte},System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bufferWriter As IBufferWriter(Of Byte), Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.Buffers.IBufferWriter&lt;byte&gt; * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (bufferWriter, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="bufferWriter">JSON テキストの書き込み先。</param>
        <param name="options"><see cref="T:System.Text.Json.Utf8JsonWriter" /> のカスタマイズされた動作を定義します。既定では、最小化された JSON (余分な空白なし) を書き込み、書き込まれる JSON が構造上有効であることを JSON RFC に従って検証します。</param>
        <summary>指定された <see langword="System.Buffers.IBufferWriter&lt;System.Byte&gt;" /> を使用して、新しい <see cref="T:System.Text.Json.Utf8JsonWriter" /> インスタンスを構築します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bufferWriter" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.IO.Stream utf8Json, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.IO.Stream,System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (utf8Json As Stream, Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.IO.Stream * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (utf8Json, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json">JSON テキストの書き込み先。</param>
        <param name="options"><see cref="T:System.Text.Json.Utf8JsonWriter" /> のカスタマイズされた動作を定義します。既定では、最小化された JSON (余分な空白なし) を書き込み、書き込まれる JSON が構造上有効であることを JSON RFC に従って検証します。</param>
        <summary>指定された <paramref name="utf8Json" /> を使用して、新しい <see cref="T:System.Text.Json.Utf8JsonWriter" /> インスタンスを構築します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="utf8Json" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesCommitted">
      <MemberSignature Language="C#" Value="public long BytesCommitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesCommitted" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesCommitted As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesCommitted { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesCommitted : int64" Usage="System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインスタンスによってこれまで出力にコミットされた合計バイト数を取得します。</summary>
        <value>これまでにによって<see cref="T:System.Text.Json.Utf8JsonWriter" />出力にコミットされたバイトの合計数。</value>
        <remarks>
          <format><![CDATA[
          
の<xref:System.Buffers.IBufferWriter%601>場合、このプロパティは ibufferwriter がどの程度進んでいるかを示します。

の<xref:System.IO.Stream>場合、このプロパティはストリームに書き込まれたデータの量を示します。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesPending">
      <MemberSignature Language="C#" Value="public int BytesPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesPending" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesPending As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesPending { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesPending : int" Usage="System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これまでに <see cref="T:System.Text.Json.Utf8JsonWriter" /> によって書き込まれたバイト数のうち、まだ出力にフラッシュされてコミットされていないバイト数を取得します。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDepth">
      <MemberSignature Language="C#" Value="public int CurrentDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDepth : int" Usage="System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のトークンの深度を取得します。</summary>
        <value>現在のトークンの深さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

プロパティ`CurrentDepth`は、これまでに記述された JSON テキスト内の入れ子になったオブジェクトまたは配列の再帰的な深さを追跡します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="utf8JsonWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>まだフラッシュされていない残りの JSON テキストがあればそれをコミットし、現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format><![CDATA[
          
Ibufferwriter の場合、これまでに記述され<xref:System.Buffers.IBufferWriter`1>た内容に基づいて、基になるを進めます。

ストリームの場合、これによってデータがストリームに書き込まれ、フラッシュされます。

破棄<xref:System.Text.Json.Utf8JsonWriter>後にインスタンスを再利用することはできません。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="utf8JsonWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>まだフラッシュされていない残りの JSON テキストがあればそれを非同期的にコミットし、現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
Ibufferwriter の場合、これまでに記述され<xref:System.Buffers.IBufferWriter`1>た内容に基づいて、基になるを進めます。
          
ストリームの場合、これによってデータがストリームに書き込まれ、フラッシュされます。

破棄<xref:System.Text.Json.Utf8JsonWriter>後にインスタンスを再利用することはできません。
            
            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="utf8JsonWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これまでに書き込まれた JSON テキストをコミットします。これにより出力先で表示できるようになります。</summary>
        <remarks>
          <format><![CDATA[
          
Ibufferwriter の場合、これまでに記述され<xref:System.Buffers.IBufferWriter`1>た内容に基づいて、基になるを進めます。

の<xref:System.IO.Stream>場合、これによりデータがストリームに書き込まれ、フラッシュされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">このインスタンスは破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="utf8JsonWriter.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>これまでに書き込まれた JSON テキストを非同期的にコミットします。これにより出力先で表示できるようになります。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
Ibufferwriter の場合、これまでに記述され<xref:System.Buffers.IBufferWriter`1>た内容に基づいて、基になるを進めます。

の<xref:System.IO.Stream>場合は、キャンセル要求を監視しながら、データをストリームに書き込み、非同期的にフラッシュします。

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">このインスタンスは破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonWriterOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonWriterOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonWriterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonWriterOptions Options { System::Text::Json::JsonWriterOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonWriterOptions" Usage="System.Text.Json.Utf8JsonWriter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonWriterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスを使用して JSON を書き込む際のカスタム動作を取得します。これによって、書き込み中に出力をフォーマットするかどうか、および JSON の構造検証をスキップするかどうかが示されます。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="utf8JsonWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスの内部状態をリセットして、それを再利用できるようにします。</summary>
        <remarks>
          <format><![CDATA[
          
は<xref:System.Text.Json.Utf8JsonWriter> 、元のライターオプションと元の出力 (または<xref:System.IO.Stream>のいずれ<xref:System.Buffers.IBufferWriter`1>か) を変換先として使用し続けます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">このインスタンスは破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (bufferWriter As IBufferWriter(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ bufferWriter);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.Reset bufferWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bufferWriter">JSON テキストの書き込み先。</param>
        <summary>このインスタンスの内部状態をリセットして、<see cref="T:System.Buffers.IBufferWriter`1" /> の新しいインスタンスで再利用できるようにします。</summary>
        <remarks>
          <format><![CDATA[
          
は引き続き元のライターオプションを使用しますが、現在`bufferWriter`は新しい変換先としてに書き込まれます。<xref:System.Text.Json.Utf8JsonWriter>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bufferWriter" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ObjectDisposedException">このインスタンスは破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.IO.Stream utf8Json);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.IO.Stream utf8Json) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (utf8Json As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::IO::Stream ^ utf8Json);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.IO.Stream -&gt; unit" Usage="utf8JsonWriter.Reset utf8Json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="utf8Json">JSON テキストの書き込み先。</param>
        <summary>このインスタンスの内部状態をリセットして、<see cref="T:System.IO.Stream" /> の新しいインスタンスで再利用できるようにします。</summary>
        <remarks>
          <format><![CDATA[
          
は引き続き元のライターオプションを使用しますが、現在`utf8Json`は新しい変換先としてに書き込まれます。<xref:System.Text.Json.Utf8JsonWriter>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="utf8Json" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ObjectDisposedException">このインスタンスは破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (utf8PropertyName As ReadOnlySpan(Of Byte), bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (utf8PropertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As ReadOnlySpan(Of Char), bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (string propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As String, bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As JsonEncodedText, bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64StringValue">
      <MemberSignature Language="C#" Value="public void WriteBase64StringValue (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64StringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64StringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64StringValue (bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64StringValue(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64StringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64StringValue bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (utf8PropertyName As ReadOnlySpan(Of Byte), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;byte&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON リテラル "true" または "false" として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.Boolean" /> 値 (JSON リテラルの "true" または "false" として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As ReadOnlySpan(Of Char), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;char&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON リテラル "true" または "false" として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Boolean" /> 値 (JSON リテラルの "true" または "false" として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
書き込みの前にプロパティ名がエスケープされます。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (string propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(string propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::String ^ propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : string * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON リテラル "true" または "false" として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Boolean" /> 値 (JSON リテラルの "true" または "false" として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
書き込みの前にプロパティ名がエスケープされます。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (System.Text.Json.JsonEncodedText propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.Text.Json.JsonEncodedText propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.Text.Json.JsonEncodedText,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As JsonEncodedText, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::Text::Json::JsonEncodedText propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : System.Text.Json.JsonEncodedText * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBooleanValue">
      <MemberSignature Language="C#" Value="public void WriteBooleanValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBooleanValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBooleanValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBooleanValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBooleanValue(bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBooleanValue : bool -&gt; unit" Usage="utf8JsonWriter.WriteBooleanValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON リテラル "true" または "false" として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Boolean" /> 値 (JSON リテラル "true" または "false" として) を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value">/*..*/ 内に JSON コメントとして書き込まれる、UTF-8 でエンコードされた値。</param>
        <summary>UTF-8 テキスト値を JSON コメントとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
コメント値は、書き込みの前にエスケープされません。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した値が大きすぎます。
        
- または -

<paramref name="utf8Value" /> にコメント区切り記号 (つまり */) が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">/*..*/ 内に UTF-8 でトランスコードされた JSON コメントとして書き込まれる、UTF-16 でエンコードされた値。</param>
        <summary>UTF-16 テキスト値を JSON コメントとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
コメント値は、書き込みの前にエスケープされません。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した値は、過大な OR です。
        
または

<paramref name="value" /> にコメント区切り記号 (つまり */) が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : string -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">/*..*/ 内に UTF-8 でトランスコードされた JSON コメントとして書き込まれる、UTF-16 でエンコードされた値。</param>
        <summary>文字列テキスト値を JSON コメントとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
コメント値は、書き込みの前にエスケープされません。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した値が大きすぎます。
        
- または -

<paramref name="value" /> にコメント区切り記号 (つまり */) が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndArray">
      <MemberSignature Language="C#" Value="public void WriteEndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndArray();" />
      <MemberSignature Language="F#" Value="member this.WriteEndArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>JSON 配列の終了を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndObject();" />
      <MemberSignature Language="F#" Value="member this.WriteEndObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>JSON オブジェクトの終了を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、JSON リテラルの "null" を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
書き込みの前にプロパティ名がエスケープされます。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、JSON リテラルの "null" を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
書き込みの前にプロパティ名がエスケープされます。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : string -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <summary>文字列として指定されたプロパティ名と、JSON リテラルの "null" を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[
          
書き込みの前にプロパティ名がエスケープされます。
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNullValue">
      <MemberSignature Language="C#" Value="public void WriteNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNullValue();" />
      <MemberSignature Language="F#" Value="member this.WriteNullValue : unit -&gt; unit" Usage="utf8JsonWriter.WriteNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>JSON 配列の要素として、JSON リテラル "null" を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.Decimal" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Decimal> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.Double" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Double> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.Int32" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Int32> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.Int64" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Int64> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.Single" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Single> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.UInt32" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.UInt32> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名と、<see cref="T:System.UInt64" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.UInt64> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Decimal" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Decimal> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Double" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Double> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Int32" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Int32> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Int64" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Int64> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Single" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Single> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.UInt32" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.UInt32> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.UInt64" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.UInt64> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Decimal" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Decimal> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Double" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Double> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Int32" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Int32> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Int64" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Int64> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Single" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Single> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.UInt32" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.UInt32> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 数値として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.UInt64" /> 値 (JSON 数値として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.UInt64> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、"G" など) を次に示します。32767。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Decimal" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.Decimal>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : double -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Double" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.Double>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Int32" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.Int32>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。 たとえば、32767のようになります。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Int64" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.Int64>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。 たとえば、32767のようになります。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : single -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Single" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.Single>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.UInt32" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.UInt32>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。 たとえば、32767のようになります。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 数値として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.UInt64" /> 値 (JSON 数値として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.UInt64>既定<xref:System.Buffers.StandardFormat>値 ("G") を使用して値を書き込みます。 たとえば、32767のようになります。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WritePropertyName utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WritePropertyName propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : string -&gt; unit" Usage="utf8JsonWriter.WritePropertyName propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WritePropertyName propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray();" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>JSON 配列の先頭を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。

- または -

検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON 配列の UTF-8 でエンコードされたプロパティ名。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名を含む JSON 配列の先頭をキーとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[

書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。

- または -
       
検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON 配列の UTF-16 でエンコードされたプロパティ名。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名を含む JSON 配列の先頭をキーとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[

書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。

または
       
検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : string -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON 配列の UTF-16 でエンコードされたプロパティ名。</param>
        <summary>文字列として指定されたプロパティ名を含む JSON 配列の先頭をキーとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[

書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。

または
       
検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject();" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>JSON オブジェクトの先頭を書き込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。

- または -

検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <summary>バイト型の読み取り専用スパンとして指定されたプロパティ名を含む JSON オブジェクトの先頭をキーとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[

書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。 

または
       
検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名を含む JSON オブジェクトの先頭をキーとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[

書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。 

または
       
検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : string -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <summary>文字列として指定されたプロパティ名を含む JSON オブジェクトの先頭をキーとして書き込みます。</summary>
        <remarks>
          <format><![CDATA[

書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">JSON の深度が、最大深度 1000 を超えました。 

- または -
       
検証が有効化されると、この書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-8 プロパティ名と <see cref="T:System.DateTime" /> 値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

ラウンドトライ可能 (' O ') <xref:System.Buffers.StandardFormat>を使用してを書き込みます。<xref:System.DateTime> たとえば、2017-06-12T05:30: 45.7680000 のようになります。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-8 プロパティ名と <see cref="T:System.DateTimeOffset" /> 値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

次の<xref:System.DateTimeOffset>例のように、ラウンドトライ可能な (' O <xref:System.Buffers.StandardFormat> ') を使用してを書き込みます。2017-06-12T05:30:45.7680000-07:00. 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-8 プロパティ名と <see cref="T:System.Guid" /> 値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Guid> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、": Nnnnnnnn-nnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn の形式で、")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="utf8Value">名前/値ペアの一部として、JSON 文字列として書き込まれる UTF-8 でエンコードされた値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-8 プロパティ名と UTF-8 テキスト値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、UTF-8 でトランスコードされた JSON 文字列として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-8 プロパティ名と UTF-16 テキスト値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">書き込み対象の JSON オブジェクトの UTF-8 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、UTF-8 でトランスコードされた JSON 文字列として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-8 プロパティ名と文字列テキスト値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.DateTime" /> 値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

次の<xref:System.DateTime>例のように、ラウンドトライ可能な (' O <xref:System.Buffers.StandardFormat> ') を使用してを書き込みます。2017-06-12T05:30:45.7680000. 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.DateTimeOffset" /> 値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

次の<xref:System.DateTimeOffset>例のように、ラウンドトライ可能な (' O <xref:System.Buffers.StandardFormat> ') を使用してを書き込みます。2017-06-12T05:30:45.7680000-07:00. 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>読み取り専用の文字範囲として指定されたプロパティ名と、<see cref="T:System.Guid" /> 値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Guid> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、": Nnnnnnnn-nnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn の形式で、")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="utf8Value">名前/値ペアの一部として、JSON 文字列として書き込まれる UTF-8 でエンコードされた値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-16 プロパティ名と UTF-8 テキスト値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、UTF-8 でトランスコードされた JSON 文字列として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-16 プロパティ名と UTF-16 テキスト値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、UTF-8 でトランスコードされた JSON 文字列として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>JSON オブジェクトの名前/値ペアの一部として、UTF-16 プロパティ名と文字列テキスト値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.DateTime" /> 値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

次の<xref:System.DateTime>例のように、ラウンドトライ可能な (' O <xref:System.Buffers.StandardFormat> ') を使用してを書き込みます。2017-06-12T05:30:45.7680000. 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.DateTimeOffset" /> 値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

次の<xref:System.DateTimeOffset>例のように、ラウンドトライ可能な (' O <xref:System.Buffers.StandardFormat> ') を使用してを書き込みます。2017-06-12T05:30:45.7680000-07:00. 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、JSON 文字列として書き込まれる値。</param>
        <summary>文字列として指定されたプロパティ名と、<see cref="T:System.Guid" /> 値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

<xref:System.Guid> 既定<xref:System.Buffers.StandardFormat>のを使用してを書き込みます (つまり、": Nnnnnnnn-nnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn の形式で、")。 書き込みの前にプロパティ名がエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名が長すぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="utf8Value">名前/値ペアの一部として、JSON 文字列として書き込まれる UTF-8 でエンコードされた値。</param>
        <summary>文字列として指定されたプロパティ名と、UTF-8 テキスト値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、UTF-8 でトランスコードされた JSON 文字列として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>文字列として指定されたプロパティ名と、UTF-16 テキスト値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">UTF-8 としてトランスコードおよび書き込み対象の JSON オブジェクトの UTF-16 でエンコードされたプロパティ名。</param>
        <param name="value">名前/値ペアの一部として、UTF-8 でトランスコードされた JSON 文字列として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>文字列として指定されたプロパティ名と、文字列テキスト値 (JSON 文字列として) を、JSON オブジェクトの名前/値ペアの一部として書き込みます。</summary>
        <remarks>
          <format><![CDATA[

プロパティの名前と値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたプロパティ名または値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="utf8Value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTime -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 文字列として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.DateTime" /> 値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.DateTime>ラウンドトライ可能 (' O ') <xref:System.Buffers.StandardFormat>を使用してを書き込みます。 たとえば、2017-06-12T05:30: 45.7680000 のようになります。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 文字列として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.DateTimeOffset" /> 値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.DateTimeOffset>ラウンドトライ可能 (' O ') <xref:System.Buffers.StandardFormat>を使用してを書き込みます。 たとえば、2017-06-12T05:30: 45.7680000-07:00 のようになります。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : Guid -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の一部として、JSON 文字列として書き込まれる値。</param>
        <summary>JSON 配列の要素として、<see cref="T:System.Guid" /> 値 (JSON 文字列として) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[  

このメソッドは、 <xref:System.Guid>次の形式で<xref:System.Buffers.StandardFormat>既定値 ("d") を使用して値を書き込みます: nnnnnnnn-nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn。

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、操作によって無効な JSON の書き込みが行われる場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value">JSON 配列の JSON 文字列要素として書き込まれる UTF-8 でエンコードされた値。</param>
        <summary>JSON 配列の要素として、UTF-8 テキスト値 (JSON 文字列) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の UTF-8 でトランスコードされた JSON 文字列要素として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>JSON 配列の要素として、UTF-16 テキスト値 (JSON 文字列) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : string -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">JSON 配列の UTF-8 でトランスコードされた JSON 文字列要素として書き込まれる UTF-16 でエンコードされた値。</param>
        <summary>JSON 配列の要素として、文字列テキスト値 (JSON 文字列) を書き込みます。</summary>
        <remarks>
          <format><![CDATA[

値は、書き込みの前にエスケープされます。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した値が大きすぎます。</exception>
        <exception cref="T:System.InvalidOperationException">検証が有効化されると、書き込み操作によって無効な JSON が生成される場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>