<Type Name="ElapsedEventArgs" FullName="System.Timers.ElapsedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3dc938a0e5ca36dd99835612e30baf7ae061cf8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70612654" /></Metadata><TypeSignature Language="C#" Value="public class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElapsedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ElapsedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ElapsedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="acded-101"><see cref="E:System.Timers.Timer.Elapsed" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="acded-101">Provides data for the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="acded-102">次の例では<xref:System.Timers.Timer> 、2秒 ( <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 2000 ミリ秒) ごとにイベントを発生させるオブジェクトをインスタンス化し、イベントのイベントハンドラーを設定して、タイマーを開始します。</span><span class="sxs-lookup"><span data-stu-id="acded-102">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="acded-103">イベントハンドラーは、発生するたびに<xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="acded-103">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SignalTime">
      <MemberSignature Language="C#" Value="public DateTime SignalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SignalTime" />
      <MemberSignature Language="DocId" Value="P:System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SignalTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SignalTime : DateTime" Usage="System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acded-104"><see cref="E:System.Timers.Timer.Elapsed" /> イベントが発生した日付/時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="acded-104">Gets the date/time when the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</span></span></summary>
        <value><span data-ttu-id="acded-105"><see cref="E:System.Timers.Timer.Elapsed" /> イベントが発生した時刻。</span><span class="sxs-lookup"><span data-stu-id="acded-105">The time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acded-106">イベントは<xref:System.Threading.ThreadPool>スレッドで発生します。そのため、イベント処理メソッドは、メソッドの<xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType>呼び出しが別のスレッドで実行されるときに、1つのスレッドで実行される可能性があります。 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="acded-106">The <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event is raised on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> method runs on another thread.</span></span> <span data-ttu-id="acded-107">これにより、 <xref:System.Timers.Timer.Elapsed> <xref:System.Timers.Timer.Stop%2A>メソッドが呼び出された後にイベントが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="acded-107">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="acded-108">この競合状態は、メソッドが呼び出された<xref:System.Timers.ElapsedEventArgs.SignalTime%2A>時刻<xref:System.Timers.Timer.Stop%2A>とプロパティを比較するだけでは回避できません。これは、 <xref:System.Timers.Timer.Stop%2A>メソッドが呼び出されたときにイベント処理メソッドが既に実行されている可能性があるか、開始される可能性があるためです。<xref:System.Timers.Timer.Stop%2A>メソッドが呼び出された時点から、停止時刻が保存された時点までの間に実行します。</span><span class="sxs-lookup"><span data-stu-id="acded-108">This race condition cannot be prevented simply by comparing the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property with the time when the <xref:System.Timers.Timer.Stop%2A> method is called, because the event-handling method might already be executing when the <xref:System.Timers.Timer.Stop%2A> method is called, or might begin executing between the moment when the <xref:System.Timers.Timer.Stop%2A> method is called and the moment when the stop time is saved.</span></span> <span data-ttu-id="acded-109">イベント処理メソッドがまだ実行されている間<xref:System.Timers.Timer.Stop%2A>に、メソッドを呼び出すスレッドが続行されないようにすることが重要な場合は、 <xref:System.Threading.Monitor>クラスや<xref:System.Threading.Interlocked.CompareExchange%2A>メソッドなど、より堅牢な同期機構を使用します。</span><span class="sxs-lookup"><span data-stu-id="acded-109">If it is critical to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from proceeding while the event-handling method is still executing, use a more robust synchronization mechanism such as the <xref:System.Threading.Monitor> class or the <xref:System.Threading.Interlocked.CompareExchange%2A> method.</span></span> <span data-ttu-id="acded-110">メソッドを使用<xref:System.Threading.Interlocked.CompareExchange%2A>するコードに<xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType>ついては、メソッドの例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="acded-110">Code that uses the <xref:System.Threading.Interlocked.CompareExchange%2A> method can be found in the example for the <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acded-111">次の例では<xref:System.Timers.Timer> 、2秒 ( <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 2000 ミリ秒) ごとにイベントを発生させるオブジェクトをインスタンス化し、イベントのイベントハンドラーを設定して、タイマーを開始します。</span><span class="sxs-lookup"><span data-stu-id="acded-111">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="acded-112">イベントハンドラーは、発生するたびに<xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="acded-112">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.Stop" />
      </Docs>
    </Member>
  </Members>
</Type>
