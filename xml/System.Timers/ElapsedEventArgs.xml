<Type Name="ElapsedEventArgs" FullName="System.Timers.ElapsedEventArgs">
  <TypeSignature Language="C#" Value="public class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElapsedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ElapsedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElapsedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bca1f-101"><see cref="E:System.Timers.Timer.Elapsed" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="bca1f-101">Provides data for the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bca1f-102">次の例のインスタンスを作成、<xref:System.Timers.Timer>を発生させるオブジェクト、<xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>イベントすべて 2 秒 (2000 ミリ秒) が、イベントのイベント ハンドラーを設定し、タイマーを開始します。</span><span class="sxs-lookup"><span data-stu-id="bca1f-102">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="bca1f-103">イベント ハンドラーの値を表示する、<xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>プロパティが発生するたびにします。</span><span class="sxs-lookup"><span data-stu-id="bca1f-103">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SignalTime">
      <MemberSignature Language="C#" Value="public DateTime SignalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SignalTime" />
      <MemberSignature Language="DocId" Value="P:System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SignalTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bca1f-104"><see cref="E:System.Timers.Timer.Elapsed" /> イベントが発生した日付/時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="bca1f-104">Gets the date/time when the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</span></span></summary>
        <value><span data-ttu-id="bca1f-105"><see cref="E:System.Timers.Timer.Elapsed" /> イベントが発生した時刻。</span><span class="sxs-lookup"><span data-stu-id="bca1f-105">The time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca1f-106"><xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>にイベントが発生、<xref:System.Threading.ThreadPool>スレッド、ため、同時に 1 つのスレッドが実行されるイベント処理メソッドにへの呼び出し、<xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType>メソッドの別のスレッドで実行します。</span><span class="sxs-lookup"><span data-stu-id="bca1f-106">The <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event is raised on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> method runs on another thread.</span></span> <span data-ttu-id="bca1f-107">これは、結果、な<xref:System.Timers.Timer.Elapsed>後に発生するイベント、<xref:System.Timers.Timer.Stop%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bca1f-107">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="bca1f-108">この競合状態を比較するだけで防止できない、<xref:System.Timers.ElapsedEventArgs.SignalTime%2A>時間を持つプロパティときに、<xref:System.Timers.Timer.Stop%2A>イベント処理メソッドが既に実行されている場合にあるために、メソッドが呼び出されます、<xref:System.Timers.Timer.Stop%2A>メソッドが呼び出されると、または時点の間の実行を開始する可能性があるときに、<xref:System.Timers.Timer.Stop%2A>メソッドが呼び出されると停止時刻を保存すると、現在します。</span><span class="sxs-lookup"><span data-stu-id="bca1f-108">This race condition cannot be prevented simply by comparing the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property with the time when the <xref:System.Timers.Timer.Stop%2A> method is called, because the event-handling method might already be executing when the <xref:System.Timers.Timer.Stop%2A> method is called, or might begin executing between the moment when the <xref:System.Timers.Timer.Stop%2A> method is called and the moment when the stop time is saved.</span></span> <span data-ttu-id="bca1f-109">呼び出すスレッドを防ぐために重要な場合、<xref:System.Timers.Timer.Stop%2A>から続行して、イベント処理メソッドはまだ実行中、メソッドより堅牢な同期機構の使用、<xref:System.Threading.Monitor>クラスまたは<xref:System.Threading.Interlocked.CompareExchange%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bca1f-109">If it is critical to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from proceeding while the event-handling method is still executing, use a more robust synchronization mechanism such as the <xref:System.Threading.Monitor> class or the <xref:System.Threading.Interlocked.CompareExchange%2A> method.</span></span> <span data-ttu-id="bca1f-110">使用するコード、<xref:System.Threading.Interlocked.CompareExchange%2A>の例ではメソッドが見つかりません、<xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bca1f-110">Code that uses the <xref:System.Threading.Interlocked.CompareExchange%2A> method can be found in the example for the <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bca1f-111">次の例のインスタンスを作成、<xref:System.Timers.Timer>を発生させるオブジェクト、<xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>イベントすべて 2 秒 (2000 ミリ秒) が、イベントのイベント ハンドラーを設定し、タイマーを開始します。</span><span class="sxs-lookup"><span data-stu-id="bca1f-111">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="bca1f-112">イベント ハンドラーの値を表示する、<xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType>プロパティが発生するたびにします。</span><span class="sxs-lookup"><span data-stu-id="bca1f-112">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.Stop" />
      </Docs>
    </Member>
  </Members>
</Type>