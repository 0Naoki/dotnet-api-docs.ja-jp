<Type Name="ElapsedEventHandler" FullName="System.Timers.ElapsedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74657db2b34387981e4ffcabe57936800da8b220" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69098445" /></Metadata><TypeSignature Language="C#" Value="public delegate void ElapsedEventHandler(object sender, ElapsedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ElapsedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ElapsedEventHandler(sender As Object, e As ElapsedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ElapsedEventHandler(System::Object ^ sender, ElapsedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ElapsedEventHandler = delegate of obj * ElapsedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Timers.ElapsedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを格納している <see cref="T:System.Timers.ElapsedEventArgs" /> オブジェクト。</param>
    <summary><see cref="E:System.Timers.Timer.Elapsed" /> の <see cref="T:System.Timers.Timer" /> イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Timers.ElapsedEventHandler>デリゲートを作成するときは、 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>イベントのイベントハンドラーを設定し、タイマーを作成して、タイマーを開始します。 イベントハンドラーには、 <xref:System.Timers.ElapsedEventHandler>デリゲートと同じシグネチャがあります。 イベントハンドラーは、発生<xref:System.Timers.ElapsedEventArgs.SignalTime%2A>するたびにプロパティを表示します。  
  
 [!code-cpp[Classic Timer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer Example/CS/source.cs#1)]
 [!code-vb[Classic Timer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="T:System.Timers.ElapsedEventArgs" />
  </Docs>
</Type>
