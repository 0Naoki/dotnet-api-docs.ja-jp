<Type Name="LocalBuilder" FullName="System.Reflection.Emit.LocalBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e7ca29ce911d242754c803766a7fdb1b6167106" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643165" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalBuilder : System.Reflection.LocalVariableInfo, System.Runtime.InteropServices._LocalBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalBuilder extends System.Reflection.LocalVariableInfo implements class System.Runtime.InteropServices._LocalBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.LocalBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalBuilder&#xA;Inherits LocalVariableInfo&#xA;Implements _LocalBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalBuilder sealed : System::Reflection::LocalVariableInfo, System::Runtime::InteropServices::_LocalBuilder" />
  <TypeSignature Language="F#" Value="type LocalBuilder = class&#xA;    inherit LocalVariableInfo&#xA;    interface _LocalBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.LocalVariableInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._LocalBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._LocalBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7666-101">Represents a local variable within a method or constructor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7666-101">Represents a local variable within a method or constructor.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-102">A`LocalBuilder`を使用してオブジェクトを定義することができます、<xref:System.Reflection.Emit.ILGenerator.DeclareLocal%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a7666-102">A `LocalBuilder` object can be defined using the <xref:System.Reflection.Emit.ILGenerator.DeclareLocal%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7666-103">次の例を作成、`static`メソッド (`Shared` Visual Basic で) という`Function1`を文字列を返しますを型のパラメーターを持つ<xref:System.Int32>します。</span><span class="sxs-lookup"><span data-stu-id="a7666-103">The following example creates a `static` method (`Shared` in Visual Basic) named `Function1` that returns a string and has a parameter of type <xref:System.Int32>.</span></span> <span data-ttu-id="a7666-104">このコード例を作成、メソッドの本文で<xref:System.Reflection.Emit.LocalBuilder>オブジェクトを表す 2 つのローカル変数とセットは、ローカル変数に関する情報をシンボルします。</span><span class="sxs-lookup"><span data-stu-id="a7666-104">In the body of the method, the code example creates <xref:System.Reflection.Emit.LocalBuilder> objects representing two local variables, and sets symbol information for the local variables.</span></span> <span data-ttu-id="a7666-105">メソッドは何も行わない重大であるが、メソッドの本体では、ローカル変数にリテラル文字列を格納して、ローカル変数を読み込み、ローカル変数にパラメーターを格納するを示しています。</span><span class="sxs-lookup"><span data-stu-id="a7666-105">The method does not do anything significant, but the method body demonstrates storing a parameter to a local variable, storing a literal string to a local variable, and loading a local variable.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#1)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#1)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsPinned">
      <MemberSignature Language="C#" Value="public override bool IsPinned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinned" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.IsPinned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsPinned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPinned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPinned : bool" Usage="System.Reflection.Emit.LocalBuilder.IsPinned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7666-106">Gets a value indicating whether the object referred to by the local variable is pinned in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-106">Gets a value indicating whether the object referred to by the local variable is pinned in memory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7666-107">
            <see langword="true" /> ローカル変数は、メモリ内で固定によって参照されるオブジェクトの場合それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-107">
              <see langword="true" /> if the object referred to by the local variable is pinned in memory; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-108">アンセーフ コードは、アンマネージ ポインターでを参照する前にオブジェクトを固定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a7666-108">In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer.</span></span> <span data-ttu-id="a7666-109">参照先のオブジェクトが固定されているときに、ガベージ コレクションを移動できません。</span><span class="sxs-lookup"><span data-stu-id="a7666-109">While the referenced object is pinned, it cannot be moved by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalIndex">
      <MemberSignature Language="C#" Value="public override int LocalIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalIndex" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.LocalIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LocalIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalIndex : int" Usage="System.Reflection.Emit.LocalBuilder.LocalIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7666-110">Gets the zero-based index of the local variable within the method body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-110">Gets the zero-based index of the local variable within the method body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7666-111">メソッド本体内でローカル変数の宣言の順序を表す整数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-111">An integer value that represents the order of declaration of the local variable within the method body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-112">インデックス番号は、注文のローカル変数に割り当てられているは、宣言または生成されます、0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="a7666-112">Index numbers are assigned to local variables in the order in which they are declared or emitted, beginning with zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalType">
      <MemberSignature Language="C#" Value="public override Type LocalType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LocalType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.LocalType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ LocalType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalType : Type" Usage="System.Reflection.Emit.LocalBuilder.LocalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7666-113">Gets the type of the local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-113">Gets the type of the local variable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7666-114">
            <see cref="T:System.Type" />のローカル変数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-114">The <see cref="T:System.Type" /> of the local variable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a7666-115">次のコード サンプルは、の使用方法を示します`LocalType`です。</span><span class="sxs-lookup"><span data-stu-id="a7666-115">The following code sample illustrates the use of `LocalType`.</span></span> <span data-ttu-id="a7666-116">このコードの例の一部である、<xref:System.Reflection.Emit.LocalBuilder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a7666-116">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSymInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7666-117">Sets the local variable's symbolic information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-117">Sets the local variable's symbolic information.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSymInfo">
      <MemberSignature Language="C#" Value="public void SetLocalSymInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSymInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSymInfo (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSymInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSymInfo : string -&gt; unit" Usage="localBuilder.SetLocalSymInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a7666-118">The name of the local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-118">The name of the local variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7666-119">Sets the name of this local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-119">Sets the name of this local variable.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-120"><xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A>メソッドは動的な型で定義されているメソッドに対してサポートされています。</span><span class="sxs-lookup"><span data-stu-id="a7666-120">The <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method is supported for methods defined in dynamic types.</span></span> <span data-ttu-id="a7666-121">使用して定義されている動的メソッドはサポートされていません、<xref:System.Reflection.Emit.DynamicMethod>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a7666-121">It is not supported for dynamic methods defined using the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7666-122">次のコード サンプルの使用を示しています、<xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a7666-122">The following code sample illustrates the use of the <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method.</span></span> <span data-ttu-id="a7666-123">このコードの例の一部である、<xref:System.Reflection.Emit.LocalBuilder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a7666-123">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7666-124">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-124">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
          <span data-ttu-id="a7666-125">-or-  There is no symbolic writer defined for the containing module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-125">-or-  There is no symbolic writer defined for the containing module.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7666-126">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-126">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSymInfo">
      <MemberSignature Language="C#" Value="public void SetLocalSymInfo (string name, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSymInfo(string name, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSymInfo (name As String, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSymInfo(System::String ^ name, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSymInfo : string * int * int -&gt; unit" Usage="localBuilder.SetLocalSymInfo (name, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a7666-127">The name of the local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-127">The name of the local variable.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="a7666-128">The beginning offset of the lexical scope of the local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-128">The beginning offset of the lexical scope of the local variable.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="a7666-129">The ending offset of the lexical scope of the local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-129">The ending offset of the lexical scope of the local variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7666-130">Sets the name and lexical scope of this local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-130">Sets the name and lexical scope of this local variable.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-131"><xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A>メソッドは動的な型で定義されているメソッドに対してサポートされています。</span><span class="sxs-lookup"><span data-stu-id="a7666-131">The <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method is supported for methods defined in dynamic types.</span></span> <span data-ttu-id="a7666-132">使用して定義されている動的メソッドはサポートされていません、<xref:System.Reflection.Emit.DynamicMethod>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a7666-132">It is not supported for dynamic methods defined using the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7666-133">次のコード サンプルの使用を示しています、<xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a7666-133">The following code sample illustrates the use of the <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method.</span></span> <span data-ttu-id="a7666-134">このコードの例の一部である、<xref:System.Reflection.Emit.LocalBuilder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a7666-134">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7666-135">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-135">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span>
          </span>
          <span data-ttu-id="a7666-136">-or-  There is no symbolic writer defined for the containing module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-136">-or-  There is no symbolic writer defined for the containing module.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7666-137">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-137">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _LocalBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_LocalBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="a7666-138">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-138">Reserved for future use.</span>
          </span>
          <span data-ttu-id="a7666-139">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-139">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="a7666-140">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-140">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="a7666-141">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-141">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="a7666-142">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-142">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="a7666-143">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-143">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7666-144">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-144">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-145">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="a7666-145">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a7666-146">詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7666-146">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a7666-147">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-147">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _LocalBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_LocalBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="a7666-148">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-148">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="a7666-149">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-149">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="a7666-150">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-150">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7666-151">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-151">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-152">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="a7666-152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a7666-153">詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7666-153">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a7666-154">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-154">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _LocalBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_LocalBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="a7666-155">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-155">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7666-156">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-156">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-157">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="a7666-157">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a7666-158">詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7666-158">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a7666-159">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-159">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _LocalBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _LocalBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_LocalBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="a7666-160">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-160">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="a7666-161">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-161">Reserved for future use.</span>
          </span>
          <span data-ttu-id="a7666-162">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-162">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="a7666-163">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-163">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="a7666-164">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-164">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="a7666-165">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-165">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="a7666-166">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-166">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="a7666-167">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-167">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="a7666-168">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-168">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7666-169">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-169">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7666-170">このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="a7666-170">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a7666-171">詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a7666-171">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a7666-172">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7666-172">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>