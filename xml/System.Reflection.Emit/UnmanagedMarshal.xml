<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c740343ea54fd913e877fe39638f35bde1abe565" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52355616" /></Metadata><TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <TypeSignature Language="F#" Value="type UnmanagedMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>マネージド コードからアンマネージド コードにフィールドをマーシャリングする方法を記述するクラスを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コード例では、この旧式の型の回避策を示します。  
  
 マーシャ リングは、リモート プロシージャ呼び出しを確立するためのパッケージ化およびアンパッケージ化パラメーターのプロセスです。 マーシャ リング中にフィールドをマネージ型の形式が、対応するアンマネージ型の形式と異なる場合、形式変換を行うこともできます。 マーシャ リングするなど、`String`とアンマネージの BSTR 型。 いくつかの形式の変換は、ランタイムによって自動的に処理されます。 既定の動作をオーバーライドするには、使用する必要があります、`UnmanagedMarshal`形式変換を定義するクラス。  
  
   
  
## Examples  
 次のコード例は、廃止されたの置換用のコードを示しています。<xref:System.Reflection.Emit.UnmanagedMarshal>型。 例では、という名前の単一モジュール アセンブリの出力`EmitMarshalAs.dll`、という名前の型を含む`Sample`します。 型がという名前のメソッドを持つ`Test`、型の 1 つのパラメーターを持つ<xref:System.String>します。 コード例は、適用、<xref:System.Runtime.InteropServices.MarshalAsAttribute>で<xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType>パラメーターにします。  
  
 使用することができます、 [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)生成されたアセンブリを調べ、パラメーターがマークされていることを確認する`marshal(bstr)`します。  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アンマネージ基本型を取得します。 このプロパティは読み取り専用です。</summary>
        <value><see langword="UnmanagedType" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">アンマネージ型が <see langword="LPArray" /> または <see langword="SafeArray" /> ではありません。</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValArray : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValArray elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">固定長の配列の要素数。</param>
        <summary>アンマネージ コードにマーシャリングする固定長の配列 (ByValArray) を指定します。</summary>
        <returns><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DefineByValArray`メソッドは、単純なネイティブ マーシャ リングではありません。  
  
 これらの静的コンス トラクターを使用して、アンマネージのマーシャ リングの構成要素のみを作成できます。  
  
 配列のマーシャ リングは、整数パラメーターをマーシャ リングよりもさらに複雑なプロセスです。 配列メンバーは、もう一方の側に正確に配列を再構築するために、特定の順序でコピーされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数が単純なネイティブ型ではありません。</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValTStr : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">固定長の配列バッファーの要素数。</param>
        <summary>アンマネージ コードにマーシャリングする固定長の配列バッファー (ByValTStr) の文字列を指定します。</summary>
        <returns><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DefineByValStr`メソッドは、単純なネイティブ マーシャ リングではありません。  
  
 これらの静的コンス トラクターを使用して、アンマネージのマーシャ リングの構成要素のみを作成できます。  
  
 配列のマーシャ リングは、整数パラメーターをマーシャ リングよりもさらに複雑なプロセスです。 配列メンバーは、もう一方の側に正確に配列を再構築するために、特定の順序でコピーされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数が単純なネイティブ型ではありません。</exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineLPArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineLPArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">配列をマーシャリングする先のアンマネージ型。</param>
        <summary>アンマネージ コードにマーシャリングする <see langword="LPArray" /> を指定します。 <see langword="LPArray" /> の長さは、実際にマーシャリングされた配列のサイズによって実行時に決定されます。</summary>
        <returns><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DefineLPArray`メソッドは、単純なネイティブ マーシャ リングではありません。  
  
 これらの静的コンス トラクターを使用して、アンマネージのマーシャ リングの構成要素のみを作成できます。  
  
 配列のマーシャ リングは、整数パラメーターをマーシャ リングよりもさらに複雑なプロセスです。 配列メンバーは、もう一方の側に正確に配列を再構築するために、特定の順序でコピーされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数が単純なネイティブ型ではありません。</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineSafeArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">配列の各要素の基本型または <see langword="UnmanagedType" />。</param>
        <summary>アンマネージ コードにマーシャリングする <see langword="SafeArray" /> を指定します。</summary>
        <returns><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DefineSafeArray`メソッドは、単純なネイティブ マーシャ リングではありません。  
  
 これらの静的コンス トラクターを使用して、アンマネージのマーシャ リングの構成要素のみを作成できます。  
  
 配列のマーシャ リングは、整数パラメーターをマーシャ リングよりもさらに複雑なプロセスです。 配列メンバーは、もう一方の側に正確に配列を再構築するために、特定の順序でコピーされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数が単純なネイティブ型ではありません。</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberSignature Language="F#" Value="static member DefineUnmanagedMarshal : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal unmanagedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType">型をマーシャリングする先のアンマネージ型。</param>
        <summary>アンマネージ コードにマーシャリングする型を指定します。</summary>
        <returns><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.InteropServices.UnmanagedType>このメソッドに渡されると、単純なネイティブ型がある必要があります。 次の値のいずれも使用できます: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>、 <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>、 <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>、 <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>、または<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>します。  
  
 このメソッドを使用して、アンマネージのマーシャ リングの構成要素のみを作成できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数が単純なネイティブ型ではありません。</exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementCount : int" Usage="System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素の数を取得します。 このプロパティは読み取り専用です。</summary>
        <value>要素数を示す整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ElementCount`がある場合にのみ、`NativeTypeFixedArray`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数がアンマネージ要素数ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.GetUnmanagedType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アンマネージ型を示します。 このプロパティは読み取り専用です。</summary>
        <value><see cref="T:System.Runtime.InteropServices.UnmanagedType" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetUnmanagedType`プロパティは、ネイティブな型のアクセサー関数。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.IIDGuid : Guid" Usage="System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グローバル一意識別子 (GUID: Globally Unique Indentifier) を取得します。 このプロパティは読み取り専用です。</summary>
        <value><see cref="T:System.Guid" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 常に、このプロパティは Guid.Empty を返します。 このプロパティは、将来のリリースで削除可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">引数がカスタム マーシャラーではありません。</exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>