<Type Name="OpCode" FullName="System.Reflection.Emit.OpCode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="002f7bb7bc5d8a6a89a2fde765c02ae4f7e5118a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct OpCode" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OpCode extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.OpCode" />
  <TypeSignature Language="VB.NET" Value="Public Structure OpCode" />
  <TypeSignature Language="C++ CLI" Value="public value class OpCode" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b7a73-101">IL (中間言語、Intermediate Language) 命令を記述します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7a73-101">Describes an intermediate language (IL) instruction.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-102">現在のインスタンスが指定したオブジェクトと等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-102">Indicates whether the current instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b7a73-103">このオブジェクトと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-103">The object to compare to this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7a73-104">指定したオブジェクトがこの <see langword="Opcode" /> と等しいかどうかをテストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-104">Tests whether the given object is equal to this <see langword="Opcode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7a73-105">
            <paramref name="obj" /> が <see langword="Opcode" /> のインスタンスで、このオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-105">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see langword="Opcode" /> and is equal to this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Emit.OpCode obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Reflection.Emit.OpCode obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As OpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Reflection::Emit::OpCode obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b7a73-106">現在のインスタンスと比較する対象の <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-106">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7a73-107">現在のインスタンスが指定した <see cref="T:System.Reflection.Emit.OpCode" /> と等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-107">Indicates whether the current instance is equal to the specified <see cref="T:System.Reflection.Emit.OpCode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7a73-108">
            <paramref name="obj" /> の値が現在のインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-108">
              <see langword="true" /> if the value of <paramref name="obj" /> is equal to the value of the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowControl">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FlowControl FlowControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.FlowControl FlowControl" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.FlowControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlowControl As FlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::FlowControl FlowControl { System::Reflection::Emit::FlowControl get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FlowControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-109">IL (中間言語、Intermediate Language) 命令のフロー制御特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-109">The flow control characteristics of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-110">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-110">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-111">制御フローの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-111">The type of flow control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-112">この <see langword="Opcode" /> に生成されたハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-112">Returns the generated hash code for this <see langword="Opcode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7a73-113">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-113">Returns the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-114">IL (中間言語、Intermediate Language) 命令の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-114">The name of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-115">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-115">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-116">IL 命令の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-116">The name of the IL instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7a73-117"><xref:System.Reflection.Emit.OpCode.Value%2A> IL 命令の数値の値を返します。</span><span class="sxs-lookup"><span data-stu-id="b7a73-117">The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.Emit.OpCode a, valuetype System.Reflection.Emit.OpCode b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As OpCode, b As OpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Emit::OpCode a, System::Reflection::Emit::OpCode b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="b" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="b7a73-118">
            <c>b</c> と比較する <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-118">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <c>b</c>.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="b7a73-119">
            <c>a</c> と比較する <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-119">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <c>a</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7a73-120">2 つの <see cref="T:System.Reflection.Emit.OpCode" /> 構造体が等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-120">Indicates whether two <see cref="T:System.Reflection.Emit.OpCode" /> structures are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7a73-121">
            <see langword="true" /> が <paramref name="a" /> に等しい場合は <paramref name="b" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-121">
              <see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="b7a73-122">この演算子を同等の方法は<xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="b7a73-122">The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.Emit.OpCode a, valuetype System.Reflection.Emit.OpCode b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As OpCode, b As OpCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Emit::OpCode a, System::Reflection::Emit::OpCode b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.OpCode" />
        <Parameter Name="b" Type="System.Reflection.Emit.OpCode" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="b7a73-123">
            <c>b</c> と比較する <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-123">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <c>b</c>.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="b7a73-124">
            <c>a</c> と比較する <see cref="T:System.Reflection.Emit.OpCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-124">The <see cref="T:System.Reflection.Emit.OpCode" /> to compare to <c>a</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7a73-125">2 つの <see cref="T:System.Reflection.Emit.OpCode" /> 構造体が等しくないかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-125">Indicates whether two <see cref="T:System.Reflection.Emit.OpCode" /> structures are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7a73-126">
            <see langword="true" /> が <paramref name="a" /> と等しくない場合は <paramref name="b" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-126">
              <see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="b7a73-127">この演算子を同等の方法は<xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="b7a73-127">The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpCodeType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.OpCodeType OpCodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.OpCodeType OpCodeType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.OpCodeType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpCodeType As OpCodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::OpCodeType OpCodeType { System::Reflection::Emit::OpCodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.OpCodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-128">IL (Intermediate Language) 命令の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-128">The type of intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-129">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-129">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-130">IL (Intermediate Language) 命令の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-130">The type of intermediate language (IL) instruction.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperandType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.OperandType OperandType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.OperandType OperandType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.OperandType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperandType As OperandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::OperandType OperandType { System::Reflection::Emit::OperandType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.OperandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-131">IL (中間言語、Intermediate Language) 命令のオペランド型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-131">The operand type of an intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-132">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-132">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-133">IL 命令のオペランド型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-133">The operand type of an IL instruction.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-134">IL (中間言語、Intermediate Language) 命令のサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-134">The size of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-135">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-135">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-136">IL 命令のサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-136">The size of the IL instruction.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StackBehaviourPop">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StackBehaviour StackBehaviourPop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.StackBehaviour StackBehaviourPop" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.StackBehaviourPop" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackBehaviourPop As StackBehaviour" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::StackBehaviour StackBehaviourPop { System::Reflection::Emit::StackBehaviour get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-137">IL (中間言語、Intermediate Language) 命令がスタックをポップする方法を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-137">How the intermediate language (IL) instruction pops the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-138">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-138">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-139">IL 命令がスタックをポップする方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-139">The way the IL instruction pops the stack.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StackBehaviourPush">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StackBehaviour StackBehaviourPush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.StackBehaviour StackBehaviourPush" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.StackBehaviourPush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackBehaviourPush As StackBehaviour" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::StackBehaviour StackBehaviourPush { System::Reflection::Emit::StackBehaviour get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-140">IL (中間言語、Intermediate Language) 命令がオペランドをスタックにプッシュする方法を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-140">How the intermediate language (IL) instruction pushes operand onto the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-141">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-141">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-142">IL 命令がオペランドをスタックにプッシュする方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-142">The way the IL instruction pushes operand onto the stack.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.OpCode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-143">この <see langword="Opcode" /> を <see cref="T:System.String" /> として返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-143">Returns this <see langword="Opcode" /> as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7a73-144">この <see langword="Opcode" /> の名前を格納している <see cref="T:System.String" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-144">Returns a <see cref="T:System.String" /> containing the name of this <see langword="Opcode" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public short Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.OpCode.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Value { short get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7a73-145">IL (Intermediate Language) 命令の数値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-145">Gets the numeric value of the intermediate language (IL) instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7a73-146">読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-146">Read-only.</span>
          </span>
          <span data-ttu-id="b7a73-147">IL 命令の数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7a73-147">The numeric value of the IL instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7a73-148"><xref:System.Reflection.Emit.OpCode.Name%2A>プロパティは、命令の数値に対応する文字列名を返します。</span><span class="sxs-lookup"><span data-stu-id="b7a73-148">The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7a73-149">次の例のプロパティ値を表示する、<xref:System.Reflection.Emit.OpCodes.Add?displayProperty=nameWithType>命令します。</span><span class="sxs-lookup"><span data-stu-id="b7a73-149">The following example displays the property values of the <xref:System.Reflection.Emit.OpCodes.Add?displayProperty=nameWithType> instruction.</span></span>  
  
 [!code-csharp[System.Reflection.Emit.OpCode.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.emit.opcode.value/cs/value1.cs#1)]
 [!code-vb[System.Reflection.Emit.OpCode.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.emit.opcode.value/vb/value1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>