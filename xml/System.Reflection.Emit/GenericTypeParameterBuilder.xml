<Type Name="GenericTypeParameterBuilder" FullName="System.Reflection.Emit.GenericTypeParameterBuilder">
  <TypeSignature Language="C#" Value="public sealed class GenericTypeParameterBuilder : System.Reflection.TypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GenericTypeParameterBuilder extends System.Reflection.TypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.GenericTypeParameterBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenericTypeParameterBuilder&#xA;Inherits TypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericTypeParameterBuilder sealed : System::Reflection::TypeInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.TypeInfo</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-2.0">System.Type</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7084a-101">動的に定義されているジェネリック型のジェネリック型パラメーターとメソッドを定義して作成します。</span><span class="sxs-lookup"><span data-stu-id="7084a-101">Defines and creates generic type parameters for dynamically defined generic types and methods.</span></span> <span data-ttu-id="7084a-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-103">配列を取得することができます<xref:System.Reflection.Emit.GenericTypeParameterBuilder>オブジェクトを使用して、<xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=nameWithType>メソッドがジェネリック型になり、動的な型またはを使用して、型パラメーターを追加する、<xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType>動的メソッドに型パラメーターを追加します。</span><span class="sxs-lookup"><span data-stu-id="7084a-103">You can get an array of <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects by using the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method to add type parameters to a dynamic type, thus making it a generic type, or by using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method to add type parameters to a dynamic method.</span></span> <span data-ttu-id="7084a-104">使用して、<xref:System.Reflection.Emit.GenericTypeParameterBuilder>は型パラメーターに制約を追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-104">Use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects to add constraints to the type parameters.</span></span> <span data-ttu-id="7084a-105">次の 3 種類の制約があります。</span><span class="sxs-lookup"><span data-stu-id="7084a-105">Constraints are of three kinds:</span></span>  
  
-   <span data-ttu-id="7084a-106">基本型の制約では、ジェネリック型パラメーターに割り当てられている任意の型は、特定の基本型から派生しなければなりませんを指定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-106">The base type constraint specifies that any type assigned to the generic type parameter must derive from a particular base type.</span></span> <span data-ttu-id="7084a-107">使用してこの制約を設定、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-107">Set this constraint by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> method.</span></span>  
  
-   <span data-ttu-id="7084a-108">インターフェイスの制約では、ジェネリック型パラメーターに割り当てられている任意の型が、特定のインターフェイスを実装する必要がありますを指定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-108">An interface constraint specifies that any type assigned to the generic type parameter must implement a particular interface.</span></span> <span data-ttu-id="7084a-109">使用してインターフェイスの制約を設定、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-109">Set the interface constraints by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints%2A> method.</span></span>  
  
-   <span data-ttu-id="7084a-110">特殊な制約は、任意の型がジェネリック型パラメーターに割り当てられている既定のコンス トラクターを持つ必要があります、参照型である必要がありますに値型である必要がありますを指定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-110">Special constraints specify that any type assigned to the generic type parameter must have a default constructor, must be a reference type, or must be a value type.</span></span> <span data-ttu-id="7084a-111">使用して、型パラメーターの特殊な制約を設定、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-111">Set the special constraints for a type parameter by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A> method.</span></span>  
  
 <span data-ttu-id="7084a-112">メソッドを使用して、インターフェイスの制約と特殊な制約を取得できません、<xref:System.Reflection.Emit.GenericTypeParameterBuilder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7084a-112">Interface constraints and special constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class.</span></span> <span data-ttu-id="7084a-113">使用することができます、型パラメーターを含むジェネリック型を作成した後、<xref:System.Type>制約を反映するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-113">Once you have created the generic type that contains the type parameters, you can use its <xref:System.Type> object to reflect the constraints.</span></span> <span data-ttu-id="7084a-114">使用して、<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドを型パラメーターを取得し、それぞれの型パラメーターを使用して、 <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> 、基本型の制約とインターフェイスの制約を取得するメソッド、および<xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType>特殊な制約を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="7084a-114">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method to get the type parameters, and for each type parameter use the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method to get the base type constraint and interface constraints, and the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property to get the special constraints.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-115">次のコード例では、次の 2 つの型パラメーターを持つジェネリック型を作成し、アセンブリ GenericEmitExample1.dll に保存します。</span><span class="sxs-lookup"><span data-stu-id="7084a-115">The following code example creates a generic type with two type parameters, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="7084a-116">使用することができます、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を生成された型を表示します。</span><span class="sxs-lookup"><span data-stu-id="7084a-116">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="7084a-117">動的、ジェネリック型定義に必要な手順の詳細については、次を参照してください。[する方法: リフレクション出力を持つジェネリック型定義](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md)です。</span><span class="sxs-lookup"><span data-stu-id="7084a-117">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GenericTypeParameterBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; GenericTypeParameterBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-118">現在の型パラメーターが属するジェネリック型定義を含む動的アセンブリを表す <see cref="T:System.Reflection.Assembly" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-118">Gets an <see cref="T:System.Reflection.Assembly" /> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.</span></span></summary>
        <value><span data-ttu-id="7084a-119">現在の型パラメーターが属するジェネリック型定義を含む動的アセンブリを表す <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-119">An <see cref="T:System.Reflection.Assembly" /> object representing the dynamic assembly that contains the generic type definition the current type parameter belongs to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public override string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-120">常に <see langword="null" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-120">Gets <see langword="null" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="7084a-121">常に null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="7084a-121">A null reference (<see langword="Nothing" /> in Visual Basic) in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-122">それぞれのスコープがそれを宣言したジェネリック型に制限されているために、型パラメーターのアセンブリ修飾名はありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-122">There is no assembly-qualified name for type parameters because their scope is limited to the generic type that declares them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BaseType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-123">現在のジェネリック型パラメーターの基本型の制約を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-123">Gets the base type constraint of the current generic type parameter.</span></span></summary>
        <value><span data-ttu-id="7084a-124">ジェネリック型パラメーターの基本型の制約を表す <see cref="T:System.Type" /> オブジェクト。型パラメーターに基本型の制約がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-124">A <see cref="T:System.Type" /> object that represents the base type constraint of the generic type parameter, or <see langword="null" /> if the type parameter has no base type constraint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-125">基本型の制約を設定するには、使用、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-125">To set the base type constraint, use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGenericParameters">
      <MemberSignature Language="C#" Value="public override bool ContainsGenericParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsGenericParameters" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContainsGenericParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ContainsGenericParameters { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-126">常に <see langword="true" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-126">Gets <see langword="true" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="7084a-127">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-127"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-128">A<xref:System.Reflection.Emit.GenericTypeParameterBuilder>オブジェクトは、常に、ジェネリック型パラメーターを表します。</span><span class="sxs-lookup"><span data-stu-id="7084a-128">A <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object always represents a generic type parameter.</span></span> <span data-ttu-id="7084a-129">値、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters%2A>プロパティがその事実を反映し、型パラメーターに割り当てられているすべてのジェネリック型引数についての情報を意味しません。</span><span class="sxs-lookup"><span data-stu-id="7084a-129">The value of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.ContainsGenericParameters%2A> property reflects that fact and does not imply anything about any generic type argument that might be assigned to the type parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase DeclaringMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase DeclaringMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringMethod As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodBase ^ DeclaringMethod { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-130">現在の <see cref="T:System.Reflection.MethodInfo" /> がジェネリック メソッドの型パラメーターを表している場合に、宣言するメソッドを表す <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-130">Gets a <see cref="T:System.Reflection.MethodInfo" /> that represents the declaring method, if the current <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> represents a type parameter of a generic method.</span></span></summary>
        <value><span data-ttu-id="7084a-131">現在の <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> がジェネリック メソッドの型パラメーターを表している場合、宣言するメソッドを表す <see cref="T:System.Reflection.MethodInfo" />。それ以外の場合、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-131">A <see cref="T:System.Reflection.MethodInfo" /> that represents the declaring method, if the current <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> represents a type parameter of a generic method; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-132">場合、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod%2A>プロパティは使用されません`null`、宣言するメソッドはジェネリック メソッド定義と`DeclaringMethod.IsGenericMethodDefinition`は`true`します。</span><span class="sxs-lookup"><span data-stu-id="7084a-132">If the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringMethod%2A> property is not `null`, then the declaring method is a generic method definition and `DeclaringMethod.IsGenericMethodDefinition` is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-133">ジェネリック型パラメーターが所属する、ジェネリック型定義またはジェネリック メソッド定義を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-133">Gets the generic type definition or generic method definition to which the generic type parameter belongs.</span></span></summary>
        <value><span data-ttu-id="7084a-134">型パラメーターがジェネリック型に属している場合は、そのジェネリック型を表す <see cref="T:System.Type" /> オブジェクト。型パラメーターがジェネリック メソッドに属している場合は、そのジェネリック メソッドを宣言した型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-134">If the type parameter belongs to a generic type, a <see cref="T:System.Type" /> object representing that generic type; if the type parameter belongs to a generic method, a <see cref="T:System.Type" /> object representing that type that declared that generic method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-135">宣言する型は、必ずしも、ジェネリック型ではありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-135">The declaring type is not necessarily a generic type.</span></span> <span data-ttu-id="7084a-136">現在の型パラメーターは、ジェネリック メソッドに属している、メソッドが宣言されている型はジェネリックできない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7084a-136">If the current type parameter belongs to a generic method, the type in which the method is declared might not be generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="7084a-137">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-137">The object to be compared with the current instance.</span></span></param>
        <summary><span data-ttu-id="7084a-138">指定されたオブジェクトが <see langword="EventToken" /> のインスタンスであり、現在のインスタンスと等しいかどうかテストします。</span><span class="sxs-lookup"><span data-stu-id="7084a-138">Tests whether the given object is an instance of <see langword="EventToken" /> and is equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="7084a-139"><paramref name="o" /> が <see langword="EventToken" /> のインスタンスで、現在のインスタンスと等しい場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-139">Returns <see langword="true" /> if <paramref name="o" /> is an instance of <see langword="EventToken" /> and equals the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-140">常に <see langword="null" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-140">Gets <see langword="null" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="7084a-141">常に null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="7084a-141">A null reference (<see langword="Nothing" /> in Visual Basic) in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-142">ジェネリック型パラメーターは、そのスコープがそれを宣言したジェネリック型に制限されているために、完全な名前がありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-142">A generic type parameter does not have a full name, because its scope is limited to the generic type that declares it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericParameterAttributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.GenericParameterAttributes GenericParameterAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::GenericParameterAttributes GenericParameterAttributes { System::Reflection::GenericParameterAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-143">現在のジェネリック型パラメーターの共変性および特殊な制約を説明する <see cref="T:System.Reflection.GenericParameterAttributes" /> フラグの組み合わせを取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-143">Gets a combination of <see cref="T:System.Reflection.GenericParameterAttributes" /> flags that describe the covariance and special constraints of the current generic type parameter.</span></span></summary>
        <value><span data-ttu-id="7084a-144">現在のジェネリック型パラメーターの共変性と特殊な制約を表す値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7084a-144">A bitwise combination of values that describes the covariance and special constraints of the current generic type parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericParameterPosition">
      <MemberSignature Language="C#" Value="public override int GenericParameterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GenericParameterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericParameterPosition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericParameterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GenericParameterPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-145">パラメーターを宣言するジェネリック型またはジェネリック メソッドの型パラメーター リスト内の型パラメーターの位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-145">Gets the position of the type parameter in the type parameter list of the generic type or method that declared the parameter.</span></span></summary>
        <value><span data-ttu-id="7084a-146">パラメーターを宣言するジェネリック型またはジェネリック メソッドの型パラメーター リスト内の型パラメーターの位置。</span><span class="sxs-lookup"><span data-stu-id="7084a-146">The position of the type parameter in the type parameter list of the generic type or method that declared the parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericTypeArguments">
      <MemberSignature Language="C#" Value="public override Type[] GenericTypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] GenericTypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GenericTypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericTypeArguments As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ GenericTypeArguments { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArrayRank">
      <MemberSignature Language="C#" Value="public override int GetArrayRank ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetArrayRank() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetArrayRank () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetArrayRank();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeFlagsImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAttributeFlagsImpl () As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::TypeAttributes GetAttributeFlagsImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ConstructorInfo GetConstructorImpl(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ConstructorInfo ^ GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="callConvention">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-147">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-147">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-148">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-148">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-149">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-149">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-150">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-150">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-151">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-151">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-152">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-152">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7084a-153">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-153">Not supported for incomplete generic type parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="7084a-154">このメンバーの継承チェーンを検索して属性を見つけるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-154">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="7084a-155">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-155">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-156">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-156">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-157">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-157">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-158">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-158">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-159">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-159">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="7084a-160">検索する属性の種類。</span><span class="sxs-lookup"><span data-stu-id="7084a-160">The type of attribute to search for.</span></span> <span data-ttu-id="7084a-161">この型に代入可能な属性だけが返されます。</span><span class="sxs-lookup"><span data-stu-id="7084a-161">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="7084a-162">このメンバーの継承チェーンを検索して属性を見つけるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-162">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="7084a-163">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-163">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-164">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-164">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-165">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-165">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-166">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-166">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-167">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-167">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public override Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetElementType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-168">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="7084a-168">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="7084a-169">現在の配列型、ポインター型、または <see langword="ByRef" /> 型によって参照される型。または、現在の型が配列型でもポインター型でもなく、参照渡しでもない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-169">The type referred to by the current array type, pointer type, or <see langword="ByRef" /> type; or <see langword="null" /> if the current type is not an array type, is not a pointer type, and is not passed by reference.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-170">ジェネリック型パラメーターは、型のプレース ホルダーです。</span><span class="sxs-lookup"><span data-stu-id="7084a-170">A generic type parameter is a placeholder for a type.</span></span> <span data-ttu-id="7084a-171">その型は、事前に知ることができない、ために、要素の型があるかどうか、その要素の型がありますを知る方法はありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-171">Because that type cannot be known in advance, there is no way to know whether it has an element type or what that element type might be.</span></span> <span data-ttu-id="7084a-172">戻り値は、誤解を招くなりますので、メソッドをスロー、<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="7084a-172">Any return value would be misleading, so the method throws a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-173">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-173">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7084a-174">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-174">Not supported.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="7084a-175">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-175">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-176">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-176">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-177">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-177">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-178">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-178">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-179">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-179">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-180">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-180">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7084a-181">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-181">Not supported for incomplete generic type parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-182">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-182">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-183">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-183">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-184">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-184">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-185">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-185">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-186">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-186">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-187">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-187">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-188">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-188">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-189">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-189">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-190">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-190">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-191">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-191">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-192">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-192">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7084a-193">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-193">Not supported.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="7084a-194">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-194">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-195">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-195">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-196">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-196">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-197">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-197">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-198">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-198">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-199">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-199">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-200">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-200">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-201">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-201">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-202">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-202">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-203">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-203">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-204">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-204">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-205">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-205">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericArguments">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericArguments () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-206">ジェネリック型パラメーターでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-206">Not valid for generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-207">ジェネリック型パラメーターでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-207">Not valid for generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-208">構築された型では、ジェネリック型パラメーターに割り当てられている型がジェネリック型を指定できますが、型パラメーター自体がジェネリックではありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-208">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7084a-209">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-209">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericParameterConstraints">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericParameterConstraints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericParameterConstraints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericParameterConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericParameterConstraints () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericParameterConstraints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericTypeDefinition">
      <MemberSignature Language="C#" Value="public override Type GetGenericTypeDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetGenericTypeDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetGenericTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericTypeDefinition () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetGenericTypeDefinition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-210">ジェネリック型パラメーターでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-210">Not valid for generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-211">ジェネリック型パラメーターでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-211">Not valid for generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-212">構築された型では、ジェネリック型パラメーターに割り当てられている型がジェネリック型を指定できますが、型パラメーター自体がジェネリックではありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-212">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7084a-213">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-213">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-214">現在のインスタンスの 32 ビット整数ハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-214">Returns a 32-bit integer hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="7084a-215">32 ビット整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="7084a-215">A 32-bit integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public override Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7084a-216">インターフェイスの名前。</span><span class="sxs-lookup"><span data-stu-id="7084a-216">The name of the interface.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="7084a-217">大文字小文字を問わず検索する場合は <see langword="true" />。大文字と小文字を区別した検索を行う場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-217"><see langword="true" /> to search without regard for case; <see langword="false" /> to make a case-sensitive search.</span></span></param>
        <summary><span data-ttu-id="7084a-218">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-218">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-219">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-219">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-220">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-220">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-221">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-221">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-222">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-222">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="7084a-223">割り当ての取得対象となるインターフェイス型を表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-223">A <see cref="T:System.Type" /> object that represents the interface type for which the mapping is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="7084a-224">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-224">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-225">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-225">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-226">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-226">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-227">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-227">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-228">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-228">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public override Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-229">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-229">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-230">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-230">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-231">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-231">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-232">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-232">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-233">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-233">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7084a-234">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-234">Not supported.</span></span></param>
        <param name="type"><span data-ttu-id="7084a-235">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-235">Not supported.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="7084a-236">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-236">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-237">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-237">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-238">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-238">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-239">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-239">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-240">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-240">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-241">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-241">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-242">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-242">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-243">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-243">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-244">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-244">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-245">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-245">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-246">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-246">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-247">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-247">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="callConvention">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-248">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-248">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-249">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-249">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-250">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-250">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-251">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-251">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-252">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-252">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-253">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-253">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7084a-254">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-254">Not supported.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="7084a-255">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-255">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-256">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-256">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-257">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-257">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-258">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-258">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-259">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-259">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-260">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-260">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-261">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-261">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-262">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-262">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-263">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-263">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-264">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-264">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-265">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-265">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-266">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-266">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="7084a-267">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-267">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-268">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-268">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-269">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-269">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-270">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-270">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-271">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-271">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-272">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-272">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::PropertyInfo ^ GetPropertyImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public override Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.GUID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid GUID { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-273">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-273">Not supported for incomplete generic type parameters.</span></span></summary>
        <value><span data-ttu-id="7084a-274">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-274">Not supported for incomplete generic type parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-275">このプロパティは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-275">This property is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-276">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-276">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-277">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-277">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasElementTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool HasElementTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasElementTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasElementTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HasElementTypeImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7084a-278">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-278">Not supported.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="7084a-279">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-279">Not supported.</span></span></param>
        <param name="binder"><span data-ttu-id="7084a-280">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-280">Not supported.</span></span></param>
        <param name="target"><span data-ttu-id="7084a-281">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-281">Not supported.</span></span></param>
        <param name="args"><span data-ttu-id="7084a-282">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-282">Not supported.</span></span></param>
        <param name="modifiers"><span data-ttu-id="7084a-283">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-283">Not supported.</span></span></param>
        <param name="culture"><span data-ttu-id="7084a-284">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-284">Not supported.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="7084a-285">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-285">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-286">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-286">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-287">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-287">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-288">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-288">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-289">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-289">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-290">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-290">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsArrayImpl">
      <MemberSignature Language="C#" Value="protected override bool IsArrayImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsArrayImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsArrayImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsArrayImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAssignableFrom">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7084a-291">常に例外 <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="7084a-291">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Reflection.TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(System::Reflection::TypeInfo ^ typeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="7084a-292">テストするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-292">The object to test.</span></span></param>
        <summary><span data-ttu-id="7084a-293">常に例外 <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="7084a-293">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="7084a-294">常に例外 <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="7084a-294">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-295">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-295">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-296">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-296">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-297">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-297">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsAssignableFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAssignableFrom (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="7084a-298">テストするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-298">The object to test.</span></span></param>
        <summary><span data-ttu-id="7084a-299">常に例外 <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="7084a-299">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></summary>
        <returns><span data-ttu-id="7084a-300">常に例外 <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="7084a-300">Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-301">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-301">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-302">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-302">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-303">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-303">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsByRefImpl">
      <MemberSignature Language="C#" Value="protected override bool IsByRefImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsByRefImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsByRefImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsByRefImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefLike">
      <MemberSignature Language="C#" Value="public override bool IsByRefLike { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRefLike" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefLike" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsByRefLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsByRefLike { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObjectImpl">
      <MemberSignature Language="C#" Value="protected override bool IsCOMObjectImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsCOMObjectImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsCOMObjectImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsCOMObjectImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericType">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsConstructedGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-304">このオブジェクトが構築ジェネリック型かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-304">Gets a value that indicates whether this object represents a constructed generic type.</span></span></summary>
        <value>
          <span data-ttu-id="7084a-305">このオブジェクトが構築ジェネリック型を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-305"><see langword="true" /> if this object represents a constructed generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="7084a-306">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-306">Not supported.</span></span></param>
        <param name="inherit"><span data-ttu-id="7084a-307">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-307">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-308">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-308">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-309">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-309">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-310">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-310">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-311">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-311">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-312">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-312">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public override bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEnum { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericParameter { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-313">常に <see langword="true" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-313">Gets <see langword="true" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="7084a-314">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-314"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericType">
      <MemberSignature Language="C#" Value="public override bool IsGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericType { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-315">常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-315">Returns <see langword="false" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="7084a-316">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-316"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-317">構築された型では、ジェネリック型パラメーターに割り当てられている型がジェネリック型を指定できますが、型パラメーター自体がジェネリックではありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-317">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsGenericTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsGenericTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericTypeDefinition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-318">常に <see langword="false" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-318">Gets <see langword="false" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="7084a-319">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-319"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-320">構築された型では、ジェネリック型パラメーターに割り当てられている型がジェネリック型を指定できますが、型パラメーター自体がジェネリックではありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-320">In a constructed type, the type that is assigned to a generic type parameter can be a generic type, but the type parameter itself is not generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public override bool IsInstanceOfType (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInstanceOfType(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsInstanceOfType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInstanceOfType (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInstanceOfType(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointerImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPointerImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPointerImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPointerImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPointerImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPrimitiveImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPrimitiveImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPrimitiveImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPrimitiveImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSerializable">
      <MemberSignature Language="C#" Value="public override bool IsSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSerializable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public override bool IsSubclassOf (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubclassOf(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubclassOf (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubclassOf(Type ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="7084a-321">サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-321">Not supported.</span></span></param>
        <summary><span data-ttu-id="7084a-322">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-322">Not supported for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-323">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-323">Not supported for incomplete generic type parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-324">このメソッドは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-324">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-325">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-325">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-326">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-326">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public override bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSZArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTypeDefinition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool IsValueTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValueTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsValueTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValueTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValueTypeImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableBoundArray">
      <MemberSignature Language="C#" Value="public override bool IsVariableBoundArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariableBoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.IsVariableBoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsVariableBoundArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVariableBoundArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeArrayType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7084a-327">要素型がジェネリック型パラメーターである配列の型を返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-327">Returns the type of an array whose element type is the generic type parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeArrayType">
      <MemberSignature Language="C#" Value="public override Type MakeArrayType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeArrayType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeArrayType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeArrayType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-328">要素型がジェネリック型パラメーターである 1 次元配列の型を返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-328">Returns the type of a one-dimensional array whose element type is the generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="7084a-329">要素型がジェネリック型パラメーターである 1 次元配列の型を表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-329">A <see cref="T:System.Type" /> object that represents the type of a one-dimensional array whose element type is the generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-330"><xref:System.Type.MakeArrayType%2A>メソッドはパラメーター リストの配列型を生成する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="7084a-330">The <xref:System.Type.MakeArrayType%2A> method provides a way to generate array types for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-331">次のコード例は、動的モジュールの場合、名前付き抽象ジェネリック型を作成`Sample`1 つの型パラメーターを持つ`T`、という名前の抽象メソッドと`TestMethod`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-331">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="7084a-332">`TestMethod` `ref`パラメーター (`ByRef` Visual Basic で) 型の`T`、型へのポインター `T`、および配列の`T`します。</span><span class="sxs-lookup"><span data-stu-id="7084a-332">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="7084a-333">このメソッドの 2 次元配列を返します`T`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-333">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="7084a-334">コード例では、MSIL 逆アセンブラー (Ildasm.exe) を使用して調査できるように、動的モジュールをディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="7084a-334">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeArrayType">
      <MemberSignature Language="C#" Value="public override Type MakeArrayType (int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeArrayType(int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeArrayType (rank As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeArrayType(int rank);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rank"><span data-ttu-id="7084a-335">配列の次元数。</span><span class="sxs-lookup"><span data-stu-id="7084a-335">The number of dimensions for the array.</span></span></param>
        <summary><span data-ttu-id="7084a-336">要素型がジェネリック型パラメーターで、指定の次元数の配列型を返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-336">Returns the type of an array whose element type is the generic type parameter, with the specified number of dimensions.</span></span></summary>
        <returns><span data-ttu-id="7084a-337">要素型がジェネリック型パラメーターで、指定の次元数の配列型を表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-337">A <see cref="T:System.Type" /> object that represents the type of an array whose element type is the generic type parameter, with the specified number of dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-338"><xref:System.Type.MakeArrayType%2A>メソッドはパラメーター リストの配列型を生成する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="7084a-338">The <xref:System.Type.MakeArrayType%2A> method provides a way to generate array types for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-339">次のコード例は、動的モジュールの場合、名前付き抽象ジェネリック型を作成`Sample`1 つの型パラメーターを持つ`T`、という名前の抽象メソッドと`TestMethod`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-339">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="7084a-340">`TestMethod` `ref`パラメーター (`ByRef` Visual Basic で) 型の`T`、型へのポインター `T`、および配列の`T`します。</span><span class="sxs-lookup"><span data-stu-id="7084a-340">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="7084a-341">このメソッドの 2 次元配列を返します`T`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-341">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="7084a-342">コード例では、MSIL 逆アセンブラー (Ildasm.exe) を使用して調査できるように、動的モジュールをディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="7084a-342">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="7084a-343"><paramref name="rank" /> が有効な次元の数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="7084a-343"><paramref name="rank" /> is not a valid number of dimensions.</span></span> <span data-ttu-id="7084a-344">たとえば、値が 1 より小さいです。</span><span class="sxs-lookup"><span data-stu-id="7084a-344">For example, its value is less than 1.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeByRefType">
      <MemberSignature Language="C#" Value="public override Type MakeByRefType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeByRefType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeByRefType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeByRefType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-345">参照パラメーターとして渡されるときに現在のジェネリック型パラメーターを表す <see cref="T:System.Type" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-345">Returns a <see cref="T:System.Type" /> object that represents the current generic type parameter when passed as a reference parameter.</span></span></summary>
        <returns><span data-ttu-id="7084a-346">参照パラメーターとして渡されるときに現在のジェネリック型パラメーターを表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-346">A <see cref="T:System.Type" /> object that represents the current generic type parameter when passed as a reference parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-347"><xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType%2A>メソッドを生成する方法を提供する`ref`型 (`ByRef` Visual Basic で) パラメーター リストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="7084a-347">The <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType%2A> method provides a way to generate `ref` types (`ByRef` in Visual Basic) for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-348">次のコード例は、動的モジュールの場合、名前付き抽象ジェネリック型を作成`Sample`1 つの型パラメーターを持つ`T`、という名前の抽象メソッドと`TestMethod`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-348">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="7084a-349">`TestMethod` `ref`パラメーター (`ByRef` Visual Basic で) 型の`T`、型へのポインター `T`、および配列の`T`します。</span><span class="sxs-lookup"><span data-stu-id="7084a-349">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="7084a-350">このメソッドの 2 次元配列を返します`T`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-350">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="7084a-351">コード例では、MSIL 逆アセンブラー (Ildasm.exe) を使用して調査できるように、動的モジュールをディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="7084a-351">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeGenericType">
      <MemberSignature Language="C#" Value="public override Type MakeGenericType (params Type[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeGenericType(class System.Type[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeGenericType (ParamArray typeArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeGenericType(... cli::array &lt;Type ^&gt; ^ typeArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArguments" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArguments"><span data-ttu-id="7084a-352">型引数の配列。</span><span class="sxs-lookup"><span data-stu-id="7084a-352">An array of type arguments.</span></span></param>
        <summary><span data-ttu-id="7084a-353">不完全なジェネリック型パラメーターでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-353">Not valid for incomplete generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="7084a-354">このメソッドは、不完全なジェネリック型パラメーターでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="7084a-354">This method is invalid for incomplete generic type parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7084a-355">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-355">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakePointerType">
      <MemberSignature Language="C#" Value="public override Type MakePointerType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakePointerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakePointerType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakePointerType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-356">現在のジェネリック型パラメーターを指すポインターを表す <see cref="T:System.Type" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-356">Returns a <see cref="T:System.Type" /> object that represents a pointer to the current generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="7084a-357">現在のジェネリック型パラメーターを指すポインターを表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-357">A <see cref="T:System.Type" /> object that represents a pointer to the current generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-358"><xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType%2A>メソッドはパラメーター リストのポインター型を生成する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="7084a-358">The <xref:System.Reflection.Emit.GenericTypeParameterBuilder.MakePointerType%2A> method provides a way to generate pointer types for parameter lists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-359">次のコード例は、動的モジュールの場合、名前付き抽象ジェネリック型を作成`Sample`1 つの型パラメーターを持つ`T`、という名前の抽象メソッドと`TestMethod`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-359">The following code example creates a dynamic module, an abstract generic type named `Sample` with one type parameter, `T`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="7084a-360">`TestMethod` `ref`パラメーター (`ByRef` Visual Basic で) 型の`T`、型へのポインター `T`、および配列の`T`します。</span><span class="sxs-lookup"><span data-stu-id="7084a-360">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `T`, a pointer to type `T`, and an array of `T`.</span></span> <span data-ttu-id="7084a-361">このメソッドの 2 次元配列を返します`T`です。</span><span class="sxs-lookup"><span data-stu-id="7084a-361">This method returns a two-dimensional array of `T`.</span></span> <span data-ttu-id="7084a-362">コード例では、MSIL 逆アセンブラー (Ildasm.exe) を使用して調査できるように、動的モジュールをディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="7084a-362">The code example saves the dynamic module to disk, so you can examine it using the MSIL Disassembler (Ildasm.exe).</span></span>  
  
 [!code-cpp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/cpp/source.cpp#1)]
 [!code-csharp[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxGenericTypeParameterBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxGenericTypeParameterBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType" />
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-363">ジェネリック型パラメーターを含む動的モジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-363">Gets the dynamic module that contains the generic type parameter.</span></span></summary>
        <value><span data-ttu-id="7084a-364">ジェネリック型パラメーターを含む動的モジュールを表す <see cref="T:System.Reflection.Module" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-364">A <see cref="T:System.Reflection.Module" /> object that represents the dynamic module that contains the generic type parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-365">ジェネリック型パラメーターの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-365">Gets the name of the generic type parameter.</span></span></summary>
        <value><span data-ttu-id="7084a-366">ジェネリック型パラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="7084a-366">The name of the generic type parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-367">常に <see langword="null" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-367">Gets <see langword="null" /> in all cases.</span></span></summary>
        <value><span data-ttu-id="7084a-368">常に null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="7084a-368">A null reference (<see langword="Nothing" /> in Visual Basic) in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-369"><see cref="T:System.Type" /> を取得するために使用した <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-369">Gets the <see cref="T:System.Type" /> object that was used to obtain the <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />.</span></span></summary>
        <value><span data-ttu-id="7084a-370"><see cref="T:System.Type" /> を取得するために使用した <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-370">The <see cref="T:System.Type" /> object that was used to obtain the <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseTypeConstraint">
      <MemberSignature Language="C#" Value="public void SetBaseTypeConstraint (Type baseTypeConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBaseTypeConstraint(class System.Type baseTypeConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetBaseTypeConstraint(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBaseTypeConstraint (baseTypeConstraint As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBaseTypeConstraint(Type ^ baseTypeConstraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseTypeConstraint" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseTypeConstraint"><span data-ttu-id="7084a-371">型パラメーターの代わりに使用される型によって継承される必要がある <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="7084a-371">The <see cref="T:System.Type" /> that must be inherited by any type that is to be substituted for the type parameter.</span></span></param>
        <summary><span data-ttu-id="7084a-372">型パラメーターの代わりに使用するために、型が継承する必要のある基本データ型を設定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-372">Sets the base type that a type must inherit in order to be substituted for the type parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-373">基本型の制約を使用して取得する、<xref:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7084a-373">To retrieve the base type constraint use the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.BaseType%2A> property.</span></span>  
  
 <span data-ttu-id="7084a-374">使用することができます、型パラメーターを含むジェネリック型を作成した後、<xref:System.Type>型パラメーターとその制約を反映するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-374">Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameter and their constraints.</span></span> <span data-ttu-id="7084a-375">完全なジェネリック型の型パラメーターを取得する、<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-375">To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7084a-376">それぞれの型パラメーターの型を取得基本制約とインターフェイス制約を使用して、<xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType>メソッドを使用して、特殊な制約を取得し、<xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7084a-376">For each type parameter, get the base type constraint and interface constraints by using the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method, and get the special constraints by using the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-377">次のコード例では、2 番目の基本型の制約があり、それらのアセンブリ GenericEmitExample1.dll に保存、2 つの型パラメーターを持つジェネリック型を作成します。</span><span class="sxs-lookup"><span data-stu-id="7084a-377">The following code example creates a generic type with two type parameters, the second of which has a base type constraint, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="7084a-378">使用することができます、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を生成された型を表示します。</span><span class="sxs-lookup"><span data-stu-id="7084a-378">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="7084a-379">動的、ジェネリック型定義に必要な手順の詳細については、次を参照してください。[する方法: リフレクション出力を持つジェネリック型定義](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md)です。</span><span class="sxs-lookup"><span data-stu-id="7084a-379">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7084a-380">カスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-380">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="7084a-381">カスタム属性を定義するヘルパー クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="7084a-381">An instance of a helper class that defines the custom attribute.</span></span></param>
        <summary><span data-ttu-id="7084a-382">カスタム属性ビルダーを使用して、カスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-382">Set a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7084a-383"><paramref name="customBuilder" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7084a-383"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="7084a-384">カスタム属性のコンストラクター。</span><span class="sxs-lookup"><span data-stu-id="7084a-384">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="7084a-385">属性を表すバイト blob。</span><span class="sxs-lookup"><span data-stu-id="7084a-385">A byte blob representing the attribute.</span></span></param>
        <summary><span data-ttu-id="7084a-386">指定されたカスタム属性の blob を使用して、カスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-386">Sets a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7084a-387">書式設定する方法の詳細`binaryAttribute`、Partition II のマニュアルを参照してください: メタデータの定義およびセマンティクスです。</span><span class="sxs-lookup"><span data-stu-id="7084a-387">For details on how to format `binaryAttribute`, see the documentation for Partition II: Metadata Definition and Semantics.</span></span> <span data-ttu-id="7084a-388">ドキュメントはオンラインで入手できます。MSDN の「[ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212)」 (ECMA の C# および共通言語基盤の標準規格) と、ECMA のインターナショナル Web サイトにある「[Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7084a-388">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7084a-389"><paramref name="con" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7084a-389"><paramref name="con" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7084a-390">- または -</span><span class="sxs-lookup"><span data-stu-id="7084a-390">-or-</span></span>  
  
 <span data-ttu-id="7084a-391"><paramref name="binaryAttribute" /> が null 参照です。</span><span class="sxs-lookup"><span data-stu-id="7084a-391"><paramref name="binaryAttribute" /> is a null reference.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetGenericParameterAttributes">
      <MemberSignature Language="C#" Value="public void SetGenericParameterAttributes (System.Reflection.GenericParameterAttributes genericParameterAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGenericParameterAttributes(valuetype System.Reflection.GenericParameterAttributes genericParameterAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes(System.Reflection.GenericParameterAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGenericParameterAttributes(System::Reflection::GenericParameterAttributes genericParameterAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      </Parameters>
      <Docs>
        <param name="genericParameterAttributes"><span data-ttu-id="7084a-392">ジェネリック型パラメーターの分散特性および特殊な制約を表す <see cref="T:System.Reflection.GenericParameterAttributes" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7084a-392">A bitwise combination of <see cref="T:System.Reflection.GenericParameterAttributes" /> values that represent the variance characteristics and special constraints of the generic type parameter.</span></span></param>
        <summary><span data-ttu-id="7084a-393">パラメーターなしのコンストラクター制約など、ジェネリック パラメーターの分散特性および特殊な制約を設定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-393">Sets the variance characteristics and special constraints of the generic parameter, such as the parameterless constructor constraint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-394">特殊な制約には、ジェネリック型パラメーターに割り当てられている任意の型について、既定のコンス トラクターを持つ必要があります、参照型である必要がありますまたは値型である必要がありますでことを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7084a-394">Special constraints can specify that any type assigned to the generic type parameter must have a default constructor, must be a reference type, or must be a value type.</span></span>  
  
 <span data-ttu-id="7084a-395">メソッドを使用する特殊な制約を取得することはできません、<xref:System.Reflection.Emit.GenericTypeParameterBuilder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7084a-395">Special constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class.</span></span> <span data-ttu-id="7084a-396">使用することができます、型パラメーターを含むジェネリック型を作成した後、<xref:System.Type>型パラメーターとその制約を反映するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-396">Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameters and their constraints.</span></span> <span data-ttu-id="7084a-397">完全なジェネリック型の型パラメーターを取得する、<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-397">To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7084a-398">各型パラメーターに特殊な制約を取得する、<xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7084a-398">To get the special constraints for each type parameter, use the <xref:System.Type.GenericParameterAttributes%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7084a-399"><xref:System.Reflection.GenericParameterAttributes>型パラメーターの分散特性を参照して列挙値は、共変性と反変性により、Microsoft intermediate language (MSIL) などをサポートする言語でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="7084a-399">The <xref:System.Reflection.GenericParameterAttributes> enumeration values that refer to the variance characteristics of a type parameter are relevant only in languages that support covariance and contravariance, such as Microsoft intermediate language (MSIL).</span></span> <span data-ttu-id="7084a-400">Visual Basic および c# では現在は、共変性と反変性をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="7084a-400">Visual Basic and C# currently do not support covariance and contravariance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-401">次のコード例では、最初の既定のコンス トラクターと、参照型では制約し、GenericEmitExample1.dll アセンブリに保存、2 つの型パラメーターを持つジェネリック型を作成します。</span><span class="sxs-lookup"><span data-stu-id="7084a-401">The following code example creates a generic type with two type parameters, the first of which is constrained to have a default constructor and to be a reference type, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="7084a-402">使用することができます、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を生成された型を表示します。</span><span class="sxs-lookup"><span data-stu-id="7084a-402">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="7084a-403">動的、ジェネリック型定義に必要な手順の詳細については、次を参照してください。[する方法: リフレクション出力を持つジェネリック型定義](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md)です。</span><span class="sxs-lookup"><span data-stu-id="7084a-403">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInterfaceConstraints">
      <MemberSignature Language="C#" Value="public void SetInterfaceConstraints (params Type[] interfaceConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInterfaceConstraints(class System.Type[] interfaceConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetInterfaceConstraints(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInterfaceConstraints (ParamArray interfaceConstraints As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInterfaceConstraints(... cli::array &lt;Type ^&gt; ^ interfaceConstraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceConstraints" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="interfaceConstraints"><span data-ttu-id="7084a-404">型パラメーターを置き換えるたために型において実装する必要のあるインターフェイスを表す <see cref="T:System.Type" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="7084a-404">An array of <see cref="T:System.Type" /> objects that represent the interfaces a type must implement in order to be substituted for the type parameter.</span></span></param>
        <summary><span data-ttu-id="7084a-405">型パラメーターを置き換えるために、型において実装する必要のあるインターフェイスを設定します。</span><span class="sxs-lookup"><span data-stu-id="7084a-405">Sets the interfaces a type must implement in order to be substituted for the type parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-406">メソッドを使用してインターフェイスの制約を取得することはできません、<xref:System.Reflection.Emit.GenericTypeParameterBuilder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7084a-406">Interface constraints cannot be retrieved using methods of the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> class.</span></span> <span data-ttu-id="7084a-407">使用することができます、型パラメーターを含むジェネリック型を作成した後、<xref:System.Type>型パラメーターとその制約を反映するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-407">Once you have created the generic type that contains the type parameter, you can use its <xref:System.Type> object to reflect the type parameters and their constraints.</span></span> <span data-ttu-id="7084a-408">完全なジェネリック型の型パラメーターを取得する、<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-408">To get the type parameters of a completed generic type, use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7084a-409">各型パラメーターの型を取得基本制約とインターフェイス制約を使用して、<xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7084a-409">For each type parameter, get the base type constraint and interface constraints by using the <xref:System.Type.GetGenericParameterConstraints%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7084a-410">次のコード例では、2 番目の 2 つのインターフェイス制約があり、それらのアセンブリ GenericEmitExample1.dll に保存、2 つの型パラメーターを持つジェネリック型を作成します。</span><span class="sxs-lookup"><span data-stu-id="7084a-410">The following code example creates a generic type with two type parameters, the second of which has two interface constraints, and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="7084a-411">使用することができます、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を生成された型を表示します。</span><span class="sxs-lookup"><span data-stu-id="7084a-411">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="7084a-412">動的、ジェネリック型定義に必要な手順の詳細については、次を参照してください。[する方法: リフレクション出力を持つジェネリック型定義](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md)です。</span><span class="sxs-lookup"><span data-stu-id="7084a-412">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.GenericTypeParameterBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7084a-413">現在のジェネリック型パラメーターの文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="7084a-413">Returns a string representation of the current generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="7084a-414">ジェネリック型パラメーターの名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="7084a-414">A string that contains the name of the generic type parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public override RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-415">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-415">Not supported for incomplete generic type parameters.</span></span></summary>
        <value><span data-ttu-id="7084a-416">不完全なジェネリック型パラメーターではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7084a-416">Not supported for incomplete generic type parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7084a-417">このプロパティは、不完全なジェネリック型パラメーターはサポートされません。</span><span class="sxs-lookup"><span data-stu-id="7084a-417">This property is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="7084a-418">完了したジェネリック型定義から、型パラメーターを取得し、取得した型にリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="7084a-418">Retrieve the type parameter from the completed generic type definition and then use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7084a-419">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="7084a-419">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public override Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.GenericTypeParameterBuilder.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7084a-420">現在のジェネリック型パラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="7084a-420">Gets the current generic type parameter.</span></span></summary>
        <value><span data-ttu-id="7084a-421">現在の <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7084a-421">The current <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>