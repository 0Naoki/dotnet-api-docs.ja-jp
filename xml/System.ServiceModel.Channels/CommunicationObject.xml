<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommunicationObject.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c52fa24f77f9f41c0532918bdaaa143ccb87ad91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c52fa24f77f9f41c0532918bdaaa143ccb87ad91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</source>
          <target state="translated">チャネル、リスナー、チャネルとリスナーのファクトリなど、システム内のすべての通信指向オブジェクトに共通する基本ステート マシンの基本実装を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface for all communication objects in <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> クラスは、<ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 内のすべての通信オブジェクトに対する <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> インターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The method implementations handle parameter validation, raise events that notify the occurrence of state transitions, provide the means to associated additional processing with these state transitions, and ensure that such state changes are coordinated.</source>
          <target state="translated">メソッドの実装は、パラメーターの検証を行い、状態遷移の発生を通知するイベントを発生させます。また、状態遷移に関連付けられた追加処理の手段を提供し、このような状態変化を調整します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">状態遷移中にクラス インスタンスを保護する相互排他的なロック。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class with the mutually exclusive lock to protect the state transitions specified.</source>
          <target state="translated">状態遷移を保護するための相互排他的ロックを指定して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>Causes a communication object to transition immediately from its current state into the closing state.</source>
          <target state="translated">通信オブジェクトを、直ちに現在の状態から Closing 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</source>
          <target state="translated">このメソッドは、戻る前に、終了していない作業を無視するか、または異常終了させるかを指定します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method can be used to cancel any outstanding operations, including outstanding calls to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> メソッドは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 呼び出しの保留など、保留状態の操作のキャンセルに使用できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>To gracefully transition a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> from any state other than <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, call <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> or one of its asynchronous versions, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 以外の任意の状態から <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態に正常に遷移させるには、<ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> またはその非同期バージョン <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> のいずれかを呼び出します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">通信オブジェクトをクローズするための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">非同期のクローズ操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">通信オブジェクトをクローズするための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">非同期の close 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a default interval of time.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態以外の任意の状態から <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態に、既定の時間内で正常に遷移させます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> メソッドにより、戻る前に未完了の作業を完了できます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">たとえば、バッファー内のメッセージの送信を完了します)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 状態だった場合、このメソッドは <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">クローズ操作がタイムアウトになるまでの時間を表す <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">非同期のクローズ操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object with a specified timeout.</source>
          <target state="translated">タイムアウトを指定して、通信オブジェクトをクローズするための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">非同期の close 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state with in a specified interval of time.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態以外の任意の状態から <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態に、指定した時間内で正常に遷移させます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> メソッドにより、戻る前に未完了の作業を完了できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">たとえば、バッファー内のメッセージの送信を完了します)。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 状態だった場合、このメソッドは <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">通信オブジェクトを開くための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">非同期の open 操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">非同期のオープン操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">通信オブジェクトを開くための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">非同期の open 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 状態である場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> および <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">同期 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 操作を呼び出すために、通信オブジェクトが終了状態に遷移した後に処理を挿入するには、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">非同期の open 操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">非同期のオープン操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object within a specified interval of time.</source>
          <target state="translated">指定した時間内で通信オブジェクトを開くための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">非同期の open 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 状態である場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> および <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">同期 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 操作を呼び出すために、通信オブジェクトが終了状態に遷移した後に処理を挿入するには、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">通信オブジェクトを、現在の状態から Closed 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">通信オブジェクトを、現在の状態から Closed 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 以外の状態から <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態に正常に移行します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドにより、戻る前に未完了の作業を完了できます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>For example, finish sending any buffered messages.</source>
          <target state="translated">たとえば、バッファー内のメッセージの送信を完了します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> は <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 状態になり、その状態は、<ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドが呼び出された後、<ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態への遷移が完了するまで維持されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">遷移は、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>、および <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> の連続した呼び出しで構成されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 呼び出しで開始される非同期バージョンの close メソッドもあります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">クローズ操作がタイムアウトになるまでの時間を表す <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</source>
          <target state="translated">指定した時間内で、通信オブジェクトを現在の状態から Closed 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a specified interval of time.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態以外の任意の状態から <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態に、指定した時間内で正常に遷移させます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドにより、戻る前に未完了の作業を完了できます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>For example, finish sending any buffered messages.</source>
          <target state="translated">たとえば、バッファー内のメッセージの送信を完了します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> は <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> 状態になり、その状態は、<ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドが呼び出された後、<ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> 状態への遷移が完了するまで維持されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">遷移は、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>、および <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> の連続した呼び出しで構成されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 呼び出しで開始される非同期バージョンの close メソッドもあります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <source>Occurs when a communication object transitions into the closed state.</source>
          <target state="translated">通信オブジェクトが Closed 状態に遷移すると発生します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> メソッドおよび <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドによって呼び出される <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <source>Occurs when a communication object transitions into the closing state.</source>
          <target state="translated">通信オブジェクトが Closing 状態に遷移すると発生します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> メソッドおよび <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドによって呼び出される <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <source>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</source>
          <target state="translated">派生クラスでオーバーライドされると、クローズ操作の完了に対して指定されている既定の時間を取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated">クローズ操作を完了する必要がある、タイムアウトまでの制限時間を指定する既定の <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <source>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</source>
          <target state="translated">派生クラスでオーバーライドされると、オープン操作の完了に対して指定されている既定の時間を取得します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">オープン操作を完了する必要がある、タイムアウトまでの制限時間を指定する既定の <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドへの呼び出しで返された <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation to close a communication object.</source>
          <target state="translated">通信オブジェクトをクローズするための非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドの同期バージョンは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> メソッドで提供されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドへの呼び出しで返された <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation to open a communication object.</source>
          <target state="translated">通信オブジェクトをオープンするための非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドの同期バージョンは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドで提供されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <source>Causes a communication object to transition from its current state into the faulted state.</source>
          <target state="translated">通信オブジェクトを、現在の状態から Faulted 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> メソッドによって呼び出される <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <source>Occurs when a communication object transitions into the faulted state.</source>
          <target state="translated">通信オブジェクトが Faulted 状態に遷移すると発生します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> メソッドによって呼び出される <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <source>Gets the type of communication object.</source>
          <target state="translated">通信オブジェクトの型を取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <source>The type of communication object.</source>
          <target state="translated">通信オブジェクトの型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source>Gets a value that indicates whether the communication object has been disposed.</source>
          <target state="translated">通信オブジェクトが破棄されたかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the communication object is in a closed state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">通信オブジェクトが Closed 状態の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source>An object is considered disposed when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> イベントが発生すると、オブジェクトは破棄されたものと見なされます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</source>
          <target state="translated">同期中止操作の呼び出しにより通信オブジェクトが終了状態に遷移した後で、通信オブジェクトに処理を挿入します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> メソッドは、通信オブジェクトがまだ <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> 状態になっていない場合は、<ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
          <target state="translated">クローズ操作を完了する必要がある制限時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。この時間を経過すると、タイムアウトします。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous on close operation.</source>
          <target state="translated">非同期のクローズ操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on close operation.</source>
          <target state="translated">非同期のクローズ操作に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</source>
          <target state="translated">非同期クローズ操作の呼び出しにより通信オブジェクトが Closing 状態に遷移した後で、処理を挿入します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on close operation.</source>
          <target state="translated">非同期のクローズ操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 状態だった場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> method.</source>
          <target state="translated">同期 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 操作を呼び出すために、通信オブジェクトが終了状態に遷移した後に処理を挿入するには、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
          <target state="translated">オープン操作を完了する必要がある制限時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。この時間を経過すると、タイムアウトします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous on open operation.</source>
          <target state="translated">非同期のオープン操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on open operation.</source>
          <target state="translated">非同期のオープン操作に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</source>
          <target state="translated">非同期オープン操作の呼び出しにより通信オブジェクトが Opening 状態に遷移した後で、通信オブジェクトに処理を挿入します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on open operation.</source>
          <target state="translated">非同期のオープン操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a opening state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">同期 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 操作の呼び出しにより通信オブジェクトが Opening 状態に遷移した後に処理を挿入するには、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
          <target state="translated">クローズ操作を完了する必要がある制限時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。この時間を経過すると、タイムアウトします。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</source>
          <target state="translated">同期クローズ操作の呼び出しにより通信オブジェクトが Closing 状態に遷移した後で、通信オブジェクトに処理を挿入します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 状態だった場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> method.</source>
          <target state="translated">非同期 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> 操作の呼び出しにより通信オブジェクトが Closing 状態に遷移した後で処理を挿入するには、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /&gt;</ph> が、<ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態のオブジェクトで呼び出されました。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>A communication error occurred while closing the object.</source>
          <target state="translated">オブジェクトを閉じている途中で通信エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>Invoked during the transition of a communication object into the closing state.</source>
          <target state="translated">通信オブジェクトが Closing 状態に遷移しているときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 状態だった場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトがまだ <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> 状態ではない場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> および <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <source>Invoked during the transition of a communication object into the closing state.</source>
          <target state="translated">通信オブジェクトが Closing 状態に遷移しているときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> 状態だった場合、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドへの呼び出しで返された <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation on the close of a communication object.</source>
          <target state="translated">通信オブジェクトがクローズしたら非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> メソッドは、通信オブジェクトがまだ <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> 状態になっていない場合は、<ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドへの呼び出しで返された <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation on the open of a communication object.</source>
          <target state="translated">通信オブジェクトがオープンしたら、非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> メソッドは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> (および <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>) を呼び出します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <source>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</source>
          <target state="translated">同期フォールト操作の呼び出しにより通信オブジェクトが Faulted 状態に遷移した後で、通信オブジェクトに処理を挿入します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> メソッドによって呼び出される <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
          <target state="translated">オープン操作を完了する必要がある制限時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。この時間を経過すると、タイムアウトします。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</source>
          <target state="translated">指定した時間内に完了する必要がある開始状態に通信オブジェクトが遷移した後で、通信オブジェクトに処理を挿入します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> (after calling <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and before calling <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>) if the communication object is initially in the <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが最初に <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 状態だった場合、(<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> の呼び出し後および <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> の呼び出し前に) <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> メソッドは <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>To insert processing as a communication object transitions to a opening state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method.</source>
          <target state="translated">非同期 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> 操作の呼び出しにより通信オブジェクトが Opening 状態に遷移するときに処理を挿入するには、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <source>Invoked during the transition of a communication object into the opened state.</source>
          <target state="translated">通信オブジェクトが Opened 状態に遷移しているときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドおよび <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> メソッドで呼び出された場合に、処理を追加する方法を提供します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <source>Invoked during the transition of a communication object into the opening state.</source>
          <target state="translated">通信オブジェクトが Opening 状態に遷移しているときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> methods.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドおよび <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> メソッドで呼び出された場合に、処理を追加する方法を提供します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">通信オブジェクトを、Created 状態から Opened 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドは、呼び出されると、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 状態にし、さらに <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>、<ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>、および <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> メソッドは、オブジェクトの状態を <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 状態に設定することによって、<ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> メソッドを完了します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">通信オブジェクトを、Created 状態から Opened 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> は、インスタンス化されている場合は、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態で開始されます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態の場合、オブジェクトを構成する (プロパティの設定やイベントの登録など) ことはできますが、メッセージの送受信にはまだ使用できません。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドは、呼び出されると、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 状態にし、さらに <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>、<ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>、および <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> メソッドは、オブジェクトの状態を <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 状態に設定することによって、<ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> メソッドを完了します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>In the</source>
          <target state="translated">の</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> の場合は、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> をメッセージの受信などに使用することはできますが、構成することはできません。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
          <target state="translated">また、非同期バージョンの open メソッドがあります。これは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> の呼び出しで開始され、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> の呼び出しで完了します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>Credentials Capture with Windows Authentication</source>
          <target state="translated">Windows 認証による資格情報のキャプチャ。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When using Windows authentication, credentials used by the service are based on the current context thread.</source>
          <target state="translated">Windows 認証を使用する場合、サービスで使用される資格情報は、現在のコンテキストのスレッドに基づきます。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The credentials are obtained when the <ph id="ph1">`Open`</ph> method is called.</source>
          <target state="translated">資格情報は、<ph id="ph1">`Open`</ph> メソッドが呼び出されるときに取得されます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>For asynchronous calls, credentials are captured when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> is invoked.</source>
          <target state="translated">非同期呼び出しの場合、資格情報は、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> が呼び出されるときにキャプチャされます。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>However, the actual credentials cannot be guaranteed.</source>
          <target state="translated">ただし、実際の資格情報は保証できません。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>That is, the credentials of the caller may be switched to another identity.</source>
          <target state="translated">つまり、呼び出し元の資格情報が別の ID に切り替えられる可能性があります。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>For more information, see <bpt id="p1">[</bpt>Message Security with a Windows Client<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>メッセージ セキュリティと Windows クライアント<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated">オープン操作がタイムアウトになるまでの時間を表す <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</source>
          <target state="translated">指定した時間内で、通信オブジェクトを Created 状態から Opened 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> は、インスタンス化されている場合は、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態で開始されます。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態の場合、オブジェクトを構成する (プロパティの設定やイベントの登録など) ことはできますが、メッセージの送受信にはまだ使用できません。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドは、呼び出されると、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> を <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> 状態にし、さらに <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>、<ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>、および <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> メソッドは、オブジェクトの状態を <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> 状態に設定することによって、<ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> メソッドを完了します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>In the</source>
          <target state="translated">の</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> の場合は、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> をメッセージの受信などに使用することはできますが、構成することはできません。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
          <target state="translated">また、非同期バージョンの open メソッドがあります。これは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> の呼び出しで開始され、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> の呼び出しで完了します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、変更できません。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">操作に割り当てられている既定の時間が、操作が完了する前に経過しました。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <source>Occurs when a communication object transitions into the opened state.</source>
          <target state="translated">通信オブジェクトが Opened 状態に遷移すると発生します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> メソッドおよび <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドによって呼び出される <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <source>Occurs when a communication object transitions into the opening state.</source>
          <target state="translated">通信オブジェクトが Opening 状態に遷移すると発生します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> イベントは、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> メソッドおよび <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> メソッドによって呼び出される <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> メソッドによって起動されます。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.State">
          <source>Gets a value that indicates the current state of the communication object.</source>
          <target state="translated">通信オブジェクトの現在の状態を示す値を取得します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.State">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> enumeration that indicates the current state of the object.</source>
          <target state="translated">オブジェクトの現在の状態を示す <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> 列挙体の値。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <source>Gets the mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">状態遷移中にクラス インスタンスを保護する相互排他的なロックを取得します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">状態遷移中にクラス インスタンスを保護する相互排他的なロック。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>Throws an exception if the communication object is disposed.</source>
          <target state="translated">通信オブジェクトが破棄された場合に、例外をスローします。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>No exception is thrown if the communication object is in a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph>、または <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> の状態である場合は、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>A communication object is disposed once <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> is called on it.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> が呼び出されると、破棄されます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>Throws an exception if the communication object the <ph id="ph1">&lt;see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトの <ph id="ph1">&lt;see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /&gt;</ph> プロパティが <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 状態に設定されていない場合、例外をスローします。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>Since an object is immutable after <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> is called on it, the only state that is both mutable and not disposed is the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">オブジェクトは、<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> が呼び出された後には不変になるため、可変で、かつ破棄されていない状態は <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態だけです。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>Throws an exception if the communication object is not in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態ではない場合に、例外をスローします。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be used.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態ではなく、使用できません。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態であり、変更できません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>