<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ae63748c67f545e380dccbb2d4ab05c995bd875" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37460098" /></Metadata><TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>サービスがサポートする応答の送信先を、匿名アドレスのみ、非匿名アドレスのみ、または両方にするかを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この列挙体は、サーバーの機能を指定します。言い換えれば、そのクライアントでの要件を設定します。  
  
 Windows Communication Foundation (WCF) では、さまざまなメッセージを送信する必要がありますを指定するためのアドレス指定のコントロールがあります。 たとえば、メッセージの送信先の論理 <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> アドレス、トランスポートで使用される物理 ("Via") アドレス (ここでサービスがリッスンする)、およびクライアント エンドポイントのアドレスを示すエンドポイントの <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> アドレスがあります。  
  
 二者間のみでメッセージを交換する最も基本的な場合では、これらのアドレスを個別に指定する必要はありません。 ただし、メッセージの交換にはその他のメッセージの送信先が含まれることがあるため、アドレスを明示的に示す必要がある場合に指定できる必要があります。 二者間のみの場合でも、サーバーが独自の HTTP 要求を作成する必要がある双方向 HTTP のように、この機能が必要になる場合があります。 以下の種類の関係は、これらのメッセージング パターンをキャプチャするために、<xref:System.ServiceModel.Channels.SupportedAddressingMode> 列挙体によって定義されます。  
  
-   匿名のアドレスは、最も基本的な形式のアドレス指定します。 応答の既定のパスがある場合は、匿名アドレス指定が使用されます。 TCP は双方向通信用のトランスポートであり、TCP メッセージに対する応答は、元のメッセージを送信したソケットのもう一方の側に送り返すことができます。 同様に、HTTP の要求/応答モデルは、HTTP 応答チャネルを介して応答を送信します。 これらの応答では、応答メッセージの送信先を指定する必要はありません。 サーバーは、クライアントからの匿名応答を必要とする場合は、列挙体の匿名の値が使用されます。 システム標準の WCF <xref:System.ServiceModel.NetTcpBinding>、<xref:System.ServiceModel.BasicHttpBinding>と<xref:System.ServiceModel.WSHttpBinding>バインドは、常に、匿名アドレスを使用します。  
  
-   非匿名アドレスは、応答の送信通信用の新しいチャネルを作成する必要がある場合に使用されます。 システム標準の WCF<xref:System.ServiceModel.WSDualHttpBinding>結合に非匿名アドレスを使用します。 双方向 HTTP では、クライアントが HTTP 要求を作成して、メッセージを送信すると、サーバーは、応答を送信するために独自の HTTP 要求を作成する必要があります。 サーバーは送信を開始しているため、接続を確立するための特定のエンドポイントが必要になります。 サーバーに、応答のためのエンドポイントのアドレスを示す必要があります。 同様に、サービスは、受信した一方向のメッセージに応答する必要がある場合も必要です、NonAnonymous 対応通信で使用できるバック チャネルがないためです。 サーバーがメッセージを送り返す場合は、最初のメッセージの送信に使用されたものとはまったく別の操作が必要です。  
  
-   3 番目の形式の結合が送信されるメッセージに応じて Anonymous と NonAnonymous のアドレスをアドレス指定には混合です。 混合モードのアドレス指定の典型的な例は、エラー メッセージまたは受信確認メッセージの処理のための専用のコンピューターを使用する方法です。 応答の標準の交換シーケンスが HTTP または TCP の場合は、応答を使用して、匿名アドレス指定が、エラーが非匿名アドレス指定を使用します。 WCF は、Mixed、標準のバインドのいずれかの機能をアドレス指定を提供していない、により、サービスのバック チャネル (応答アドレスが匿名である場合) または個別のチャネルに直接応答を送信できるチャネルを記述することは (場合応答アドレスが NonAnonymous) です。 このような場合は、チャネルのバインド要素は、設定に使用される<xref:System.ServiceModel.Channels.SupportedAddressingMode>Mixed にします。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>サーバーは、匿名アドレスのみをサポートするため、クライアントは匿名応答アドレスを示す必要があります。</summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>サーバーは、匿名アドレスと非匿名アドレスの両方をサポートするため、クライアントはいずれかまたは両方を選択できます。</summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>サーバーは、非匿名アドレスのみをサポートするため、クライアントは非匿名応答アドレスを示す必要があります。</summary>
      </Docs>
    </Member>
  </Members>
</Type>