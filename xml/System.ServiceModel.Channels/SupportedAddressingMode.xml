<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ae63748c67f545e380dccbb2d4ab05c995bd875" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37460098" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="6b8e3-101">サービスがサポートする応答の送信先を、匿名アドレスのみ、非匿名アドレスのみ、または両方にするかを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b8e3-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b8e3-102">この列挙体は、サーバーの機能を指定します。言い換えれば、そのクライアントでの要件を設定します。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 <span data-ttu-id="6b8e3-103">Windows Communication Foundation (WCF) では、さまざまなメッセージを送信する必要がありますを指定するためのアドレス指定のコントロールがあります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-103">Windows Communication Foundation (WCF) has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="6b8e3-104">たとえば、メッセージの送信先の論理 <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> アドレス、トランスポートで使用される物理 ("Via") アドレス (ここでサービスがリッスンする)、およびクライアント エンドポイントのアドレスを示すエンドポイントの <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> アドレスがあります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="6b8e3-105">二者間のみでメッセージを交換する最も基本的な場合では、これらのアドレスを個別に指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="6b8e3-106">ただし、メッセージの交換にはその他のメッセージの送信先が含まれることがあるため、アドレスを明示的に示す必要がある場合に指定できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="6b8e3-107">二者間のみの場合でも、サーバーが独自の HTTP 要求を作成する必要がある双方向 HTTP のように、この機能が必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="6b8e3-108">以下の種類の関係は、これらのメッセージング パターンをキャプチャするために、<xref:System.ServiceModel.Channels.SupportedAddressingMode> 列挙体によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="6b8e3-109">匿名のアドレスは、最も基本的な形式のアドレス指定します。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="6b8e3-110">応答の既定のパスがある場合は、匿名アドレス指定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="6b8e3-111">TCP は双方向通信用のトランスポートであり、TCP メッセージに対する応答は、元のメッセージを送信したソケットのもう一方の側に送り返すことができます。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="6b8e3-112">同様に、HTTP の要求/応答モデルは、HTTP 応答チャネルを介して応答を送信します。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="6b8e3-113">これらの応答では、応答メッセージの送信先を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="6b8e3-114">サーバーは、クライアントからの匿名応答を必要とする場合は、列挙体の匿名の値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="6b8e3-115">システム標準の WCF <xref:System.ServiceModel.NetTcpBinding>、<xref:System.ServiceModel.BasicHttpBinding>と<xref:System.ServiceModel.WSHttpBinding>バインドは、常に、匿名アドレスを使用します。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="6b8e3-116">非匿名アドレスは、応答の送信通信用の新しいチャネルを作成する必要がある場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="6b8e3-117">システム標準の WCF<xref:System.ServiceModel.WSDualHttpBinding>結合に非匿名アドレスを使用します。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="6b8e3-118">双方向 HTTP では、クライアントが HTTP 要求を作成して、メッセージを送信すると、サーバーは、応答を送信するために独自の HTTP 要求を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="6b8e3-119">サーバーは送信を開始しているため、接続を確立するための特定のエンドポイントが必要になります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="6b8e3-120">サーバーに、応答のためのエンドポイントのアドレスを示す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="6b8e3-121">同様に、サービスは、受信した一方向のメッセージに応答する必要がある場合も必要です、NonAnonymous 対応通信で使用できるバック チャネルがないためです。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="6b8e3-122">サーバーがメッセージを送り返す場合は、最初のメッセージの送信に使用されたものとはまったく別の操作が必要です。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="6b8e3-123">3 番目の形式の結合が送信されるメッセージに応じて Anonymous と NonAnonymous のアドレスをアドレス指定には混合です。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="6b8e3-124">混合モードのアドレス指定の典型的な例は、エラー メッセージまたは受信確認メッセージの処理のための専用のコンピューターを使用する方法です。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="6b8e3-125">応答の標準の交換シーケンスが HTTP または TCP の場合は、応答を使用して、匿名アドレス指定が、エラーが非匿名アドレス指定を使用します。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="6b8e3-126">WCF は、Mixed、標準のバインドのいずれかの機能をアドレス指定を提供していない、により、サービスのバック チャネル (応答アドレスが匿名である場合) または個別のチャネルに直接応答を送信できるチャネルを記述することは (場合応答アドレスが NonAnonymous) です。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="6b8e3-127">このような場合は、チャネルのバインド要素は、設定に使用される<xref:System.ServiceModel.Channels.SupportedAddressingMode>Mixed にします。</span><span class="sxs-lookup"><span data-stu-id="6b8e3-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b8e3-128">サーバーは、匿名アドレスのみをサポートするため、クライアントは匿名応答アドレスを示す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b8e3-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b8e3-129">サーバーは、匿名アドレスと非匿名アドレスの両方をサポートするため、クライアントはいずれかまたは両方を選択できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b8e3-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b8e3-130">サーバーは、非匿名アドレスのみをサポートするため、クライアントは非匿名応答アドレスを示す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b8e3-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>