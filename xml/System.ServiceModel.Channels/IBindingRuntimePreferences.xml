<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32e96da17ebc5c5d535108321675efc9526b07e7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37461073" /></Metadata><TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>バインドが実装すると、受信した要求をサービスが同期または非同期のどちらで処理するかを指定できるようになるオプションのコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 状況によっては、バインドが同期方式の <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> メソッドまたは <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> メソッドを使用してメッセージを処理する方が効率的な場合があります。 この方法が望ましいことを呼び出し側に示すために、<xref:System.ServiceModel.Channels.Binding> クラスでは、必要に応じて、<xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装できます。  
  
 バインディングが実装していない場合<xref:System.ServiceModel.Channels.IBindingRuntimePreferences>、非同期バージョンの使用に既定値は、Windows Communication Foundation (WCF) サービス モデル ランタイム層、`Receive`と`Request`メソッド。 バインディングを実装する場合<xref:System.ServiceModel.Channels.IBindingRuntimePreferences>、WCF サービス モデル ランタイム層は、の値を確認します<xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>を使用して、これらの同期バージョンを呼び出すかどうかを決定しメソッド (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>または<xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) または非同期。バージョン (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>と<xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>または<xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>と<xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>します。 バインディングが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装していて、`true` プロパティが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> を返す場合は、同期方式の <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> メソッドと <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> メソッドを使用して、チャネルからメッセージを受信することをお勧めします。 バインディングが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装していない場合、または `false` プロパティから <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> が返される場合は、非同期方式の <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> メソッドと <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> メソッド、または <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> メソッドと <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> メソッドを使用することをお勧めします。  
  
 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> プロパティが返す値に関係なく、すべてのバインディングは、実装されている特定のチャネルの種類に対し、`Receive` メソッドの同期および非同期の両バージョンの有効な実装を提供する必要があります。 カスタム チャネルの実装の詳細については、次を参照してください。[開発チャネル](~/docs/framework/wcf/extending/developing-channels.md)します。  
  
   
  
## Examples  
 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> インターフェイスを実装するバインドの実装例を次に示します。 このコードから取得されますが、 [Chunking チャネル](~/docs/framework/wcf/samples/chunking-channel.md)サンプル。  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>受信した要求を処理するには同期と非同期のどちらの方が効率的かを示す値を取得します。</summary>
        <value><see langword="true" /> 要求をより効率的に同期的に処理する場合それ以外の場合<see langword="false" />します。 既定は <see langword="false" /> で、要求を非同期的に処理します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF) によって提供される標準の (システム提供) のバインディングは、このインターフェイスを実装しているし、場合によっては、受信メッセージを同期的に処理する既定値を上書きします。  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>