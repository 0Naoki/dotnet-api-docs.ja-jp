<Type Name="IChannelListener" FullName="System.ServiceModel.Channels.IChannelListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="391643d67cf6d9403052b2bb0a5d102efec2f1cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelListener : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelListener : System::ServiceModel::ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7f9e3-101">チャネル リスナーがチャネルを受け入れるために実装する必要があるインターフェイスを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f9e3-101">Defines the interface that must be implemented by a channel listener to accept channels.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f9e3-102"><xref:System.ServiceModel.Channels.IChannelListener> インターフェイスは、チャネル リスナーの基本インターフェイスを表します。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-102">The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners.</span></span>  
  
 <span data-ttu-id="7f9e3-103">チャネル リスナーおよび各リスナーに関連付けられたチャネルは、通常、クライアントが開始した通信を受信するサービスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-103">Channel listeners and their associated channels are generally used by services that receive communications initiated by clients.</span></span> <span data-ttu-id="7f9e3-104">一方、<xref:System.ServiceModel.Channels.IChannelFactory> インターフェイスを実装するチャネル ファクトリは、サービスとの通信を開始するためのチャネルを作成するメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-104">Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7f9e3-105">チャネル操作の待機を完了する必要がある制限時間を指定する <see cref="T:System.TimeSpan" />。この時間を経過すると、タイムアウトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-105">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7f9e3-106">チャネル操作の待機の非同期完了の通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7f9e3-107">チャネル操作の非同期待機に関連付けられている状態情報を格納するオブジェクト。アプリケーションで指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-107">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f9e3-108">チャネルの到着を待機する非同期操作を開始します。この操作は指定した時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-108">Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f9e3-109">チャネル操作の非同期待機を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="7f9e3-110">
            <see cref="T:System.IAsyncResult" /> メソッドの呼び出しで返された <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-110">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f9e3-111">チャネルの到着を待機する非同期の操作を完了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-111">Completes an asynchronous operation to wait for channels to arrive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f9e3-112">メッセージが到達した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-112">
              <see langword="true" /> if a message arrived; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="7f9e3-113">メソッドが照会している、型指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-113">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="7f9e3-114">チャネル スタックの適切な層から、要求のあった型指定されたオブジェクト (ある場合) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-114">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f9e3-115">要求される型指定されたオブジェクト <paramref name="T" /> がある場合はそのオブジェクト。ない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-115">The typed object <paramref name="T" /> requested, if it is present or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f9e3-116">チャネル スタックの適切な層のプロパティを設定したり、ステータスを取得したりするためのインターフェイスなど、型指定されたオブジェクトを要求するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-116">Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="7f9e3-117">その層が要求されたオブジェクトを返せる場合は、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-117">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="7f9e3-118">それ以外の場合は、スタック内の次の層に呼び出しを代行させます。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-118">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="7f9e3-119">スタックの最下位に達しても要求されたオブジェクトをサポートするチャネル層がない場合、メソッドは、`null` を返します。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-119">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f9e3-120">ファクトリによって生成されるリスナーがリッスンする URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-120">Gets the URI on which the listeners that are generated by the factory listen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f9e3-121">ファクトリによって生成されるリスナーがリッスンする <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-121">The <see cref="T:System.Uri" /> on which the listeners that are generated by the factory listen.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f9e3-122">この URI は、<xref:System.ServiceModel.Channels.IChannelListener> がメッセージをリッスンするトランスポート アドレスを表します。</span><span class="sxs-lookup"><span data-stu-id="7f9e3-122">This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForChannel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7f9e3-123">チャネル操作の待機を完了する必要がある制限時間を指定する <see cref="T:System.TimeSpan" />。この時間を経過すると、タイムアウトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-123">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f9e3-124">チャネルの到着を待ちます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-124">Waits for a channel to arrive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f9e3-125">
            <paramref name="timeout" /> で指定した制限時間内にチャネルが到着した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f9e3-125">
              <see langword="true" /> if a channel arrived before the interval of time specified by the <paramref name="timeout" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>