<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62d83bb1e28be138c942555207ea0e72095d52de" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37461060" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="77fb2-101">メッセージング エンドポイント間の双方向通信の両側に実装されるセッションのインターフェイスを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="77fb2-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb2-102"><xref:System.ServiceModel.Channels.IDuplexSession> インターフェイスは、<xref:System.ServiceModel.Channels.IInputSession> インターフェイスで定義されている受信セッションと、<xref:System.ServiceModel.Channels.IOutputSession> インターフェイスで定義されている送信セッションの結合です。</span><span class="sxs-lookup"><span data-stu-id="77fb2-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="77fb2-103">受信セッションと送信セッションは、どちらも、もう一方に関係なく終了できます。</span><span class="sxs-lookup"><span data-stu-id="77fb2-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="77fb2-104">送信セッションは、<xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> を呼び出して同期的に終了するか、または <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A> を呼び出して非同期的に終了することができます。</span><span class="sxs-lookup"><span data-stu-id="77fb2-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="77fb2-105">受信セッションは、リモート操作で終了できます。</span><span class="sxs-lookup"><span data-stu-id="77fb2-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="77fb2-106">受信セッションに関連付けられた <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> は、そのセッションがシャットダウンすると、`null` を返すようになります。</span><span class="sxs-lookup"><span data-stu-id="77fb2-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77fb2-107">送信セッションを終了する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-107">Begins an asynchronous operation to terminate the outbound session.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="77fb2-108">
            <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-108">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="77fb2-109">この要求の状態情報を格納する <see langword="object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-109">An <see langword="object" /> that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77fb2-110">送信セッションを終了する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-110">Begins an asynchronous operation to terminate the outbound session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77fb2-111">非同期送信セッションの終了を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb2-112">送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="77fb2-113">この操作は、既定の時間内に完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="77fb2-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="77fb2-114">操作完了の制限時間を指定する <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="77fb2-115">
            <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-115">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="77fb2-116">この要求の状態情報を格納する <see langword="object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-116">An <see langword="object" /> that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77fb2-117">操作がその時間内に完了する必要があるタイムアウトを指定して、送信セッションを終了する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77fb2-118">非同期送信セッションの終了を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb2-119">送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77fb2-120">セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77fb2-121">セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb2-122"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> を呼び出すと、セッションのもう一方の側に対して、`null` に対する保留中または以降の呼び出しからは <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> を返す必要があることが通知されます。</span><span class="sxs-lookup"><span data-stu-id="77fb2-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="77fb2-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> はべき等であるため、再度呼び出しても何も行われません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="77fb2-124">送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77fb2-125">
            <para>
              <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 対話できるセッション メソッドは、<see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />セッションを所有しています。特に、(TCP と信頼できるセッションとセキュリティが) 同じように、チャネルの有効期間とセッションの有効期間が配置されます: - 場合<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />前に呼び出されます<see cref="M:System.ServiceModel.ICommunicationObject.Close" />、チャネルで呼び出される<see cref="M:System.ServiceModel.ICommunicationObject.Close" />待つ必要があります<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />完了します。 場合、チャネルが、<see cref="F:System.ServiceModel.CommunicationState.Created" />または<see cref="F:System.ServiceModel.CommunicationState.Opening" />状態、<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />スローする必要があります、<see cref="T:System.InvalidOperationException" />します。 場合、チャネルが、<see cref="F:System.ServiceModel.CommunicationState.Faulted" />状態、<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />スローする必要があります、<see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />します。 に場合、チャネルはエラー<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />をスローします。 -の実装<see cref="M:System.ServiceModel.ICommunicationObject.Close" />チャネルで呼び出す必要があります<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />ことを確認します<see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" />返します<see langword="null" />、ことを示します<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />がセッションの相手側から呼び出されました。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-125">
              <para>
                <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session. In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):  -   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.  -   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.  -   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  -   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.  -   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="77fb2-126">操作完了の制限時間を指定する <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-126">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77fb2-127">指定した時間内に、セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-127">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb2-128"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> を呼び出すと、セッションのもう一方の側に対して、`null` に対する保留中または以降の呼び出しからは <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> を返す必要があることが通知されます。</span><span class="sxs-lookup"><span data-stu-id="77fb2-128">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="77fb2-129"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> はべき等であるため、再度呼び出しても何も行われません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-129"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="77fb2-130">送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-130">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="77fb2-131">
            <para>
              <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 対話できるセッション メソッドは、<see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />セッションを所有しています。特に、(TCP と信頼できるセッションとセキュリティが) 同じように、チャネルの有効期間とセッションの有効期間が配置されます: - 場合<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />前に呼び出されます<see cref="M:System.ServiceModel.ICommunicationObject.Close" />、チャネルで呼び出される<see cref="M:System.ServiceModel.ICommunicationObject.Close" />待つ必要があります<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />完了します。 場合、チャネルが、<see cref="F:System.ServiceModel.CommunicationState.Created" />または<see cref="F:System.ServiceModel.CommunicationState.Opening" />状態、<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />スローする必要があります、<see cref="T:System.InvalidOperationException" />します。 場合、チャネルが、<see cref="F:System.ServiceModel.CommunicationState.Faulted" />状態、<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />スローする必要があります、<see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />します。 に場合、チャネルはエラー<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />をスローします。 -の実装<see cref="M:System.ServiceModel.ICommunicationObject.Close" />チャネルで呼び出す必要があります<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />ことを確認します<see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" />返します<see langword="null" />ことを示すを<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />がセッションの相手側から呼び出されました。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-131">
              <para>
                <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session. In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):  -   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.  -   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.  -   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  -   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.  -   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="77fb2-132">いずれかの <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-132">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77fb2-133">セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションに対して、セッションを終了する非同期操作を完了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="77fb2-133">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb2-134">送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。</span><span class="sxs-lookup"><span data-stu-id="77fb2-134">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>