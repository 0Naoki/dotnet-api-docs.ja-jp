<Type Name="TransportBindingElement" FullName="System.ServiceModel.Channels.TransportBindingElement">
  <TypeSignature Language="C#" Value="public abstract class TransportBindingElement : System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransportBindingElement extends System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransportBindingElement&#xA;Inherits BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransportBindingElement abstract : System::ServiceModel::Channels::BindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e5bbd-101">トランスポート バインディング要素を表す <see langword="abstract" /> 基本クラス。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-101">An <see langword="abstract" /> base class that represents a transport binding element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bbd-102">このクラスには、[!INCLUDE[indigo1](~/includes/indigo1-md.md)] が提供するすべてのトランスポート バインディング要素に共通するプロパティが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-102">This class factors out properties that are common to all of the transport binding elements provided by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span></span> <span data-ttu-id="e5bbd-103">このクラスは、基本トランスポート設定を、実行時のマニフェストに変換する処理を行います。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-103">It handles the translation of the base transport settings into run-time manifestations.</span></span> <span data-ttu-id="e5bbd-104">これは、その具象派生クラス トランスポート バインドでのトランスポート固有の設定 (たとえば、HTTP の HttpProxySettings) ロジックの変換を代行します。これには、以下のクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-104">It delegates the translation of transport-specific settings (for example, HttpProxySettings for HTTP) logic in its concrete derived class transport bindings, which include the following classes:</span></span>  
  
-   <xref:System.ServiceModel.Channels.PeerTransportBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>  
  
-   <xref:System.ServiceModel.Channels.TcpTransportBindingElement>  
  
-   <xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement>  
  
-   <xref:System.ServiceModel.Channels.MsmqTransportBindingElement>  
  
-   <xref:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement>  
  
-   <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>  
  
> [!NOTE]
>  <span data-ttu-id="e5bbd-105">カスタム トランスポート バインド要素の開発者は、このクラスを継承する必要があります。このクラスは、<xref:System.ServiceModel.Channels.BindingElement> クラスから派生します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-105">Custom transport binding element developers must inherit from this class, which derives from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransportBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5bbd-106">このクラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-106">Creates a new instance of this class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransportBindingElement (System.ServiceModel.Channels.TransportBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.TransportBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As TransportBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransportBindingElement(System::ServiceModel::Channels::TransportBindingElement ^ elementToBeCloned);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.TransportBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="e5bbd-107">複製する <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-107">The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="e5bbd-108">既存のインスタンスを使用して、このクラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-108">Creates a new instance of this class from an existing instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e5bbd-109">取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-109">The property to get.</span></span></typeparam>
        <param name="context"><span data-ttu-id="e5bbd-110"><see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-110">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></param>
        <summary><span data-ttu-id="e5bbd-111">指定した <see cref="T:System.ServiceModel.Channels.BindingContext" /> からプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-111">Gets a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></summary>
        <returns><span data-ttu-id="e5bbd-112">指定した <see cref="T:System.ServiceModel.Channels.BindingContext" /> のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-112">The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bbd-113">このメソッドは、バインディング コンテキストを入力パラメーターとして受信します。これは、バインド要素のスタックを表します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-113">This method receives a binding context as an input parameter, which represents the stack of binding elements.</span></span> <span data-ttu-id="e5bbd-114">このメソッドは、指定されたオブジェクトを直接取得するか、問い合わせをスタック内の 1 つ下のバインド要素に代行させるか、またはその 2 つを組み合わせます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-114">This method gets the specified object directly, delegates the inquiry to the next lower binding element in the stack, or a combination of the two.</span></span> <span data-ttu-id="e5bbd-115">問い合わせを代行させる場合は、コンテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-115">It can modify the context if it delegates the inquiry.</span></span> <span data-ttu-id="e5bbd-116">スタック内の各バインド要素は、代行している場合、スタックの一番下に到達するまでこのプロセスを反復できます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-116">Each binding element in the stack can repeat this process, if it has been delegated to, until the bottom of the stack is reached.</span></span> <span data-ttu-id="e5bbd-117">返されるオブジェクトは、通常、プロパティのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-117">The object returned is usually a collection of properties.</span></span>  
  
 <span data-ttu-id="e5bbd-118">`T` の型が <xref:System.ServiceModel.Security.ChannelProtectionRequirements>、<xref:System.Xml.XmlDictionaryReaderQuotas>、または <xref:System.ServiceModel.Channels.MessageVersion> の場合は、このクラスのインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-118">If the type of `T` is <xref:System.ServiceModel.Security.ChannelProtectionRequirements>, <xref:System.Xml.XmlDictionaryReaderQuotas>, or <xref:System.ServiceModel.Channels.MessageVersion> then an instance of this class is returned.</span></span> <span data-ttu-id="e5bbd-119">`T` の型が <xref:System.ServiceModel.Channels.BindingContext.BindingParameters%2A> のインスタンスの型と一致する場合は、そのインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-119">If the type of `T` matches the type of an instance in <xref:System.ServiceModel.Channels.BindingContext.BindingParameters%2A>, that instance is returned.</span></span>  
  
 <span data-ttu-id="e5bbd-120">このメソッドは、バインド要素によって、また、ランタイム オブジェクト (<xref:System.ServiceModel.Channels.IChannelFactory>、<xref:System.ServiceModel.Channels.IChannelListener>、<xref:System.ServiceModel.Channels.IChannel> など) によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-120">This method is implemented by binding elements as well as by the run-time objects such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public virtual bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5bbd-121">メッセージの手動アドレス指定が必要かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-121">Gets or sets a value that indicates whether manual addressing of the message is required.</span></span></summary>
        <value>
          <span data-ttu-id="e5bbd-122"><see langword="true" /> メッセージの手動によるアドレス指定が必要な場合です。それ以外の場合<see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-122"><see langword="true" /> if manual addressing of the message is required; otherwise <see langword="false" />.</span></span> <span data-ttu-id="e5bbd-123">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-123">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bbd-124">このプロパティは、通常、アプリケーションが複数の宛先のどれにメッセージを送信するかを決定するルーターのシナリオで使用されます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-124">This property is usually used in router scenarios, where the application determines which one of several destinations to send a message to.</span></span>  
  
 <span data-ttu-id="e5bbd-125">このプロパティが `true` に設定されている場合、チャネルは、メッセージに既にアドレスが指定されていると判断し、新たに情報の追加は行いません。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-125">If this property is set to `true`, the channel assumes the message has already been addressed and does not add any additional information.</span></span>  
  
 <span data-ttu-id="e5bbd-126">場合`false`では、送信チャネルの適用、<xref:System.ServiceModel.EndpointAddress>として構成されている、`To`送信メッセージへのチャネルのアドレス。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-126">If `false`, the sending channel applies the <xref:System.ServiceModel.EndpointAddress> configured as the `To` addressee on the channel to outgoing messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public virtual long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5bbd-127">トランスポートが使用するバッファー プールの最大サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-127">Gets or sets the maximum size, in bytes, of any buffer pools used by the transport.</span></span></summary>
        <value><span data-ttu-id="e5bbd-128">バッファー プールの最大サイズ。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-128">The maximum size of the buffer pool.</span></span> <span data-ttu-id="e5bbd-129">既定では 524, 288 バイトです。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-129">The default is 524,288 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bbd-130">WCF の多くの部分でバッファーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-130">Many parts of WCF use buffers.</span></span> <span data-ttu-id="e5bbd-131">使用するたびに毎回バッファーを作成および破棄すると負荷が高くなります。バッファーのガベージ コレクションも同様です。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-131">Creating and destroying buffers each time they are used is expensive, and garbage collection for buffers is also expensive.</span></span>  
  
 <span data-ttu-id="e5bbd-132">バッファー プールを使用すると、バッファーをプールから取得して使用し、作業が終わったらプールに戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-132">With buffer pools, you can take a buffer from the pool, use it, and return it to the pool once you are done.</span></span> <span data-ttu-id="e5bbd-133">これで、バッファーの作成と破棄のオーバーヘッドを回避できます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-133">Thus the overhead in creating and destroying buffers is avoided.</span></span> <span data-ttu-id="e5bbd-134">欠点は、バッファーはガベージ コレクトされないためにメモリ使用量が増えることです。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-134">The downside is that there is an increase in memory usage because your buffers are not getting garbage collected.</span></span> <span data-ttu-id="e5bbd-135">場合、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>設定は 0、バッファーが返されず、プールに、ガベージ コレクションが開始する代わりにします。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-135">If the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A> is set to 0, no buffers are returned to the pool, and instead garbage collection begins.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public virtual long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5bbd-136">受信できる最大メッセージ サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-136">Gets and sets the maximum allowable message size, in bytes, that can be received.</span></span></summary>
        <value><span data-ttu-id="e5bbd-137">受信できる最大メッセージ サイズ。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-137">The maximum allowable message size that can be received.</span></span> <span data-ttu-id="e5bbd-138">既定値は 65,536 バイトです。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-138">The default is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bbd-139">このプロパティを使用すると、非常に大きいメッセージや無限の長さを指定したメッセージを送信する、または接続されている名前付きパイプにデータを連続して送信するハッカーの攻撃に対処できます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-139">This property can counter a hacker scenario where a message is sent with a very large or infinite specified length, or where data is sent continuously to a connected Named Pipe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public abstract string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TransportBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5bbd-140">トランスポートの URI スキームを取得します。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-140">Gets the URI scheme for the transport.</span></span></summary>
        <value><span data-ttu-id="e5bbd-141">トランスポートの URI スキームを返します。値は、このメソッドを実装する派生クラスにより異なります。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-141">Returns the URI scheme for the transport, which varies depending on what derived class implements this method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5bbd-142">これは、個々のトランスポートの具体的な実装によってオーバーライドされ、ベース アドレスに対してバインドを検証するために提供されます。</span><span class="sxs-lookup"><span data-stu-id="e5bbd-142">This is overridden by each concrete transport implementation and is provided to validate bindings against base addresses.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>