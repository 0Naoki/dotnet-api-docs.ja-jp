<Type Name="MessageEncodingBindingElement" FullName="System.ServiceModel.Channels.MessageEncodingBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b01b4317152551e2ae56179b2f0d6cd9823b0a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageEncodingBindingElement : System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageEncodingBindingElement extends System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageEncodingBindingElement&#xA;Inherits BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageEncodingBindingElement abstract : System::ServiceModel::Channels::BindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1d541-101">メッセージをエンコードするために使用するメッセージ バージョンを指定するバインド要素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d541-101">The binding element that specifies the message version used to encode messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d541-102">エンコーディングは、メッセージをバイト シーケンスに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="1d541-102">Encoding is the process of transforming a message into a sequence of bytes.</span></span> <span data-ttu-id="1d541-103">デコードは、その逆のプロセスです。</span><span class="sxs-lookup"><span data-stu-id="1d541-103">Decoding is the reverse process.</span></span> [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="1d541-104"> には、SOAP メッセージのエンコードとして、テキスト、バイナリ、および MTOM (Message Transmission Optimization Mechanism) の 3 種類があります。</span><span class="sxs-lookup"><span data-stu-id="1d541-104"> includes three types of encoding for SOAP messages: Text, Binary and Message Transmission Optimization Mechanism (MTOM).</span></span>  
  
 <span data-ttu-id="1d541-105">カスタム メッセージ エンコーダーを実装する場合は、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="1d541-105">Use this class if you want to implement a custom message encoder.</span></span> <span data-ttu-id="1d541-106">独自のカスタム メッセージ エンコーダーを実装するには、次の 3 つの抽象基本クラスのカスタム実装を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d541-106">To implement your own custom message encoder, you must provide custom implementations of the following three abstract base classes:</span></span>  
  
-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoderFactory>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoder>  
  
 <span data-ttu-id="1d541-107"><xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> をオーバーライドして、独自のカスタム <xref:System.ServiceModel.Channels.MessageEncoder> のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="1d541-107">Override the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> to return an instance of your custom <xref:System.ServiceModel.Channels.MessageEncoder>.</span></span> <span data-ttu-id="1d541-108"><xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> メソッドをオーバーライドして、このファクトリのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="1d541-108">Override the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> method to return an instance of this factory.</span></span>  
  
 <span data-ttu-id="1d541-109"><xref:System.ServiceModel.Channels.MessageEncodingBindingElement> から派生するすべての型は、サービスに対して生成される WSDL ドキュメント内の SOAP バインドのバージョンを更新します。</span><span class="sxs-lookup"><span data-stu-id="1d541-109">Any type that derives from <xref:System.ServiceModel.Channels.MessageEncodingBindingElement> is responsible for updating the version of the SOAP binding in the WSDL document generated for the service.</span></span> <span data-ttu-id="1d541-110">そのためには、生成される WSDL を変更する <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="1d541-110">This is done by implementing the <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29> method to modify the generated WSDL.</span></span>  
  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="1d541-111"> では、テキスト、バイナリ、および Message Transmission Optimization Mechanism (MTOM) のエンコーディングに対応した <xref:System.ServiceModel.Channels.MessageEncodingBindingElement> クラスから派生した 3 種類のバインド要素が提供されます。</span><span class="sxs-lookup"><span data-stu-id="1d541-111"> provides three types of binding elements derived from the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement> class that can provide for text, binary and Message Transmission Optimization Mechanism (MTOM) encoding.</span></span>  
  
-   <span data-ttu-id="1d541-112"><xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement> : 相互運用性は最も高く、効率は最も低い、XML メッセージ用のエンコーダー。</span><span class="sxs-lookup"><span data-stu-id="1d541-112"><xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>: the most interoperable, but the least efficient encoder for XML messages.</span></span> <span data-ttu-id="1d541-113">Web サービスまたは Web サービス クライアントは、一般に、テキスト形式の XML を認識できます。</span><span class="sxs-lookup"><span data-stu-id="1d541-113">A Web service or Web service client can generally understand textual XML.</span></span> <span data-ttu-id="1d541-114">ただし、大きいブロックのバイナリ データをテキストとして転送するのは効率的ではありません。</span><span class="sxs-lookup"><span data-stu-id="1d541-114">However, transmitting large blocks of binary data as text is not efficient.</span></span>  
  
-   <span data-ttu-id="1d541-115"><xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement> : バイナリベースの XML メッセージで使用される、文字エンコーディングおよびメッセージのバージョン管理を指定するバインド要素を表します。</span><span class="sxs-lookup"><span data-stu-id="1d541-115"><xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement>: represents the binding element that specifies the character encoding and message versioning used for binary-based XML messages.</span></span> <span data-ttu-id="1d541-116">これは、最も効率的ですが、エンコーディング オプションの相互運用性は最も低くなります。</span><span class="sxs-lookup"><span data-stu-id="1d541-116">This is most efficient but least interoperable of the encoding options.</span></span>  
  
-   <span data-ttu-id="1d541-117"><xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement> : Message Transmission Optimization Mechanism (MTOM) エンコードを使用するメッセージの文字エンコードおよびメッセージ バージョン管理を指定するバインド要素を表します。</span><span class="sxs-lookup"><span data-stu-id="1d541-117"><xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement>: represents the binding element that specifies the character encoding and message versioning used for a message using a Message Transmission Optimization Mechanism (MTOM) encoding.</span></span> <span data-ttu-id="1d541-118">MTOM は、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] メッセージでのバイナリ データの転送に有効なテクノロジです。</span><span class="sxs-lookup"><span data-stu-id="1d541-118">MTOM is an efficient technology for transmitting binary data in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] messages.</span></span> <span data-ttu-id="1d541-119">MTOM エンコーダーは、効率と相互運用性のバランスをとろうとします。</span><span class="sxs-lookup"><span data-stu-id="1d541-119">The MTOM encoder attempts to balance efficiency and interoperability.</span></span> <span data-ttu-id="1d541-120">MTOM エンコーディングは、ほとんどの XML をテキスト形式で転送しますが、大きいサイズのバイナリ データ ブロックはテキストに変換せずにそのまま転送することによって最適化します。</span><span class="sxs-lookup"><span data-stu-id="1d541-120">The MTOM encoding transmits most XML in textual form, but optimizes large blocks of binary data by transmitting them as-is, without conversion to text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d541-121"><xref:System.ServiceModel.Channels.MessageEncodingBindingElement> から派生したクラスを実装する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="1d541-121">The following code example shows how to implement a class derived from <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencodingbindingelement.cs#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1d541-122">
            <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-122">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageEncodingBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageEncodingBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d541-123">
            <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-123">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageEncodingBindingElement (System.ServiceModel.Channels.MessageEncodingBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.MessageEncodingBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementToBeCloned As MessageEncodingBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageEncodingBindingElement(System::ServiceModel::Channels::MessageEncodingBindingElement ^ elementToBeCloned);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.MessageEncodingBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <span data-ttu-id="1d541-124">複製する <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-124">The <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d541-125">既存の要素から初期化された <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /> class initialized from an existing element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1d541-126">このコンストラクターを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="1d541-126">The following code illustrates how to implement this constructor:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencodingbindingelement.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageEncoderFactory">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageEncoderFactory CreateMessageEncoderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.MessageEncoderFactory CreateMessageEncoderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateMessageEncoderFactory () As MessageEncoderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::MessageEncoderFactory ^ CreateMessageEncoderFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d541-127">派生クラスでオーバーライドされた場合、メッセージ エンコーダーを生成するためのファクトリを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-127">When overridden in a derived class, creates a factory for producing message encoders.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d541-128">メッセージ エンコーダーを生成するために使用する <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-128">The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> used to produce message encoders.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1d541-129"><xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> を実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="1d541-129">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A>:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencodingbindingelement.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1d541-130">メソッドが照会している、型指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-130">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="1d541-131">現在のバインディング要素の <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-131">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the current binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d541-132">チャネル スタックの適切な層から、要求のあった型指定されたオブジェクト (ある場合) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-132">Returns the typed object requested, if present, from the appropriate layer in the channel stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d541-133">要求される型指定されたオブジェクト <paramref name="T" /> がある場合は、そのオブジェクト。ない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-133">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d541-134">チャネル スタックの適切な層のプロパティの取得やステータスの取得を行うためのインターフェイスなど、型指定されたオブジェクトを要求するには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1d541-134">Use this to request a typed object such as an interface for retrieving properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="1d541-135">その層が要求されたオブジェクトを返せる場合は、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1d541-135">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="1d541-136">それ以外の場合は、スタック内の次の層に呼び出しを代行させます。</span><span class="sxs-lookup"><span data-stu-id="1d541-136">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="1d541-137">スタックの最下位に達しても要求されたオブジェクトをサポートするチャネル層がない場合、メソッドは、`null` を返します。</span><span class="sxs-lookup"><span data-stu-id="1d541-137">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d541-138"><xref:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> メソッドを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="1d541-138">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencodingbindingelement.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d541-139">
            <paramref name="context" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-139">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d541-140">派生クラスでオーバーライドされた場合、メッセージ エンコーダー ファクトリによって生成されるメッセージ エンコーダーが処理できるメッセージ バージョンを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-140">When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d541-141">メッセージ エンコーダー ファクトリによって生成されるエンコーダーが使用する <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d541-141">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the encoders produced by the message encoder factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d541-142">バインド要素は、このプロパティによって返されない <xref:System.ServiceModel.Channels.MessageVersion> を持つメッセージを処理するよう要求された場合、例外をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d541-142">When binding elements are asked to process a message that has a <xref:System.ServiceModel.Channels.MessageVersion> not returned by this property, it should throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d541-143"><xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> プロパティを実装する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="1d541-143">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencodingbindingelement.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>