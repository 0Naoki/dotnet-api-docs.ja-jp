<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageEncodingBindingElement.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51b01b4317152551e2ae56179b2f0d6cd9823b0a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b01b4317152551e2ae56179b2f0d6cd9823b0a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The binding element that specifies the message version used to encode messages.</source>
          <target state="translated">メッセージをエンコードするために使用するメッセージ バージョンを指定するバインド要素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Encoding is the process of transforming a message into a sequence of bytes.</source>
          <target state="translated">エンコーディングは、メッセージをバイト シーケンスに変換するプロセスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Decoding is the reverse process.</source>
          <target state="translated">デコードは、その逆のプロセスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> includes three types of encoding for SOAP messages: Text, Binary and Message Transmission Optimization Mechanism (MTOM).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> には、SOAP メッセージのエンコードとして、テキスト、バイナリ、および MTOM (Message Transmission Optimization Mechanism) の 3 種類があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Use this class if you want to implement a custom message encoder.</source>
          <target state="translated">カスタム メッセージ エンコーダーを実装する場合は、このクラスを使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>To implement your own custom message encoder, you must provide custom implementations of the following three abstract base classes:</source>
          <target state="translated">独自のカスタム メッセージ エンコーダーを実装するには、次の 3 つの抽象基本クラスのカスタム実装を提供する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A&gt;</ph> to return an instance of your custom <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A&gt;</ph> をオーバーライドして、独自のカスタム <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> のインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> method to return an instance of this factory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> メソッドをオーバーライドして、このファクトリのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Any type that derives from <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> is responsible for updating the version of the SOAP binding in the WSDL document generated for the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> から派生するすべての型は、サービスに対して生成される WSDL ドキュメント内の SOAP バインドのバージョンを更新します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>This is done by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29&gt;</ph> method to modify the generated WSDL.</source>
          <target state="translated">そのためには、生成される WSDL を変更する <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29&gt;</ph> メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> provides three types of binding elements derived from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> class that can provide for text, binary and Message Transmission Optimization Mechanism (MTOM) encoding.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> では、テキスト、バイナリ、および Message Transmission Optimization Mechanism (MTOM) のエンコーディングに対応した <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> クラスから派生した 3 種類のバインド要素が提供されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement&gt;</ph>: the most interoperable, but the least efficient encoder for XML messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement&gt;</ph> : 相互運用性は最も高く、効率は最も低い、XML メッセージ用のエンコーダー。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>A Web service or Web service client can generally understand textual XML.</source>
          <target state="translated">Web サービスまたは Web サービス クライアントは、一般に、テキスト形式の XML を認識できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>However, transmitting large blocks of binary data as text is not efficient.</source>
          <target state="translated">ただし、大きいブロックのバイナリ データをテキストとして転送するのは効率的ではありません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement&gt;</ph>: represents the binding element that specifies the character encoding and message versioning used for binary-based XML messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement&gt;</ph> : バイナリベースの XML メッセージで使用される、文字エンコーディングおよびメッセージのバージョン管理を指定するバインド要素を表します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>This is most efficient but least interoperable of the encoding options.</source>
          <target state="translated">これは、最も効率的ですが、エンコーディング オプションの相互運用性は最も低くなります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement&gt;</ph>: represents the binding element that specifies the character encoding and message versioning used for a message using a Message Transmission Optimization Mechanism (MTOM) encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement&gt;</ph> : Message Transmission Optimization Mechanism (MTOM) エンコードを使用するメッセージの文字エンコードおよびメッセージ バージョン管理を指定するバインド要素を表します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>MTOM is an efficient technology for transmitting binary data in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> messages.</source>
          <target state="translated">MTOM は、<ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> メッセージでのバイナリ データの転送に有効なテクノロジです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The MTOM encoder attempts to balance efficiency and interoperability.</source>
          <target state="translated">MTOM エンコーダーは、効率と相互運用性のバランスをとろうとします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The MTOM encoding transmits most XML in textual form, but optimizes large blocks of binary data by transmitting them as-is, without conversion to text.</source>
          <target state="translated">MTOM エンコーディングは、ほとんどの XML をテキスト形式で転送しますが、大きいサイズのバイナリ データ ブロックはテキストに変換せずにそのまま転送することによって最適化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The following code example shows how to implement a class derived from <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> から派生したクラスを実装する方法を次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated">複製する <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> class initialized from an existing element.</source>
          <target state="translated">既存の要素から初期化された <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
          <source>The following code illustrates how to implement this constructor:</source>
          <target state="translated">このコンストラクターを実装する方法を次のコードに示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
          <source>When overridden in a derived class, creates a factory for producing message encoders.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、メッセージ エンコーダーを生成するためのファクトリを作成します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /&gt;</ph> used to produce message encoders.</source>
          <target state="translated">メッセージ エンコーダーを生成するために使用する <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
          <source>The following code illustrates how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> を実装する方法を次のコードに示します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">メソッドが照会している、型指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> for the current binding element.</source>
          <target state="translated">現在のバインディング要素の <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</source>
          <target state="translated">チャネル スタックの適切な層から、要求のあった型指定されたオブジェクト (ある場合) を返します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">要求される型指定されたオブジェクト <ph id="ph1">&lt;paramref name="T" /&gt;</ph> がある場合は、そのオブジェクト。ない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to request a typed object such as an interface for retrieving properties or getting status from the appropriate layer in the channel stack.</source>
          <target state="translated">チャネル スタックの適切な層のプロパティの取得やステータスの取得を行うためのインターフェイスなど、型指定されたオブジェクトを要求するには、このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">その層が要求されたオブジェクトを返せる場合は、オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">それ以外の場合は、スタック内の次の層に呼び出しを代行させます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">スタックの最下位に達しても要求されたオブジェクトをサポートするチャネル層がない場合、メソッドは、<ph id="ph1">`null`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The following code illustrates how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> メソッドを実装する方法を次のコードに示します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、メッセージ エンコーダー ファクトリによって生成されるメッセージ エンコーダーが処理できるメッセージ バージョンを取得または設定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageVersion" /&gt;</ph> used by the encoders produced by the message encoder factory.</source>
          <target state="translated">メッセージ エンコーダー ファクトリによって生成されるエンコーダーが使用する <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageVersion" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>When binding elements are asked to process a message that has a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> not returned by this property, it should throw an exception.</source>
          <target state="translated">バインド要素は、このプロパティによって返されない <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> を持つメッセージを処理するよう要求された場合、例外をスローする必要があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>The following code illustrates how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A&gt;</ph> property:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A&gt;</ph> プロパティを実装する方法を次のコードに示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>