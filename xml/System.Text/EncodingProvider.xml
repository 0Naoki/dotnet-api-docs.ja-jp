<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dd8164857fc0ee882ea5619b0174b55570de658" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36407725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>特定のプラットフォームで利用できないエンコードを提供する、エンコーディング プロバイダーの基底クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンコーディング プロバイダーは、それ以外の場合は、特定のターゲット プラットフォームで利用できないエンコードを提供します。  
  
 Windows デスクトップ上の .NET Framework には、多くの文字エンコーディング、およびコード ページがサポートしています。 呼び出して、Windows デスクトップで、.NET Framework で利用可能なエンコーディングの完全な一覧を取得することができます、<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>メソッドです。 .NET core では、その一方で、既定ではエンコードをサポートのみ次。  
  
-   ASCII (コード ページ 20127) によって返される、<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>プロパティです。  
  
-   ISO 8859-1 (コード ページ 28591)。  
  
-   Utf-7 (コード ページ 65000) によって返される、<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>プロパティです。  
  
-   Utf-8 (コード ページ 65001) によって返される、<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティです。  
  
-   Utf-16 と UTF 16LE (コード ページ 1200) によって返される、<xref:System.Text.Encoding.Unicode%2A>プロパティです。  
  
-   UTF-16BE (コード ページ 1201) が呼び出すことによってインスタンス化する、<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>または<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>を持つコンス トラクター、`bigEndian`値`true`です。  
  
-   Utf-32 と UTF-32LE (コード ページ 12000) によって返される、<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>プロパティです。  
  
-   UTF-32BE (コード ページ 12001) が呼び出すことによってインスタンス化する、<xref:System.Text.UTF32Encoding>コンス トラクターを持つ、`bigEndian`パラメーター値を指定するの`true`メソッドの呼び出しで。  
  
 .NET Framework 4.6 以降で<xref:System.Text.EncodingProvider>により利用できなくなった場合は、基本クラスは、.NET Framework に利用可能なエンコーディング。 これには、次の手順が含まれます。  
  
1.  サブクラスを定義する<xref:System.Text.EncodingProvider>、2 つの抽象オーバーライド<xref:System.Text.EncodingProvider.GetEncoding%2A>オーバー ロード、<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>と<xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>です。 これらのオーバー ロードでは、それ以外の場合、サポートされていないコード ページ id と名前によるのエンコーディングを返します。 エンコードの場合、既定値を返すに選択することもできます。 なお、 <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> 0 の引数を持つメソッドが呼び出されます。  
  
2.  必要に応じてオーバーライドできます仮想<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>と<xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>メソッドです。 ほとんどの場合、この必要はありません、基本クラスは、既定の実装を提供するためです。  
  
3.  渡す、<xref:System.Text.EncodingProvider>インスタンスを<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>で指定されたエンコーディングを作成するメソッド、<xref:System.Text.EncodingProvider>共通言語ランタイムを使用できるオブジェクト。  
  
4.  呼び出す、<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>エンコーディングを取得するオーバー ロードします。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> 、対応するメソッドを呼び出す<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>を要求されたエンコーディングが指定できるかどうかを判断します。  
  
 .NET Framework クラス ライブラリは、1 つの静的プロパティ<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>を返す、<xref:System.Text.EncodingProvider>エンコーディングの完全なセットを提供するデスクトップの .NET Framework クラス ライブラリに使用できるオブジェクト[!INCLUDE[net_core](~/includes/net-core-md.md)]アプリケーションです。 さらから派生することができます、<xref:System.Text.EncodingProvider>独自のエンコードを使用できるようにするクラス。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Text.EncodingProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>エンコーディングを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">要求されたエンコーディングのコード ページ ID。</param>
        <summary>指定したコード ページ ID に関連付けられたエンコーディングを返します。</summary>
        <returns>指定されたコード ページに関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="codepage" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a>継承時の注意

オーバーライドする、 [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<xref:System.Text.EncodingProvider>サブクラスです。 ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) 、メソッド、メソッドは成功、`codepage`登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。 [なし] は有効なエンコーディングを返す場合、 [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。`codepage`です。 このため場合、`codepage`識別子ではない、コード ページ エンコーディングのサポートするメソッドが返す必要があります`null`; が例外をスローする必要がありますしません。
        
場合に返す既定のコード ページ選択することもできます。 注の値、`codepage`引数が 0 です。

## <a name="notes-to-callers"></a>呼び出し時の注意
        
このメソッドは、 [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>)メソッドです。 ユーザー コードから直接いない呼び出す必要があります。

        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする、<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<see cref="T:System.Text.EncodingProvider" />サブクラスです。ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> 、メソッド、メソッドは成功、<paramref name="codepage" />登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。[なし] は有効なエンコーディングを返す場合、<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<paramref name="codepage" />です。このため場合、<paramref name="codepage" />識別子ではない、コード ページ エンコーディングのサポートするメソッドが返す必要があります<see langword="null" />; が例外をスローする必要がありますしません。</para>
        </block>
        <block subset="none" type="usage">
          <para>このメソッドは、<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />メソッドです。ユーザー コードから直接いない呼び出す必要があります。</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要求されたエンコーディングの名前。</param>
        <summary>指定した名前のエンコーディングを返します。</summary>
        <returns>指定された名前に関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="name" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a>継承時の注意 
                  
オーバーライドする、 [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<xref:System.Text.EncodingProvider>サブクラスです。 ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) 、メソッド、メソッドは成功、`name`登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての引数。 [なし] は有効なエンコーディングを返す場合、 [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)メソッドが、その名前は、キャッシュされたエンコードを取得しようとしています。`name`です。 このため場合、`name`メソッドが返す必要があります、サポートするエンコードの名ではなく`null`です。 メソッドが例外をスローする必要がありますだけ大文字と小文字が場合`name`は`null`します。

## <a name="notes-to-callers"></a>呼び出し時の注意

このメソッドは、 [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>)メソッドです。 ユーザー コードから直接いない呼び出す必要があります。
        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする、<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<see cref="T:System.Text.EncodingProvider" />サブクラスです。ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> 、メソッド、メソッドは成功、<paramref name="name" />登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての引数。[なし] は有効なエンコーディングを返す場合、<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />メソッドが、その名前は、キャッシュされたエンコードを取得しようとしています。<paramref name="name" />です。このため場合、<paramref name="name" />メソッドが返す必要があります、サポートするエンコードの名ではなく<see langword="null" />です。メソッドが例外をスローする必要がありますだけ大文字と小文字が場合<paramref name="name" />は<see langword="null" />します。</para>
        </block>
        <block subset="none" type="usage">
          <para>このメソッドは、<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />メソッドです。ユーザー コードから直接いない呼び出す必要があります。</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">要求されたエンコーディングのコード ページ ID。</param>
        <param name="encoderFallback">このエンコーディングで文字をエンコードできない場合にエラー処理プロシージャを提供するオブジェクト。</param>
        <param name="decoderFallback">このエンコーディングでバイト シーケンスをデコードできない場合にエラー処理プロシージャを提供するオブジェクト。</param>
        <summary>指定したコード ページ ID に関連付けられたエンコーディングを返します。 パラメーターには、エンコードできない文字とデコードできないバイト シーケンスのためのエラー ハンドラーを指定します。</summary>
        <returns>指定されたコード ページに関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="codepage" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `encoderFallback`と`decoderFallback`パラメーターは、バイト シーケンスを文字に変換できないエンコーダーまたはデコーダーがバイト シーケンスを文字に変換できないことに使用されるフォールバック ストラテジを定義するオブジェクト。 .NET Framework には、次のフォールバック メカニズムが用意されています。  
  
-   例外フォールバックします。 場合、`encoderFallback`引数のインスタンスには、 <xref:System.Text.EncoderExceptionFallback>、または`decoderExceptionFallback`引数のインスタンスには、 <xref:System.Text.DecoderExceptionFallback>、エンコード方式は、文字をエンコードすることはできません、およびデコーディングのメソッドは例外をスロー バイト場合に例外をスローシーケンスをデコードすることはできません。  
  
-   置換フォールバックします。 場合、`encoderFallback`引数のインスタンスには、 <xref:System.Text.EncoderReplacementFallback>、または`decoderExceptionFallback`引数のインスタンスには、 <xref:System.Text.DecoderReplacementFallback>、エンコードとデコード メソッドをエンコードできない文字を置換文字列に置き換えるし、バイト シーケンスにすることはできませんデコードします。 置換文字は、既定のコンス トラクターを呼び出すことにより、置換フォールバック オブジェクトがインスタンス化される場合、"?"。 呼び出す場合は、<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>または<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、置換文字列を指定することができます。  
  
-   最適フォールバックはします。 派生させることができます、<xref:System.Text.EncoderFallback>または<xref:System.Text.DecoderFallback>最適交換機構を実装するクラス。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>このメソッドを呼び出すの実装を使用しているため、<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />メソッドがありませんそれをオーバーライドします。ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 、メソッド、メソッドは成功、<paramref name="codepage" />登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。[なし] は有効なエンコーディングを返す場合、<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<paramref name="codepage" />です。このためをオーバーライドすることを選択する場合、<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />メソッド オーバーライドが返す必要があります<see langword="null" />場合<paramref name="codepage" />エンコーディングのコード ページ識別子ではないことをサポートする以外の場合は例外をスローする必要がありますされません。</para>
        </block>
        <block subset="none" type="usage">
          <para>このメソッドは、<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />メソッドです。ユーザー コードから直接いない呼び出す必要があります。</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">使用するエンコーディングの名前。</param>
        <param name="encoderFallback">このエンコーディングで文字をエンコードできない場合にエラー処理プロシージャを提供するオブジェクト。</param>
        <param name="decoderFallback">現在のエンコーディングでバイト シーケンスをデコードできない場合にエラー処理プロシージャを提供するオブジェクト。</param>
        <summary>指定した名前に関連付けられたエンコーディングを返します。 パラメーターには、エンコードできない文字とデコードできないバイト シーケンスのためのエラー ハンドラーを指定します。</summary>
        <returns>指定された名前に関連付けられたエンコーディング。または、この <see cref="T:System.Text.EncodingProvider" /> が <paramref name="name" /> に対応する有効なエンコーディングを返すことができない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `encoderFallback`と`decoderFallback`パラメーターは、バイト シーケンスを文字に変換できないエンコーダーまたはデコーダーがバイト シーケンスを文字に変換できないことに使用されるフォールバック ストラテジを定義するオブジェクト。 .NET Framework には、次のフォールバック メカニズムが用意されています。  
  
-   例外フォールバックします。 場合、`encoderFallback`引数のインスタンスには、 <xref:System.Text.EncoderExceptionFallback>、または`decoderExceptionFallback`引数のインスタンスには、 <xref:System.Text.DecoderExceptionFallback>、エンコード方式は、文字をエンコードすることはできません、およびデコーディングのメソッドは例外をスロー バイト場合に例外をスローシーケンスをデコードすることはできません。  
  
-   置換フォールバックします。 場合、`encoderFallback`引数のインスタンスには、 <xref:System.Text.EncoderReplacementFallback>、または`decoderExceptionFallback`引数のインスタンスには、 <xref:System.Text.DecoderReplacementFallback>、エンコードとデコード メソッドをエンコードできない文字を置換文字列に置き換えるし、バイト シーケンスにすることはできませんデコードします。 置換文字は、既定のコンス トラクターを呼び出すことにより、置換フォールバック オブジェクトがインスタンス化される場合、"?"。 呼び出す場合は、<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>または<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、置換文字列を指定することができます。  
  
-   最適フォールバックはします。 派生させることができます、<xref:System.Text.EncoderFallback>または<xref:System.Text.DecoderFallback>最適交換機構を実装するクラス。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>このメソッドを呼び出すの実装を使用しているため、<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />メソッドがありませんそれをオーバーライドします。ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> 、メソッド、メソッドは成功、<paramref name="codepage" />登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。[なし] は有効なエンコーディングを返す場合、<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<paramref name="codepage" />です。このためをオーバーライドすることを選択する場合、<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />メソッド オーバーライドが返す必要があります<see langword="null" />場合<paramref name="codepage" />エンコーディングのコード ページ識別子ではないことをサポートする以外の場合は例外をスローする必要がありますされません。</para>
        </block>
        <block subset="none" type="usage">
          <para>このメソッドは、<see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />メソッドです。ユーザー コードから直接いない呼び出す必要があります。</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>