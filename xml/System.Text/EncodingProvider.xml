<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncodingProvider.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5213b813ec5e5a38a3816aedc55e2d6e2e5a7636c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">213b813ec5e5a38a3816aedc55e2d6e2e5a7636c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</source>
          <target state="translated">特定のプラットフォームで利用できないエンコードを提供する、エンコーディング プロバイダーの基底クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>An encoding provider supplies encodings that are not otherwise available on a particular target platform.</source>
          <target state="translated">エンコーディング プロバイダーは、それ以外の場合は、特定のターゲット プラットフォームで利用できないエンコードを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
          <target state="translated">Windows デスクトップ上の .NET Framework には、多くの文字エンコーディング、およびコード ページがサポートしています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">呼び出して、Windows デスクトップで、.NET Framework で利用可能なエンコーディングの完全な一覧を取得することができます、<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>.NET Core, on the other hand, by default supports only the following encodings:</source>
          <target state="translated">.NET core では、その一方で、既定ではエンコードをサポートのみ次。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII (コード ページ 20127) によって返される、<ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">ISO 8859-1 (コード ページ 28591)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-7 (コード ページ 65000) によって返される、<ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-8 (コード ページ 65001) によって返される、<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.</source>
          <target state="translated">Utf-16 と UTF 16LE (コード ページ 1200) によって返される、<ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">UTF-16BE (コード ページ 1201) が呼び出すことによってインスタンス化する、<ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>を持つコンス トラクター、<ph id="ph3">`bigEndian`</ph>値<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-32 と UTF-32LE (コード ページ 12000) によって返される、<ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">UTF-32BE (コード ページ 12001) が呼び出すことによってインスタンス化する、<ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph>コンス トラクターを持つ、<ph id="ph2">`bigEndian`</ph>パラメーター値を指定するの<ph id="ph3">`true`</ph>メソッドの呼び出しで。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Starting with the .NET Framework 4.6, <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</source>
          <target state="translated">.NET Framework 4.6 以降で<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>により利用できなくなった場合は、基本クラスは、.NET Framework に利用可能なエンコーディング。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>This involves the following steps:</source>
          <target state="translated">これには、次の手順が含まれます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Define a subclass of <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</source>
          <target state="translated">サブクラスを定義する<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>、2 つの抽象オーバーライド<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph>オーバー ロード、<ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph>と<ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>These overloads return the otherwise unsupported encoding by code page identifier and by name.</source>
          <target state="translated">これらのオーバー ロードでは、それ以外の場合、サポートされていないコード ページ id と名前によるのエンコーディングを返します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Note that you can also choose to return a default encoding if the <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> method is called with an argument of 0.</source>
          <target state="translated">エンコードの場合、既定値を返すに選択することもできます。 なお、 <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> 0 の引数を持つメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Optionally, you can override the virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.</source>
          <target state="translated">必要に応じてオーバーライドできます仮想<ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In most cases, this is not necessary, since the base class provides a default implementation.</source>
          <target state="translated">ほとんどの場合、この必要はありません、基本クラスは、既定の実装を提供するためです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
          <target state="translated">渡す、<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>インスタンスを<ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph>で指定されたエンコーディングを作成するメソッド、<ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph>共通言語ランタイムを使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overload to retrieve the encoding.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>エンコーディングを取得するオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> to determine whether it can supply the requested encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 、対応するメソッドを呼び出す<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>を要求されたエンコーディングが指定できるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework Class Library provides one static property, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>, that returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.</source>
          <target state="translated">.NET Framework クラス ライブラリは、1 つの静的プロパティ<ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>を返す、<ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph>エンコーディングの完全なセットを提供するデスクトップの .NET Framework クラス ライブラリに使用できるオブジェクト<ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>アプリケーションです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In addition, you can derive from the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.</source>
          <target state="translated">さらから派生することができます、<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>独自のエンコードを使用できるようにするクラス。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Returns an encoding.</source>
          <target state="translated">エンコーディングを返します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">要求されたエンコーディングのコード ページ ID。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">指定したコード ページ ID に関連付けられたエンコーディングを返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">指定されたコード ページに関連付けられたエンコーディング。または、この <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> が <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> に対応する有効なエンコーディングを返すことができない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to inheritors</source>
          <target state="translated">継承時の注意</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">オーバーライドする、 <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>サブクラスです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method, the method passes the <ph id="ph1">`codepage`</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> 、メソッド、メソッドは成功、<ph id="ph1">`codepage`</ph>登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph1">`codepage`</ph>.</source>
          <target state="translated">[なし] は有効なエンコーディングを返す場合、 <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<ph id="ph1">`codepage`</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">`codepage`</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">`null`</ph>; it should never throw an exception.</source>
          <target state="translated">このため場合、<ph id="ph1">`codepage`</ph>識別子ではない、コード ページ エンコーディングのサポートするメソッドが返す必要があります<ph id="ph2">`null`</ph>; が例外をスローする必要がありますしません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Note that you can also choose to return a default code page if the value of the <ph id="ph1">`codepage`</ph> argument is 0.</source>
          <target state="translated">場合に返す既定のコード ページ選択することもできます。 注の値、<ph id="ph1">`codepage`</ph>引数が 0 です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to callers</source>
          <target state="translated">呼び出し時の注意</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> method.</source>
          <target state="translated">このメソッドは、 <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">ユーザー コードから直接いない呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">オーバーライドする、<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph>エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>サブクラスです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> 、メソッド、メソッドは成功、<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">[なし] は有効なエンコーディングを返す場合、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>; it should never throw an exception.</source>
          <target state="translated">このため場合、<ph id="ph1">&lt;paramref name="codepage" /&gt;</ph>識別子ではない、コード ページ エンコーディングのサポートするメソッドが返す必要があります<ph id="ph2">&lt;see langword="null" /&gt;</ph>; が例外をスローする必要がありますしません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">ユーザー コードから直接いない呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The name of the requested encoding.</source>
          <target state="translated">要求されたエンコーディングの名前。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Returns the encoding with the specified name.</source>
          <target state="translated">指定した名前のエンコーディングを返します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">指定された名前に関連付けられたエンコーディング。または、この <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> が <ph id="ph3">&lt;paramref name="name" /&gt;</ph> に対応する有効なエンコーディングを返すことができない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to inheritors</source>
          <target state="translated">継承時の注意</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">オーバーライドする、 <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>サブクラスです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method, the method passes the <ph id="ph1">`name`</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> 、メソッド、メソッドは成功、<ph id="ph1">`name`</ph>登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての引数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method attempts to retrieve a cached encoding whose name is <ph id="ph1">`name`</ph>.</source>
          <target state="translated">[なし] は有効なエンコーディングを返す場合、 <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>メソッドが、その名前は、キャッシュされたエンコードを取得しようとしています。<ph id="ph1">`name`</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">`name`</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">このため場合、<ph id="ph1">`name`</ph>メソッドが返す必要があります、サポートするエンコードの名ではなく<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">メソッドが例外をスローする必要がありますだけ大文字と小文字が場合<ph id="ph1">`name`</ph>は<ph id="ph2">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to callers</source>
          <target state="translated">呼び出し時の注意</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> method.</source>
          <target state="translated">このメソッドは、 <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">ユーザー コードから直接いない呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">オーバーライドする、<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph>エンコーディングを返すメソッドまたはによってサポートされているエンコーディング、<ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>サブクラスです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> 、メソッド、メソッドは成功、<ph id="ph2">&lt;paramref name="name" /&gt;</ph>登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての引数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method attempts to retrieve a cached encoding whose name is <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">[なし] は有効なエンコーディングを返す場合、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>メソッドが、その名前は、キャッシュされたエンコードを取得しようとしています。<ph id="ph2">&lt;paramref name="name" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このため場合、<ph id="ph1">&lt;paramref name="name" /&gt;</ph>メソッドが返す必要があります、サポートするエンコードの名ではなく<ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">メソッドが例外をスローする必要がありますだけ大文字と小文字が場合<ph id="ph1">&lt;paramref name="name" /&gt;</ph>は<ph id="ph2">&lt;see langword="null" /&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">ユーザー コードから直接いない呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">要求されたエンコーディングのコード ページ ID。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">このエンコーディングで文字をエンコードできない場合にエラー処理プロシージャを提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</source>
          <target state="translated">このエンコーディングでバイト シーケンスをデコードできない場合にエラー処理プロシージャを提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">指定したコード ページ ID に関連付けられたエンコーディングを返します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">パラメーターには、エンコードできない文字とデコードできないバイト シーケンスのためのエラー ハンドラーを指定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">指定されたコード ページに関連付けられたエンコーディング。または、この <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> が <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> に対応する有効なエンコーディングを返すことができない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph>と<ph id="ph2">`decoderFallback`</ph>パラメーターは、バイト シーケンスを文字に変換できないエンコーダーまたはデコーダーがバイト シーケンスを文字に変換できないことに使用されるフォールバック ストラテジを定義するオブジェクト。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework には、次のフォールバック メカニズムが用意されています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">例外フォールバックします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">場合、<ph id="ph1">`encoderFallback`</ph>引数のインスタンスには、 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>、または<ph id="ph3">`decoderExceptionFallback`</ph>引数のインスタンスには、 <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>、エンコード方式は、文字をエンコードすることはできません、およびデコーディングのメソッドは、バイト シーケンスをデコードできない場合に例外をスローする場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">置換フォールバックします。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">場合、<ph id="ph1">`encoderFallback`</ph>引数のインスタンスには、 <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>、または<ph id="ph3">`decoderExceptionFallback`</ph>引数のインスタンスには、 <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>、エンコードとデコード メソッドをエンコードできない文字を置換文字列に置き換えるし、バイト シーケンスをデコードすることはできません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">置換文字は、既定のコンス トラクターを呼び出すことにより、置換フォールバック オブジェクトがインスタンス化される場合、"?"。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">呼び出す場合は、<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>コンス トラクター、置換文字列を指定することができます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">最適フォールバックはします。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">派生させることができます、<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>最適交換機構を実装するクラス。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">このメソッドを呼び出すの実装を使用しているため、<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph>メソッドがありませんそれをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 、メソッド、メソッドは成功、<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">[なし] は有効なエンコーディングを返す場合、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">このためをオーバーライドすることを選択する場合、<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>メソッド オーバーライドが返す必要があります<ph id="ph2">&lt;see langword="null" /&gt;</ph>場合<ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>エンコーディングのコード ページ識別子ではないことをサポートする以外の場合は例外をスローする必要がありますされません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">ユーザー コードから直接いない呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The name of the preferred encoding.</source>
          <target state="translated">使用するエンコーディングの名前。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">このエンコーディングで文字をエンコードできない場合にエラー処理プロシージャを提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</source>
          <target state="translated">現在のエンコーディングでバイト シーケンスをデコードできない場合にエラー処理プロシージャを提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified name.</source>
          <target state="translated">指定した名前に関連付けられたエンコーディングを返します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">パラメーターには、エンコードできない文字とデコードできないバイト シーケンスのためのエラー ハンドラーを指定します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">指定された名前に関連付けられたエンコーディング。または、この <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> が <ph id="ph3">&lt;paramref name="name" /&gt;</ph> に対応する有効なエンコーディングを返すことができない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph>と<ph id="ph2">`decoderFallback`</ph>パラメーターは、バイト シーケンスを文字に変換できないエンコーダーまたはデコーダーがバイト シーケンスを文字に変換できないことに使用されるフォールバック ストラテジを定義するオブジェクト。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework には、次のフォールバック メカニズムが用意されています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">例外フォールバックします。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">場合、<ph id="ph1">`encoderFallback`</ph>引数のインスタンスには、 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>、または<ph id="ph3">`decoderExceptionFallback`</ph>引数のインスタンスには、 <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>、エンコード方式は、文字をエンコードすることはできません、およびデコーディングのメソッドは、バイト シーケンスをデコードできない場合に例外をスローする場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">置換フォールバックします。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">場合、<ph id="ph1">`encoderFallback`</ph>引数のインスタンスには、 <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>、または<ph id="ph3">`decoderExceptionFallback`</ph>引数のインスタンスには、 <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>、エンコードとデコード メソッドをエンコードできない文字を置換文字列に置き換えるし、バイト シーケンスをデコードすることはできません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">置換文字は、既定のコンス トラクターを呼び出すことにより、置換フォールバック オブジェクトがインスタンス化される場合、"?"。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">呼び出す場合は、<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>コンス トラクター、置換文字列を指定することができます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">最適フォールバックはします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">派生させることができます、<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>最適交換機構を実装するクラス。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">このメソッドを呼び出すの実装を使用しているため、<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph>メソッドがありませんそれをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">ユーザー コードが呼び出すことにより、エンコーディングを取得しようとしたときに、 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 、メソッド、メソッドは成功、<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>登録済みのエンコーディング プロバイダー 1 つは、有効なエンコーディングを返すまではすべての識別子。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">[なし] は有効なエンコーディングを返す場合、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>メソッドが、コード ページ識別子を持つは、キャッシュされたエンコーディングを取得しようとしています。<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">このためをオーバーライドすることを選択する場合、<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>メソッド オーバーライドが返す必要があります<ph id="ph2">&lt;see langword="null" /&gt;</ph>場合<ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>エンコーディングのコード ページ識別子ではないことをサポートする以外の場合は例外をスローする必要がありますされません。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">ユーザー コードから直接いない呼び出す必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>