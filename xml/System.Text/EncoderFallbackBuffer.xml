<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6da17ba94b085f8076678dc84ce0c5a10ed6e6cf" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46692208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0197b-101">入力文字をエンコードできない場合に、フォールバック ハンドラーがエンコーダーに代替文字列を返すことを可能にするためのバッファーを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0197b-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0197b-102">エンコーディングと Unicode 文字と、エンコード済みバイト シーケンス間のマッピングを定義します。</span><span class="sxs-lookup"><span data-stu-id="0197b-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="0197b-103">特定の文字のマッピングが定義されていない場合、入力文字を出力バイト シーケンスに変換、エンコードの操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0197b-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="0197b-104">.NET Framework では、エラー処理、変換を実行できない場合に、フォールバックと呼ばれるメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="0197b-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="0197b-105">すべてのエンコーダー フォールバック ハンドラーを次に実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="0197b-106">派生したクラスによって表されるエンコーダー フォールバック、<xref:System.Text.EncoderFallback>クラス。</span><span class="sxs-lookup"><span data-stu-id="0197b-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="0197b-107">エンコーダー フォールバック バッファーから派生した型によって表される、<xref:System.Text.EncoderFallbackBuffer>変換操作に文字列を返すことができるクラス。</span><span class="sxs-lookup"><span data-stu-id="0197b-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="0197b-108">フォールバックは、3 つの戦略を使用して、変換エラーを処理できます。</span><span class="sxs-lookup"><span data-stu-id="0197b-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="0197b-109">最適マッピングします。</span><span class="sxs-lookup"><span data-stu-id="0197b-109">Best-fit mapping.</span></span> <span data-ttu-id="0197b-110">エンコーダー フォールバック バッファーには、入力文字の近似値を表す文字列を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="0197b-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="0197b-111">.NET Framework には、最適のパブリックは行わない<xref:System.Text.EncoderFallbackBuffer>実装します。</span><span class="sxs-lookup"><span data-stu-id="0197b-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="0197b-112">置換します。</span><span class="sxs-lookup"><span data-stu-id="0197b-112">Replacement.</span></span> <span data-ttu-id="0197b-113">エンコーダー フォールバック バッファーは、疑問符 () などの文字列を返すことができます ("?")、文字をエンコードしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="0197b-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="0197b-114">.NET Framework で、<xref:System.Text.EncoderReplacementFallback>と<xref:System.Text.EncoderReplacementFallbackBuffer>クラス パブリック置換フォールバック バッファーの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="0197b-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="0197b-115">コンス トラクター、<xref:System.Text.EncoderReplacementFallback>クラスでは、置換文字列を定義することができます。</span><span class="sxs-lookup"><span data-stu-id="0197b-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="0197b-116">例外。</span><span class="sxs-lookup"><span data-stu-id="0197b-116">Exception.</span></span> <span data-ttu-id="0197b-117"><xref:System.Text.EncoderFallbackBuffer>実装文字はエンコードできないし、エンコード操作の終了を示す例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0197b-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="0197b-118">この場合、フォールバック ハンドラーが提供する必要があります、<xref:System.Text.EncoderFallbackBuffer>実装では、エンコーダーに文字列が返されませんが。</span><span class="sxs-lookup"><span data-stu-id="0197b-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="0197b-119">.NET Framework で、<xref:System.Text.EncoderExceptionFallback>と<xref:System.Text.EncoderExceptionFallbackBuffer>クラスをスローするパブリック例外フォールバックの実装を提供、<xref:System.Text.EncoderFallbackException>文字をエンコードことはできません。</span><span class="sxs-lookup"><span data-stu-id="0197b-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="0197b-120">内のバッファー、<xref:System.Text.EncoderFallbackBuffer>実装は、フォールバック エンコーダーへの応答のエンコーダーに返される文字列全体を表します。</span><span class="sxs-lookup"><span data-stu-id="0197b-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="0197b-121">一般に、実装には、返されるには、エンコーダーと残りの文字数に戻るには、次の文字のインデックスなどの状態情報も含まれます。</span><span class="sxs-lookup"><span data-stu-id="0197b-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="0197b-122"><xref:System.Text.EncoderFallbackBuffer>抽象クラスでは、派生クラスには、少なくとも次のメンバーを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="0197b-123">オーバー ロードされた<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>文字をエンコードできないときに、エンコーダーによって呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="0197b-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="0197b-124">エンコーダーは、2 つの情報をフォールバック バッファーの実装に渡します。 文字またはエンコードできないサロゲート ペアと、入力された文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="0197b-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="0197b-125">エンコーダー フォールバック例外ハンドラーでは、このメソッドで例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0197b-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="0197b-126">メソッドを返しますそれ以外の場合、 `true` 、フォールバックを提供する場合または`false`そうでない場合。</span><span class="sxs-lookup"><span data-stu-id="0197b-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="0197b-127"><xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>場合、エンコーダーによって繰り返し呼び出されるメソッド、<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>メソッドを返します。`true`します。</span><span class="sxs-lookup"><span data-stu-id="0197b-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="0197b-128">ハンドラーは、連続呼び出しで、バッファー内の各文字を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="0197b-129">それにより、すべての文字が返されますは、u+0000 を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="0197b-130">例外ハンドラーは、u+0000 を常に返します。</span><span class="sxs-lookup"><span data-stu-id="0197b-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="0197b-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A>メソッドでは、バッファー内の前の位置にポインターを移動しようとして、移動が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0197b-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="0197b-132">例外ハンドラーが常に返します`false`します。</span><span class="sxs-lookup"><span data-stu-id="0197b-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="0197b-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A>プロパティで、エンコーダーに返される残りの文字の数を示します。</span><span class="sxs-lookup"><span data-stu-id="0197b-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="0197b-134">例外フォールバック ハンドラーは、常に 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="0197b-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
      <span data-ttu-id="0197b-135">.NET Framework における文字エンコーディング</span>
      <span class="sxs-lookup">
        <span data-stu-id="0197b-135">Character Encoding in the .NET Framework</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29">
      <span data-ttu-id="0197b-136">ローマ音訳ユーティリティへのサンプル: キリル語</span>
      <span class="sxs-lookup">
        <span data-stu-id="0197b-136">Sample: Cyrillic to Roman Transliteration Utility</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0197b-137">
            <see cref="T:System.Text.EncoderFallbackBuffer" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-137">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0197b-138">元の入力をエンコードできないときに、代替文字列を使用できるか、または元の入力を無視するかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-138">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">
          <span data-ttu-id="0197b-139">入力文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-139">An input character.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0197b-140">入力バッファーにおける文字のインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-140">The index position of the character in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0197b-141">派生クラスでオーバーライドされた場合、指定した入力文字を処理するためのフォールバック バッファーを確保します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-141">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0197b-142">フォールバック バッファーが <paramref name="charUnknown" /> を処理できる場合は <see langword="true" />、フォールバック バッファーが <paramref name="charUnknown" /> を無視する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-142">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0197b-143"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>と<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>メソッドを呼び出す<xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29>不明なエンコードできない入力文字が発生した場合。</span><span class="sxs-lookup"><span data-stu-id="0197b-143">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="0197b-144">戻り値`true`フォールバック バッファーが呼び出し元のメソッドを呼び出すと、入力文字を処理できることを示します、<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>フォールバック バッファーの各文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="0197b-144">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="0197b-145">個々 の文字は処理されないため、<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>例外フォールバック ハンドラーのメソッドが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0197b-145">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">
          <span data-ttu-id="0197b-146">入力ペアの上位サロゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-146">The high surrogate of the input pair.</span>
          </span>
        </param>
        <param name="charUnknownLow">
          <span data-ttu-id="0197b-147">入力ペアの下位サロゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-147">The low surrogate of the input pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0197b-148">入力バッファーにおけるサロゲート ペアのインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-148">The index position of the surrogate pair in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0197b-149">派生クラスでオーバーライドされた場合、指定したサロゲート ペアを処理するためのフォールバック バッファーを確保します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-149">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0197b-150">フォールバック バッファーが <paramref name="charUnknownHigh" /> および <paramref name="charUnknownLow" /> を処理できる場合は <see langword="true" />。フォールバック バッファーがサロゲート ペアを無視する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-150">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0197b-151"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>と<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>メソッドを呼び出す<xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29>が入力サロゲート ペアが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="0197b-151">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="0197b-152">戻り値`true`フォールバック バッファーがサロゲート ペアは、これにより、呼び出し元のメソッドを呼び出すを処理できることを示します、<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>フォールバック バッファーの各文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="0197b-152">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="0197b-153">個々 の文字は処理されないため、<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>例外フォールバック ハンドラーのメソッドが例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0197b-153">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0197b-154">派生クラスでオーバーライドされた場合、フォールバック バッファーの次の文字を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-154">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0197b-155">フォールバック バッファーの次の文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-155">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0197b-156">エンコード操作の呼び出し、<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>メソッド、不明な文字またはサロゲート ペアの入力で操作が発生した場合。</span><span class="sxs-lookup"><span data-stu-id="0197b-156">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="0197b-157">置換フォールバック、if 場合など、<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>メソッドを返します。 `true`、代替文字列が存在し、不明な入力の代わりにエンコードすることができます。</span><span class="sxs-lookup"><span data-stu-id="0197b-157">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="0197b-158">エンコード操作の呼び出し、<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>メソッド繰り返し一度に置換文字列の 1 つの文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="0197b-158">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="0197b-159">エンコーダーにフォールバック バッファー内のすべての文字が返されたときに、<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>メソッドは u+0000 を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-159">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="0197b-160">例外フォールバック ハンドラーで、<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>メソッドは u+0000 を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-160">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0197b-161">派生クラスでオーバーライドされた場合、<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> メソッドに対する次の呼び出しで、データ バッファーにおける現在の文字位置の前の文字位置に移動します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-161">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0197b-162">
            <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> 操作が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-162">
              <see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0197b-163">例外フォールバック ハンドラーが返す必要があります`false`します。</span><span class="sxs-lookup"><span data-stu-id="0197b-163">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0197b-164">派生クラスでオーバーライドされた場合、現在の <see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクト内に処理されずに残っている文字数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-164">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0197b-165">現在のフォールバック バッファーに処理されずに残っている文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-165">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0197b-166"><xref:System.Text.EncoderFallbackBuffer.Fallback%2A>メソッドを返します。`true`場合<xref:System.Text.EncoderFallbackBuffer.Remaining%2A>は 0 以外の値です。</span><span class="sxs-lookup"><span data-stu-id="0197b-166">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="0197b-167">例外フォールバック ハンドラーで、<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>メソッドは 0 を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0197b-167">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0197b-168">このフォールバック バッファーに関連するすべてのデータおよびステータス情報を初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0197b-168">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0197b-169">呼び出した後、<see cref="M:System.Text.EncoderFallbackBuffer.Reset" />メソッド、<see cref="P:System.Text.EncoderFallbackBuffer.Remaining" />プロパティは、0 を返す必要があります、<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" />メソッドは u+0000 を返す必要があります、<see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" />メソッドが返す<see langword="false" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0197b-169">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>