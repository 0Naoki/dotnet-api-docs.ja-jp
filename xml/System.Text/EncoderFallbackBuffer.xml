<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncoderFallbackBuffer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5116c4743750d62c78bf7a85e6e5dff453828390b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">116c4743750d62c78bf7a85e6e5dff453828390b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</source>
          <target state="translated">入力文字をエンコードできない場合に、フォールバック ハンドラーがエンコーダーに代替文字列を返すことを可能にするためのバッファーを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</source>
          <target state="translated">エンコーディングは、Unicode 文字をエンコード済みバイト シーケンスの間のマッピングを定義します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</source>
          <target state="translated">特定の文字のマッピングが定義されていない場合、入力文字を出力バイト シーケンスに変換、エンコードの操作が失敗します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</source>
          <target state="translated">.NET Framework では、エラー処理、変換を実行できない場合に、フォールバックと呼ばれるメカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>All encoder fallback handlers must implement the following:</source>
          <target state="translated">すべてのエンコーダー フォールバック ハンドラーを次に実装する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoder fallback, which is represented by a class derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> class.</source>
          <target state="translated">派生したクラスによって表されるエンコーダー フォールバックにおいて、<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An encoder fallback buffer, which is represented by a type derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> class that can return a string to the conversion operation.</source>
          <target state="translated">エンコーダー フォールバック バッファーから派生した型で表される、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>変換演算に文字列を返すことができるクラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Fallbacks can use three strategies to handle conversion failures:</source>
          <target state="translated">フォールバックは、3 つの戦略を使用して、変換エラーを処理できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Best-fit mapping.</source>
          <target state="translated">最適マッピングします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The encoder fallback buffer can return a string that represents a close approximation to the input character.</source>
          <target state="translated">エンコーダー フォールバック バッファーには、入力文字に近い概数を表す文字列を返すことができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The .NET Framework does not provide a public best-fit <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation.</source>
          <target state="translated">.NET Framework では、最適パブリック達しません<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Replacement.</source>
          <target state="translated">置換します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</source>
          <target state="translated">エンコーダー フォールバック バッファーが疑問符 () などの文字列を返すことができます ("?") を示す文字をエンコードできませんでした。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> classes provide a public replacement fallback buffer implementation.</source>
          <target state="translated">.NET Framework で、<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph>クラス パブリック置換フォールバック バッファー実装を提供します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The constructor of the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> class enables you to define the replacement string.</source>
          <target state="translated">コンス トラクター、<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>クラスでは、置換文字列を定義することができます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Exception.</source>
          <target state="translated">例外。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>実装文字がエンコードできないエンコード操作の終了であることを示す例外をスローします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In this case, the fallback handler must provide an <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation, although it does not return a string to the encoder.</source>
          <target state="translated">ここでは、フォールバック ハンドラーが提供する必要があります、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>実装が、エンコーダーに文字列を返すことはできません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> classes provide a public exception fallback implementation that throws an <ph id="ph3">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> when a character cannot be encoded.</source>
          <target state="translated">.NET Framework で、<ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>クラスをスローするパブリック例外フォールバックの実装を提供する、<ph id="ph3">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>文字をエンコードできない場合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The buffer in an <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</source>
          <target state="translated">バッファー、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>実装は、フォールバック エンコーダーへの応答のエンコーダーに返される文字列全体を表します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</source>
          <target state="translated">一般に、実装には、返されるには、エンコーダーと残りの文字の数に戻るには次の文字のインデックスなど、状態の情報にはもが含まれます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> is an abstract class, it requires derived classes to implement the following members at a minimum:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>抽象クラスでは、派生クラスには、少なくとも次のメンバーを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The overloaded <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method, which is called by the encoder when it cannot encode a character.</source>
          <target state="translated">オーバー ロードされた<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>文字をエンコードできない場合に、エンコーダーによって呼び出されるメソッド。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</source>
          <target state="translated">エンコーダー フォールバック バッファーの実装に 2 つの情報を渡します。 文字またはエンコードできないサロゲート ペアと、入力内の文字のインデックス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In an encoder fallback exception handler, the exception is thrown in this method.</source>
          <target state="translated">エンコーダー フォールバック例外ハンドラーでは、このメソッドで例外がスローされます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Otherwise, the method returns <ph id="ph1">`true`</ph> if it provides a fallback, or <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">メソッドを返しますそれ以外の場合、 <ph id="ph1">`true`</ph> 、フォールバックを提供する場合または<ph id="ph2">`false`</ph>そうでない場合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method, which is called repeatedly by the encoder if the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph>場合に、エンコーダーによって繰り返し呼び出されるメソッド、<ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>メソッドを返します。<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>In successive calls, the handler should return each character in its buffer.</source>
          <target state="translated">ハンドラーは、連続呼び出しで、バッファー内の各文字を返す必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>When it has returned all characters, it should return U+0000.</source>
          <target state="translated">これには、すべての文字が返されて、u+0000 を返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An exception handler always returns U+0000.</source>
          <target state="translated">例外ハンドラーは、u+0000 を常に返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A&gt;</ph> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A&gt;</ph>メソッドは、バッファー内の前の位置にポインターを移動しようとする、移動が成功したかどうかを示します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An exception handler always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例外ハンドラーが常に返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph> property, which indicates the number of remaining characters to be returned to the encoder.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph>プロパティで、エンコーダーに返される残りの文字の数を示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallbackBuffer">
          <source>An exception fallback handler always returns zero.</source>
          <target state="translated">例外フォールバック ハンドラーは、常に 0 を返します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderFallbackBuffer">
          <source>Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</source>
          <target state="translated">元の入力をエンコードできないときに、代替文字列を使用できるか、または元の入力を無視するかを示します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>An input character.</source>
          <target state="translated">入力文字。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">入力バッファーにおける文字のインデックス位置。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、指定した入力文字を処理するためのフォールバック バッファーを確保します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="charUnknown" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores <ph id="ph4">&lt;paramref name="charUnknown" /&gt;</ph>.</source>
          <target state="translated">フォールバック バッファーが <ph id="ph2">&lt;paramref name="charUnknown" /&gt;</ph> を処理できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、フォールバック バッファーが <ph id="ph4">&lt;paramref name="charUnknown" /&gt;</ph> を無視する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29&gt;</ph> if they encounter an unknown input character that cannot be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>メソッド呼び出し<ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29&gt;</ph>不明なエンコードできない入力文字が発生した場合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the input character, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">戻り値の<ph id="ph1">`true`</ph>フォールバック バッファーが呼び出し元のメソッドを呼び出すと、入力文字を処理できることを示します、<ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph>フォールバック バッファーの各文字を取得します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>Because it does not process individual characters, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">個々 の文字は処理されないため、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>例外フォールバック ハンドラーのメソッドが例外をスローします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">入力ペアの上位サロゲート。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">入力ペアの下位サロゲート。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">入力バッファーにおけるサロゲート ペアのインデックス位置。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、指定したサロゲート ペアを処理するためのフォールバック バッファーを確保します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="charUnknownHigh" /&gt;</ph> and <ph id="ph3">&lt;paramref name="charUnknownLow" /&gt;</ph>; <ph id="ph4">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores the surrogate pair.</source>
          <target state="translated">フォールバック バッファーが <ph id="ph2">&lt;paramref name="charUnknownHigh" /&gt;</ph> および <ph id="ph3">&lt;paramref name="charUnknownLow" /&gt;</ph> を処理できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。フォールバック バッファーがサロゲート ペアを無視する場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29&gt;</ph> if they encounter a surrogate pair in their input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType&gt;</ph>メソッド呼び出し<ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29&gt;</ph>が入力のサロゲート ペアが発生した場合。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">戻り値の<ph id="ph1">`true`</ph>フォールバック バッファーがサロゲート ペアは、これにより、呼び出し元のメソッドを呼び出すを処理できることを示します、<ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph>フォールバック バッファーの各文字を取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Because it does not process individual characters, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">個々 の文字は処理されないため、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>例外フォールバック ハンドラーのメソッドが例外をスローします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>When overridden in a derived class, retrieves the next character in the fallback buffer.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、フォールバック バッファーの次の文字を取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>The next character in the fallback buffer.</source>
          <target state="translated">フォールバック バッファーの次の文字。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>An encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method if the operation encounters an unknown character or surrogate pair in the input.</source>
          <target state="translated">エンコード操作の呼び出し、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>メソッド操作では、不明な文字またはサロゲート ペアの入力が検出されるとします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>For example, in the case of a replacement fallback, if the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, a substitute string exists that can be encoded instead of the unknown input.</source>
          <target state="translated">置換フォールバック、if 場合など、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>メソッドを返します。 <ph id="ph2">`true`</ph>、代替文字列が存在し、不明な入力の代わりにエンコードすることができます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>The encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method repeatedly and obtains the substitute string one character at a time.</source>
          <target state="translated">エンコード操作の呼び出し、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph>メソッド繰り返しし、一度に置換文字列の 1 つの文字を取得します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>When all characters in the fallback buffer have been returned to the encoder, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">エンコーダーにフォールバック バッファー内のすべての文字が返されたときに、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph>メソッドは u+0000 を返す必要があります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.GetNextChar">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">例外フォールバック ハンドラーで、<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A&gt;</ph>メソッドは u+0000 を返す必要があります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.MovePrevious">
          <source>When overridden in a derived class, causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> method to access the data buffer character position that is prior to the current character position.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、<ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> メソッドに対する次の呼び出しで、データ バッファーにおける現在の文字位置の前の文字位置に移動します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.MovePrevious">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> operation was successful; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> 操作が正常に実行された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.MovePrevious">
          <source>An exception fallback handler should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">例外フォールバック ハンドラーが返す必要があります<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>When overridden in a derived class, gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、現在の <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> オブジェクト内に処理されずに残っている文字数を取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>The number of characters in the current fallback buffer that have not yet been processed.</source>
          <target state="translated">現在のフォールバック バッファーに処理されずに残っている文字数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if <ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph> is a nonzero value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer.Fallback%2A&gt;</ph>メソッドを返します。<ph id="ph2">`true`</ph>場合<ph id="ph3">&lt;xref:System.Text.EncoderFallbackBuffer.Remaining%2A&gt;</ph>は 0 以外の値。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallbackBuffer.Remaining">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> method should return zero.</source>
          <target state="translated">例外フォールバック ハンドラーで、<ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph>メソッドは 0 を返す必要があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallbackBuffer.Reset">
          <source>Initializes all data and state information pertaining to this fallback buffer.</source>
          <target state="translated">このフォールバック バッファーに関連するすべてのデータおよびステータス情報を初期化します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallbackBuffer.Reset">
          <source>After calling the <ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.Reset" /&gt;</ph> method, the <ph id="ph2">&lt;see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /&gt;</ph> property should return 0, the <ph id="ph3">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph> method should return U+0000, and the <ph id="ph4">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph> method should return <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">呼び出した後、<ph id="ph1">&lt;see cref="M:System.Text.EncoderFallbackBuffer.Reset" /&gt;</ph>メソッド、<ph id="ph2">&lt;see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /&gt;</ph>プロパティは、0 を返す必要があります、<ph id="ph3">&lt;see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /&gt;</ph>メソッドは u+0000 を返す必要があります、<ph id="ph4">&lt;see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /&gt;</ph>メソッドが返す<ph id="ph5">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>