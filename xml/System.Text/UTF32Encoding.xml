<Type Name="UTF32Encoding" FullName="System.Text.UTF32Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44cdc9308d3592a03e4e502e4a5a15d8db64a9eb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UTF32Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UTF32Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF32Encoding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UTF32Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF32Encoding sealed : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF32Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4837b-101">Represents a UTF-32 encoding of Unicode characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4837b-101">Represents a UTF-32 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-102">エンコーディングは、Unicode 文字のセットをバイト シーケンスに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="4837b-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="4837b-103">デコードは、エンコードされたバイトのシーケンスを Unicode 文字のセットに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="4837b-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="4837b-104">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)コード ポイント (数値) をすべてサポートされているスクリプト内の各文字を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="4837b-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="4837b-105">Unicode 変換形式 (UTF) は、そのコード ポイントをエンコードする方法です。</span><span class="sxs-lookup"><span data-stu-id="4837b-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="4837b-106">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)次 UTFs を使用します。</span><span class="sxs-lookup"><span data-stu-id="4837b-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="4837b-107">Utf-8、1 ~ 4 バイトのシーケンスとして各コード ポイントを表します。</span><span class="sxs-lookup"><span data-stu-id="4837b-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="4837b-108">Utf-16、1 ~ 2 の 16 ビット整数のシーケンスとして各コード ポイントを表します。</span><span class="sxs-lookup"><span data-stu-id="4837b-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="4837b-109">Utf-32、32 ビット整数値としては、各コード ポイントを表します。</span><span class="sxs-lookup"><span data-stu-id="4837b-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="4837b-110">詳細については、UTFs とでサポートされているその他のエンコーディングの<xref:System.Text>を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4837b-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see .</span></span>  
  
 <span data-ttu-id="4837b-111"><xref:System.Text.UTF32Encoding>クラスは、utf-32 エンコーディングを表します。</span><span class="sxs-lookup"><span data-stu-id="4837b-111">The <xref:System.Text.UTF32Encoding> class represents a UTF-32 encoding.</span></span> <span data-ttu-id="4837b-112">エンコーダーは、ビッグ エンディアン バイト順を使用できます (最上位バイト最初) またはリトル エンディアン バイト順 (最下位バイト最初)。</span><span class="sxs-lookup"><span data-stu-id="4837b-112">The encoder can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="4837b-113">たとえば、(コード ポイント u+0041) としてシリアル化 Latin Capital Letter 次のように 16 進数)。</span><span class="sxs-lookup"><span data-stu-id="4837b-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4837b-114">ビッグ エンディアン バイト順: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="4837b-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="4837b-115">リトル エンディアン バイト順: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="4837b-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="4837b-116">これは、ネイティブのバイト順を使用して Unicode 文字を格納する方が効率的です。</span><span class="sxs-lookup"><span data-stu-id="4837b-116">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="4837b-117">たとえば、Intel のコンピューターなど、リトル エンディアンのプラットフォームでリトル エンディアン バイト順を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4837b-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="4837b-118"><xref:System.Text.UTF32Encoding> Windows コード ページ (リトル エンディアン バイト順) 12000、12001 (ビッグ エンディアン バイト順) に対応します。</span><span class="sxs-lookup"><span data-stu-id="4837b-118"><xref:System.Text.UTF32Encoding> corresponds to the Windows code pages 12000 (little endian byte order) and 12001 (big endian byte order).</span></span> <span data-ttu-id="4837b-119">呼び出して、特定のアーキテクチャ「エンディアン」を指定できます、<xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4837b-120">必要に応じて、<xref:System.Text.UTF32Encoding>オブジェクトの先頭には、エンコード プロセスからバイトのシーケンスにバイトの配列をあるバイト順マーク (BOM) を提供します。</span><span class="sxs-lookup"><span data-stu-id="4837b-120">Optionally, the <xref:System.Text.UTF32Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4837b-121">Preamble、バイト順マーク (BOM) が含まれている場合、バイト順および変換形式またはバイト配列の UTF 決定デコーダーが役立ちます。</span><span class="sxs-lookup"><span data-stu-id="4837b-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF of a byte array.</span></span>  
  
 <span data-ttu-id="4837b-122">場合、 <xref:System.Text.UTF32Encoding> 、BOM を指定するインスタンスが構成されている、呼び出すことによって取得することができます、<xref:System.Text.UTF32Encoding.GetPreamble%2A>メソッドです。 空の配列を返しますそれ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="4837b-122">If the <xref:System.Text.UTF32Encoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="4837b-123">なお、場合でも、<xref:System.Text.UTF32Encoding>オブジェクトは、BOM のサポートのために構成されている、適切な; としてエンコードされたバイト ストリームの先頭の BOM を含める必要がありますのエンコード方法、<xref:System.Text.UTF32Encoding>クラスしないで自動的にします。</span><span class="sxs-lookup"><span data-stu-id="4837b-123">Note that, even if a <xref:System.Text.UTF32Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF32Encoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="4837b-124">エラーの検出を有効にして、クラスのインスタンスのセキュリティを強化するには、インスタンスを作成、<xref:System.Text.UTF32Encoding>オブジェクトを呼び出すことによって、<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>コンス トラクターと設定、`throwOnInvalidBytes`に渡す引数`true`です。</span><span class="sxs-lookup"><span data-stu-id="4837b-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UTF32Encoding> object by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="4837b-125">エラーの検出、無効な文字またはバイトのシーケンスを検出するメソッドがスローされます、<xref:System.ArgumentException>例外。</span><span class="sxs-lookup"><span data-stu-id="4837b-125">With error detection, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="4837b-126">エラーの検出、例外はスローされませんし、無効なシーケンスは、通常は無視されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="4837b-127">インスタンス化することができます、<xref:System.Text.UTF32Encoding>するかどうか、バイト順マーク (BOM) を提供する、ビッグ エンディアンまたはリトル エンディアン エンコードするかどうか、およびエラーの検出を有効にするかどうかに応じて、方法の数のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4837b-127">You can instantiate a <xref:System.Text.UTF32Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="4837b-128">次の表、<xref:System.Text.UTF32Encoding>コンス トラクターと<xref:System.Text.Encoding>を返すプロパティ、<xref:System.Text.UnicodeEncoding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4837b-128">The following table lists the <xref:System.Text.UTF32Encoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="4837b-129">メンバー</span><span class="sxs-lookup"><span data-stu-id="4837b-129">Member</span></span>|<span data-ttu-id="4837b-130">エンディアン</span><span class="sxs-lookup"><span data-stu-id="4837b-130">Endianness</span></span>|<span data-ttu-id="4837b-131">BOM</span><span class="sxs-lookup"><span data-stu-id="4837b-131">BOM</span></span>|<span data-ttu-id="4837b-132">エラーの検出</span><span class="sxs-lookup"><span data-stu-id="4837b-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>|<span data-ttu-id="4837b-133">リトル エンディアン</span><span class="sxs-lookup"><span data-stu-id="4837b-133">Little-endian</span></span>|<span data-ttu-id="4837b-134">[はい]</span><span class="sxs-lookup"><span data-stu-id="4837b-134">Yes</span></span>|<span data-ttu-id="4837b-135">なし (置換フォールバック)</span><span class="sxs-lookup"><span data-stu-id="4837b-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="4837b-136">リトル エンディアン</span><span class="sxs-lookup"><span data-stu-id="4837b-136">Little-endian</span></span>|<span data-ttu-id="4837b-137">[はい]</span><span class="sxs-lookup"><span data-stu-id="4837b-137">Yes</span></span>|<span data-ttu-id="4837b-138">なし (置換フォールバック)</span><span class="sxs-lookup"><span data-stu-id="4837b-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="4837b-139">構成可能</span><span class="sxs-lookup"><span data-stu-id="4837b-139">Configurable</span></span>|<span data-ttu-id="4837b-140">構成可能</span><span class="sxs-lookup"><span data-stu-id="4837b-140">Configurable</span></span>|<span data-ttu-id="4837b-141">なし (置換フォールバック)</span><span class="sxs-lookup"><span data-stu-id="4837b-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="4837b-142">構成可能</span><span class="sxs-lookup"><span data-stu-id="4837b-142">Configurable</span></span>|<span data-ttu-id="4837b-143">構成可能</span><span class="sxs-lookup"><span data-stu-id="4837b-143">Configurable</span></span>|<span data-ttu-id="4837b-144">構成可能</span><span class="sxs-lookup"><span data-stu-id="4837b-144">Configurable</span></span>|  
  
 <span data-ttu-id="4837b-145"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、Unicode 文字のセットをエンコードで発生するまでのバイト数を決定し、<xref:System.Text.UTF32Encoding.GetBytes%2A>メソッドでは、実際のエンコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-145">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF32Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="4837b-146">同様に、<xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドは、バイト シーケンスをデコード中に発生する文字数を決定し、<xref:System.Text.UTF32Encoding.GetChars%2A>と<xref:System.Text.UTF32Encoding.GetString%2A>メソッドでは、実際のデコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-146">Likewise, the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF32Encoding.GetChars%2A> and <xref:System.Text.UTF32Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="4837b-147">エンコーダーまたはデコーダーを使用して、エンコードまたはデコード (100万文字のエンコードされた文字列に 100,000 文字セグメント単位で) などの複数のブロックにわたるデータと状態情報を保存できるため、<xref:System.Text.UTF32Encoding.GetEncoder%2A>と<xref:System.Text.UTF32Encoding.GetDecoder%2A>プロパティそれぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-147">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF32Encoding.GetEncoder%2A> and <xref:System.Text.UTF32Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-148">次の例での動作<xref:System.Text.UTF32Encoding>オブジェクトとそうでないエラー検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="4837b-148">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding> objects with and without error detection enabled.</span></span> <span data-ttu-id="4837b-149">最後の 4 つのバイトを含むが、無効なサロゲート ペアを表すバイト配列が作成されます。上位サロゲート U + D8FF、U +0 01FF、低サロゲート (0xDC00 から 0 xdfff 経由) の範囲外であるが続きます。</span><span class="sxs-lookup"><span data-stu-id="4837b-149">It creates a byte array whose last four bytes represent an invalid surrogate pair; the high surrogate U+D8FF is followed by an U+01FF, which is outside the range of low surrogates (0xDC00 through 0xDFFF).</span></span> <span data-ttu-id="4837b-150">エラー検出 UTF32 デコーダーは、置換フォールバックを使用して、REPLACEMENT CHARACTER (U+FFFD) に無効なサロゲート ペアを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="4837b-150">Without error detection, the UTF32 decoder uses replacement fallback to replace the invalid surrogate pair with REPLACEMENT CHARACTER (U+FFFD).</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 <span data-ttu-id="4837b-151">次の例では、バイト配列に Unicode 文字の文字列をエンコードを使用して、<xref:System.Text.UTF32Encoding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4837b-151">The following example encodes a string of Unicode characters into a byte array by using a <xref:System.Text.UTF32Encoding> object.</span></span> <span data-ttu-id="4837b-152">バイト配列は、データの損失がないことを示すために文字列にデコードされます。</span><span class="sxs-lookup"><span data-stu-id="4837b-152">The byte array is then decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/snippet.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/snippet.vb#1)]  
  
 <span data-ttu-id="4837b-153">次の例は、ファイルにエンコードされたバイトを書き込みます、バイト順マーク (BOM) をバイト ストリームをプレフィックスする点を除いて、前の 1 つとして、同じ文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="4837b-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="4837b-154">これは、後、2 つの異なる方法でファイルを読み取ります: を使用してテキスト ファイルとして、<xref:System.IO.StreamReader>オブジェクトおよびバイナリ ファイルとして。</span><span class="sxs-lookup"><span data-stu-id="4837b-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="4837b-155">予想できるように、どちらの場合は、BOM 文字列に含める新しく読み取り。</span><span class="sxs-lookup"><span data-stu-id="4837b-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.class/cs/bom1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.class/vb/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Text.UnicodeEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4837b-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-156">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4837b-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-157">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-158">このコンス トラクターは、リトル エンディアン バイト順を使用して、Unicode バイト順マークを提供し、無効なエンコードが検出された場合、例外をスローしませんが、インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4837b-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-159">セキュリティ上の理由から呼び出すことによってエラー検出を有効にする必要があります、<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>コンス トラクターと設定、`throwOnInvalidCharacters`引数`true`です。</span><span class="sxs-lookup"><span data-stu-id="4837b-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-160">次の例の取得と、バイト順のマークを付けるさまざまな表示<xref:System.Text.UTF32Encoding>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4837b-160">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="4837b-161">
            <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-161">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="4837b-162">
            <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-162">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-163">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="4837b-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> method returns a Unicode Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-165">このコンス トラクターでは、無効なエンコードが検出されたときに例外をスローしないインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4837b-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-166">セキュリティ上の理由から呼び出すことによってエラー検出を有効にする必要があります、<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>コンス トラクターと設定、`throwOnInvalidCharacters`引数`true`です。</span><span class="sxs-lookup"><span data-stu-id="4837b-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-167">次の例の取得と、バイト順のマークを付けるさまざまな表示<xref:System.Text.UTF32Encoding>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4837b-167">The following example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF32Encoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidCharacters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF32Encoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF32Encoding : bool * bool * bool -&gt; System.Text.UTF32Encoding" Usage="new System.Text.UTF32Encoding (bigEndian, byteOrderMark, throwOnInvalidCharacters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidCharacters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="4837b-168">
            <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-168">
              <see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span>
          </span>
        </param>
        <param name="byteOrderMark">
          <span data-ttu-id="4837b-169">
            <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-169">
              <see langword="true" /> to specify that a Unicode byte order mark is provided; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidCharacters">
          <span data-ttu-id="4837b-170">
            <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-170">
              <see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-171">Initializes a new instance of the <see cref="T:System.Text.UTF32Encoding" /> class.</span>
          </span>
          <span data-ttu-id="4837b-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-172">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-173">場合`throwOnInvalidCharacters`は`true`、無効なバイト シーケンスを検出するためのメソッドをスロー<xref:System.ArgumentException?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-173">If `throwOnInvalidCharacters` is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4837b-174">それ以外の場合、メソッドが例外をスローしていないと、無効なシーケンスが無視されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-174">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-175">セキュリティ上の理由から呼び出すことによってエラー検出を有効にする必要があります、<xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29>コンス トラクターと設定、`throwOnInvalidCharacters`引数`true`です。</span><span class="sxs-lookup"><span data-stu-id="4837b-175">For security reasons, you should enable error detection by calling the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidCharacters` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-176">次の例での動作<xref:System.Text.UTF32Encoding>、両方とない場合のエラー検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="4837b-176">The following example demonstrates the behavior of <xref:System.Text.UTF32Encoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.ErrorDetection/VB/ErrorDetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF32Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4837b-177">The <see cref="T:System.Object" /> to compare with the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-177">The <see cref="T:System.Object" /> to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-178">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-179">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-179">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF32Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-180">2 つ<xref:System.Text.UTF32Encoding>オブジェクトは、以下の条件がすべて当てはまる場合、等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="4837b-180">Two <xref:System.Text.UTF32Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="4837b-181">両方のオブジェクトは、同じバイト順を使用します。</span><span class="sxs-lookup"><span data-stu-id="4837b-181">Both objects use the same byte order.</span></span>  
  
-   <span data-ttu-id="4837b-182">両方のオブジェクトでは、バイト順序マークを提供するかどうか。</span><span class="sxs-lookup"><span data-stu-id="4837b-182">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="4837b-183">両方のオブジェクトは、同じエンコーダー フォールバックを使用します。</span><span class="sxs-lookup"><span data-stu-id="4837b-183">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="4837b-184">両方のオブジェクトは、同じデコーダー フォールバックを使用します。</span><span class="sxs-lookup"><span data-stu-id="4837b-184">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-185">次の例<xref:System.Text.UTF32Encoding>オブジェクトを使用して別のパラメーターの値し、し、等しいかどうかをチェックしています。</span><span class="sxs-lookup"><span data-stu-id="4837b-185">The following example creates <xref:System.Text.UTF32Encoding> objects using different parameter values and then checks them for equality.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF32Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4837b-186">Calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-186">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF32Encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4837b-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-187">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-188">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-189">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-189">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-190">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-190">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-191">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-191">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4837b-192"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-192">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-193">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-193">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-194">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-194">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-195">ファイルまたはストリームとして保存するときに、エンコード済みバイトが正しくデコードするためには、プリアンブルでエンコードされたバイトのストリーム プレフィックスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-195">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-196">バイト ストリームの先頭の preamble を挿入する (など、一連のファイルに書き込まれるバイトの先頭) 開発者の責任は、preamble のバイト数がによって返される値に反映されません、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-196">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-197">次の例では、<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>と<xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29>文字列をエンコードするために必要なバイトの最大値と実際の数を計算する方法です。</span><span class="sxs-lookup"><span data-stu-id="4837b-197">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="4837b-198">実際のバイト ストリームにバイト オーダー マークの保存に必要なバイト数も表示されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-198">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-199">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-199">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-200">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-201">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4837b-203">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-203">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4837b-204">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-204">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-205">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-205">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-206">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-206">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-207">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-207">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-208">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-208">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="4837b-209"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-209">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-210">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-210">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-211">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-211">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-212">ファイルまたはストリームとして保存するときに、エンコード済みバイトが正しくデコードするためには、ストリーム、preamble でエンコードされたバイトのプレフィックスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-212">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-213">バイト ストリームの先頭に、preamble を挿入する (など、一連のファイルに書き込まれるバイトの先頭) 開発者の責任は、preamble のバイト数がによって返される値に反映されません、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-213">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-214">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-214">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-215">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-215">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-216">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-216">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-217">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-217">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-218">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-218">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4837b-219">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-219">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4837b-220">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-220">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF32Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4837b-221">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-221">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4837b-222">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-222">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4837b-223">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-223">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-224">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-224">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-225">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-225">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-226">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-226">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-227">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-227">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4837b-228"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-228">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-229">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-229">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-230">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-230">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-231">ファイルまたはストリームとして保存するときに、エンコード済みバイトが正しくデコードするためには、ストリーム、preamble でエンコードされたバイトのプレフィックスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-231">To ensure that the encoded bytes are decoded properly when they are saved as a file or a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-232">バイト ストリームの先頭に、preamble を挿入する (など、一連のファイルに書き込まれるバイトの先頭) 開発者の責任は、preamble のバイト数がによって返される値に反映されません、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-232">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-233">次の例は、配列ラテン文字の大文字と小文字および呼び出しは追加、<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>ラテン文字の小文字の文字をエンコードするために必要なバイト数を調べます。</span><span class="sxs-lookup"><span data-stu-id="4837b-233">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4837b-234">バイト順マークが追加された場合に必要なバイトの合計数と共に、この情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-234">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4837b-235">この番号によって返される値と比較してその、<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>メソッドで、ラテン文字の小文字の文字をエンコードするために必要なバイトの最大数を示します。</span><span class="sxs-lookup"><span data-stu-id="4837b-235">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="4837b-236">次の例は、ギリシャ語 (キリル) の文字と呼び出しの組み合わせを含む配列を設定、<xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>キリル文字をエンコードするために必要なバイト数を調べます。</span><span class="sxs-lookup"><span data-stu-id="4837b-236">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="4837b-237">バイト順マークが追加された場合に必要なバイトの合計数と共に、この情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-237">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="4837b-238">この番号によって返される値と比較してその、<xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>メソッドで、キリル文字をエンコードするために必要なバイトの最大数を示します。</span><span class="sxs-lookup"><span data-stu-id="4837b-238">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.Utf32Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-239">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-239">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-240">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-240">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-241">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-241">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4837b-242">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-242">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-243">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-243">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-244">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-244">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4837b-245">Encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-245">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4837b-246">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-246">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4837b-247">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-247">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4837b-248">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-248">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4837b-249">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-249">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-250">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-250">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-251">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-251">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-252">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-252">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-253">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-253">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4837b-254"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-254">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-255">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-255">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-256">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-256">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-257">ストリームから読み取られるデータなど、変換するデータは、シーケンシャル ブロック内でのみ使用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-257">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4837b-258">この場合、アプリケーションを使用してデータの量のより小さなブロックに分割する必要があることが非常に大きい場合、または、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.UTF32Encoding.GetDecoder%2A>メソッドまたは<xref:System.Text.UTF32Encoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-258">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-259">ファイルまたはストリームとして保存するときに、エンコード済みバイトが正しくデコードするためには、プリアンブルでエンコードされたバイトのストリーム プレフィックスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-259">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-260">バイト ストリームの先頭に、preamble を挿入する (など、一連のファイルに書き込まれるバイトの先頭) 開発者の責任は、します。</span><span class="sxs-lookup"><span data-stu-id="4837b-260">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4837b-261"><xref:System.Text.UTF32Encoding.GetBytes%2A>メソッドはエンコードされたバイトのシーケンスの先頭に preamble を追加しません。</span><span class="sxs-lookup"><span data-stu-id="4837b-261">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-262">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-262">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4837b-263">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-263">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-264">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-264">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4837b-266">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-266">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-267">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-267">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4837b-268">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-268">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4837b-269">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-269">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="4837b-270">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-270">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4837b-271">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-271">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4837b-272">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-272">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4837b-273">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-273">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4837b-274">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-274">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-275">Encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-275">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-276">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-276">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-277">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-277">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-278">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-278">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4837b-279"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-279">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-280">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-280">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-281">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-281">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-282">ストリームから読み取られるデータなど、変換するデータは、シーケンシャル ブロック内でのみ使用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-282">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4837b-283">この場合、アプリケーションを使用してデータの量のより小さなブロックに分割する必要があることが非常に大きい場合、または、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.UTF32Encoding.GetDecoder%2A>メソッドまたは<xref:System.Text.UTF32Encoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-283">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-284">ファイルまたはストリームとして保存するときに、エンコード済みバイトが正しくデコードするためには、プリアンブルでエンコードされたバイトのストリーム プレフィックスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-284">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-285">バイト ストリームの先頭に、preamble を挿入する (など、一連のファイルに書き込まれるバイトの先頭) 開発者の責任は、します。</span><span class="sxs-lookup"><span data-stu-id="4837b-285">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4837b-286"><xref:System.Text.UTF32Encoding.GetBytes%2A>メソッドはエンコードされたバイトのシーケンスの先頭に preamble を追加しません。</span><span class="sxs-lookup"><span data-stu-id="4837b-286">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-287">次の例は、文字配列から次の 3 つの文字をエンコードするために必要なバイト数を指定の文字をエンコードし、結果のバイト数を表示します。</span><span class="sxs-lookup"><span data-stu-id="4837b-287">The following example determines the number of bytes required to encode three characters from a character array, then encodes the characters and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_CharArr/VB/GetBytes_CharArr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-288">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-288">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4837b-289">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-289">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-290">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-290">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-291">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-291">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4837b-292">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-292">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-293">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-293">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4837b-294">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-294">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-295">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-295">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF32Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="4837b-296">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-296">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4837b-297">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-297">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4837b-298">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-298">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="4837b-299">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-299">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4837b-300">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-300">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-301">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-301">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-302">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-302">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-303">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-303">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-304">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-304">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4837b-305"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-305">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-306">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-306">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-307">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-307">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-308">ストリームから読み取られるデータなど、変換するデータは、シーケンシャル ブロック内でのみ使用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-308">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4837b-309">この場合、アプリケーションを使用してデータの量のより小さなブロックに分割する必要があることが非常に大きい場合、または、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.UTF32Encoding.GetDecoder%2A>メソッドまたは<xref:System.Text.UTF32Encoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-309">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-310">ファイルまたはストリームとして保存するときに、エンコード済みバイトが正しくデコードするためには、プリアンブルでエンコードされたバイトのストリーム プレフィックスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-310">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-311">バイト ストリームの先頭に、preamble を挿入する (など、一連のファイルに書き込まれるバイトの先頭) 開発者の責任は、します。</span><span class="sxs-lookup"><span data-stu-id="4837b-311">Inserting a preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="4837b-312"><xref:System.Text.UTF32Encoding.GetBytes%2A>メソッドはエンコードされたバイトのシーケンスの先頭に preamble を追加しません。</span><span class="sxs-lookup"><span data-stu-id="4837b-312">The <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-313">次の例は、文字列のエンコードに必要なバイト数を指定の文字列をエンコードし、結果のバイト数を表示します。</span><span class="sxs-lookup"><span data-stu-id="4837b-313">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-314">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-314">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4837b-315">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-315">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-316">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-316">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-317">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-317">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="4837b-318">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-318">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-319">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-319">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="4837b-320">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-320">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-321">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-321">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4837b-322">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-322">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4837b-323">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-323">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4837b-324">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-324">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-325">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-325">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-326">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-326">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-327"><xref:System.Text.UTF32Encoding.GetCharCount%2A> 必要な厳密な配列のサイズを計算、<xref:System.Text.UTF32Encoding.GetChars%2A>結果の文字を格納する方法です。</span><span class="sxs-lookup"><span data-stu-id="4837b-327"><xref:System.Text.UTF32Encoding.GetCharCount%2A> calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="4837b-328">配列の最大サイズを計算するには、呼び出し、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-328">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4837b-329"><xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-329">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-330">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-330">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-331">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-331">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-332">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-332">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-333">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-333">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-334">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-334">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-335">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-335">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4837b-336">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-336">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4837b-337">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-337">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4837b-338">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-338">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF32Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4837b-339">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-339">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4837b-340">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-340">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4837b-341">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-341">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-342">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-342">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-343">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-343">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-344"><xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドで必要な厳密な配列のサイズを計算、<xref:System.Text.UTF32Encoding.GetChars%2A>結果の文字を格納する方法です。</span><span class="sxs-lookup"><span data-stu-id="4837b-344">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.UTF32Encoding.GetChars%2A> method to store the resulting characters.</span></span> <span data-ttu-id="4837b-345">配列の最大サイズを計算するには、呼び出し、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-345">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4837b-346"><xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-346">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-347">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-347">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-348">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-348">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-349">次の例では、(バイト単位) の配列に文字列をエンコードし、その文字の配列にバイトをデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-349">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-350">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-350">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-351">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-351">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-352">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-352">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="4837b-353">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-353">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-354">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-354">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4837b-355">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-355">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF32Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4837b-356">Decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-356">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4837b-357">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-357">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4837b-358">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-358">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="4837b-359">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-359">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="4837b-360">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-360">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-361">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-361">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-362">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-362">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-363">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetChars%2A>結果の文字を格納する呼び出し、<xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-363">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="4837b-364">配列の最大サイズを計算するには、呼び出し、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-364">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4837b-365"><xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-365">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-366">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-366">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-367">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-367">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-368">デコードするバイトの範囲には、バイト順マーク (BOM) が含まれています。 バイト配列が BOM で非対応型のメソッドによって返される場合は、文字 U + FFFE はこのメソッドによって返される文字配列に含まれています。</span><span class="sxs-lookup"><span data-stu-id="4837b-368">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4837b-369">これを削除するには呼び出すことによって、<xref:System.String.TrimStart%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-369">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4837b-370">ストリームから読み取られるデータなど、変換するデータは、シーケンシャル ブロック内でのみ使用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-370">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4837b-371">この場合、アプリケーションを使用してデータの量のより小さなブロックに分割する必要があることが非常に大きい場合、または、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.UTF32Encoding.GetDecoder%2A>メソッドまたは<xref:System.Text.UTF32Encoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-371">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-372">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-372">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4837b-373">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-373">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-374">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-374">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="4837b-376">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-376">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4837b-377">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-377">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="4837b-378">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-378">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="4837b-379">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-379">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF32Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4837b-380">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-380">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="4837b-381">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-381">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="4837b-382">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-382">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="4837b-383">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-383">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="4837b-384">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-384">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-385">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-385">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-386">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-386">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-387">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetChars%2A>結果の文字を格納する呼び出し、<xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-387">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="4837b-388">配列の最大サイズを計算するには、呼び出し、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-388">To calculate the maximum array size, call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4837b-389"><xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-389">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-390">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-390">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-391">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-391">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-392">デコードするバイトの範囲には、バイト順マーク (BOM) が含まれています。 バイト配列が BOM で非対応型のメソッドによって返される場合は、文字 U + FFFE はこのメソッドによって返される文字配列に含まれています。</span><span class="sxs-lookup"><span data-stu-id="4837b-392">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4837b-393">これを削除するには呼び出すことによって、<xref:System.String.TrimStart%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-393">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4837b-394">ストリームから読み取られるデータなど、変換するデータは、シーケンシャル ブロック内でのみ使用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-394">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4837b-395">この場合、アプリケーションを使用してデータの量のより小さなブロックに分割する必要があることが非常に大きい場合、または、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.UTF32Encoding.GetDecoder%2A>メソッドまたは<xref:System.Text.UTF32Encoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-395">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application uses the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-396">次の例では、(バイト単位) の配列に文字列をエンコードし、その文字の配列にバイトをデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-396">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-397">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-397">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4837b-398">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-398">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-399">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-399">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-400">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-400">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="4837b-401">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-401">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="4837b-403">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-403">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4837b-404">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-404">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF32Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4837b-405">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-405">Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-406">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-406">A <see cref="T:System.Text.Decoder" /> that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-407"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>メソッドと同様の方法で、文字のシーケンシャル ブロックにバイトのシーケンシャル ブロックを変換する、<xref:System.Text.UTF32Encoding.GetChars%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-407">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF32Encoding.GetChars%2A> method.</span></span> <span data-ttu-id="4837b-408">ただし、<xref:System.Text.Decoder>のブロックをまたぐバイト シーケンスを正しくデコードすることができますのでの呼び出しの間の状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="4837b-408">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="4837b-409"><xref:System.Text.Decoder>もデータ ブロックの末尾にある末尾バイトを保持し、[次へ] のデコード操作で末尾バイトを使用します。</span><span class="sxs-lookup"><span data-stu-id="4837b-409">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="4837b-410">したがって、<xref:System.Text.UTF32Encoding.GetDecoder%2A>と<xref:System.Text.UTF32Encoding.GetEncoder%2A>の完全なデータ ストリームではなくデータ ブロックを頻繁にこれらの操作を処理するためにネットワーク転送、ファイル操作に便利です。</span><span class="sxs-lookup"><span data-stu-id="4837b-410">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4837b-411">エラーの検出が有効なかどうか、つまり、`throwOnInvalidCharacters`コンス トラクターのパラメーターに設定された`true`でエラーの検出が有効にも、<xref:System.Text.Decoder>このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-411">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="4837b-412">エラーの検出が有効にし、無効なシーケンスが発生した、デコーダーの状態が定義されていないと、処理が停止する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-412">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-413">次の例では、エンコーダーとデコーダーを使用して、(バイト単位) の配列に文字列をエンコードを文字の配列にバイトをデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-413">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF32Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4837b-414">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-414">Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-415">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-415">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-416"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType>メソッドと同様のバイト数のシーケンシャル ブロックに文字のシーケンシャル ブロックを変換する、<xref:System.Text.UTF32Encoding.GetBytes%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-416">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF32Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="4837b-417">ただし、<xref:System.Text.Encoder>のブロックをまたぐ文字シーケンスを正しくエンコードすることができますのでの呼び出しの間の状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="4837b-417">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="4837b-418"><xref:System.Text.Encoder>末尾が保存されますが、データ ブロックの最後の文字し、末尾の文字を使用して、次のエンコード操作もします。</span><span class="sxs-lookup"><span data-stu-id="4837b-418">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="4837b-419">たとえば、データ ブロック不一致上位サロゲートで終了し、[次へ] のデータ ブロックに下位サロゲートが一致する場合があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-419">For example, a data block might end with an unmatched high-surrogate, and the matching low-surrogate might be in the next data block.</span></span> <span data-ttu-id="4837b-420">したがって、<xref:System.Text.UTF32Encoding.GetDecoder%2A>と<xref:System.Text.UTF32Encoding.GetEncoder%2A>の完全なデータ ストリームではなくデータ ブロックを頻繁にこれらの操作を処理するためにネットワーク転送、ファイル操作に便利です。</span><span class="sxs-lookup"><span data-stu-id="4837b-420">Therefore, <xref:System.Text.UTF32Encoding.GetDecoder%2A> and <xref:System.Text.UTF32Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="4837b-421">エラーの検出が有効なかどうか、つまり、`throwOnInvalidCharacters`コンス トラクターのパラメーターに設定された`true`でエラーの検出が有効にも、<xref:System.Text.Encoder>このメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-421">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor was set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="4837b-422">エラーの検出が有効にし、無効なシーケンスが発生した、エンコーダーの状態が定義されていないと、処理が停止する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-422">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-423">次の例では、エンコーダーとデコーダーを使用して、(バイト単位) の配列に文字列をエンコードを文字の配列にバイトをデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-423">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.EncDec/VB/EncDec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF32Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4837b-424">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-424">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-425">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-425">The hash code for the current <see cref="T:System.Text.UTF32Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF32Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="4837b-426">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-426">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-427">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-427">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-428">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-428">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-429">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetBytes%2A>呼び出した結果のバイトを格納する、<xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-429">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="4837b-430">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-430">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="4837b-431"><xref:System.Text.UTF32Encoding.GetByteCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-431">The <xref:System.Text.UTF32Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-432"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> 現在選択されている最悪のケースを含め、最悪の番号は、<xref:System.Text.EncoderFallback>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-432"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="4837b-433">フォールバックがある可能性がある文字列で、選択されている場合<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>大きな値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-433">If a fallback is chosen with a potentially large string,  <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="4837b-434">ほとんどの場合は、このメソッドは、短い文字列では適切な数値を返します。</span><span class="sxs-lookup"><span data-stu-id="4837b-434">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="4837b-435">大きな文字列は、非常に大きなバッファーを使用してより適切なバッファーを超えているまれなケースでエラーをキャッチするかを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-435">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4837b-436">別のアプローチを検討してくださいを使用したい場合がありますも<xref:System.Text.UTF32Encoding.GetByteCount%2A>または<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-436">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4837b-437"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> リレーションシップを持たない<xref:System.Text.UTF32Encoding.GetChars%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-437"><xref:System.Text.UTF32Encoding.GetMaxByteCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetChars%2A>.</span></span> <span data-ttu-id="4837b-438">同様の機能で使用する必要がある場合<xref:System.Text.UTF32Encoding.GetChars%2A>を使用して<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-438">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetChars%2A>, use <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-439">`GetMaxByteCount(N)` 必ずしもと同じ値ではない`N* GetMaxByteCount(1)`です。</span><span class="sxs-lookup"><span data-stu-id="4837b-439">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-440">次の例は、文字列のエンコードに必要なバイト数を指定の文字列をエンコードし、結果のバイト数を表示します。</span><span class="sxs-lookup"><span data-stu-id="4837b-440">The following example determines the number of bytes required to encode a string, then encodes the string and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetBytes_String/VB/GetBytes_String.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-441">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-441">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-442">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-442">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="4837b-443">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-443">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF32Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="4837b-444">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-444">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-445">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-445">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-446">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-446">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-447">必要な厳密な配列のサイズを計算する<xref:System.Text.UTF32Encoding.GetChars%2A>呼び出した結果の文字を格納する、<xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-447">To calculate the exact array size required by <xref:System.Text.UTF32Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF32Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="4837b-448">最大配列サイズを計算するには、呼び出します、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-448">To calculate the maximum array size, you call the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="4837b-449"><xref:System.Text.UTF32Encoding.GetCharCount%2A>メソッドでは、メモリが少なく、通常が割り当てるときに、<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>メソッドは通常、速く実行します。</span><span class="sxs-lookup"><span data-stu-id="4837b-449">The <xref:System.Text.UTF32Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="4837b-450"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> 現在選択されている最悪のケースを含め、最悪の番号は、<xref:System.Text.DecoderFallback>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-450"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="4837b-451">フォールバックがある可能性がある文字列で、選択されている場合<xref:System.Text.UTF32Encoding.GetMaxCharCount%2A>大きな値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-451">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="4837b-452">ほとんどの場合は、このメソッドは、短い文字列では適切な数値を返します。</span><span class="sxs-lookup"><span data-stu-id="4837b-452">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="4837b-453">大きな文字列は、非常に大きなバッファーを使用してより適切なバッファーを超えているまれなケースでエラーをキャッチするかを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-453">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="4837b-454">別のアプローチを検討してくださいを使用したい場合がありますも<xref:System.Text.UTF32Encoding.GetCharCount%2A>または<xref:System.Text.Decoder.Convert%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-454">You might also want to consider a different approach and use <xref:System.Text.UTF32Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="4837b-455"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> リレーションシップを持たない<xref:System.Text.UTF32Encoding.GetBytes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-455"><xref:System.Text.UTF32Encoding.GetMaxCharCount%2A> has no relationship to <xref:System.Text.UTF32Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="4837b-456">同様の機能で使用する必要がある場合<xref:System.Text.UTF32Encoding.GetBytes%2A>を使用して<xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-456">If you need a similar function to use with <xref:System.Text.UTF32Encoding.GetBytes%2A>, use <xref:System.Text.UTF32Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4837b-457">`GetMaxCharCount(N)` 必ずしもと同じ値ではない`N* GetMaxCharCount(1)`です。</span><span class="sxs-lookup"><span data-stu-id="4837b-457">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-458">次の例では、(バイト単位) の配列に文字列をエンコードし、その文字の配列にバイトをデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-458">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetChars/VB/GetChars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-459">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-459">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-460">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-460">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4837b-461">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-461">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF32Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4837b-462">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-462">Returns a Unicode byte order mark encoded in UTF-32 format, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-463">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-463">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF32Encoding" /> object is configured to supply one.</span>
          </span>
          <span data-ttu-id="4837b-464">Otherwise, this method returns a zero-length byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-464">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-465"><xref:System.Text.UTF32Encoding>オブジェクトの先頭には、エンコード プロセスからバイトのシーケンスにバイトの配列ですが、プリアンブルを提供できます。</span><span class="sxs-lookup"><span data-stu-id="4837b-465">The <xref:System.Text.UTF32Encoding> object can provide a preamble, which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="4837b-466">バイト順マーク (コード ポイント U +0 0000 U+FEFF) でエンコードされたバイトのシーケンスの先頭には、バイト順および変換形式または UTF 決定デコーダーことができます。</span><span class="sxs-lookup"><span data-stu-id="4837b-466">Prefacing a sequence of encoded bytes with a byte order mark (code points U+0000 U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="4837b-467">Unicode バイト順マーク (BOM) が (16 進) に次のようにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="4837b-467">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="4837b-468">ビッグ エンディアン バイト順: 00 00 FE FF</span><span class="sxs-lookup"><span data-stu-id="4837b-468">Big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="4837b-469">リトル エンディアン バイト順: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="4837b-469">Little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="4837b-470">インスタンス化することができます、<xref:System.Text.UTF32Encoding>オブジェクト<xref:System.Text.UTF32Encoding.GetPreamble%2A>メソッドは、次の方法で有効な BOM を返します。</span><span class="sxs-lookup"><span data-stu-id="4837b-470">You can instantiate a <xref:System.Text.UTF32Encoding> object whose <xref:System.Text.UTF32Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="4837b-471">取得することによって、<xref:System.Text.UTF32Encoding>によって返されるオブジェクト、<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4837b-471">By retrieving the <xref:System.Text.UTF32Encoding> object returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="4837b-472">パラメーターなしで呼び出すことによって<xref:System.Text.UTF32Encoding.%23ctor>をインスタンス化するコンス トラクター、<xref:System.Text.UTF32Encoding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4837b-472">By calling the parameterless <xref:System.Text.UTF32Encoding.%23ctor> constructor to instantiate a <xref:System.Text.UTF32Encoding> object.</span></span>  
  
-   <span data-ttu-id="4837b-473">指定することによって`true`の値として、`byteOrderMark`への引数、<xref:System.Text.UTF32Encoding.%23ctor%2A>と<xref:System.Text.UTF32Encoding.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="4837b-473">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UTF32Encoding.%23ctor%2A> and <xref:System.Text.UTF32Encoding.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="4837b-474">特定の id、エンコードを使用するファイルへの参照が失われたのほとんどを提供するために、BOM を使用することをお勧め、<xref:System.Text.UTF32Encoding>オブジェクト、たとえば、タグなし、web データの不適切なタグまたはランダム テキスト ファイルの保存時に、ビジネスは、国際化に関する注意事項やその他のデータがありませんでした。</span><span class="sxs-lookup"><span data-stu-id="4837b-474">We recommend that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.UTF32Encoding> object, for example, untagged or improperly tagged web data, or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="4837b-475">多くの場合、データが一貫して適切なタグとは、ユーザーの問題を回避できる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-475">Often, user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="4837b-476">エンコードの種類を提供する標準、BOM は冗長です。</span><span class="sxs-lookup"><span data-stu-id="4837b-476">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="4837b-477">ただし、正しいエンコード ヘッダーを送信するサーバーのヘルプを使用できます。</span><span class="sxs-lookup"><span data-stu-id="4837b-477">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="4837b-478">または、するとして使用できます、フォールバック エンコーディングが失われたそれ以外の場合に備えてです。</span><span class="sxs-lookup"><span data-stu-id="4837b-478">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="4837b-479">BOM を使用するには、いくつか欠点があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-479">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="4837b-480">たとえば、BOM を使用するデータベース フィールドを制限する方法を知ることが難しいがあります。</span><span class="sxs-lookup"><span data-stu-id="4837b-480">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="4837b-481">ファイルの連結問題になる場合も、たとえばなどのファイルをマージするとデータの途中で不要な文字が最終的な形です。</span><span class="sxs-lookup"><span data-stu-id="4837b-481">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="4837b-482">いくつかの欠点を行ってもただし、BOM の使用が強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4837b-482">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="4837b-483">バイト順とバイト順マークの詳細については、Unicode 標準を参照してください、 [Unicode ホームページ](http://go.microsoft.com/fwlink/?LinkId=37123)です。</span><span class="sxs-lookup"><span data-stu-id="4837b-483">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4837b-484">エンコードされたバイト数が正しくデコードするためには、エンコード済みバイトのプリアンブルとプレフィックスにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-484">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="4837b-485">なお、<xref:System.Text.UTF32Encoding.GetBytes%2A>メソッドでエンコードされたバイトのシーケンスに BOM が付加されません以外の場合は、開発者の責任は、適切なバイト ストリームの先頭の BOM を指定します。</span><span class="sxs-lookup"><span data-stu-id="4837b-485">Note that the <xref:System.Text.UTF32Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-486">次のコードの例の取得と、バイト順のマークを付けるさまざまな表示<xref:System.Text.UTF32Encoding>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4837b-486">The following code example retrieves and displays the byte order mark for different <xref:System.Text.UTF32Encoding> instances.</span></span>  
  
 [!code-cpp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CPP/getpreamble.cpp#1)]
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/GetPreamble.vb#1)]  
  
 <span data-ttu-id="4837b-487">次の例では、2 つをインスタンス化<xref:System.Text.UTF32Encoding>オブジェクト、BOM や 2 番目のどの機能は、最初が提供されません。</span><span class="sxs-lookup"><span data-stu-id="4837b-487">The following example instantiates two <xref:System.Text.UTF32Encoding> objects, the first of which does not provide a BOM and the second of which does.</span></span> <span data-ttu-id="4837b-488">呼び出して、 <xref:System.Text.UTF32Encoding.GetPreamble%2A> UTF 32 エンコードされた文字列を書き込む前に、ファイルに BOM を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4837b-488">It then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UTF-32-encoded string.</span></span> <span data-ttu-id="4837b-489">2 番目のエンコーダーからのバイトを保存するファイルが 4 バイトで、出力の例に示すを 1 つ目です。</span><span class="sxs-lookup"><span data-stu-id="4837b-489">As the output from the example shows, the file that saves the bytes from the second encoder has four more bytes that the first.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/CS/getpreamble1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetPreamble#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF32Encoding.GetPreamble/VB/getpreamble1.vb#2)]  
  
 <span data-ttu-id="4837b-490">使用して、ファイルを比較することもできます、`fc`するか、コンソール ウィンドウ内のコマンドは 16 進表示モードを含むテキスト エディターでファイルを調査できます。</span><span class="sxs-lookup"><span data-stu-id="4837b-490">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="4837b-491">Utf-32 をサポートするエディターで、ファイルを開くときに、BOM が表示されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4837b-491">Note that when the file is opened in an editor that supports UTF-32, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF32Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="4837b-492">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-492">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4837b-493">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-493">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4837b-494">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-494">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4837b-495">Decodes a range of bytes from a byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-495">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4837b-496">A string that contains the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-496">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4837b-497">無効なシーケンス エラーの検出でこのメソッドをスローすると、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="4837b-497">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="4837b-498">エラーの検出、無効なシーケンスが無視され、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="4837b-498">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="4837b-499">デコードするバイトの範囲には、バイト順マーク (BOM) が含まれています。 バイト配列が BOM で非対応型のメソッドによって返される場合は、文字 U + FFFE はこのメソッドによって返される文字配列に含まれています。</span><span class="sxs-lookup"><span data-stu-id="4837b-499">If the range of bytes to be decoded includes the byte order mark (BOM), and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="4837b-500">これを削除するには呼び出すことによって、<xref:System.String.TrimStart%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4837b-500">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4837b-501">ストリームから読み取られるデータなど、変換するデータは、シーケンシャル ブロック内でのみ使用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4837b-501">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="4837b-502">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.UTF32Encoding.GetDecoder%2A>メソッドまたは<xref:System.Text.UTF32Encoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="4837b-502">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF32Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF32Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4837b-503">次の例では、バイト、リトル エンディアン順で 1 つおよびビッグ エンディアン順で、その他の 2 つの配列配列に文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-503">The following example encodes a string into two arrays arrays of bytes, one in little-endian order and the other in big-endian order.</span></span> <span data-ttu-id="4837b-504">文字列、バイトをデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-504">It then decodes the bytes back into a string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/getstring.cs#1)]
 [!code-vb[System.Text.UTF32Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString.vb#1)]  
  
 <span data-ttu-id="4837b-505">次の例では、配列を初期化を呼び出して、<xref:System.Text.UTF32Encoding.GetByteCount%2A>バイト数がエンコードされた文字列とバイト順マーク (BOM) のサイズを追加するために必要なだけを調べます。</span><span class="sxs-lookup"><span data-stu-id="4837b-505">The following example initializes an array by calling the <xref:System.Text.UTF32Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="4837b-506">この例では、<xref:System.Text.UTF32Encoding.GetPreamble%2A>は BOM を呼び出す前に、配列を格納する方法、<xref:System.Text.UTF32Encoding.GetBytes%2A>配列にエンコードされたバイトを格納するメソッド。</span><span class="sxs-lookup"><span data-stu-id="4837b-506">The example then calls the <xref:System.Text.UTF32Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF32Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="4837b-507">この例では、<xref:System.Text.UTF32Encoding.GetString%2A>文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="4837b-507">The example then calls the <xref:System.Text.UTF32Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/CS/GetString1.cs#2)]
 [!code-vb[System.Text.UTF32Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf32encoding.getstring/VB/GetString1.vb#2)]  
  
 <span data-ttu-id="4837b-508">ここでは、デコードした文字列と異なること、元の文字列が 32 ビット バイト順マーク U + FFFE u+0000 で始まっているので注意してください。</span><span class="sxs-lookup"><span data-stu-id="4837b-508">Note that in this case the decoded string differs from the original string, since it begins with a 32-bit byte order mark U+FFFE U+0000.</span></span> <span data-ttu-id="4837b-509">つまり、2 つの文字列が、等しくないものとして比較されます、文字列が出力の場合は、BOM が表示されること、置換文字として"?"。</span><span class="sxs-lookup"><span data-stu-id="4837b-509">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4837b-510">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-510">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4837b-511">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-511">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="4837b-512">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-512">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4837b-513">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-513">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="4837b-514">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4837b-514">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>