<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringBuilder.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50ef5479bab200f44f64b5f2445290b68bb885b09.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ef5479bab200f44f64b5f2445290b68bb885b09</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Represents a mutable string of characters.</source>
          <target state="translated">可変型の文字列を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This class represents a string-like object whose value is a mutable sequence of characters.</source>
          <target state="translated">このクラスは、値が変更可能な一連の文字の文字列のようなオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this section:</source>
          <target state="translated">このセクションの内容:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>The String and StringBuilder types<ept id="p1">](#StringAndSB)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>文字列と StringBuilder の種類<ept id="p1">](#StringAndSB)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>How StringBuilder works<ept id="p1">](#HowWorks)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder のしくみ<ept id="p1">](#HowWorks)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Memory allocation<ept id="p1">](#Memory)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>メモリの割り当て<ept id="p1">](#Memory)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Instantiating a StringBuilder object<ept id="p1">](#Instantiating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder オブジェクトをインスタンス化します。<ept id="p1">](#Instantiating)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Calling StringBuilder methods<ept id="p1">](#Calling)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder メソッドの呼び出し<ept id="p1">](#Calling)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Performing StringBuilder operations<ept id="p1">](#Operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder の操作を実行します。<ept id="p1">](#Operations)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Iterating StringBuilder characters<ept id="p1">](#Iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder の文字を反復処理します。<ept id="p1">](#Iterating)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Adding text to a StringBuilder object<ept id="p1">](#Adding)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder オブジェクトにテキストを追加します。<ept id="p1">](#Adding)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Deleting text from a StringBuilder object<ept id="p1">](#Deleting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder オブジェクトからテキストを削除します。<ept id="p1">](#Deleting)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Modifying the text in a StringBuilder object<ept id="p1">](#Modifying)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder オブジェクトの文字列を変更します。<ept id="p1">](#Modifying)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Searching the text in a StringBuilder object<ept id="p1">](#Searching)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder オブジェクトにテキストを検索<ept id="p1">](#Searching)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Converting the StringBuilder object to a string<ept id="p1">](#Converting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder オブジェクトを文字列に変換します。<ept id="p1">](#Converting)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The String and StringBuilder types</source>
          <target state="translated">文字列と StringBuilder の種類</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Although <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.String&gt;</ph> both represent sequences of characters, they are implemented differently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>と<ph id="ph2">&lt;xref:System.String&gt;</ph>シーケンスを表す両方の文字を実装方法が異なります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> is an immutable type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> 変更できない型です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>That is, each operation that appears to modify a <ph id="ph1">&lt;xref:System.String&gt;</ph> object actually creates a new string.</source>
          <target state="translated">変更が、各操作は、<ph id="ph1">&lt;xref:System.String&gt;</ph>オブジェクトが実際に新しい文字列を作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For example, the call to the <ph id="ph1">&lt;xref:System.String.Concat%2A?displayProperty=nameWithType&gt;</ph> method in the following C# example appears to change the value of a string variable named <ph id="ph2">`value`</ph>.</source>
          <target state="translated">呼び出しなど、<ph id="ph1">&lt;xref:System.String.Concat%2A?displayProperty=nameWithType&gt;</ph>という名前の文字列変数の値を変更する次の c# の例のメソッドが表示されます<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In fact, the <ph id="ph1">&lt;xref:System.String.Concat%2A&gt;</ph> method returns a <ph id="ph2">`value`</ph> object that has a different value and address from the <ph id="ph3">`value`</ph> object that was passed to the method.</source>
          <target state="translated">実際には、<ph id="ph1">&lt;xref:System.String.Concat%2A&gt;</ph>メソッドを返します、<ph id="ph2">`value`</ph>別の値とからアドレスを持つオブジェクト、<ph id="ph3">`value`</ph>メソッドに渡されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Note that the example must be compiled using the <ph id="ph1">`/unsafe`</ph> compiler option.</source>
          <target state="translated">使用して、例をコンパイルする必要がありますに注意してください、<ph id="ph1">`/unsafe`</ph>コンパイラ オプション。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For routines that perform extensive string manipulation (such as apps that modify a string numerous times in a loop), modifying a string repeatedly can exact a significant performance penalty.</source>
          <target state="translated">(何回もループ内で文字列を変更してアプリの場合) などの広範な文字列操作を実行するルーチンでは、文字列を繰り返し変更が、大幅なパフォーマンスの低下に正確なことができます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The alternative is to use <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>, which is a mutable string class.</source>
          <target state="translated">代替手段は、使用する<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>、変更可能な文字列のクラスであります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Mutability means that once an instance of the class has been created, it can be modified by appending, removing, replacing, or inserting characters.</source>
          <target state="translated">変更可能性は、クラスのインスタンスが作成した後に変更できることを追加、削除、置換、または文字を挿入することを意味します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>A <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object maintains a buffer to accommodate expansions to the string.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトは、文字列の拡張に対応するためのバッファーを保持します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>New data is appended to the buffer if room is available; otherwise, a new, larger buffer is allocated, data from the original buffer is copied to the new buffer, and the new data is then appended to the new buffer.</source>
          <target state="translated">ルームがある場合、新しいデータがバッファーに追加されます。それ以外の場合より大きなバッファーを割り当て、元のバッファーからデータを新しいバッファーにコピーおよび、次に、新しいデータは新しいバッファーに追加します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Although the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class generally offers better performance than the <ph id="ph2">&lt;xref:System.String&gt;</ph> class, you should not automatically replace <ph id="ph3">&lt;xref:System.String&gt;</ph> with <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> whenever you want to manipulate strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスが通常よりも優れたパフォーマンスを提供、<ph id="ph2">&lt;xref:System.String&gt;</ph>クラス、する必要がありますいないに自動的に置き換える<ph id="ph3">&lt;xref:System.String&gt;</ph>で<ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph>文字列操作に必要な場合にします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Performance depends on the size of the string, the amount of memory to be allocated for the new string, the system on which your app is executing, and the type of operation.</source>
          <target state="translated">パフォーマンスは、文字列、新しい文字列をアプリが実行されているシステムと操作の種類に割り当てられるメモリの量のサイズによって異なります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You should be prepared to test your app to determine whether <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> actually offers a significant performance improvement.</source>
          <target state="translated">決定するアプリをテストする準備をしておく必要があるかどうか<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>実際に大幅なパフォーマンス向上を提供します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Consider using the <ph id="ph1">&lt;xref:System.String&gt;</ph> class under these conditions:</source>
          <target state="translated">使用を検討して、<ph id="ph1">&lt;xref:System.String&gt;</ph>これらの条件下のクラス。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When the number of changes that your app will make to a string is small.</source>
          <target state="translated">文字列に、アプリが加えた変更の数が小さい場合です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In these cases, <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> might offer negligible or no performance improvement over <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">このような場合は、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>可能性がありますオファーはごくわずかでありまたは経由でパフォーマンスが向上しない<ph id="ph2">&lt;xref:System.String&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you are performing a fixed number of concatenation operations, particularly with string literals.</source>
          <target state="translated">ときに特にと文字列リテラルの連結操作の数を実行します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, the compiler might combine the concatenation operations into a single operation.</source>
          <target state="translated">ここでは、コンパイラは、連結操作に 1 回の操作を組み合わせる可能性があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you have to perform extensive search operations while you are building your string.</source>
          <target state="translated">ある場合、文字列の構築中に、広範な検索操作を実行します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class lacks search methods such as <ph id="ph2">`IndexOf`</ph> or <ph id="ph3">`StartsWith`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスにメソッドをなど、検索する<ph id="ph2">`IndexOf`</ph>または<ph id="ph3">`StartsWith`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You'll have to convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> for these operations, and this can negate the performance benefit from using <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated">変換する必要があります、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを<ph id="ph2">&lt;xref:System.String&gt;</ph>を使用してパフォーマンスの利点を無効にできますこれらの操作が、これを<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For more information, see the <bpt id="p1">[</bpt>Searching the text in a StringBuilder object<ept id="p1">](#Searching)</ept> section.</source>
          <target state="translated">詳細については、次を参照してください。、 <bpt id="p1">[</bpt>StringBuilder オブジェクトにテキストを検索<ept id="p1">](#Searching)</ept>セクションです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class under these conditions:</source>
          <target state="translated">使用を検討して、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>これらの条件下のクラス。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you expect your app to make an unknown number of changes to a string at design time (for example, when you are using a loop to concatenate a random number of strings that contain user input).</source>
          <target state="translated">文字列に (たとえば、ユーザー入力を格納する文字列のランダムな番号を連結するループを使用している場合) のデザイン時に不明な数の変更を加えるにアプリを予期したタイミング。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you expect your app to make a significant number of changes to a string.</source>
          <target state="translated">多数の変更を文字列にするのには、アプリを予期したタイミング。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>How StringBuilder works</source>
          <target state="translated">StringBuilder のしくみ</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType&gt;</ph> property indicates the number of characters the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object currently contains.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType&gt;</ph>プロパティは、文字の数を示す、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトに現在含まれています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If you add characters to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, its length increases until it equals the size of the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> property, which defines the number of characters that the object can contain.</source>
          <target state="translated">文字を追加する場合、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、その長さのサイズが等しくなるまでの増加、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph>プロパティで、オブジェクトを含めることができる文字数を定義します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the number of added characters causes the length of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to exceed its current capacity, new memory is allocated, the value of the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property is doubled, new characters are added to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and its <ph id="ph4">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property is adjusted.</source>
          <target state="translated">追加された文字の数の長さが発生した場合、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>をその現在の容量、新しいメモリを超えるオブジェクトが割り当てられるの値、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティが倍になりに新しい文字が追加、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、およびその<ph id="ph4">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>プロパティを調整します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Additional memory for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is allocated dynamically until it reaches the value defined by the <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">追加のメモリを<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>によって定義された値に達するまで、オブジェクトが動的に割り当てられて、<ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When the maximum capacity is reached, no further memory can be allocated for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and trying to add characters or expand it beyond its maximum capacity throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</source>
          <target state="translated">最大容量に達したときにメモリをさらに割り当てることはできませんの<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、および文字を追加または処理能力の上限を超えて拡張しようとしています。 スローするか、<ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>または<ph id="ph3">&lt;xref:System.OutOfMemoryException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates how a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates new memory and increases its capacity dynamically as the string assigned to the object expands.</source>
          <target state="translated">次の例を示して 方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトが新しいメモリを割り当て、オブジェクトに割り当てられた文字列の拡張は、その容量を動的に大きくなります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling its default (parameterless) constructor.</source>
          <target state="translated">このコードを作成、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>既定 (パラメーターなし) コンス トラクターを呼び出すことによってオブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The default capacity of this object is 16 characters, and its maximum capacity is more than 2 billion characters.</source>
          <target state="translated">このオブジェクトの既定の容量が 16 文字、および処理能力の上限が 20億を超える文字です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Appending the string "This is a sentence."</source>
          <target state="translated">「これは、文です」です文字列を追加します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>results in a new memory allocation because the string length (19 characters) exceeds the default capacity of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">文字列の長さ (19 文字) は、既定の容量を超えているため、新しいメモリ割り当ての結果、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The capacity of the object doubles to 32 characters, the new string is added, and the length of the object now equals 19 characters.</source>
          <target state="translated">オブジェクトの容量は 32 文字以内に 2 倍に、新しい文字列が追加され、オブジェクトの長さは 19 文字を今すぐと等しい。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The code then appends the string "This is an additional sentence."</source>
          <target state="translated">コード、文字列を追加、「これは、追加文です」です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>to the value of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object 11 times.</source>
          <target state="translated">値に、 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 11 回のオブジェクトします。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Whenever the append operation causes the length of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to exceed its capacity, its existing capacity is doubled and the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> operation succeeds.</source>
          <target state="translated">追加操作がの長さがどのように発生するたびに、 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 、容量、その既存の容量を超えたオブジェクトが 2 倍になります、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>操作が成功します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Memory allocation</source>
          <target state="translated">メモリの割り当て</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The default capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is 16 characters, and its default maximum capacity is <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">既定の容量、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトは、16 文字とその既定の最大容量は<ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>These default values are used if you call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.String%29&gt;</ph> constructors.</source>
          <target state="translated">呼び出す場合は、これらの既定値が使用される、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.String%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can explicitly define the initial capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object in the following ways:</source>
          <target state="translated">初期容量を明示的に定義することができます、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>次の方法でオブジェクト。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By calling any of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> constructors that includes a <ph id="ph2">`capacity`</ph> parameter when you create the object.</source>
          <target state="translated">いずれかを呼び出すことによって、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>コンス トラクターを含む、<ph id="ph2">`capacity`</ph>パラメーター オブジェクトを作成するときにします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By explicitly assigning a new value to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> property to expand an existing <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">明示的に新しい値を割り当てることによって、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph>プロパティを既存の展開<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Note that the property throws an exception if the new capacity is less than the existing capacity or greater than the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's maximum capacity.</source>
          <target state="translated">プロパティが新しい容量が、既存の容量以上より小さい場合に、例外をスローことに注意してください、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトの最大容量です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType&gt;</ph> method with the new capacity.</source>
          <target state="translated">呼び出して、<ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType&gt;</ph>新しい容量を持つメソッドです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The new capacity must not be greater than the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's maximum capacity.</source>
          <target state="translated">新しい容量をより大きくすることはできません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトの最大容量です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>However, unlike an assignment to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> does not throw an exception if the desired new capacity is less than the existing capacity; in this case, the method call has no effect.</source>
          <target state="translated">ただしへの代入とは異なり、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティ、<ph id="ph2">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph>場合、例外はスローされません目的の新しい容量は、既存の容量よりも小さいです。 この場合、メソッドの呼び出しも何も起こりません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the length of the string assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object in the constructor call exceeds either the default capacity or the specified capacity, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property is set to the length of the string specified with the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">文字列の長さが割り当てられている場合、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>コンス トラクターの呼び出し内のオブジェクトは、既定の容量または指定した容量を超えています。、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティで指定した文字列の長さに設定されて、<ph id="ph3">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can explicitly define the maximum capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">最大容量を明示的に定義することができます、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can't change the maximum capacity by assigning a new value to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property, because it is read-only.</source>
          <target state="translated">新しい値を割り当てることで、最大容量を変更することはできません、<ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>プロパティ、読み取り専用になっているためです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>As the previous section shows, whenever the existing capacity is inadequate, additional memory is allocated and the capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object doubles up to the value defined by the <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">前のセクションは、既存の容量が不十分な追加のメモリが割り当てられていると容量、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトによって定義された値になるまで 1 個の double、<ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In general, the default capacity and maximum capacity are adequate for most apps.</source>
          <target state="translated">一般に、既定の容量と最大の容量が適切ではほとんどのアプリです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You might consider setting these values under the following conditions:</source>
          <target state="translated">次の条件下でこれらの値の設定を検討する可能性があります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the eventual size of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is likely to grow exceedingly large, typically in excess of several megabytes.</source>
          <target state="translated">場合の最終的なサイズ、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトがいくつかのメガバイト数を超えて通常非常に大きくなる可能性があります。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, there may be some performance benefit from setting the initial <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property to a significantly high value to eliminate the need for too many memory reallocations.</source>
          <target state="translated">この例では、ある可能性があります、最初の設定からのパフォーマンスが向上<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>を大幅に高の値に多くのメモリの再割り当てする必要のないプロパティです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If your app is running on a system with limited memory.</source>
          <target state="translated">アプリが実行する場合のシステム メモリの制限で。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, you may want to consider setting the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property to less than <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> if your app is handling large strings that may cause it to execute in a memory-constrained environment.</source>
          <target state="translated">この場合、設定を考慮する必要する可能性があります、<ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>プロパティをより小さい<ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>場合は、アプリが引き起こす可能性があるメモリの制約がある環境で実行するように大きな文字列を処理します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Instantiating a StringBuilder object</source>
          <target state="translated">StringBuilder オブジェクトをインスタンス化します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling one of its six overloaded class constructors, which are listed in the following table.</source>
          <target state="translated">インスタンス化する、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>その 6 つオーバー ロードされたクラスのコンス トラクター、次の表に記載されている 1 つを呼び出してオブジェクト。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Three of the constructors instantiate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object whose value is an empty string, but set its <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> values differently.</source>
          <target state="translated">コンス トラクターの 3 つのインスタンスを作成、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>値が空の文字列オブジェクトに設定がその<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>値が異なる。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The remaining three constructors define a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object that has a specific string value and capacity.</source>
          <target state="translated">残りの 3 つのコンス トラクターを定義、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>特定の文字列値と容量を持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Two of the three constructors use the default maximum capacity of <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>, whereas the third allows you to set the maximum capacity.</source>
          <target state="translated">既定の最大容量を使用して 3 つのコンス トラクターの 2 つの<ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>、3 つ目では、最大容量を設定することができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Constructor</source>
          <target state="translated">コンストラクター</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>String value</source>
          <target state="translated">文字列値</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Capacity</source>
          <target state="translated">容量</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Maximum capacity</source>
          <target state="translated">最大容量</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter</source>
          <target state="translated">定義される、<ph id="ph1">`capacity`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter</source>
          <target state="translated">定義される、<ph id="ph1">`capacity`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`maxCapacity`</ph> parameter</source>
          <target state="translated">定義される、<ph id="ph1">`maxCapacity`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">定義される、<ph id="ph1">`value`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>16 or <ph id="ph1">`value`</ph>.</source>
          <target state="translated">16 または<ph id="ph1">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>、大きい方</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">定義される、<ph id="ph1">`value`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter or <ph id="ph2">`value`</ph>.</source>
          <target state="translated">定義される、<ph id="ph1">`capacity`</ph>パラメーターまたは<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>、大きい方です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by <ph id="ph1">`value`</ph>.</source>
          <target state="translated">定義される<ph id="ph1">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Substring%2A&gt;</ph>(<ph id="ph2">`startIndex`</ph>, <ph id="ph3">`length`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Substring%2A&gt;</ph>(<ph id="ph2">`startIndex`</ph>, <ph id="ph3">`length`</ph>)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter or <ph id="ph2">`value`</ph>.</source>
          <target state="translated">定義される、<ph id="ph1">`capacity`</ph>パラメーターまたは<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>、大きい方です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`maxCapacity`</ph> parameter</source>
          <target state="translated">定義される、<ph id="ph1">`maxCapacity`</ph>パラメーター</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses three of these constructor overloads to instantiate <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objects.</source>
          <target state="translated">次の例を使用してこれらのコンス トラクター オーバー ロードのうち 3 つのインスタンスを作成する<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Calling StringBuilder methods</source>
          <target state="translated">StringBuilder メソッドの呼び出し</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Most of the methods that modify the string in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance return a reference to that same instance.</source>
          <target state="translated">内の文字列を変更するメソッドのほとんどは<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>インスタンスが同じインスタンスをへの参照を返します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to call <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> methods in two ways:</source>
          <target state="translated">これによりを呼び出す<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>方法は 2 つのメソッド。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can make individual method calls and ignore the return value, as the following example does.</source>
          <target state="translated">個々 のメソッドを呼び出すことし、次の例のように、戻り値を無視することができます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can make a series of method calls in a single statement.</source>
          <target state="translated">単一のステートメントでは、一連のメソッド呼び出しを行うことができます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This can be convenient if you want to write a single statement that chains successive operations.</source>
          <target state="translated">これは、連続した操作が関連付けられている 1 つのステートメントを記述する場合に便利で指定できます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example consolidates three method calls from the previous example into a single line of code.</source>
          <target state="translated">次の例では、前の例から次の 3 つのメソッド呼び出しを 1 行のコードに統合します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Performing StringBuilder operations</source>
          <target state="translated">StringBuilder の操作を実行します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can use the methods of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class to iterate, add, delete, or modify characters in a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">メソッドを使用することができます、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>反復処理する、追加、削除、または内の文字を変更するクラス、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Iterating StringBuilder characters</source>
          <target state="translated">StringBuilder の文字を反復処理します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can access the characters in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by using the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">内の文字にアクセスすることができます、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを使用して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In C#, <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> is an indexer; in Visual Basic, it is the default property of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">C# の場合、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>インデクサー; は、Visual basic での既定のプロパティは、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to set or retrieve individual characters by using their index only, without explicitly referencing the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property.</source>
          <target state="translated">これにより明示的に参照することがなく、インデックスのみを使用して個々 の文字を取得または設定を<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Characters in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object begin at index 0 (zero) and continue to index <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> - 1.</source>
          <target state="translated">内の文字、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトのインデックスは 0 (ゼロ) から始まり、インデックスを続行<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>- 1。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property.</source>
          <target state="translated">次の例を示しています、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It appends ten random numbers to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and then iterates each character.</source>
          <target state="translated">10 個のランダムな数の追加、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、および各文字を反復処理します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the character's Unicode category is <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, it decreases the number by 1 (or changes the number to 9 if its value is 0).</source>
          <target state="translated">文字の Unicode カテゴリが場合<ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>、1 つずつ数を減少 (またはその値が 0 の場合、番号は 9 に変更)。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The example displays the contents of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object both before and after the values of individual characters were changed.</source>
          <target state="translated">この例の内容を表示する、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>前に、と後、個々 の文字の値が変更されたオブジェクトの両方です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Adding text to a StringBuilder object</source>
          <target state="translated">StringBuilder オブジェクトにテキストを追加します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class includes the following methods for expanding the contents of a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスにはメソッドが含まれて、次の内容を拡張するため、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> method appends a string, a substring, a character array, a portion of a character array, a single character repeated multiple times, or the string representation of a primitive data type to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>メソッドは、追加、文字列、部分文字列、文字配列を文字配列の一部分単一の文字が、複数回繰り返されますまたはプリミティブ データの文字列表現を入力、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> method appends a line terminator or a string along with a line terminator to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>メソッドは、行終端記号またはに沿ってに行終端記号を含む文字列を追加、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method appends a  to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドは、追加に、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The string representations of objects included in the result string can reflect the formatting conventions of the current system culture or a specified culture.</source>
          <target state="translated">結果の文字列に含まれるオブジェクトの文字列形式には、現在のシステムのカルチャまたは指定されたカルチャの書式指定規則を反映できます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method inserts a string, a substring, multiple repetitions of a string, a character array, a portion of a character array, or the string representation of a primitive data type at a specified position in the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドを挿入、文字列を部分文字列、文字列の複数の繰り返し、文字配列を文字配列の一部またはプリミティブ データの文字列形式を入力の指定した位置にある、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The position is defined by a zero-based index.</source>
          <target state="translated">位置は、0 から始まるインデックスによって定義されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> methods to expand the text of a <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">次の例では、 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>のテキストを展開する方法、<ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Deleting text from a StringBuilder object</source>
          <target state="translated">StringBuilder オブジェクトからテキストを削除します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class includes methods that can reduce the size of the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスには、現在のサイズを縮小するメソッドが含まれています<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method removes all characters and sets the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>メソッドは、すべての文字を削除し、設定、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>プロパティを 0 にします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method deletes a specified number of characters starting at a particular index position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph>メソッドは、特定のインデックス位置から始まる文字の指定した数を削除します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In addition, you can remove characters from the end of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by setting its <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to a value that is less than the length of the current instance.</source>
          <target state="translated">さらの末尾から文字を削除することができます、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを設定してその<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>プロパティを現在のインスタンスの長さより小さい値にします。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example removes some of the text from a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, displays its resulting capacity, maximum capacity, and length property values, and then calls the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method to remove all the characters from the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">次の例からテキストの一部を削除します、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、その結果として得られる容量、最大容量は、および長さのプロパティの値を表示およびを呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>からのすべての文字を削除する方法、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Modifying the text in a StringBuilder object</source>
          <target state="translated">StringBuilder オブジェクトの文字列を変更します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType&gt;</ph> method replaces all occurrences of a character or a string in the entire <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object or in a particular character range.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType&gt;</ph>メソッドが文字または文字列全体でのすべての出現を置換<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトまたは特定の文字範囲内です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method to replace all exclamation points (!) with question marks (?) in the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>に疑問符 (?) のすべての感嘆符 (!) するメソッド、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Searching the text in a StringBuilder object</source>
          <target state="translated">StringBuilder オブジェクトにテキストを検索</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class does not include methods similar to the <ph id="ph2">&lt;xref:System.String.Contains%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph> methods provided by the <ph id="ph5">&lt;xref:System.String&gt;</ph> class, which allow you to search the object for a particular character or a substring.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスでは、ようなメソッドは含まれません、 <ph id="ph2">&lt;xref:System.String.Contains%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph4">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>によって提供されるメソッド、<ph id="ph5">&lt;xref:System.String&gt;</ph>クラスは、特定の文字または部分文字列のオブジェクトを検索することを許可します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Determining the presence or starting character position of a substring requires that you search a <ph id="ph1">&lt;xref:System.String&gt;</ph> value by using either a string search method or a regular expression method.</source>
          <target state="translated">存在することを決定する部分文字列の文字位置を開始する場合も検索することが必要です、<ph id="ph1">&lt;xref:System.String&gt;</ph>文字列検索メソッドまたは正規表現メソッドのいずれかを使用して値。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>There are four ways to implement such searches, as the following table shows.</source>
          <target state="translated">このようなものを検索にするには、次の表に示すように実装する次の 4 つの方法はあります。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Technique</source>
          <target state="translated">手法</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Pros</source>
          <target state="translated">担当者</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cons</source>
          <target state="translated">短所</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Search string values before adding them to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">追加する前に文字列値を検索、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful for determining whether a substring exists.</source>
          <target state="translated">部分文字列が存在するかどうかを決定するために便利です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cannot be used when the index position of a substring is important.</source>
          <target state="translated">部分文字列のインデックス位置が重要な場合は使用できません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Call <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> and search the returned <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>し、返された検索<ph id="ph2">&lt;xref:System.String&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Easy to use if you assign all the text to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and then begin to modify it.</source>
          <target state="translated">簡単に使用するすべてのテキストを割り当てた場合、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、および変更を開始します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cumbersome to repeatedly call <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> if you must make modifications before all text is added to the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">繰り返し呼び出す厄介で面倒<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>かどうかは、すべてのテキストを追加する前に変更を行う必要があります、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You must remember to work from the end of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's text if you're making changes.</source>
          <target state="translated">末尾から作業することを忘れないでください、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトのテキストの変更を加えようとする場合。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Use the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property to sequentially search a range of characters.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>文字の範囲を順番に検索するプロパティです。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful if you're concerned with individual characters or a small substring.</source>
          <target state="translated">個々 の文字または部分文字列に小さな心配がある場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cumbersome if the number of characters to search is large or if the search logic is complex.</source>
          <target state="translated">検索対象の文字数が多い場合、または複雑な場合は、検索ロジックは複雑です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Results in very poor performance for objects that have grown very large through repeated method calls.</source>
          <target state="translated">繰り返されるメソッドの呼び出しによって非常に大きなに拡大しているオブジェクトのパフォーマンスが大きく低下の結果。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object, and perform modifications on the <ph id="ph3">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">変換、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを<ph id="ph2">&lt;xref:System.String&gt;</ph>オブジェクトに対して変更を実行して、<ph id="ph3">&lt;xref:System.String&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful if the number of modifications is small.</source>
          <target state="translated">変更の数が少ない場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Negates the performance benefit of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class if the number of modifications is large.</source>
          <target state="translated">パフォーマンスの利点を否定、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスの変更の数が大きい場合。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Let's examine these techniques in greater detail.</source>
          <target state="translated">これらの手法より詳細に見ていきましょう。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the goal of the search is to determine whether a particular substring exists (that is, if you aren't interested in the position of the substring), you can search strings before storing them in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">検索の目的でそれらを保存する前に文字列を検索することができます (つまり、部分文字列の位置に興味がない) 場合に特定の部分文字列が存在するかどうかを判断する場合、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example provides one possible implementation.</source>
          <target state="translated">次の例では、1 つの可能な実装を提供します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It defines a <ph id="ph1">`StringBuilderFinder`</ph> class whose constructor is passed a reference to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object and the substring to find in the string.</source>
          <target state="translated">定義する、<ph id="ph1">`StringBuilderFinder`</ph>コンス トラクターへの参照を渡し、クラス、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトと、文字列内で検索するサブスト リングします。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, the example tries to determine whether recorded temperatures are in Fahrenheit or Celsius, and adds the appropriate introductory text to the beginning of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">この場合、例では、判別しようかどうか録画温度は華氏または摂氏の先頭に適切な説明テキストを追加、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>A random number generator is used to select an array that contains data in either degrees Celsius or degrees Fahrenheit.</source>
          <target state="translated">乱数ジェネレーターを使用して、華氏または摂氏でデータを格納する配列を選択します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph>に変換する方法、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.String&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can search the string by using methods such as <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>, or you can use regular expressions and the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> class to search for patterns.</source>
          <target state="translated">などのメソッドを使用して、文字列を検索することができます<ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>、正規表現を使用することも、<ph id="ph3">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph>パターンを検索するクラス。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Because both <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.String&gt;</ph> objects use UTF-16 encoding to store characters, the index positions of characters, substrings, and regular expression matches are the same in both objects.</source>
          <target state="translated">両方<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>と<ph id="ph2">&lt;xref:System.String&gt;</ph>オブジェクトは、utf-16 文字の部分文字列の文字のインデックス位置を格納するエンコーディングを使用して、正規表現の一致は、両方のオブジェクトで同じです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to use <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> methods to make changes at the same position at which that text is found in the <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">これを使用することできます<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>そのテキストに存在する同じ位置にある変更を加える方法、<ph id="ph2">&lt;xref:System.String&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If you adopt this approach, you should work from the end of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to its beginning so that you don't have to repeatedly convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a string.</source>
          <target state="translated">このアプローチを採用している場合は、末尾から作業する必要があります、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを繰り返しに変換する必要があるないように、その開始するとき、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを文字列します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates this approach.</source>
          <target state="translated">このアプローチの例を次に示します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It stores four occurrences of each letter of the English alphabet in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">各文字は英文字での 4 つのオカレンスを格納し、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It then converts the text to a <ph id="ph1">&lt;xref:System.String&gt;</ph> object and uses a regular expression to identify the starting position of each four-character sequence.</source>
          <target state="translated">テキストを次に、変換、<ph id="ph1">&lt;xref:System.String&gt;</ph>オブジェクトおよび各 4 文字のシーケンスの開始位置を識別する正規表現を使用します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Finally, it adds an underscore before each four-character sequence except for the first sequence, and converts the first character of the sequence to uppercase.</source>
          <target state="translated">最後に、最初のシーケンスを除く各 4 文字のシーケンスの前にアンダー スコアを追加し、大文字にシーケンスの最初の文字に変換します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Use the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property to sequentially search a range of characters in a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph>内の文字の範囲を順番に検索するプロパティ、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This approach may not be practical if the number of characters to be searched is large or the search logic is particularly complex.</source>
          <target state="translated">この方法は、検索する文字数が多いか検索ロジックは非常に複雑な実用的なできない可能性があります。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For the performance implications of character-by-character index-based access for very large, chunked <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objects, see the documentation for the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">文字のインデックス ベースのアクセスのパフォーマンスに影響する非常に大きな、chunked<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、ドキュメントを参照して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example is identical in functionality to the previous example but differs in implementation.</source>
          <target state="translated">次の例では、前の例と同じ機能ですが、実装では異なります。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property to detect when a character value has changed, inserts an underscore at that position, and converts the first character in the new sequence to uppercase.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>文字の値が変更されたときを検出するためにプロパティが、その位置にアンダー スコアを挿入し、新しいシーケンスの最初の文字を大文字に変換します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Store all the unmodified text in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph4">&lt;xref:System.String&gt;</ph> object, and perform the modifications on the <ph id="ph5">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">内の未変更のすべてのテキストを格納、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを呼び出し、<ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph>に変換する方法、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを<ph id="ph4">&lt;xref:System.String&gt;</ph>オブジェクトに対して変更を実行して、<ph id="ph5">&lt;xref:System.String&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can use this approach if you have only a few modifications; otherwise, the cost of working with immutable strings may negate the performance benefits of using a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このアプローチを使用するには、いくつか変更にのみがある場合それ以外の場合、変更できない文字列の操作のコストを使用するパフォーマンス上の利点をなくなる場合があります、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example is identical in functionality to the previous two examples but differs in implementation.</source>
          <target state="translated">次の例では、前の 2 つの例と同じ機能ですが、実装では異なります。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, converts it to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object, and then uses a regular expression to perform all remaining modifications on the string.</source>
          <target state="translated">作成、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトに変換する、<ph id="ph2">&lt;xref:System.String&gt;</ph>オブジェクト、および正規表現を使用して、文字列の残りのすべての変更を実行します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType&gt;</ph> method uses a lambda expression to perform the replacement on each match.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType&gt;</ph>メソッドでは、ラムダ式を使用して、一致した各文字列の置換を実行します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Converting the StringBuilder object to a string</source>
          <target state="translated">StringBuilder オブジェクトを文字列に変換します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You must convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph4">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated"><ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> オブジェクトで表される文字列を <ph id="ph4">&lt;xref:System.String&gt;</ph> パラメーターを持つメソッドに渡すかそれをユーザー インターフェイスに表示するには、事前に <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> オブジェクトを <ph id="ph2">&lt;xref:System.String&gt;</ph> オブジェクトに変換する必要があります。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You perform this conversion by calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">呼び出すことによってこの変換を実行する、<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For an illustration, see the previous example, which calls the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a string so that it can be passed to a regular expression method.</source>
          <target state="translated">例については、呼び出しの前の例を参照してください、<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>に変換する方法、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトの文字列を正規表現メソッドに渡すことができるようにします。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example shows how to call many of the methods defined by the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">次の例で定義されたメソッドの多くを呼び出す方法を示しています、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor">
          <source>The string value of this instance is set to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, and the capacity is set to the implementation-specific default capacity.</source>
          <target state="translated">このインスタンスの文字列値に設定<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>容量が実装に固有の既定の容量に設定されているとします。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with no parameters.</source>
          <target state="translated">次の例を呼び出す方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>パラメーターなしのコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The suggested starting size of this instance.</source>
          <target state="translated">このインスタンスの推奨される開始サイズ。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified capacity.</source>
          <target state="translated">指定した容量を使用して、<ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">その値が割り当てられた、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">この現在のインスタンスに格納される文字数を超えたかどうか<ph id="ph1">`capacity`</ph>値、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトがそれらを格納する追加のメモリを割り当てます。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The string value of this instance is set to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">このインスタンスの文字列値に設定<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">場合<ph id="ph1">`capacity`</ph>0 の場合は、実装固有の既定の容量が使用されます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with a specified capacity.</source>
          <target state="translated">次の例を呼び出す方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>指定した容量を持つコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>The string used to initialize the value of the instance.</source>
          <target state="translated">インスタンスの値を初期化するために使用される文字列。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、新しい <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> は空の文字列、つまり、<ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph> を含みます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified string.</source>
          <target state="translated">指定した文字列を使用して、<ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the new <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> will contain the empty string (that is, it contains <ph id="ph4">&lt;xref:System.String.Empty&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">`value`</ph> が <ph id="ph2">`null`</ph> の場合、新しい <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> は空の文字列、つまり、<ph id="ph4">&lt;xref:System.String.Empty&gt;</ph> を含みます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with the specified string.</source>
          <target state="translated">次の例を呼び出す方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>指定した文字列を持つコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> の推奨される開始サイズ。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The maximum number of characters the current string can contain.</source>
          <target state="translated">現在の文字列が含むことができる最大文字数。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class that starts with a specified capacity and can grow to a specified maximum.</source>
          <target state="translated">指定した容量で始まり、指定した最大容量まで大きくなる <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">その値が割り当てられた、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">この現在のインスタンスに格納される文字数を超えたかどうか<ph id="ph1">`capacity`</ph>値、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトがそれらを格納する追加のメモリを割り当てます。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">場合<ph id="ph1">`capacity`</ph>0 の場合は、実装固有の既定の容量が使用されます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`maxCapacity`</ph> property defines the maximum number of characters that the current instance can hold.</source>
          <target state="translated"><ph id="ph1">`maxCapacity`</ph>プロパティは、現在のインスタンスを保持できる文字の最大数を定義します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">その値が割り当てられた、<ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`maxCapacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object does not allocate additional memory, but instead throws an exception.</source>
          <target state="translated">この現在のインスタンスに格納される文字数を超えたかどうか<ph id="ph1">`maxCapacity`</ph>値、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトは、追加のメモリを割り当てられませんが、代わりに、例外をスローします。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with a specified capacity and maximum capacity.</source>
          <target state="translated">次の例を呼び出す方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>指定した容量と最大の容量を持つコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="maxCapacity" /&gt;</ph> is less than one, <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> is less than zero, or <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="maxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxCapacity" /&gt;</ph> が 1 未満で、<ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。または <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> が <ph id="ph4">&lt;paramref name="maxCapacity" /&gt;</ph> を超えています。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The string used to initialize the value of the instance.</source>
          <target state="translated">インスタンスの値を初期化するために使用される文字列。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、新しい <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> は空の文字列、つまり、<ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph> を含みます。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> の推奨される開始サイズ。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified string and capacity.</source>
          <target state="translated">指定した文字列および容量を使用して、<ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">その値が割り当てられた、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">この現在のインスタンスに格納される文字数を超えたかどうか<ph id="ph1">`capacity`</ph>値、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトがそれらを格納する追加のメモリを割り当てます。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">場合<ph id="ph1">`capacity`</ph>0 の場合は、実装固有の既定の容量が使用されます。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with an initial string and a specified capacity.</source>
          <target state="translated">次の例を呼び出す方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>コンス トラクターの最初の文字列および容量を指定します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The string that contains the substring used to initialize the value of this instance.</source>
          <target state="translated">このインスタンスの値を初期化するために使用される部分文字列を含む文字列。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、新しい <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> は空の文字列、つまり、<ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph> を含みます。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> where the substring begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> における部分文字列の開始位置。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The number of characters in the substring.</source>
          <target state="translated">部分文字列の文字数。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> の推奨される開始サイズ。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class from the specified substring and capacity.</source>
          <target state="translated">指定した部分文字列および容量から <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">その値が割り当てられた、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">この現在のインスタンスに格納される文字数を超えたかどうか<ph id="ph1">`capacity`</ph>値、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトがそれらを格納する追加のメモリを割り当てます。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">場合<ph id="ph1">`capacity`</ph>0 の場合は、実装固有の既定の容量が使用されます。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with the specified string.</source>
          <target state="translated">次の例を呼び出す方法、<ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph>指定した文字列を持つコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is not a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> に <ph id="ph2">&lt;paramref name="length" /&gt;</ph> を加算した値が、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> 内にない位置を示しています。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the string representation of a specified object to this instance.</source>
          <target state="translated">指定したオブジェクトの文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The Boolean value to append.</source>
          <target state="translated">追加するブール値。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Appends the string representation of a specified Boolean value to this instance.</source>
          <target state="translated">指定したブール値の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Boolean.ToString?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Boolean.ToString?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Appends the string representation of a specified 8-bit unsigned integer to this instance.</source>
          <target state="translated">指定した 8 ビット符号なし整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The UTF-16-encoded code unit to append.</source>
          <target state="translated">追加する UTF-16 でエンコードされたコード単位。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Appends the string representation of a specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object to this instance.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> オブジェクトの文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The array of characters to append.</source>
          <target state="translated">追加する文字の配列。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Appends the string representation of the Unicode characters in a specified array to this instance.</source>
          <target state="translated">指定した配列内の Unicode 文字の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>This method appends all the characters in the specified array to the current instance in the same order as they appear in <ph id="ph1">`value`</ph>.</source>
          <target state="translated">このメソッドに表示される同じ順序で現在のインスタンスに指定した配列内のすべての文字を追加<ph id="ph1">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>変更は行われません。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Appends the string representation of a specified decimal number to this instance.</source>
          <target state="translated">指定した 10 進数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Appends the string representation of a specified double-precision floating-point number to this instance.</source>
          <target state="translated">指定した倍精度浮動小数点数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Appends the string representation of a specified 16-bit signed integer to this instance.</source>
          <target state="translated">指定した 16 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Appends the string representation of a specified 32-bit signed integer to this instance.</source>
          <target state="translated">指定した 32 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Appends the string representation of a specified 64-bit signed integer to this instance.</source>
          <target state="translated">指定した 64 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得する<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The object to append.</source>
          <target state="translated">追加するオブジェクト。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Appends the string representation of a specified object to this instance.</source>
          <target state="translated">指定したオブジェクトの文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>It defines a <ph id="ph1">`Dog`</ph> class, creates a <ph id="ph2">`Dog`</ph> object, and makes three calls to the <ph id="ph3">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> method to create a string that contains the dog's name and breed.</source>
          <target state="translated">定義する、<ph id="ph1">`Dog`</ph>クラスを作成、<ph id="ph2">`Dog`</ph>オブジェクト、およびを 3 回の呼び出しにより、 <ph id="ph3">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> dog の名前と種類を表す文字列を作成します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、に対する変更は行われません、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Appends the string representation of a specified 8-bit signed integer to this instance.</source>
          <target state="translated">指定した 8 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method  to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Appends the string representation of a specified single-precision floating-point number to this instance.</source>
          <target state="translated">指定した単精度浮動小数点数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The string to append.</source>
          <target state="translated">追加する文字列。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Appends a copy of the specified string to this instance.</source>
          <target state="translated">指定した文字列のコピーをこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>変更は行われません。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Appends the string representation of a specified 16-bit unsigned integer to this instance.</source>
          <target state="translated">指定した 16 ビット符号なし整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Appends the string representation of a specified 32-bit unsigned integer to this instance.</source>
          <target state="translated">指定された 32 ビット符号なし整数の文字列表記をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> calls the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph>呼び出し、<ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>インスタンス化するとき、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The value to append.</source>
          <target state="translated">追加する値。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Appends the string representation of a specified 64-bit unsigned integer to this instance.</source>
          <target state="translated">指定した 64 ビット符号なし整数の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>の文字列形式を取得するメソッド<ph id="ph3">`value`</ph>現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">書式を制御する<ph id="ph1">`value`</ph>を呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The character to append.</source>
          <target state="translated">追加する文字。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The number of times to append <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> を追加する回数。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Appends a specified number of copies of the string representation of a Unicode character to this instance.</source>
          <target state="translated">Unicode 文字の文字列形式の、指定した数のコピーをこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="repeatCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="repeatCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Out of memory.</source>
          <target state="translated">メモリが不足しています。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>A pointer to an array of characters.</source>
          <target state="translated">文字の配列を指すポインター。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The number of characters in the array.</source>
          <target state="translated">配列の文字数。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Appends an array of Unicode characters starting at a specified address to this instance.</source>
          <target state="translated">指定したアドレスで始まる Unicode 文字の配列をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>This method appends <ph id="ph1">`valueCount`</ph> characters starting at address <ph id="ph2">`value`</ph> to the current instance.</source>
          <target state="translated">このメソッドは、追加<ph id="ph1">`valueCount`</ph>アドレスで始まる文字<ph id="ph2">`value`</ph>現在のインスタンスにします。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="valueCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a null pointer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が null ポインターです。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>A character array.</source>
          <target state="translated">文字配列。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 内の開始位置。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to append.</source>
          <target state="translated">追加する文字数。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Appends the string representation of a specified subarray of Unicode characters to this instance.</source>
          <target state="translated">Unicode 文字の指定した部分配列の文字列形式をこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>This method appends the specified range of characters in <ph id="ph1">`value`</ph> to the current instance.</source>
          <target state="translated">このメソッドは、指定した範囲内の文字を追加<ph id="ph1">`value`</ph>現在のインスタンスにします。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph> and <ph id="ph3">`startIndex`</ph> and <ph id="ph4">`count`</ph> are both zero, no changes are made.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>と<ph id="ph3">`startIndex`</ph>と<ph id="ph4">`count`</ph>の両方がゼロの変更が加えられました。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> であり、<ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> と <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> が 0 以外の値です。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> が <ph id="ph4">&lt;paramref name="value" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The string that contains the substring to append.</source>
          <target state="translated">追加する部分文字列を含む文字列。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The starting position of the substring within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 内の部分文字列の開始位置。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The number of characters in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to append.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 内の追加する文字数。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Appends a copy of a specified substring to this instance.</source>
          <target state="translated">指定した部分文字列のコピーをこのインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>This method appends the specified range of characters in <ph id="ph1">`value`</ph> to the current instance.</source>
          <target state="translated">このメソッドは、指定した範囲内の文字を追加<ph id="ph1">`value`</ph>現在のインスタンスにします。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph> and <ph id="ph3">`startIndex`</ph> and <ph id="ph4">`count`</ph> are both zero, no changes are made.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>と<ph id="ph3">`startIndex`</ph>と<ph id="ph4">`count`</ph>の両方がゼロの変更が加えられました。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>メソッドは、このクラスの既存のインスタンスを変更; クラスの新しいインスタンスを返すことはできません。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">このため、上で呼び出せるメソッドまたはプロパティ、既存の参照および戻り値を割り当てる必要はありません、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト、次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="count" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> であり、<ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> と <ph id="ph4">&lt;paramref name="count" /&gt;</ph> が 0 以外の値です。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> が <ph id="ph4">&lt;paramref name="value" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Each format item is replaced by the string representation of a corresponding object argument.</source>
          <target state="translated">各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item is replaced by the string representation of a single argument.</source>
          <target state="translated">各書式項目は、単一の引数の文字列表記に置換されます。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が追加されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> の各書式指定項目は、<ph id="ph2">&lt;paramref name="arg0" /&gt;</ph> の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダー、書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The index of the format items must be 0, to correspond to <ph id="ph1">`arg0`</ph>, the single object in the parameter list of this method.</source>
          <target state="translated">書式指定項目のインデックスが 0 の場合に対応するようにする必要があります<ph id="ph1">`arg0`</ph>、このメソッドのパラメーター リスト内の単一のオブジェクト。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of <ph id="ph1">`arg0`</ph>.</source>
          <target state="translated">フォーマット処理の各書式項目の形式に置換文字列の<ph id="ph1">`arg0`</ph>します。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">`arg0`</ph> represents the object to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 書式設定するオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>の文字列形式に置き換えられます<ph id="ph2">`arg0`</ph>です。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and <ph id="ph2">`arg0`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg0.ToString(formatString, null)`</ph> defines the formatting.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>と<ph id="ph2">`arg0`</ph>を実装する、<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>インターフェイスし<ph id="ph4">`arg0.ToString(formatString, null)`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg0.ToString()`</ph> defines the formatting.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`arg0.ToString()`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">代入された文字列場合<ph id="ph1">`format`</ph>は"の donation いただきありがとうございます {0: ###} food to our charitable organization. の cans"。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">および<ph id="ph1">`arg0`</ph>整数値 10 を戻り値は"Thank you for your donation of 10 cans of food to our charitable organization"になります。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 1.</source>
          <target state="translated">書式項目のインデックスが 0 (ゼロ) 未満か、1 以上です。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>An array of objects to format.</source>
          <target state="translated">書式指定するオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item is replaced by the string representation of a corresponding argument in a parameter array.</source>
          <target state="translated">各書式項目は、パラメーター配列内の対応する引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が追加されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> の各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">書式設定プロセスでは、対応するオブジェクトの文字列形式を各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">`args`</ph> represents the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 書式設定するオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the corresponding object in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>内の対応するオブジェクトの文字列形式に置き換えられます<ph id="ph2">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>とで対応するオブジェクト<ph id="ph2">`args`</ph>を実装する、<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>インターフェイス、<ph id="ph4">`args[index].ToString(formatString, provider)`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Otherwise, <ph id="ph1">`args[index].ToString()`</ph> defines the formatting.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`args[index].ToString()`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">代入された文字列場合<ph id="ph1">`format`</ph>は"の donation いただきありがとうございます {0: ###} food to our charitable organization. の cans"。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">および<ph id="ph1">`arg0`</ph>整数値 10 を戻り値は"Thank you for your donation of 10 cans of food to our charitable organization"になります。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="args" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> または <ph id="ph2">&lt;paramref name="args" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="args" /&gt;</ph> array.</source>
          <target state="translated">書式項目のインデックスが 0 より小さいか、<ph id="ph1">&lt;paramref name="args" /&gt;</ph> 配列の長さ以上です。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The object to format.</source>
          <target state="translated">書式指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Each format item is replaced by the string representation of a single argument using a specified format provider.</source>
          <target state="translated">各書式項目は、指定された書式プロバイダーを使用して単一の引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> in which any format specification is replaced by the string representation of <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>.</source>
          <target state="translated">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <ph id="ph1">&lt;paramref name="format" /&gt;</ph> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、<ph id="ph2">&lt;paramref name="arg0" /&gt;</ph> の文字列形式に置換されています。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of <ph id="ph1">`arg0`</ph> to its text representation and embed that representation in the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>の値を変換する .NET Framework の<ph id="ph1">`arg0`</ph>をテキスト形式および現在の表現を埋め込む<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダー、書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The index of each format item must be zero (0) since this method includes an argument list with a single argument.</source>
          <target state="translated">各書式項目のインデックスは、このメソッドには、単一の引数、引数リストが含まれているために、ゼロ (0) にすることがあります。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of <ph id="ph1">`arg0`</ph>.</source>
          <target state="translated">フォーマット処理の各書式項目の形式に置換文字列の<ph id="ph1">`arg0`</ph>します。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>In this case, since the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> method has a single argument in the argument list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">この場合、以降、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph>メソッドは、引数リストの値の 1 つの引数を持つ<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>常に 0 にある必要があります。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If it is not, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">ない場合は、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for the objects in <ph id="ph3">`args`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターを指定します、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装内のオブジェクトの書式情報を提供できる<ph id="ph3">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> は、次のいずれかになります。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>カルチャに固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> if it is a numeric value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`arg0`</ph>数値である場合。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> if it is a date and time value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`arg0`</ph>日付と時刻の値である場合。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">カスタム<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>に対する書式設定情報を提供する実装<ph id="ph2">`arg0`</ph>です。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">通常、このようなも実装する、<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, formatting information is obtained from the current culture.</source>
          <target state="translated">場合、<ph id="ph1">`provider`</ph>パラメーターは<ph id="ph2">`null`</ph>、書式設定情報は、現在のカルチャから取得します。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">`arg0`</ph> represents the object to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 書式設定するオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>の文字列形式に置き換えられます<ph id="ph2">`arg0`</ph>です。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and <ph id="ph2">`arg0`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg0.ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>と<ph id="ph2">`arg0`</ph>を実装する、<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>インターフェイスし<ph id="ph4">`arg0.ToString(formatString, provider)`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg0.ToString()`</ph> defines the formatting.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`arg0.ToString()`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The following includes two calls to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">次に 2 つの呼び出しが含まれています、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Both use the formatting conventions of the English-Great Britain (en-GB) culture.</source>
          <target state="translated">両方は、英語-「Great britain」(EN-GB) カルチャの書式指定規則を使用します。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The first inserts the string representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value currency in a result string.</source>
          <target state="translated">最初の文字列形式に挿入、<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>結果の文字列に通貨の値します。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The second inserts a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value in two places in a result string, the first including only the short date string and the second the short time string.</source>
          <target state="translated">2 番目の挿入、<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>最初など、短い日付文字列と 2 番目、短い形式の時刻文字列のみ、結果内の 2 か所に値が文字列します。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to one (1).</source>
          <target state="translated">書式項目のインデックスが 0 (ゼロ) より小さいか、または 1 以上です。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>An array of objects to format.</source>
          <target state="translated">書式指定するオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</source>
          <target state="translated">各書式項目は、指定された書式プロバイダーを使用した、パラメーター配列内の対応する引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <ph id="ph1">&lt;paramref name="format" /&gt;</ph> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、対応するオブジェクト引数の文字列形式に置換されています。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">書式設定プロセスでは、対応するオブジェクトの文字列形式を各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for the objects in <ph id="ph3">`args`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターを指定します、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装内のオブジェクトの書式情報を提供できる<ph id="ph3">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> は、次のいずれかになります。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>カルチャに固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for numeric values in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>内の数値のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for date and time values in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>日付と時刻の値のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for one or more of the objects in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">カスタム<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>内のオブジェクトの 1 つ以上の書式情報を提供する実装<ph id="ph2">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">通常、このようなも実装する、<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The second example in the next section illustrates an <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method call with a custom <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">次のセクションでは、2 番目の例を示しています、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>メソッドの呼び出しをカスタム<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">場合、<ph id="ph1">`provider`</ph>パラメーターは<ph id="ph2">`null`</ph>、現在のカルチャから書式プロバイダーの情報を取得します。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">`args`</ph> represents the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 書式設定するオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the corresponding object in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>内の対応するオブジェクトの文字列形式に置き換えられます<ph id="ph2">`args`</ph>です。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>とで対応するオブジェクト<ph id="ph2">`args`</ph>を実装する、<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>インターフェイス、<ph id="ph4">`args[index].ToString(formatString, provider)`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Otherwise, <ph id="ph1">`args[index].ToString()`</ph> defines the formatting.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">`args[index].ToString()`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation named <ph id="ph2">`CustomerFormatter`</ph> that formats a 10-digit customer number with hyphens after the fourth and seventh digits.</source>
          <target state="translated">次の例では、カスタム<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>という名前の実装<ph id="ph2">`CustomerFormatter`</ph>4 番目と 7 番目の数字の後 10 桁の顧客をハイフン番号の書式を設定します。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>It is passed to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to create a string that includes the formatted customer number and customer name.</source>
          <target state="translated">渡される、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph>メソッドを書式設定された顧客番号や顧客名などの文字列を作成します。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="args" /&gt;</ph> array.</source>
          <target state="translated">書式項目のインデックスが 0 より小さいか、<ph id="ph1">&lt;paramref name="args" /&gt;</ph> 配列の長さ以上です。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">1 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">2 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of two arguments.</source>
          <target state="translated">各書式項目は、2 つの引数のどちらかの文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が追加されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> の各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to <ph id="ph2">`arg0`</ph> and <ph id="ph3">`arg1`</ph>, the two objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダーに対応する書式指定項目と呼ばれる個以上のテキストを混在させる<ph id="ph2">`arg0`</ph>と<ph id="ph3">`arg1`</ph>、このメソッドのパラメーター リスト内の 2 つのオブジェクト。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">書式設定プロセスでは、対応するオブジェクトの文字列形式を各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph> and <ph id="ph2">`arg1`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> および<ph id="ph2">`arg1`</ph>書式設定するオブジェクトを表しています。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of either <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph>.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>はいずれかの文字列形式に置き換えられます<ph id="ph2">`arg0`</ph>または<ph id="ph3">`arg1`</ph>です。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph3">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph4">`.ToString(formatString, provider)`</ph> defines the formatting, where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the index of the argument.</source>
          <target state="translated">書式指定項目が含まれている場合<ph id="ph1">`formatString`</ph>し、対応するオブジェクトを実装する、<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>インターフェイス  <ph id="ph3">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph4">`.ToString(formatString, provider)`</ph>を定義、書式設定、ここで<bpt id="p2">*</bpt>x<ept id="p2">*</ept>引数のインデックスです。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph2">`.ToString()`</ph> defines the formatting.</source>
          <target state="translated">それ以外の場合、 <ph id="ph1">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph2">`.ToString()`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">代入された文字列場合<ph id="ph1">`format`</ph>は"の donation いただきありがとうございます {0: ###} food to our charitable organization. の cans"。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">および<ph id="ph1">`arg0`</ph>整数値 10 を戻り値は"Thank you for your donation of 10 cans of food to our charitable organization"になります。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 2.</source>
          <target state="translated">書式項目のインデックスが 0 (ゼロ) 未満か、または 2 以上です。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">1 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">2 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of two arguments using a specified format provider.</source>
          <target state="translated">各書式項目は、指定された書式プロバイダーを使用して 2 つの引数のいずれかの文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <ph id="ph1">&lt;paramref name="format" /&gt;</ph> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、対応するオブジェクト引数の文字列形式に置換されています。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">書式設定プロセスでは、対応するオブジェクトの文字列形式を各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for <ph id="ph3">`arg0`</ph> and <ph id="ph4">`arg1`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターを指定します、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>に対する書式設定情報を提供できる実装<ph id="ph3">`arg0`</ph>と<ph id="ph4">`arg1`</ph>です。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> は、次のいずれかになります。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>カルチャに固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are numeric values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`arg0`</ph>または<ph id="ph3">`arg1`</ph>数値を指定している場合。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are date and time values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`arg0`</ph>または<ph id="ph3">`arg1`</ph>場合は、日付と時刻の値。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph> and <ph id="ph3">`arg1`</ph>.</source>
          <target state="translated">カスタム<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>に対する書式設定情報を提供する実装<ph id="ph2">`arg0`</ph>と<ph id="ph3">`arg1`</ph>です。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">通常、このようなも実装する、<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">場合、<ph id="ph1">`provider`</ph>パラメーターは<ph id="ph2">`null`</ph>、現在のカルチャから書式プロバイダーの情報を取得します。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph> and <ph id="ph2">`arg1`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> および<ph id="ph2">`arg1`</ph>書式設定するオブジェクトを表しています。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the object that has the corresponding index.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>を対応するインデックスを持つオブジェクトの文字列形式に置き換えられます。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding argument implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then the argument's <ph id="ph3">`ToString(formatString, provider)`</ph> method defines the formatting.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>し、対応する引数を実装する、<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>インターフェイス、引数の<ph id="ph3">`ToString(formatString, provider)`</ph>メソッドは、書式を定義します。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Otherwise, the argument's <ph id="ph1">`ToString()`</ph> method defines the formatting.</source>
          <target state="translated">それ以外の場合、引数の<ph id="ph1">`ToString()`</ph>メソッドは、書式を定義します。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method to display time and temperature data stored in a generic <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> object.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29&gt;</ph>ジェネリック型に格納されている時刻と温度のデータを表示するメソッドを<ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Note that the format string has three format items, although there are only to objects to format.</source>
          <target state="translated">書式設定するオブジェクトのみにありますが書式指定文字列が次の 3 つの書式項目を持つことに注意してください。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</source>
          <target state="translated">これは、(日付と時刻の値) の一覧の最初のオブジェクトが 2 つの書式指定項目によって使用されるため、: 最初書式項目が表示されます、時刻、および 2 番目の日付を表示します。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</source>
          <target state="translated">書式項目のインデックスが 0 (ゼロ) 未満か、または 2 以上です。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">1 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">2 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format.</source>
          <target state="translated">3 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of three arguments.</source>
          <target state="translated">各書式項目は、3 つの引数のいずれかの文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が追加されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> の各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to <ph id="ph2">`arg0`</ph> through <ph id="ph3">`arg2`</ph>, the objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダーに対応する書式指定項目と呼ばれる個以上のテキストを混在させる<ph id="ph2">`arg0`</ph>を通じて<ph id="ph3">`arg2`</ph>、このメソッドのパラメーター リスト内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">書式設定プロセスでは、対応するオブジェクトの文字列形式を各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph>, <ph id="ph2">`arg1`</ph>, and <ph id="ph3">`arg2`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph>、 <ph id="ph2">`arg1`</ph>、および<ph id="ph3">`arg2`</ph>書式設定するオブジェクトを表しています。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of either <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, or <ph id="ph4">`arg2`</ph>, depending on the index of the format item.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>はいずれかの文字列形式に置き換えられます<ph id="ph2">`arg0`</ph>、 <ph id="ph3">`arg1`</ph>、または<ph id="ph4">`arg2`</ph>書式指定項目のインデックスによっては、します。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph5">`.ToString(formatString, null)`</ph> defines the formatting, where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the index of the argument.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>とで対応するオブジェクト<ph id="ph2">`args`</ph>を実装する、<ph id="ph3">&lt;xref:System.IFormattable&gt;</ph>インターフェイス、 <ph id="ph4">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph5">`.ToString(formatString, null)`</ph>を定義、書式設定、ここで<bpt id="p2">*</bpt>x<ept id="p2">*</ept>引数のインデックスは、します。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph2">`.ToString()`</ph> defines the formatting.</source>
          <target state="translated">それ以外の場合、 <ph id="ph1">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph2">`.ToString()`</ph>書式を定義します。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">代入された文字列場合<ph id="ph1">`format`</ph>は"の donation いただきありがとうございます {0: ###} food to our charitable organization. の cans"。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">および<ph id="ph1">`arg0`</ph>整数値 10 を戻り値は"Thank you for your donation of 10 cans of food to our charitable organization"になります。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 3.</source>
          <target state="translated">書式項目のインデックスが 0 (ゼロ) 未満か、または 3 以上です。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">1 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">2 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format.</source>
          <target state="translated">3 番目に書式設定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of three arguments using a specified format provider.</source>
          <target state="translated">各書式項目は、指定された書式プロバイダーを使用して 3 つの引数のいずれかの文字列形式に置換されます。各書式項目は、指定された書式プロバイダーを使用して 3 つの引数のいずれかの文字列形式に置換されます。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <ph id="ph1">&lt;paramref name="format" /&gt;</ph> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、対応するオブジェクト引数の文字列形式に置換されています。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">このメソッドを使用して、<bpt id="p1">[</bpt>複合書式指定機能<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>をテキスト形式のオブジェクトの値を変換し、現在の表現を埋め込むには、.NET Framework の<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターは、0 または 1 つ以上のインデックス付きプレース ホルダー、このメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストを混在させます。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">書式設定プロセスでは、対応するオブジェクトの文字列形式を各書式項目を置き換えます。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">書式指定項目の構文は次のとおりです。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">オブジェクトを指定して場合<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>は<ph id="ph1">`null`</ph>、書式指定項目が置き換え<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">内のパラメーターが存在しない場合、<bpt id="p1">*</bpt>インデックス<ept id="p1">*</ept>、位置、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">パラメーターの文字列表記で文字の最小数。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">正の値は、パラメーター右揃えになります。負の場合は、左揃えをお勧めします。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の日付と時刻の書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタムの日付と時刻の書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値と共に使用される標準およびカスタムの書式文字列を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">列挙体と共に使用する標準書式指定文字列を参照してください。<bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for <ph id="ph3">`arg0`</ph> and <ph id="ph4">`arg1`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターを指定します、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>に対する書式設定情報を提供できる実装<ph id="ph3">`arg0`</ph>と<ph id="ph4">`arg1`</ph>です。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> は、次のいずれかになります。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>カルチャに固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are numeric values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`arg0`</ph>または<ph id="ph3">`arg1`</ph>数値を指定している場合。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, or <ph id="ph4">`arg2`</ph> if they are date and time values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>のカルチャに固有の書式情報を提供するオブジェクト<ph id="ph2">`arg0`</ph>、 <ph id="ph3">`arg1`</ph>、または<ph id="ph4">`arg2`</ph>場合は、日付と時刻の値。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph>,  <ph id="ph3">`arg1`</ph>, and <ph id="ph4">`arg2`</ph>.</source>
          <target state="translated">カスタム<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>に対する書式設定情報を提供する実装<ph id="ph2">`arg0`</ph>、 <ph id="ph3">`arg1`</ph>、および<ph id="ph4">`arg2`</ph>です。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">通常、このようなも実装する、<ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">場合、<ph id="ph1">`provider`</ph>パラメーターは<ph id="ph2">`null`</ph>、現在のカルチャから書式プロバイダーの情報を取得します。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph>, <ph id="ph2">`arg1`</ph>, and <ph id="ph3">`arg2`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph>、 <ph id="ph2">`arg1`</ph>、および<ph id="ph3">`arg2`</ph>書式設定するオブジェクトを表しています。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the object that has the corresponding index.</source>
          <target state="translated">各書式項目<ph id="ph1">`format`</ph>を対応するインデックスを持つオブジェクトの文字列形式に置き換えられます。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding argument implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then the argument's <ph id="ph3">`ToString(formatString, provider)`</ph> method defines the formatting.</source>
          <target state="translated">書式指定項目が含まれる場合<ph id="ph1">`formatString`</ph>し、対応する引数を実装する、<ph id="ph2">&lt;xref:System.IFormattable&gt;</ph>インターフェイス、引数の<ph id="ph3">`ToString(formatString, provider)`</ph>メソッドは、書式を定義します。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Otherwise, the argument's <ph id="ph1">`ToString()`</ph> method defines the formatting.</source>
          <target state="translated">それ以外の場合、引数の<ph id="ph1">`ToString()`</ph>メソッドは、書式を定義します。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method to illustrate the result of a Boolean <ph id="ph2">`And`</ph> operation with integer values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph>ブール値の結果を示すためにメソッド<ph id="ph2">`And`</ph>整数値で操作します。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Note that the format string includes six format items, but the method has only three items in its argument list, because each item is formatted in two different ways.</source>
          <target state="translated">各項目が 2 つの方法で書式設定されたため、書式指定文字列には、6 つの書式項目が含まれていますが、メソッドの引数リストにのみの 3 つの項目に注意してください。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</source>
          <target state="translated">書式項目のインデックスが 0 (ゼロ) 未満か、3 以上です。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">文字列を展開すると、長さが <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</source>
          <target state="translated">既定の行終端記号、または指定した文字列のコピーと既定の行終端記号を、このインスタンスの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>Appends the default line terminator to the end of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">既定の行終端記号を現在の <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> オブジェクトの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The default line terminator is the current value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">既定の行終端記号はの現在の値、<ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The string to append.</source>
          <target state="translated">追加する文字列。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>Appends a copy of the specified string followed by the default line terminator to the end of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">指定した文字列のコピーと既定の行終端記号を、現在の <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> オブジェクトの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">追加操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The default line terminator is the current value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">既定の行終端記号はの現在の値、<ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</source>
          <target state="translated">現在のインスタンスによって割り当てられたメモリに格納できる最大文字数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The maximum number of characters that can be contained in the memory allocated by the current instance.</source>
          <target state="translated">現在のインスタンスによって割り当てられたメモリに格納できる最大文字数。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>Its value can range from <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> to <ph id="ph2">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">この値の範囲は <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> ～ <ph id="ph2">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> does not affect the string value of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 現在のインスタンスの文字列値には影響しません。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> can be decreased as long as it is not less than <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> にない限り、縮小の下限より小さい<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> dynamically allocates more space when required and increases <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> accordingly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>動的に必要な場合より多くの領域を割り当てますなり<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>適切です。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>For performance reasons, a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> might allocate more memory than needed.</source>
          <target state="translated">パフォーマンス向上のため、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>必要に応じてより多くのメモリを割り当てることがあります。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The amount of memory allocated is implementation-specific.</source>
          <target state="translated">割り当てられたメモリの量は、実装に固有です。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>The value specified for a set operation is less than the current length of this instance.</source>
          <target state="translated">設定操作に指定された値は、このインスタンスの現在の長さより小さい値です。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>The value specified for a set operation is greater than the maximum capacity.</source>
          <target state="translated">設定操作に指定された値は、最大容量を超えています。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The position of the character.</source>
          <target state="translated">文字の位置。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>Gets or sets the character at the specified character position in this instance.</source>
          <target state="translated">このインスタンス内の指定した文字位置の文字を取得または設定します。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The Unicode character at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 位置の Unicode 文字。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The <ph id="ph1">`index`</ph> parameter is the position of a character within the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`index`</ph>パラメーターは内の文字の位置、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The first character in the string is at index 0.</source>
          <target state="translated">文字列の最初の文字では、インデックス 0 位置です。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The length of a string is the number of characters it contains.</source>
          <target state="translated">文字列の長さは、それに含まれる文字の数です。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The last accessible character of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance is at index <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> - 1.</source>
          <target state="translated">アクセスの最後の文字、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>インスタンス インデックス位置にある<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>- 1。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> is the default property of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 既定のプロパティは、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>In C#, it is an indexer.</source>
          <target state="translated">C# では、インデクサーです。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>This means that individual characters can be retrieved from the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property as shown in the following example, which counts the number of alphabetic, white-space, and punctuation characters in a string.</source>
          <target state="translated">つまり、個々 の文字をから取得できること、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph>ホワイト スペース、アルファベットの数をカウントするには、次の例で示すようにプロパティと、文字列の区切り文字。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>Performance and character-based indexing</source>
          <target state="translated">パフォーマンスと文字ベースのインデックス作成</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the bounds of this instance while setting a character.</source>
          <target state="translated">文字の設定において、<ph id="ph1">&lt;paramref name="index" /&gt;</ph> がこのインスタンスの境界外です。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the bounds of this instance while getting a character.</source>
          <target state="translated">文字の取得において、<ph id="ph1">&lt;paramref name="index" /&gt;</ph> がこのインスタンスの境界外です。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Clear">
          <source>Removes all characters from the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> インスタンスからすべての文字を削除します。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Clear">
          <source>An object whose <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> が 0 (ゼロ) であるオブジェクト。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> is a convenience method that is equivalent to setting the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property of the current instance to 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 設定に相当する便利なメソッドは、 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 0 (ゼロ) に現在のインスタンスのプロパティです。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source>Calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method does not modify the current instance's <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>メソッドでは、現在のインスタンスは変更しません<ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object with a string, calls the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method, and then appends a new string.</source>
          <target state="translated">次の例のインスタンスを作成、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>呼び出し文字列でオブジェクト、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph>メソッドを新しい文字列を追加します。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting position in this instance where characters will be copied from.</source>
          <target state="translated">このインスタンスにおける文字のコピーの開始位置。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">インデックスの値は、0 から始まります。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The array where characters will be copied.</source>
          <target state="translated">文字のコピー先となる配列。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> where characters will be copied.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> における文字のコピーの開始位置。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">インデックスの値は、0 から始まります。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to be copied.</source>
          <target state="translated">コピーする文字数。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Copies the characters from a specified segment of this instance to a specified segment of a destination <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> array.</source>
          <target state="translated">このインスタンスの指定したセグメントにある文字を、目的の <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> 配列の指定したセグメントにコピーします。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to an array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph>メソッドの連続するセクションを効率的にコピーする必要がある場合、まれな状況で使用するためのものが、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを配列にします。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The array should be a fixed size, preallocated, reusable, and possibly globally accessible.</source>
          <target state="translated">配列を固定サイズで事前に割り当てられた、再利用可能なおよびグローバルに可能性のあるアクセス可能にする必要があります。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>For example, your application could populate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object with a large number of characters then use the <ph id="ph2">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method to copy small, successive pieces of the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to an array where the pieces are processed.</source>
          <target state="translated">でした、アプリケーションの設定など、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>文字の数が多いオブジェクトを使用して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph>に小さな、連続する部分をコピーする方法、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを配列の断片が処理されます。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>When all the data in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is processed, the size of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object is set to zero and the cycle is repeated.</source>
          <target state="translated">ときにすべてのデータを<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを処理するのサイズ、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトが 0 に設定され、サイクルが繰り返されます。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destinationIndex" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="count" /&gt;</ph>, is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="destinationIndex" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph> がこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> がこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destinationIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> が <ph id="ph4">&lt;paramref name="destination" /&gt;</ph> の長さを超えています。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The minimum capacity to ensure.</source>
          <target state="translated">必要な最小容量。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>Ensures that the capacity of this instance of <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> is at least the specified value.</source>
          <target state="translated">このインスタンスの <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> の容量が、指定した値以上になるようにします。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The new capacity of this instance.</source>
          <target state="translated">このインスタンスの新しい容量。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>If the current capacity is less than the <ph id="ph1">`capacity`</ph> parameter, memory for this instance is reallocated to hold at least <ph id="ph2">`capacity`</ph> number of characters; otherwise, no memory is changed.</source>
          <target state="translated">場合は、現在の容量より小さい<ph id="ph1">`capacity`</ph>パラメーター、このインスタンスのメモリが再割り当てには、少なくともを保持する<ph id="ph2">`capacity`</ph>文字の数です。 それ以外の場合、メモリは変更されません。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">対象のインスタンスと比較する対象のオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance and <ph id="ph2">&lt;paramref name="sb" /&gt;</ph> have equal string, <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.Capacity" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> values; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph2">&lt;paramref name="sb" /&gt;</ph> が同じ文字列、<ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.Capacity" /&gt;</ph> 値、および <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 値を保持している場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Equals%2A&gt;</ph> method to check whether two <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> objects are equal.</source>
          <target state="translated">次のコードでは、 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Equals%2A&gt;</ph> 2 つあるかどうかを確認する方法を<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトが等しい。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>The method is called repeatedly after small changes are made to each object, and the results are displayed to the console.</source>
          <target state="translated">メソッドは、各オブジェクトに小さな変更を加えるし、結果がコンソールに表示されます後に繰り返し呼び出されます。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Inserts the string representation of a specified object into this instance at a specified character position.</source>
          <target state="translated">指定されたオブジェクトの文字列表記をこのインスタンスの指定された文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Inserts the string representation of a Boolean value into this instance at the specified character position.</source>
          <target state="translated">Boolean 値の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">必要に応じて容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">指定した 8 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Inserts the string representation of a specified Unicode character into this instance at the specified character position.</source>
          <target state="translated">指定した Unicode 文字の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The character array to insert.</source>
          <target state="translated">挿入する文字配列。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</source>
          <target state="translated">指定した Unicode 文字の配列の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> is not changed.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>は変更されません。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Inserts the string representation of a decimal number into this instance at the specified character position.</source>
          <target state="translated">10 進数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source><ph id="ph1">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</source>
          <target state="translated">倍精度浮動小数点数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source><ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">指定した 16 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;xref:System.Int16.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int16.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">指定した 32 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">64 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The object to insert, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">挿入するオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Inserts the string representation of an object into this instance at the specified character position.</source>
          <target state="translated">オブジェクトの文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the value of this instance is unchanged.</source>
          <target state="translated">場合<ph id="ph1">`value`</ph>は<ph id="ph2">`null`</ph>、このインスタンスの値は変更されません。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">指定した 8 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source><ph id="ph1">&lt;xref:System.SByte.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.SByte.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">必要に応じて容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</source>
          <target state="translated">単精度浮動小数点数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The string to insert.</source>
          <target state="translated">挿入する文字列。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>Inserts a string into this instance at the specified character position.</source>
          <target state="translated">文字列をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">必要に応じて容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>This instance of <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> is not changed if <ph id="ph2">`value`</ph> is <ph id="ph3">`null`</ph>, or <ph id="ph4">`value`</ph> is not <ph id="ph5">`null`</ph> but its length is zero.</source>
          <target state="translated">このインスタンス<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>場合は変更されません<ph id="ph2">`value`</ph>は<ph id="ph3">`null`</ph>、または<ph id="ph4">`value`</ph>は<ph id="ph5">`null`</ph>が、その長さが 0 です。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the current length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、このインスタンスの現在の長さを超えています。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The current length of this <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object plus the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> exceeds <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> オブジェクトの現在の長さと <ph id="ph2">&lt;paramref name="value" /&gt;</ph> の長さを足した値が <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えています。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">16 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source><ph id="ph1">&lt;xref:System.UInt16.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt16.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">32 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source><ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The value to insert.</source>
          <target state="translated">挿入する値。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">64 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source><ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> 文字列表現を取得するために使用<ph id="ph2">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、またはこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph>以前のバージョンでは、このメソッドの呼び出しをスローし、<ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph>を挿入する場合<ph id="ph3">&lt;paramref name="value" /&gt;</ph>オブジェクトの合計の長さを超える原因となる<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>がスローされます、<ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The string to insert.</source>
          <target state="translated">挿入する文字列。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The number of times to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> を挿入する回数。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>Inserts one or more copies of a specified string into this instance at the specified character position.</source>
          <target state="translated">指定した文字列の 1 つ以上のコピーをこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>A reference to this instance after insertion has completed.</source>
          <target state="translated">挿入が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>This <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is not changed if <ph id="ph2">`value`</ph> is <ph id="ph3">`null`</ph>, <ph id="ph4">`value`</ph> is not <ph id="ph5">`null`</ph> but its length is zero, or <ph id="ph6">`count`</ph> is zero.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>場合、オブジェクトが変更されていない<ph id="ph2">`value`</ph>は<ph id="ph3">`null`</ph>、<ph id="ph4">`value`</ph>は<ph id="ph5">`null`</ph>が、その長さが 0、または<ph id="ph6">`count`</ph>ゼロです。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the current length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が、0 未満か、このインスタンスの現在の長さを超えています。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The current length of this <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object plus the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> times <ph id="ph3">&lt;paramref name="count" /&gt;</ph> exceeds <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> オブジェクトの現在の長さと、<ph id="ph2">&lt;paramref name="value" /&gt;</ph> に <ph id="ph3">&lt;paramref name="count" /&gt;</ph> をかけたものを足した値が、<ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えています。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">このインスタンスにおける挿入の開始位置。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>A character array.</source>
          <target state="translated">文字配列。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting index within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 内の開始インデックス。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to insert.</source>
          <target state="translated">挿入する文字数。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</source>
          <target state="translated">Unicode 文字の指定した部分配列の文字列形式をこのインスタンスの指定した文字位置に挿入します。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">挿入操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">新しいテキスト用に確保するためには、既存の文字がシフトします。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">必要に応じて、このインスタンスの容量が調整されます。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> であり、<ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> と <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> が 0 以外の値です。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>、<ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> がこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is not a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> に <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> を加算した値が、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> 内にない位置を示しています。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Length">
          <source>Gets or sets the length of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> オブジェクトの長さを取得または設定します。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The length of this instance.</source>
          <target state="translated">このインスタンスの長さ。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The length of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is defined by its number of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">長さ、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>の番号でオブジェクトが定義されている<ph id="ph2">&lt;xref:System.Char&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>Like the <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property indicates the length of the current string object.</source>
          <target state="translated">同様に、 <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> 、プロパティ、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>プロパティは現在の string オブジェクトの長さを示します。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>Unlike the <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property allows you to modify the length of the string stored to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">異なり、<ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph>プロパティは読み取り専用になり、<ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>プロパティに格納されている文字列の長さを変更することができます、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is less than the current length, the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is truncated to the specified length.</source>
          <target state="translated">指定した長さは、現在、現在の長さよりも小さいかどうか<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトは、指定された長さに切り詰められます。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is greater than the current length, the end of the string value of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is padded with the Unicode NULL character (U+0000).</source>
          <target state="translated">指定された長さが現在の長さでは、現在の文字列値の末尾より大きいかどうか<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトは、Unicode NULL 文字で埋められます (u+0000)。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is greater than the current capacity, <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> increases so that it is greater than or equal to the specified length.</source>
          <target state="translated">指定された長さが、現在の容量を超える場合<ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph>されるように指定した長さ以上に増加します。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Length">
          <source>The value specified for a set operation is less than zero or greater than <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">set 操作に指定された値が 0 より小さいか、<ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えています。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>Gets the maximum capacity of this instance.</source>
          <target state="translated">このインスタンスの最大容量を取得します。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>The maximum number of characters this instance can hold.</source>
          <target state="translated">このインスタンスが保持できる最大文字数。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>The maximum capacity for this implementation is <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">この実装の最大容量は<ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>However, this value is implementation-specific and might be different in other or later implementations.</source>
          <target state="translated">ただし、この値は実装固有で、またはそれ以降の実装では異なる可能性があります。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>You can explicitly set the maximum capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">最大容量を明示的に設定することができます、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを呼び出して、<ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph4">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>と<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>をインスタンス化するときに、<ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを呼び出すことによって、<ph id="ph4">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph>コンス トラクター、長さと容量の両方、<ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph>インスタンスは、の値を超えることができます、<ph id="ph6">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> methods to append small strings.</source>
          <target state="translated">これは特にを呼び出したときに発生、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>短い文字列を追加する方法です。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The number of characters to remove.</source>
          <target state="translated">削除する文字数。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>Removes the specified range of characters from this instance.</source>
          <target state="translated">このインスタンスから、指定した範囲の文字を削除します。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>A reference to this instance after the excise operation has completed.</source>
          <target state="translated">削除操作が完了した後のこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The current method removes the specified range of characters from the current instance.</source>
          <target state="translated">現在のメソッドは、現在のインスタンスから指定された文字の範囲を削除します。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The characters at (<ph id="ph1">`startIndex`</ph><ph id="ph2"> + </ph><ph id="ph3">`length`</ph>) are moved to <ph id="ph4">`startIndex`</ph>, and the string value of the current instance is shortened by <ph id="ph5">`length`</ph>.</source>
          <target state="translated">文字 (<ph id="ph1">`startIndex`</ph><ph id="ph2"> + </ph><ph id="ph3">`length`</ph>) に移動されます<ph id="ph4">`startIndex`</ph>として、現在のインスタンスの文字列値を短縮<ph id="ph5">`length`</ph>です。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The capacity of the current instance is unaffected.</source>
          <target state="translated">現在のインスタンスの容量は、影響はありません。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method modifies the value of the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> instance and returns that instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph>メソッドは、現在の値を変更<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>をインスタンス化し、そのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>It does not create and return a new <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">それを作成して返す新しい<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero, or <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;paramref name="length" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> または <ph id="ph2">&lt;paramref name="length" /&gt;</ph> が 0 未満か、<ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;paramref name="length" /&gt;</ph> がこのインスタンスの長さを超えています。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Replaces all occurrences of a specified character or string in this instance with another specified character or string.</source>
          <target state="translated">このインスタンスに出現する指定文字または指定文字列をすべて、別に指定した文字または文字列に置換します。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The character to replace.</source>
          <target state="translated">置換する文字。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The character that replaces <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept> を置換する文字。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>Replaces all occurrences of a specified character in this instance with another specified character.</source>
          <target state="translated">このインスタンスに出現する指定文字をすべて、別に指定した文字に置換します。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> が <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph> に置換されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldChar`</ph> in the current instance.</source>
          <target state="translated">このメソッドの出現を識別する序数に基づく小文字を区別する比較を実行する<ph id="ph1">`oldChar`</ph>現在のインスタンス。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The size of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance is unchanged after the replacement.</source>
          <target state="translated">現在のサイズ<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>インスタンスには、置換後は変更されません。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The string to replace.</source>
          <target state="translated">置換する文字列。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The string that replaces <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> を置換する文字列、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>Replaces all occurrences of a specified string in this instance with another specified string.</source>
          <target state="translated">このインスタンスに出現するすべての指定した文字列を、別の指定した文字列に置換します。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>A reference to this instance with all instances of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> のすべてのインスタンスが <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph> に置換されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldValue`</ph> in the current instance.</source>
          <target state="translated">このメソッドの出現を識別する序数に基づく小文字を区別する比較を実行する<ph id="ph1">`oldValue`</ph>現在のインスタンス。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>If <ph id="ph1">`newValue`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, all occurrences of <ph id="ph4">`oldValue`</ph> are removed.</source>
          <target state="translated">場合<ph id="ph1">`newValue`</ph>は<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>、出現するすべての<ph id="ph4">`oldValue`</ph>が削除されます。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> の長さが 0 です。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The character to replace.</source>
          <target state="translated">置換する文字。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The character that replaces <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept> を置換する文字。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The position in this instance where the substring begins.</source>
          <target state="translated">このインスタンスにおける部分文字列の開始位置。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">部分文字列の長さ。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</source>
          <target state="translated">このインスタンスの部分文字列に出現するすべての指定した文字を、別の指定した文字に置換します。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph> in the range from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> -1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> から <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> -1 までの範囲内で、<ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> が <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph> に置換されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldChar`</ph> in the current instance.</source>
          <target state="translated">このメソッドの出現を識別する序数に基づく小文字を区別する比較を実行する<ph id="ph1">`oldChar`</ph>現在のインスタンス。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The size of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is unchanged after the replacement.</source>
          <target state="translated">現在のサイズ<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトには、置換後は変更されません。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of the value of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>このインスタンスの値の長さを超えています。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The string to replace.</source>
          <target state="translated">置換する文字列。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The string that replaces <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> を置換する文字列、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The position in this instance where the substring begins.</source>
          <target state="translated">このインスタンスにおける部分文字列の開始位置。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">部分文字列の長さ。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</source>
          <target state="translated">このインスタンスの部分文字列に出現するすべての指定した文字列を、別の指定した文字列に置換します。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>A reference to this instance with all instances of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph> in the range from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> - 1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> から <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> 1 までの範囲内で、<ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> のすべてのインスタンスが <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph> に置換されたこのインスタンスへの参照。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldValue`</ph> in the specified substring.</source>
          <target state="translated">このメソッドの出現を識別する序数に基づく小文字を区別する比較を実行する<ph id="ph1">`oldValue`</ph>で指定された部分文字列。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`newValue`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, all occurrences of <ph id="ph4">`oldValue`</ph> are removed.</source>
          <target state="translated">場合<ph id="ph1">`newValue`</ph>は<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>、出現するすべての<ph id="ph4">`oldValue`</ph>が削除されます。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> の長さが 0 です。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> indicates a character position not within this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> と <ph id="ph2">&lt;paramref name="count" /&gt;</ph> を足した数が、このインスタンス内にない文字位置を示しています。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を増やすと <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> を超えます。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with serialization information.</source>
          <target state="translated">シリアル化情報が設定されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The place to store and retrieve serialized data.</source>
          <target state="translated">シリアル化データを格納および取得する場所。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reserved for future use.</source>
          <target state="translated">将来使用するために予約されています。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data necessary to deserialize the current <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> オブジェクトに、現在の <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> オブジェクトの逆シリアル化に必要なデータを入力します。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">`context`</ph> parameter is reserved for future use and does not participate in this operation.</source>
          <target state="translated"><ph id="ph1">`context`</ph>パラメーターは将来使用するために予約されていると、この操作に参加していません。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Converts the value of a <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> の値を <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString">
          <source>Converts the value of this instance to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの値を <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString">
          <source>A string whose value is the same as this instance.</source>
          <target state="translated">このインスタンスと同じ値の文字列。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>You must call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph5">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>に変換する方法、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.String&gt;</ph>オブジェクトで表される文字列を渡す前に、<ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを持つメソッドを<ph id="ph5">&lt;xref:System.String&gt;</ph>パラメーターまたはユーザー インターフェイスに表示します。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> メソッドを呼び出す方法を示しています。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">この例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The starting position of the substring in this instance.</source>
          <target state="translated">このインスタンス内の部分文字列の開始位置。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">部分文字列の長さ。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>Converts the value of a substring of this instance to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">このインスタンスの部分文字列の値を <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> に変換します。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>A string whose value is the same as the specified substring of this instance.</source>
          <target state="translated">このインスタンスの指定した部分文字列と同じ値の文字列。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph5">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph>に変換する方法、<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.String&gt;</ph>オブジェクトで表される文字列を渡す前に、<ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph>オブジェクトを持つメソッドを<ph id="ph5">&lt;xref:System.String&gt;</ph>パラメーターまたはユーザー インターフェイスに表示します。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> または <ph id="ph2">&lt;paramref name="length" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> と <ph id="ph2">&lt;paramref name="length" /&gt;</ph> の合計値が、現在のインスタンスの長さを超えています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>