<Type Name="StringBuilder" FullName="System.Text.StringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68ced1dc453efaf4e152c451e7c5446f89d298fc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39998814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StringBuilder : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit StringBuilder extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Text.StringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StringBuilder&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringBuilder sealed : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type StringBuilder = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="813f4-101">可変型の文字列を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="813f4-101">Represents a mutable string of characters.</span>
      </span>
      <span data-ttu-id="813f4-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="813f4-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-103">このクラスは、値が変更可能な一連の文字の文字列のようなオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-103">This class represents a string-like object whose value is a mutable sequence of characters.</span></span>  
  
 <span data-ttu-id="813f4-104">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="813f4-104">In this section:</span></span>  
  
-   [<span data-ttu-id="813f4-105">文字列と StringBuilder 型</span><span class="sxs-lookup"><span data-stu-id="813f4-105">The String and StringBuilder types</span></span>](#StringAndSB)  
  
-   [<span data-ttu-id="813f4-106">StringBuilder のしくみ</span><span class="sxs-lookup"><span data-stu-id="813f4-106">How StringBuilder works</span></span>](#HowWorks)  
  
-   [<span data-ttu-id="813f4-107">メモリの割り当て</span><span class="sxs-lookup"><span data-stu-id="813f4-107">Memory allocation</span></span>](#Memory)  
  
-   [<span data-ttu-id="813f4-108">StringBuilder オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="813f4-108">Instantiating a StringBuilder object</span></span>](#Instantiating)  
  
-   [<span data-ttu-id="813f4-109">StringBuilder のメソッドを呼び出す</span><span class="sxs-lookup"><span data-stu-id="813f4-109">Calling StringBuilder methods</span></span>](#Calling)  
  
-   [<span data-ttu-id="813f4-110">StringBuilder の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="813f4-110">Performing StringBuilder operations</span></span>](#Operations)  
  
    -   [<span data-ttu-id="813f4-111">StringBuilder の文字を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="813f4-111">Iterating StringBuilder characters</span></span>](#Iterating)  
  
    -   [<span data-ttu-id="813f4-112">StringBuilder オブジェクトへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="813f4-112">Adding text to a StringBuilder object</span></span>](#Adding)  
  
    -   [<span data-ttu-id="813f4-113">StringBuilder オブジェクトからテキストを削除</span><span class="sxs-lookup"><span data-stu-id="813f4-113">Deleting text from a StringBuilder object</span></span>](#Deleting)  
  
    -   [<span data-ttu-id="813f4-114">StringBuilder オブジェクトの文字列を変更します。</span><span class="sxs-lookup"><span data-stu-id="813f4-114">Modifying the text in a StringBuilder object</span></span>](#Modifying)  
  
-   [<span data-ttu-id="813f4-115">StringBuilder オブジェクトのテキストを検索</span><span class="sxs-lookup"><span data-stu-id="813f4-115">Searching the text in a StringBuilder object</span></span>](#Searching)  
  
-   [<span data-ttu-id="813f4-116">StringBuilder オブジェクトを文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="813f4-116">Converting the StringBuilder object to a string</span></span>](#Converting)  
  
<a name="StringAndSB"></a>   
## <a name="the-string-and-stringbuilder-types"></a><span data-ttu-id="813f4-117">文字列と StringBuilder 型</span><span class="sxs-lookup"><span data-stu-id="813f4-117">The String and StringBuilder types</span></span>  
 <span data-ttu-id="813f4-118"><xref:System.Text.StringBuilder>と<xref:System.String>シーケンスを表す両方の文字の実装は異なります。</span><span class="sxs-lookup"><span data-stu-id="813f4-118">Although <xref:System.Text.StringBuilder> and <xref:System.String> both represent sequences of characters, they are implemented differently.</span></span> <span data-ttu-id="813f4-119"><xref:System.String> 変更不可の型です。</span><span class="sxs-lookup"><span data-stu-id="813f4-119"><xref:System.String> is an immutable type.</span></span> <span data-ttu-id="813f4-120">変更に表示される各操作を<xref:System.String>オブジェクトが実際に新しい文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="813f4-120">That is, each operation that appears to modify a <xref:System.String> object actually creates a new string.</span></span>  
  
 <span data-ttu-id="813f4-121">呼び出しなど、<xref:System.String.Concat%2A?displayProperty=nameWithType>という名前の文字列変数の値を変更する次の c# の例のメソッドが表示されます`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-121">For example, the call to the <xref:System.String.Concat%2A?displayProperty=nameWithType> method in the following C# example appears to change the value of a string variable named `value`.</span></span> <span data-ttu-id="813f4-122">実際には、<xref:System.String.Concat%2A>メソッドを返します。 を`value`オブジェクト別の値とからのアドレスを持つ、`value`メソッドに渡されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-122">In fact, the <xref:System.String.Concat%2A> method returns a `value` object that has a different value and address from the `value` object that was passed to the method.</span></span> <span data-ttu-id="813f4-123">使用して、例をコンパイルする必要がありますに注意してください、`/unsafe`コンパイラ オプション。</span><span class="sxs-lookup"><span data-stu-id="813f4-123">Note that the example must be compiled using the `/unsafe` compiler option.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/immutability2.cs#1)]  
  
 <span data-ttu-id="813f4-124">(ループ内で何度も文字列を変更するアプリ) などの広範な文字列操作を実行するルーチンの場合、繰り返しの文字列を変更することが、大幅なパフォーマンスの低下に正確なことができます。</span><span class="sxs-lookup"><span data-stu-id="813f4-124">For routines that perform extensive string manipulation (such as apps that modify a string numerous times in a loop), modifying a string repeatedly can exact a significant performance penalty.</span></span> <span data-ttu-id="813f4-125">使用する方法が<xref:System.Text.StringBuilder>文字列の変更可能なクラスです。</span><span class="sxs-lookup"><span data-stu-id="813f4-125">The alternative is to use <xref:System.Text.StringBuilder>, which is a mutable string class.</span></span> <span data-ttu-id="813f4-126">可変性では、クラスのインスタンスが作成されたら、それを変更できることによって追加、削除、置換、または文字を挿入することを意味します。</span><span class="sxs-lookup"><span data-stu-id="813f4-126">Mutability means that once an instance of the class has been created, it can be modified by appending, removing, replacing, or inserting characters.</span></span> <span data-ttu-id="813f4-127">A<xref:System.Text.StringBuilder>オブジェクトは、文字列の拡張に対応するためにバッファーを保持します。</span><span class="sxs-lookup"><span data-stu-id="813f4-127">A <xref:System.Text.StringBuilder> object maintains a buffer to accommodate expansions to the string.</span></span> <span data-ttu-id="813f4-128">ルームがある場合、新しいデータがバッファーに追加されます。それ以外の場合、新しいより大きなバッファーを割り当て、元のバッファーからのデータは、新しいバッファーにコピーおよび、次に、新しいデータは新しいバッファーに追加します。</span><span class="sxs-lookup"><span data-stu-id="813f4-128">New data is appended to the buffer if room is available; otherwise, a new, larger buffer is allocated, data from the original buffer is copied to the new buffer, and the new data is then appended to the new buffer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="813f4-129">ですが、<xref:System.Text.StringBuilder>クラスが通常よりも優れたパフォーマンスを提供、<xref:System.String>クラスを自動的に代わり使用しないでください<xref:System.String>で<xref:System.Text.StringBuilder>文字列を操作するたびにします。</span><span class="sxs-lookup"><span data-stu-id="813f4-129">Although the <xref:System.Text.StringBuilder> class generally offers better performance than the <xref:System.String> class, you should not automatically replace <xref:System.String> with <xref:System.Text.StringBuilder> whenever you want to manipulate strings.</span></span> <span data-ttu-id="813f4-130">パフォーマンスは、新しい文字列、アプリが実行されて、システムおよび操作の種類に割り当てられるメモリの量、文字列のサイズによって異なります。</span><span class="sxs-lookup"><span data-stu-id="813f4-130">Performance depends on the size of the string, the amount of memory to be allocated for the new string, the system on which your app is executing, and the type of operation.</span></span> <span data-ttu-id="813f4-131">判断するアプリをテストする準備しておくべきかどうか<xref:System.Text.StringBuilder>実際に大幅なパフォーマンスの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="813f4-131">You should be prepared to test your app to determine whether <xref:System.Text.StringBuilder> actually offers a significant performance improvement.</span></span>  
  
 <span data-ttu-id="813f4-132">使用を検討して、<xref:System.String>これらの条件下でクラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-132">Consider using the <xref:System.String> class under these conditions:</span></span>  
  
-   <span data-ttu-id="813f4-133">文字列に、アプリが加えた変更の数が小さい場合です。</span><span class="sxs-lookup"><span data-stu-id="813f4-133">When the number of changes that your app will make to a string is small.</span></span> <span data-ttu-id="813f4-134">このような場合は、<xref:System.Text.StringBuilder>がごくわずかのプランまたは経由でパフォーマンスが向上しない<xref:System.String>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-134">In these cases, <xref:System.Text.StringBuilder> might offer negligible or no performance improvement over <xref:System.String>.</span></span>  
  
-   <span data-ttu-id="813f4-135">ときに固定数のリテラル文字列で特に、連結演算を実行しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-135">When you are performing a fixed number of concatenation operations, particularly with string literals.</span></span> <span data-ttu-id="813f4-136">この場合、コンパイラは、1 回の操作に連結演算を組み合わせることがあります。</span><span class="sxs-lookup"><span data-stu-id="813f4-136">In this case, the compiler might combine the concatenation operations into a single operation.</span></span>  
  
-   <span data-ttu-id="813f4-137">ある場合、文字列を構築しているときに、広範な検索操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="813f4-137">When you have to perform extensive search operations while you are building your string.</span></span> <span data-ttu-id="813f4-138"><xref:System.Text.StringBuilder>クラスにメソッドをなど、検索する`IndexOf`または`StartsWith`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-138">The <xref:System.Text.StringBuilder> class lacks search methods such as `IndexOf` or `StartsWith`.</span></span> <span data-ttu-id="813f4-139">変換する必要があります、<xref:System.Text.StringBuilder>オブジェクトを<xref:System.String>を使用してから、パフォーマンス上の利点を無効にでき、これらの操作の<xref:System.Text.StringBuilder>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-139">You'll have to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> for these operations, and this can negate the performance benefit from using <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="813f4-140">詳細については、次を参照してください。、 [StringBuilder オブジェクトのテキストを検索](#Searching)セクション。</span><span class="sxs-lookup"><span data-stu-id="813f4-140">For more information, see the [Searching the text in a StringBuilder object](#Searching) section.</span></span>  
  
 <span data-ttu-id="813f4-141">使用を検討して、<xref:System.Text.StringBuilder>これらの条件下でクラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-141">Consider using the <xref:System.Text.StringBuilder> class under these conditions:</span></span>  
  
-   <span data-ttu-id="813f4-142">(たとえば、ユーザー入力を格納する文字列のランダムな数値を連結するループを使用している場合) のデザイン時に文字列を変更数が不明なするアプリを予期したタイミング。</span><span class="sxs-lookup"><span data-stu-id="813f4-142">When you expect your app to make an unknown number of changes to a string at design time (for example, when you are using a loop to concatenate a random number of strings that contain user input).</span></span>  
  
-   <span data-ttu-id="813f4-143">文字列を多数の変更を有効にするアプリを予期したタイミング。</span><span class="sxs-lookup"><span data-stu-id="813f4-143">When you expect your app to make a significant number of changes to a string.</span></span>  
  
<a name="HowWorks"></a>   
## <a name="how-stringbuilder-works"></a><span data-ttu-id="813f4-144">StringBuilder のしくみ</span><span class="sxs-lookup"><span data-stu-id="813f4-144">How StringBuilder works</span></span>  
 <span data-ttu-id="813f4-145"><xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType>プロパティの文字数を示します、<xref:System.Text.StringBuilder>オブジェクトに現在含まれています。</span><span class="sxs-lookup"><span data-stu-id="813f4-145">The <xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType> property indicates the number of characters the <xref:System.Text.StringBuilder> object currently contains.</span></span> <span data-ttu-id="813f4-146">文字を追加する場合、<xref:System.Text.StringBuilder>オブジェクト、その長さが増加のサイズが等しくなるまで、<xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType>プロパティで、オブジェクトに格納できる文字数を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-146">If you add characters to the <xref:System.Text.StringBuilder> object, its length increases until it equals the size of the <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> property, which defines the number of characters that the object can contain.</span></span> <span data-ttu-id="813f4-147">追加された文字の数の長さが発生した場合、<xref:System.Text.StringBuilder>をその現在の容量のほか、新しいメモリを超えるオブジェクトは、割り当て済みの値、<xref:System.Text.StringBuilder.Capacity%2A>プロパティが 2 倍に新しい文字が追加、<xref:System.Text.StringBuilder>オブジェクト、およびその<xref:System.Text.StringBuilder.Length%2A>プロパティを調整します。</span><span class="sxs-lookup"><span data-stu-id="813f4-147">If the number of added characters causes the length of the <xref:System.Text.StringBuilder> object to exceed its current capacity, new memory is allocated, the value of the <xref:System.Text.StringBuilder.Capacity%2A> property is doubled, new characters are added to the <xref:System.Text.StringBuilder> object, and its <xref:System.Text.StringBuilder.Length%2A> property is adjusted.</span></span> <span data-ttu-id="813f4-148">追加のメモリを<xref:System.Text.StringBuilder>によって定義された値に達するまで、オブジェクトが動的に割り当てられます、<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-148">Additional memory for the <xref:System.Text.StringBuilder> object is allocated dynamically until it reaches the value defined by the <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="813f4-149">最大容量に達すると、さらにメモリの割り当て可能なし、<xref:System.Text.StringBuilder>オブジェクト、および文字を追加または最大容量を超えて展開しようとしています。 いずれかをスローします。、<xref:System.ArgumentOutOfRangeException>または<xref:System.OutOfMemoryException>例外。</span><span class="sxs-lookup"><span data-stu-id="813f4-149">When the maximum capacity is reached, no further memory can be allocated for the <xref:System.Text.StringBuilder> object, and trying to add characters or expand it beyond its maximum capacity throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.OutOfMemoryException> exception.</span></span>  
  
 <span data-ttu-id="813f4-150">次の例を示して 方法、<xref:System.Text.StringBuilder>新しいメモリを割り当ておよびオブジェクトに割り当てられた文字列の拡張に伴い、その容量を動的に増加します。</span><span class="sxs-lookup"><span data-stu-id="813f4-150">The following example illustrates how a <xref:System.Text.StringBuilder> object allocates new memory and increases its capacity dynamically as the string assigned to the object expands.</span></span> <span data-ttu-id="813f4-151">コードを作成、<xref:System.Text.StringBuilder>既定 (パラメーターなしの) コンス トラクターを呼び出してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-151">The code creates a <xref:System.Text.StringBuilder> object by calling its default (parameterless) constructor.</span></span> <span data-ttu-id="813f4-152">このオブジェクトの既定の容量が 16 文字、およびその最大容量が 20億を超える文字。</span><span class="sxs-lookup"><span data-stu-id="813f4-152">The default capacity of this object is 16 characters, and its maximum capacity is more than 2 billion characters.</span></span> <span data-ttu-id="813f4-153">文字列を追加する、"This is 文です"。</span><span class="sxs-lookup"><span data-stu-id="813f4-153">Appending the string "This is a sentence."</span></span> <span data-ttu-id="813f4-154">新しいメモリ割り当ての結果文字列の長さ (19 文字)、既定の容量を超えているため、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-154">results in a new memory allocation because the string length (19 characters) exceeds the default capacity of the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-155">32 文字以内に、オブジェクトの容量が 2 倍に、新しい文字列を追加すると、およびオブジェクトの長さは 19 文字を今すぐと等しい。</span><span class="sxs-lookup"><span data-stu-id="813f4-155">The capacity of the object doubles to 32 characters, the new string is added, and the length of the object now equals 19 characters.</span></span> <span data-ttu-id="813f4-156">コード、文字列を追加「これは、追加の文です」。</span><span class="sxs-lookup"><span data-stu-id="813f4-156">The code then appends the string "This is an additional sentence."</span></span> <span data-ttu-id="813f4-157">値に、 <xref:System.Text.StringBuilder> 11 回のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-157">to the value of the <xref:System.Text.StringBuilder> object 11 times.</span></span> <span data-ttu-id="813f4-158">追加操作がの長さを発生するたびに、<xref:System.Text.StringBuilder>をその容量はその既存の容量を超えるオブジェクトが 2 倍と<xref:System.Text.StringBuilder.Append%2A>操作が成功しました。</span><span class="sxs-lookup"><span data-stu-id="813f4-158">Whenever the append operation causes the length of the <xref:System.Text.StringBuilder> object to exceed its capacity, its existing capacity is doubled and the <xref:System.Text.StringBuilder.Append%2A> operation succeeds.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/default1.cs#3)]
 [!code-vb[System.Text.StringBuilder.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/default1.vb#3)]  
  
<a name="Memory"></a>   
## <a name="memory-allocation"></a><span data-ttu-id="813f4-159">メモリの割り当て</span><span class="sxs-lookup"><span data-stu-id="813f4-159">Memory allocation</span></span>  
 <span data-ttu-id="813f4-160">既定の容量を<xref:System.Text.StringBuilder>オブジェクトは、16 文字とその既定の最大容量は<xref:System.Int32.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-160">The default capacity of a <xref:System.Text.StringBuilder> object is 16 characters, and its default maximum capacity is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-161">呼び出す場合、これらの既定値が使用される、<xref:System.Text.StringBuilder.%23ctor>と<xref:System.Text.StringBuilder.%23ctor%28System.String%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="813f4-161">These default values are used if you call the <xref:System.Text.StringBuilder.%23ctor> and <xref:System.Text.StringBuilder.%23ctor%28System.String%29> constructors.</span></span>  
  
 <span data-ttu-id="813f4-162">初期量を明示的に定義することができます、<xref:System.Text.StringBuilder>次の方法でオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-162">You can explicitly define the initial capacity of a <xref:System.Text.StringBuilder> object in the following ways:</span></span>  
  
-   <span data-ttu-id="813f4-163">いずれかを呼び出すことによって、<xref:System.Text.StringBuilder>コンス トラクターを含む、`capacity`パラメーター オブジェクトを作成するときにします。</span><span class="sxs-lookup"><span data-stu-id="813f4-163">By calling any of the <xref:System.Text.StringBuilder> constructors that includes a `capacity` parameter when you create the object.</span></span>  
  
-   <span data-ttu-id="813f4-164">新しい値を明示的に割り当てることで、<xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType>プロパティを既存の展開<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-164">By explicitly assigning a new value to the <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> property to expand an existing <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-165">新しい容量が、既存の容量またはより大きいより小さい場合、このプロパティは例外をスローします。 注意してください、<xref:System.Text.StringBuilder>オブジェクトの最大容量。</span><span class="sxs-lookup"><span data-stu-id="813f4-165">Note that the property throws an exception if the new capacity is less than the existing capacity or greater than the <xref:System.Text.StringBuilder> object's maximum capacity.</span></span>  
  
-   <span data-ttu-id="813f4-166">呼び出すことによって、<xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType>新しい容量を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-166">By calling the <xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType> method with the new capacity.</span></span> <span data-ttu-id="813f4-167">新しい容量をより大きくなければなりません、<xref:System.Text.StringBuilder>オブジェクトの最大容量。</span><span class="sxs-lookup"><span data-stu-id="813f4-167">The new capacity must not be greater than the <xref:System.Text.StringBuilder> object's maximum capacity.</span></span> <span data-ttu-id="813f4-168">代入とは異なり、ただし、<xref:System.Text.StringBuilder.Capacity%2A>プロパティ、<xref:System.Text.StringBuilder.EnsureCapacity%2A>例外をスローしない場合は目的の新しい容量が、既存の容量より小さい。 この場合、メソッドの呼び出しには効果はありません。</span><span class="sxs-lookup"><span data-stu-id="813f4-168">However, unlike an assignment to the <xref:System.Text.StringBuilder.Capacity%2A> property, <xref:System.Text.StringBuilder.EnsureCapacity%2A> does not throw an exception if the desired new capacity is less than the existing capacity; in this case, the method call has no effect.</span></span>  
  
 <span data-ttu-id="813f4-169">文字列の長さが割り当てられている場合、<xref:System.Text.StringBuilder>コンス トラクターの呼び出し内のオブジェクトが既定の容量、または指定した容量を超えています、<xref:System.Text.StringBuilder.Capacity%2A>プロパティで指定した文字列の長さに設定されて、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="813f4-169">If the length of the string assigned to the <xref:System.Text.StringBuilder> object in the constructor call exceeds either the default capacity or the specified capacity, the <xref:System.Text.StringBuilder.Capacity%2A> property is set to the length of the string specified with the `value` parameter.</span></span>  
  
 <span data-ttu-id="813f4-170">最大容量を明示的に定義することができます、<xref:System.Text.StringBuilder>オブジェクトを呼び出すことによって、<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="813f4-170">You can explicitly define the maximum capacity of a <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="813f4-171">新しい値を割り当てることで、最大容量を変更することはできません、<xref:System.Text.StringBuilder.MaxCapacity%2A>プロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="813f4-171">You can't change the maximum capacity by assigning a new value to the <xref:System.Text.StringBuilder.MaxCapacity%2A> property, because it is read-only.</span></span>  
  
 <span data-ttu-id="813f4-172">前のセクションとして表示、既存の容量が不十分な追加のメモリが割り当てられていると容量を<xref:System.Text.StringBuilder>オブジェクトによって定義された値までの 2 倍、<xref:System.Text.StringBuilder.MaxCapacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-172">As the previous section shows, whenever the existing capacity is inadequate, additional memory is allocated and the capacity of a <xref:System.Text.StringBuilder> object doubles up to the value defined by the <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span>  
  
 <span data-ttu-id="813f4-173">一般に、既定の容量と最大の容量は、ほとんどのアプリのための適切なは。</span><span class="sxs-lookup"><span data-stu-id="813f4-173">In general, the default capacity and maximum capacity are adequate for most apps.</span></span> <span data-ttu-id="813f4-174">次の条件下でこれらの値の設定を検討する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-174">You might consider setting these values under the following conditions:</span></span>  
  
-   <span data-ttu-id="813f4-175">場合の最終的なサイズ、<xref:System.Text.StringBuilder>オブジェクトをメガ バイトを超える場合通常は非常に大きくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-175">If the eventual size of the <xref:System.Text.StringBuilder> object is likely to grow exceedingly large, typically in excess of several megabytes.</span></span> <span data-ttu-id="813f4-176">この場合、する可能性があります、最初の設定からのパフォーマンスが向上<xref:System.Text.StringBuilder.Capacity%2A>を格段に高い値に多くのメモリ再割り当てする必要のないプロパティです。</span><span class="sxs-lookup"><span data-stu-id="813f4-176">In this case, there may be some performance benefit from setting the initial <xref:System.Text.StringBuilder.Capacity%2A> property to a significantly high value to eliminate the need for too many memory reallocations.</span></span>  
  
-   <span data-ttu-id="813f4-177">場合は、アプリは限られたメモリを持つシステムで実行されています。</span><span class="sxs-lookup"><span data-stu-id="813f4-177">If your app is running on a system with limited memory.</span></span> <span data-ttu-id="813f4-178">この場合、設定を考慮することがあります、<xref:System.Text.StringBuilder.MaxCapacity%2A>プロパティをより小さい<xref:System.Int32.MaxValue?displayProperty=nameWithType>場合は、アプリがメモリに制約がある環境で実行する可能性のある長い文字列を処理します。</span><span class="sxs-lookup"><span data-stu-id="813f4-178">In this case, you may want to consider setting the <xref:System.Text.StringBuilder.MaxCapacity%2A> property to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType> if your app is handling large strings that may cause it to execute in a memory-constrained environment.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-stringbuilder-object"></a><span data-ttu-id="813f4-179">StringBuilder オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="813f4-179">Instantiating a StringBuilder object</span></span>  
 <span data-ttu-id="813f4-180">インスタンス化する、<xref:System.Text.StringBuilder>その 6 つクラスのオーバー ロードされたコンス トラクターの次の表に示されているいずれかを呼び出すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-180">You instantiate a <xref:System.Text.StringBuilder> object by calling one of its six overloaded class constructors, which are listed in the following table.</span></span> <span data-ttu-id="813f4-181">コンス トラクターの 3 つのインスタンスを作成、<xref:System.Text.StringBuilder>オブジェクトの値が空の文字列に設定がその<xref:System.Text.StringBuilder.Capacity%2A>と<xref:System.Text.StringBuilder.MaxCapacity%2A>値が異なります。</span><span class="sxs-lookup"><span data-stu-id="813f4-181">Three of the constructors instantiate a <xref:System.Text.StringBuilder> object whose value is an empty string, but set its <xref:System.Text.StringBuilder.Capacity%2A> and <xref:System.Text.StringBuilder.MaxCapacity%2A> values differently.</span></span> <span data-ttu-id="813f4-182">残りの 3 つのコンス トラクターを定義、<xref:System.Text.StringBuilder>特定の文字列値と容量を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-182">The remaining three constructors define a <xref:System.Text.StringBuilder> object that has a specific string value and capacity.</span></span> <span data-ttu-id="813f4-183">既定の最大容量を使用して、3 つのコンス トラクターの 2 つ<xref:System.Int32.MaxValue?displayProperty=nameWithType>、3 つ目では、最大容量を設定できます。</span><span class="sxs-lookup"><span data-stu-id="813f4-183">Two of the three constructors use the default maximum capacity of <xref:System.Int32.MaxValue?displayProperty=nameWithType>, whereas the third allows you to set the maximum capacity.</span></span>  
  
|<span data-ttu-id="813f4-184">コンストラクター</span><span class="sxs-lookup"><span data-stu-id="813f4-184">Constructor</span></span>|<span data-ttu-id="813f4-185">文字列値</span><span class="sxs-lookup"><span data-stu-id="813f4-185">String value</span></span>|<span data-ttu-id="813f4-186">容量</span><span class="sxs-lookup"><span data-stu-id="813f4-186">Capacity</span></span>|<span data-ttu-id="813f4-187">最大容量</span><span class="sxs-lookup"><span data-stu-id="813f4-187">Maximum capacity</span></span>|  
|-----------------|------------------|--------------|----------------------|  
|<xref:System.Text.StringBuilder.%23ctor>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="813f4-188">16</span><span class="sxs-lookup"><span data-stu-id="813f4-188">16</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.Int32%29>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="813f4-189">によって定義されている、`capacity`パラメーター</span><span class="sxs-lookup"><span data-stu-id="813f4-189">Defined by the `capacity` parameter</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="813f4-190">によって定義されている、`capacity`パラメーター</span><span class="sxs-lookup"><span data-stu-id="813f4-190">Defined by the `capacity` parameter</span></span>|<span data-ttu-id="813f4-191">によって定義されている、`maxCapacity`パラメーター</span><span class="sxs-lookup"><span data-stu-id="813f4-191">Defined by the `maxCapacity` parameter</span></span>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.String%29>|<span data-ttu-id="813f4-192">によって定義されている、`value`パラメーター</span><span class="sxs-lookup"><span data-stu-id="813f4-192">Defined by the `value` parameter</span></span>|<span data-ttu-id="813f4-193">16 または`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-193">16 or `value`.</span></span> <span data-ttu-id="813f4-194"><xref:System.String.Length%2A>、大きい方になります</span><span class="sxs-lookup"><span data-stu-id="813f4-194"><xref:System.String.Length%2A>, whichever is greater</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.String%2CSystem.Int32%29>|<span data-ttu-id="813f4-195">によって定義されている、`value`パラメーター</span><span class="sxs-lookup"><span data-stu-id="813f4-195">Defined by the `value` parameter</span></span>|<span data-ttu-id="813f4-196">によって定義されている、`capacity`パラメーターまたは`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-196">Defined by the `capacity` parameter or `value`.</span></span> <span data-ttu-id="813f4-197"><xref:System.String.Length%2A>、大きい方になります。</span><span class="sxs-lookup"><span data-stu-id="813f4-197"><xref:System.String.Length%2A>, whichever is greater.</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|  
|<xref:System.Text.StringBuilder.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>|<span data-ttu-id="813f4-198">によって定義された`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-198">Defined by `value`.</span></span> <span data-ttu-id="813f4-199"><xref:System.String.Substring%2A>(`startIndex`, `length`)</span><span class="sxs-lookup"><span data-stu-id="813f4-199"><xref:System.String.Substring%2A>(`startIndex`, `length`)</span></span>|<span data-ttu-id="813f4-200">によって定義されている、`capacity`パラメーターまたは`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-200">Defined by the `capacity` parameter or `value`.</span></span> <span data-ttu-id="813f4-201"><xref:System.String.Length%2A>、大きい方になります。</span><span class="sxs-lookup"><span data-stu-id="813f4-201"><xref:System.String.Length%2A>, whichever is greater.</span></span>|<span data-ttu-id="813f4-202">によって定義されている、`maxCapacity`パラメーター</span><span class="sxs-lookup"><span data-stu-id="813f4-202">Defined by the `maxCapacity` parameter</span></span>|  
  
 <span data-ttu-id="813f4-203">インスタンスを作成するのには次の例でこれらのコンス トラクター オーバー ロードのうち 3 つ<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-203">The following example uses three of these constructor overloads to instantiate <xref:System.Text.StringBuilder> objects.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/instantiate1.cs#6)]
 [!code-vb[System.Text.StringBuilder.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/instantiate1.vb#6)]  
  
<a name="Calling"></a>   
## <a name="calling-stringbuilder-methods"></a><span data-ttu-id="813f4-204">StringBuilder のメソッドを呼び出す</span><span class="sxs-lookup"><span data-stu-id="813f4-204">Calling StringBuilder methods</span></span>  
 <span data-ttu-id="813f4-205">内の文字列を変更するメソッドのほとんどを<xref:System.Text.StringBuilder>インスタンスがその同じインスタンスへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="813f4-205">Most of the methods that modify the string in a <xref:System.Text.StringBuilder> instance return a reference to that same instance.</span></span> <span data-ttu-id="813f4-206">これを使用すると、呼び出す<xref:System.Text.StringBuilder>メソッドが 2 つの方法で。</span><span class="sxs-lookup"><span data-stu-id="813f4-206">This enables you to call <xref:System.Text.StringBuilder> methods in two ways:</span></span>  
  
-   <span data-ttu-id="813f4-207">個々 のメソッドを呼び出すことし、次の例のように、戻り値を無視することができます。</span><span class="sxs-lookup"><span data-stu-id="813f4-207">You can make individual method calls and ignore the return value, as the following example does.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/call1.cs#4)]
     [!code-vb[System.Text.StringBuilder.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/call1.vb#4)]  
  
-   <span data-ttu-id="813f4-208">単一のステートメントでは、一連のメソッド呼び出しを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="813f4-208">You can make a series of method calls in a single statement.</span></span> <span data-ttu-id="813f4-209">これは、一連の操作のチェーンを 1 つのステートメントを記述する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="813f4-209">This can be convenient if you want to write a single statement that chains successive operations.</span></span> <span data-ttu-id="813f4-210">次の例では、前の例から次の 3 つのメソッド呼び出しを 1 行のコードに統合します。</span><span class="sxs-lookup"><span data-stu-id="813f4-210">The following example consolidates three method calls from the previous example into a single line of code.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/call2.cs#5)]
     [!code-vb[System.Text.StringBuilder.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/call2.vb#5)]  
  
<a name="Operations"></a>   
## <a name="performing-stringbuilder-operations"></a><span data-ttu-id="813f4-211">StringBuilder の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="813f4-211">Performing StringBuilder operations</span></span>  
 <span data-ttu-id="813f4-212">メソッドを使用することができます、<xref:System.Text.StringBuilder>反復処理する、追加、削除、または内の文字を変更するにはクラス、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-212">You can use the methods of the <xref:System.Text.StringBuilder> class to iterate, add, delete, or modify characters in a <xref:System.Text.StringBuilder> object.</span></span>  
  
<a name="Iterating"></a>   
### <a name="iterating-stringbuilder-characters"></a><span data-ttu-id="813f4-213">StringBuilder の文字を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="813f4-213">Iterating StringBuilder characters</span></span>  
 <span data-ttu-id="813f4-214">内の文字にアクセスすることができます、<xref:System.Text.StringBuilder>オブジェクトを使用して、<xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-214">You can access the characters in a <xref:System.Text.StringBuilder> object by using the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="813f4-215">C# で<xref:System.Text.StringBuilder.Chars%2A>。 インデクサーは、Visual basic での既定のプロパティは、<xref:System.Text.StringBuilder>クラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-215">In C#, <xref:System.Text.StringBuilder.Chars%2A> is an indexer; in Visual Basic, it is the default property of the <xref:System.Text.StringBuilder> class.</span></span> <span data-ttu-id="813f4-216">これにより、明示的に参照しなくても、インデックスのみを使用して、個々 の文字を取得または設定、<xref:System.Text.StringBuilder.Chars%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-216">This enables you to set or retrieve individual characters by using their index only, without explicitly referencing the <xref:System.Text.StringBuilder.Chars%2A> property.</span></span> <span data-ttu-id="813f4-217">内の文字を<xref:System.Text.StringBuilder>オブジェクトがインデックス 0 (ゼロ) から始まり、インデックスを続行<xref:System.Text.StringBuilder.Length%2A>- 1。</span><span class="sxs-lookup"><span data-stu-id="813f4-217">Characters in a <xref:System.Text.StringBuilder> object begin at index 0 (zero) and continue to index <xref:System.Text.StringBuilder.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="813f4-218">次の例を示しています、<xref:System.Text.StringBuilder.Chars%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-218">The following example illustrates the <xref:System.Text.StringBuilder.Chars%2A> property.</span></span> <span data-ttu-id="813f4-219">10 個のランダムな数字を追加、<xref:System.Text.StringBuilder>オブジェクト、および反復処理し、各文字。</span><span class="sxs-lookup"><span data-stu-id="813f4-219">It appends ten random numbers to a <xref:System.Text.StringBuilder> object, and then iterates each character.</span></span> <span data-ttu-id="813f4-220">場合は、文字の Unicode カテゴリ<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>数を減らすことを 1 つ (またはその値が 0 の場合、数は 9 に変更)。</span><span class="sxs-lookup"><span data-stu-id="813f4-220">If the character's Unicode category is <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, it decreases the number by 1 (or changes the number to 9 if its value is 0).</span></span> <span data-ttu-id="813f4-221">この例の内容を表示する、<xref:System.Text.StringBuilder>前に、と後、個々 の文字の値が変更されたオブジェクトの両方。</span><span class="sxs-lookup"><span data-stu-id="813f4-221">The example displays the contents of the <xref:System.Text.StringBuilder> object both before and after the values of individual characters were changed.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/chars1.cs#7)]
 [!code-vb[System.Text.StringBuilder.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/chars1.vb#7)]  

[!INCLUDE[stringbuilder-performance-note](~/includes/stringbuilder-perf-note.md)]
  
<a name="Adding"></a>   
### <a name="adding-text-to-a-stringbuilder-object"></a><span data-ttu-id="813f4-222">StringBuilder オブジェクトへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="813f4-222">Adding text to a StringBuilder object</span></span>  
 <span data-ttu-id="813f4-223"><xref:System.Text.StringBuilder>クラスには内容を拡張するために、次のメソッドが含まれています、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-223">The <xref:System.Text.StringBuilder> class includes the following methods for expanding the contents of a <xref:System.Text.StringBuilder> object:</span></span>  
  
-   <span data-ttu-id="813f4-224"><xref:System.Text.StringBuilder.Append%2A>メソッドは、追加、文字列、部分文字列、文字配列を文字配列の一部分 1 つの文字が複数回繰り返されるまたはプリミティブ データの文字列形式の入力を<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-224">The <xref:System.Text.StringBuilder.Append%2A> method appends a string, a substring, a character array, a portion of a character array, a single character repeated multiple times, or the string representation of a primitive data type to a <xref:System.Text.StringBuilder> object.</span></span>  
  
-   <span data-ttu-id="813f4-225"><xref:System.Text.StringBuilder.AppendLine%2A>行終端記号またはに行終端記号と共に、文字列、メソッドが追加され、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-225">The <xref:System.Text.StringBuilder.AppendLine%2A> method appends a line terminator or a string along with a line terminator to a <xref:System.Text.StringBuilder> object.</span></span>  
  
-   <span data-ttu-id="813f4-226"><xref:System.Text.StringBuilder.AppendFormat%2A>メソッドは、追加に、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-226">The <xref:System.Text.StringBuilder.AppendFormat%2A> method appends a  to a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-227">結果の文字列に含まれているオブジェクトの文字列形式には、現在のシステム カルチャまたは指定されたカルチャの書式指定規則を反映できます。</span><span class="sxs-lookup"><span data-stu-id="813f4-227">The string representations of objects included in the result string can reflect the formatting conventions of the current system culture or a specified culture.</span></span>  
  
-   <span data-ttu-id="813f4-228"><xref:System.Text.StringBuilder.Insert%2A>メソッドは、挿入、文字列を部分文字列、文字列の複数の繰り返し、文字配列、文字の配列の一部またはプリミティブ データの文字列形式の入力で指定した位置にある、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-228">The <xref:System.Text.StringBuilder.Insert%2A> method inserts a string, a substring, multiple repetitions of a string, a character array, a portion of a character array, or the string representation of a primitive data type at a specified position in the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-229">位置は、0 から始まるインデックスによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-229">The position is defined by a zero-based index.</span></span>  
  
 <span data-ttu-id="813f4-230">次の例では、 <xref:System.Text.StringBuilder.Append%2A>、 <xref:System.Text.StringBuilder.AppendLine%2A>、 <xref:System.Text.StringBuilder.AppendFormat%2A>、および<xref:System.Text.StringBuilder.Insert%2A>のテキストを展開する方法、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-230">The following example uses the <xref:System.Text.StringBuilder.Append%2A>, <xref:System.Text.StringBuilder.AppendLine%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and <xref:System.Text.StringBuilder.Insert%2A> methods to expand the text of a <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/expand1.cs#9)]
 [!code-vb[System.Text.StringBuilder.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/expand1.vb#9)]  
  
<a name="Deleting"></a>   
### <a name="deleting-text-from-a-stringbuilder-object"></a><span data-ttu-id="813f4-231">StringBuilder オブジェクトからテキストを削除</span><span class="sxs-lookup"><span data-stu-id="813f4-231">Deleting text from a StringBuilder object</span></span>  
 <span data-ttu-id="813f4-232"><xref:System.Text.StringBuilder>クラスには、現在のサイズを減らすためのメソッドが含まれます。<xref:System.Text.StringBuilder>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-232">The <xref:System.Text.StringBuilder> class includes methods that can reduce the size of the current <xref:System.Text.StringBuilder> instance.</span></span> <span data-ttu-id="813f4-233"><xref:System.Text.StringBuilder.Clear%2A>メソッドすべての文字を削除し、設定、<xref:System.Text.StringBuilder.Length%2A>プロパティを 0 にします。</span><span class="sxs-lookup"><span data-stu-id="813f4-233">The <xref:System.Text.StringBuilder.Clear%2A> method removes all characters and sets the <xref:System.Text.StringBuilder.Length%2A> property to zero.</span></span> <span data-ttu-id="813f4-234"><xref:System.Text.StringBuilder.Remove%2A>メソッドは、指定された数の特定のインデックス位置から始まる文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="813f4-234">The <xref:System.Text.StringBuilder.Remove%2A> method deletes a specified number of characters starting at a particular index position.</span></span> <span data-ttu-id="813f4-235">さらの末尾から文字を削除することができます、<xref:System.Text.StringBuilder>オブジェクトを設定してその<xref:System.Text.StringBuilder.Length%2A>プロパティを現在のインスタンスの長さよりも小さい値にします。</span><span class="sxs-lookup"><span data-stu-id="813f4-235">In addition, you can remove characters from the end of a <xref:System.Text.StringBuilder> object by setting its <xref:System.Text.StringBuilder.Length%2A> property to a value that is less than the length of the current instance.</span></span>  
  
 <span data-ttu-id="813f4-236">次の例では、削除からのテキストの一部を<xref:System.Text.StringBuilder>オブジェクト、その結果として得られる容量、最大容量は、および長さのプロパティの値を表示およびを呼び出して、<xref:System.Text.StringBuilder.Clear%2A>からすべての文字を削除する方法、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-236">The following example removes some of the text from a <xref:System.Text.StringBuilder> object, displays its resulting capacity, maximum capacity, and length property values, and then calls the <xref:System.Text.StringBuilder.Clear%2A> method to remove all the characters from the <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/delete1.cs#10)]
 [!code-vb[System.Text.StringBuilder.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/delete1.vb#10)]  
  
<a name="Modifying"></a>   
### <a name="modifying-the-text-in-a-stringbuilder-object"></a><span data-ttu-id="813f4-237">StringBuilder オブジェクトの文字列を変更します。</span><span class="sxs-lookup"><span data-stu-id="813f4-237">Modifying the text in a StringBuilder object</span></span>  
 <span data-ttu-id="813f4-238"><xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType>メソッドは文字または文字列全体でのすべての出現箇所を置き換える<xref:System.Text.StringBuilder>オブジェクトまたは特定の文字範囲内です。</span><span class="sxs-lookup"><span data-stu-id="813f4-238">The <xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType> method replaces all occurrences of a character or a string in the entire <xref:System.Text.StringBuilder> object or in a particular character range.</span></span> <span data-ttu-id="813f4-239">次の例では、<xref:System.Text.StringBuilder.Replace%2A>疑問符 (?) ですべての感嘆符 (!) を置換するメソッド、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-239">The following example uses the <xref:System.Text.StringBuilder.Replace%2A> method to replace all exclamation points (!) with question marks (?) in the <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/replace1.cs#11)]
 [!code-vb[System.Text.StringBuilder.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/replace1.vb#11)]  
  
<a name="Searching"></a>   
## <a name="searching-the-text-in-a-stringbuilder-object"></a><span data-ttu-id="813f4-240">StringBuilder オブジェクトのテキストを検索</span><span class="sxs-lookup"><span data-stu-id="813f4-240">Searching the text in a StringBuilder object</span></span>  
 <span data-ttu-id="813f4-241"><xref:System.Text.StringBuilder>クラスと同様の方法を含まない、 <xref:System.String.Contains%2A?displayProperty=nameWithType>、 <xref:System.String.IndexOf%2A?displayProperty=nameWithType>、および<xref:System.String.StartsWith%2A?displayProperty=nameWithType>によって提供されるメソッド、<xref:System.String>クラスは、特定の文字または部分文字列のオブジェクトを検索できます。</span><span class="sxs-lookup"><span data-stu-id="813f4-241">The <xref:System.Text.StringBuilder> class does not include methods similar to the <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, and <xref:System.String.StartsWith%2A?displayProperty=nameWithType> methods provided by the <xref:System.String> class, which allow you to search the object for a particular character or a substring.</span></span> <span data-ttu-id="813f4-242">かどうかを決定する以降の部分文字列の文字の位置は、検索することが必要です、<xref:System.String>文字列検索メソッドまたは正規表現メソッドを使用して値。</span><span class="sxs-lookup"><span data-stu-id="813f4-242">Determining the presence or starting character position of a substring requires that you search a <xref:System.String> value by using either a string search method or a regular expression method.</span></span> <span data-ttu-id="813f4-243">次の表に示すよう、このような検索を実装するために 4 つの方法はあります。</span><span class="sxs-lookup"><span data-stu-id="813f4-243">There are four ways to implement such searches, as the following table shows.</span></span>  
  
|<span data-ttu-id="813f4-244">手法</span><span class="sxs-lookup"><span data-stu-id="813f4-244">Technique</span></span>|<span data-ttu-id="813f4-245">プロフェッショナル</span><span class="sxs-lookup"><span data-stu-id="813f4-245">Pros</span></span>|<span data-ttu-id="813f4-246">短所</span><span class="sxs-lookup"><span data-stu-id="813f4-246">Cons</span></span>|  
|---------------|----------|----------|  
|<span data-ttu-id="813f4-247">追加する前に文字列値を検索、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-247">Search string values before adding them to the <xref:System.Text.StringBuilder> object.</span></span>|<span data-ttu-id="813f4-248">部分文字列が存在するかどうかを決定するために便利です。</span><span class="sxs-lookup"><span data-stu-id="813f4-248">Useful for determining whether a substring exists.</span></span>|<span data-ttu-id="813f4-249">部分文字列のインデックス位置が重要では使用できません。</span><span class="sxs-lookup"><span data-stu-id="813f4-249">Cannot be used when the index position of a substring is important.</span></span>|  
|<span data-ttu-id="813f4-250">呼び出す<xref:System.Text.StringBuilder.ToString%2A>と、返された検索<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-250">Call <xref:System.Text.StringBuilder.ToString%2A> and search the returned <xref:System.String> object.</span></span>|<span data-ttu-id="813f4-251">簡単に使用するすべてのテキストを割り当てた場合、<xref:System.Text.StringBuilder>オブジェクト、および変更を開始します。</span><span class="sxs-lookup"><span data-stu-id="813f4-251">Easy to use if you assign all the text to a <xref:System.Text.StringBuilder> object, and then begin to modify it.</span></span>|<span data-ttu-id="813f4-252">繰り返し呼び出すことの面倒な<xref:System.Text.StringBuilder.ToString%2A>かどうかにすべてのテキストを追加する前に変更を行う必要があります、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-252">Cumbersome to repeatedly call <xref:System.Text.StringBuilder.ToString%2A> if you must make modifications before all text is added to the <xref:System.Text.StringBuilder> object.</span></span><br /><br /> <span data-ttu-id="813f4-253">末尾から作業することが、<xref:System.Text.StringBuilder>変更を加えている場合は、オブジェクトのテキスト。</span><span class="sxs-lookup"><span data-stu-id="813f4-253">You must remember to work from the end of the <xref:System.Text.StringBuilder> object's text if you're making changes.</span></span>|  
|<span data-ttu-id="813f4-254">使用して、<xref:System.Text.StringBuilder.Chars%2A>文字の範囲を順番に検索するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-254">Use the <xref:System.Text.StringBuilder.Chars%2A> property to sequentially search a range of characters.</span></span>|<span data-ttu-id="813f4-255">個々 の文字または小さな部分文字列の心配がある場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="813f4-255">Useful if you're concerned with individual characters or a small substring.</span></span>|<span data-ttu-id="813f4-256">検索対象の文字数が多い場合、または検索ロジックが複雑な場合は煩雑です。</span><span class="sxs-lookup"><span data-stu-id="813f4-256">Cumbersome if the number of characters to search is large or if the search logic is complex.</span></span><br /><br /><span data-ttu-id="813f4-257">繰り返されるメソッドの呼び出しを通じて、非常に大きなが大きくなったオブジェクトのパフォーマンスを大幅に低下の結果。</span><span class="sxs-lookup"><span data-stu-id="813f4-257">Results in very poor performance for objects that have grown very large through repeated method calls.</span></span>  |  
|<span data-ttu-id="813f4-258">変換、<xref:System.Text.StringBuilder>オブジェクトを<xref:System.String>オブジェクトし、の変更を行う、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-258">Convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object, and perform modifications on the <xref:System.String> object.</span></span>|<span data-ttu-id="813f4-259">変更の数が少ない場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="813f4-259">Useful if the number of modifications is small.</span></span>|<span data-ttu-id="813f4-260">パフォーマンスの利点を否定、<xref:System.Text.StringBuilder>クラスの変更の数が大きい場合。</span><span class="sxs-lookup"><span data-stu-id="813f4-260">Negates the performance benefit of the <xref:System.Text.StringBuilder> class if the number of modifications is large.</span></span>|  
  
 <span data-ttu-id="813f4-261">これらの手法を詳しく見ていきましょう。</span><span class="sxs-lookup"><span data-stu-id="813f4-261">Let's examine these techniques in greater detail.</span></span>  
  
-   <span data-ttu-id="813f4-262">検索の目的でそれらを格納する前に文字列を検索することができます (つまり、部分文字列の位置に興味がない) 場合に特定の部分文字列が存在するかどうかを判断する場合、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-262">If the goal of the search is to determine whether a particular substring exists (that is, if you aren't interested in the position of the substring), you can search strings before storing them in the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-263">次の例では、1 つの考えられる実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="813f4-263">The following example provides one possible implementation.</span></span> <span data-ttu-id="813f4-264">定義、`StringBuilderFinder`クラスのコンス トラクターへの参照が渡される、<xref:System.Text.StringBuilder>オブジェクトと、文字列内で検索する部分文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-264">It defines a `StringBuilderFinder` class whose constructor is passed a reference to a <xref:System.Text.StringBuilder> object and the substring to find in the string.</span></span> <span data-ttu-id="813f4-265">例が記録された気温が華氏または摂氏はおよびの先頭に適切な概要説明のテキストを追加するかどうかを決定しようとしたこの例では、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-265">In this case, the example tries to determine whether recorded temperatures are in Fahrenheit or Celsius, and adds the appropriate introductory text to the beginning of the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-266">乱数ジェネレーターを使用して、摂氏または華氏のいずれかでデータを格納する配列を選択します。</span><span class="sxs-lookup"><span data-stu-id="813f4-266">A random number generator is used to select an array that contains data in either degrees Celsius or degrees Fahrenheit.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern1.cs#12)]
     [!code-vb[System.Text.StringBuilder.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern1.vb#12)]  
  
-   <span data-ttu-id="813f4-267">呼び出す、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType>に変換するメソッド、<xref:System.Text.StringBuilder>オブジェクトを<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-267">Call the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object.</span></span> <span data-ttu-id="813f4-268">などのメソッドを使用して、文字列を検索する<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>または<xref:System.String.StartsWith%2A?displayProperty=nameWithType>、正規表現を使用することも、<xref:System.Text.RegularExpressions.Regex>パターンを検索するクラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-268">You can search the string by using methods such as <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> or <xref:System.String.StartsWith%2A?displayProperty=nameWithType>, or you can use regular expressions and the <xref:System.Text.RegularExpressions.Regex> class to search for patterns.</span></span> <span data-ttu-id="813f4-269">両方<xref:System.Text.StringBuilder>と<xref:System.String>オブジェクトを使用して、utf-16 エンコード文字の部分文字列の文字のインデックス位置を格納して、正規表現の一致が両方のオブジェクトで同じです。</span><span class="sxs-lookup"><span data-stu-id="813f4-269">Because both <xref:System.Text.StringBuilder> and <xref:System.String> objects use UTF-16 encoding to store characters, the index positions of characters, substrings, and regular expression matches are the same in both objects.</span></span> <span data-ttu-id="813f4-270">これにより、使用する<xref:System.Text.StringBuilder>でそのテキストが見つかった位置の同じ位置で変更を行う方法、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-270">This enables you to use <xref:System.Text.StringBuilder> methods to make changes at the same position at which that text is found in the <xref:System.String> object.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="813f4-271">このアプローチを採用する場合は、末尾から作業する必要があります、<xref:System.Text.StringBuilder>繰り返しに変換する必要があるないように、その以降にオブジェクト、<xref:System.Text.StringBuilder>オブジェクトを文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-271">If you adopt this approach, you should work from the end of the <xref:System.Text.StringBuilder> object to its beginning so that you don't have to repeatedly convert the <xref:System.Text.StringBuilder> object to a string.</span></span>  
  
     <span data-ttu-id="813f4-272">このアプローチの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="813f4-272">The following example illustrates this approach.</span></span> <span data-ttu-id="813f4-273">英語のアルファベットの各文字の 4 つの出現回数を格納、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-273">It stores four occurrences of each letter of the English alphabet in a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-274">テキストを次に、変換、<xref:System.String>オブジェクトごとの 4 文字のシーケンスの開始位置を識別するために正規表現を使用しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-274">It then converts the text to a <xref:System.String> object and uses a regular expression to identify the starting position of each four-character sequence.</span></span> <span data-ttu-id="813f4-275">最後に、最初のシーケンスを除く各 4 文字のシーケンスの前にアンダー スコアを追加し、大文字に、シーケンスの最初の文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="813f4-275">Finally, it adds an underscore before each four-character sequence except for the first sequence, and converts the first character of the sequence to uppercase.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern2.cs#13)]
     [!code-vb[System.Text.StringBuilder.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern2.vb#13)]  
  
-   <span data-ttu-id="813f4-276">使用して、<xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType>で文字の範囲を順番に検索するプロパティを<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-276">Use the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property to sequentially search a range of characters in a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="813f4-277">検索する文字数が大きい場合や、検索ロジックが特に複雑な場合、このアプローチを実用的なできない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-277">This approach may not be practical if the number of characters to be searched is large or the search logic is particularly complex.</span></span> <span data-ttu-id="813f4-278">文字のインデックス ベースのアクセスのパフォーマンスに影響する非常に大きな、chunked<xref:System.Text.StringBuilder>オブジェクト、ドキュメントを参照して、<xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-278">For the performance implications of character-by-character index-based access for very large, chunked <xref:System.Text.StringBuilder> objects, see the documentation for the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property.</span></span> 
  
     <span data-ttu-id="813f4-279">次の例では、前の例と同じ機能ですが、実装では異なります。</span><span class="sxs-lookup"><span data-stu-id="813f4-279">The following example is identical in functionality to the previous example but differs in implementation.</span></span> <span data-ttu-id="813f4-280">使用して、<xref:System.Text.StringBuilder.Chars%2A>文字の値が変更されたときを検出するためにプロパティが、その位置にアンダー スコアを挿入し、新しいシーケンスの最初の文字を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="813f4-280">It uses the <xref:System.Text.StringBuilder.Chars%2A> property to detect when a character value has changed, inserts an underscore at that position, and converts the first character in the new sequence to uppercase.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern3.cs#14)]
     [!code-vb[System.Text.StringBuilder.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern3.vb#14)]  
  
-   <span data-ttu-id="813f4-281">変更されていないすべてのテキストを格納、<xref:System.Text.StringBuilder>オブジェクトを呼び出し、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType>に変換するメソッド、<xref:System.Text.StringBuilder>オブジェクトを<xref:System.String>オブジェクトとに、変更が行わ、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-281">Store all the unmodified text in the <xref:System.Text.StringBuilder> object, call the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object, and perform the modifications on the <xref:System.String> object.</span></span> <span data-ttu-id="813f4-282">このアプローチを使用するには、いくつか変更にのみがある場合それ以外の場合、不変の文字列の操作のコストは可能性がありますを使用してのパフォーマンスの利点を負数化、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-282">You can use this approach if you have only a few modifications; otherwise, the cost of working with immutable strings may negate the performance benefits of using a <xref:System.Text.StringBuilder> object.</span></span>  
  
     <span data-ttu-id="813f4-283">次の例では、前の 2 つの例と同じ機能ですが、実装では異なります。</span><span class="sxs-lookup"><span data-stu-id="813f4-283">The following example is identical in functionality to the previous two examples but differs in implementation.</span></span> <span data-ttu-id="813f4-284">作成、<xref:System.Text.StringBuilder>オブジェクトに変換する、<xref:System.String>オブジェクト、および正規表現を使用して、文字列の残りのすべての変更を実行します。</span><span class="sxs-lookup"><span data-stu-id="813f4-284">It creates a <xref:System.Text.StringBuilder> object, converts it to a <xref:System.String> object, and then uses a regular expression to perform all remaining modifications on the string.</span></span> <span data-ttu-id="813f4-285"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType>メソッドでは、ラムダ式を使用して、一致した各文字列の置換を実行します。</span><span class="sxs-lookup"><span data-stu-id="813f4-285">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method uses a lambda expression to perform the replacement on each match.</span></span>  
  
     [!code-csharp[System.Text.StringBuilder.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern4.cs#15)]
     [!code-vb[System.Text.StringBuilder.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern4.vb#15)]  
  
<a name="Converting"></a>   
## <a name="converting-the-stringbuilder-object-to-a-string"></a><span data-ttu-id="813f4-286">StringBuilder オブジェクトを文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="813f4-286">Converting the StringBuilder object to a string</span></span>  
 <span data-ttu-id="813f4-287"><xref:System.Text.StringBuilder> オブジェクトで表される文字列を <xref:System.String> パラメーターを持つメソッドに渡すかそれをユーザー インターフェイスに表示するには、事前に <xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-287">You must convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span> <span data-ttu-id="813f4-288">呼び出すことによってこの変換を実行する、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-288">You perform this conversion by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="813f4-289">例については、呼び出しの前の例を参照してください、<xref:System.Text.StringBuilder.ToString%2A>に変換するメソッド、<xref:System.Text.StringBuilder>オブジェクトの文字列を正規表現メソッドに渡すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="813f4-289">For an illustration, see the previous example, which calls the <xref:System.Text.StringBuilder.ToString%2A> method to convert a <xref:System.Text.StringBuilder> object to a string so that it can be passed to a regular expression method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-290">次の例で定義されたメソッドの多くを呼び出す方法を示しています、<xref:System.Text.StringBuilder>クラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-290">The following example shows how to call many of the methods defined by the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-cpp[StringBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringBuilder/cpp/StringBuilder.cpp#1)]
 [!code-csharp[StringBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringBuilder/CS/StringBuilder.cs#1)]
 [!code-vb[StringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringBuilder/VB/StringBuilder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="813f4-291">
        <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="813f4-291">
          <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-292">
            <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-292">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="813f4-293">
            <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-293">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-294">このインスタンスの文字列値に設定されます<xref:System.String.Empty?displayProperty=nameWithType>実装に固有の既定の容量に容量が設定されているとします。</span><span class="sxs-lookup"><span data-stu-id="813f4-294">The string value of this instance is set to <xref:System.String.Empty?displayProperty=nameWithType>, and the capacity is set to the implementation-specific default capacity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-295">次の例では、呼び出す方法、<xref:System.Text.StringBuilder.%23ctor%2A>パラメーターなしコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="813f4-295">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with no parameters.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#1)]
 [!code-csharp[System.Text.StringBuilder.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#1)]
 [!code-vb[System.Text.StringBuilder.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="813f4-296">このインスタンスの推奨される開始サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-296">The suggested starting size of this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-297">指定した容量を使用して、<see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-297">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-298">`capacity`パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-298">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="813f4-299">その値は、<xref:System.Text.StringBuilder.Capacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-299">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="813f4-300">この現在のインスタンスに格納される文字数を超えたかどうか`capacity`値、<xref:System.Text.StringBuilder>オブジェクトがそれらを格納する追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="813f4-300">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="813f4-301">このインスタンスの文字列値に設定されます<xref:System.String.Empty?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-301">The string value of this instance is set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-302">場合`capacity`0 の場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-302">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-303">次の例では、呼び出す方法、<xref:System.Text.StringBuilder.%23ctor%2A>コンス トラクター容量を指定します。</span><span class="sxs-lookup"><span data-stu-id="813f4-303">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with a specified capacity.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#3)]
 [!code-csharp[System.Text.StringBuilder.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#3)]
 [!code-vb[System.Text.StringBuilder.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-304">
            <paramref name="capacity" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-304">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-305">インスタンスの値を初期化するために使用される文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-305">The string used to initialize the value of the instance.</span>
          </span>
          <span data-ttu-id="813f4-306">
            <c>value</c> が <see langword="null" /> の場合、新しい <see cref="T:System.Text.StringBuilder" /> は空の文字列、つまり、<see cref="F:System.String.Empty" /> を含みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-306">If <c>value</c> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-307">指定した文字列を使用して、<see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-307">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-308">`value` が `null` の場合、新しい <xref:System.Text.StringBuilder> は空の文字列、つまり、<xref:System.String.Empty> を含みます。</span><span class="sxs-lookup"><span data-stu-id="813f4-308">If `value` is `null`, the new <xref:System.Text.StringBuilder> will contain the empty string (that is, it contains <xref:System.String.Empty>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-309">次の例では、呼び出す方法、<xref:System.Text.StringBuilder.%23ctor%2A>コンス トラクターで指定した文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-309">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with the specified string.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#4)]
 [!code-csharp[System.Text.StringBuilder.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#4)]
 [!code-vb[System.Text.StringBuilder.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (int capacity, int maxCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, int32 maxCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, maxCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(int capacity, int maxCapacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : int * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (capacity, maxCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="maxCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="813f4-310">
            <see cref="T:System.Text.StringBuilder" /> の推奨される開始サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-310">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </param>
        <param name="maxCapacity">
          <span data-ttu-id="813f4-311">現在の文字列が含むことができる最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-311">The maximum number of characters the current string can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-312">指定した容量で始まり、指定した最大容量まで大きくなる <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-312">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class that starts with a specified capacity and can grow to a specified maximum.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-313">`capacity`パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-313">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="813f4-314">その値は、<xref:System.Text.StringBuilder.Capacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-314">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="813f4-315">この現在のインスタンスに格納される文字数を超えたかどうか`capacity`値、<xref:System.Text.StringBuilder>オブジェクトがそれらを格納する追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="813f4-315">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="813f4-316">場合`capacity`0 の場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-316">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
 <span data-ttu-id="813f4-317">`maxCapacity`プロパティは、現在のインスタンスを保持できる文字の最大数を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-317">The `maxCapacity` property defines the maximum number of characters that the current instance can hold.</span></span> <span data-ttu-id="813f4-318">その値は、<xref:System.Text.StringBuilder.MaxCapacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-318">Its value is assigned to the <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span> <span data-ttu-id="813f4-319">この現在のインスタンスに格納される文字数を超えたかどうか`maxCapacity`値、<xref:System.Text.StringBuilder>オブジェクトは、追加のメモリを割り当てられませんが、代わりに例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="813f4-319">If the number of characters to be stored in the current instance exceeds this `maxCapacity` value, the <xref:System.Text.StringBuilder> object does not allocate additional memory, but instead throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-320">次の例では、呼び出す方法、<xref:System.Text.StringBuilder.%23ctor%2A>指定した容量と最大の容量を持つコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="813f4-320">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with a specified capacity and maximum capacity.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#5)]
 [!code-csharp[System.Text.StringBuilder.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#5)]
 [!code-vb[System.Text.StringBuilder.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-321">
            <paramref name="maxCapacity" /> が 1 未満で、<paramref name="capacity" /> が 0 未満です。または <paramref name="capacity" /> が <paramref name="maxCapacity" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-321">
              <paramref name="maxCapacity" /> is less than one, <paramref name="capacity" /> is less than zero, or <paramref name="capacity" /> is greater than <paramref name="maxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-322">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-322">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
        <altmember cref="P:System.Text.StringBuilder.MaxCapacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (value, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-323">インスタンスの値を初期化するために使用される文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-323">The string used to initialize the value of the instance.</span>
          </span>
          <span data-ttu-id="813f4-324">
            <c>value</c> が <see langword="null" /> の場合、新しい <see cref="T:System.Text.StringBuilder" /> は空の文字列、つまり、<see cref="F:System.String.Empty" /> を含みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-324">If <c>value</c> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="813f4-325">
            <see cref="T:System.Text.StringBuilder" /> の推奨される開始サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-325">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-326">指定した文字列および容量を使用して、<see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-326">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string and capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-327">`capacity`パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-327">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="813f4-328">その値は、<xref:System.Text.StringBuilder.Capacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-328">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="813f4-329">この現在のインスタンスに格納される文字数を超えたかどうか`capacity`値、<xref:System.Text.StringBuilder>オブジェクトがそれらを格納する追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="813f4-329">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="813f4-330">場合`capacity`0 の場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-330">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-331">次の例では、呼び出す方法、<xref:System.Text.StringBuilder.%23ctor%2A>最初の文字列で指定された容量を持つコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="813f4-331">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with an initial string and a specified capacity.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#7)]
 [!code-csharp[System.Text.StringBuilder.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#7)]
 [!code-vb[System.Text.StringBuilder.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-332">
            <paramref name="capacity" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-332">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value, int startIndex, int length, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 startIndex, int32 length, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, startIndex As Integer, length As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value, int startIndex, int length, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string * int * int * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (value, startIndex, length, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-333">このインスタンスの値を初期化するために使用される部分文字列を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-333">The string that contains the substring used to initialize the value of this instance.</span>
          </span>
          <span data-ttu-id="813f4-334">
            <c>value</c> が <see langword="null" /> の場合、新しい <see cref="T:System.Text.StringBuilder" /> は空の文字列、つまり、<see cref="F:System.String.Empty" /> を含みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-334">If <c>value</c> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="813f4-335">
            <c>value</c> における部分文字列の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-335">The position within <c>value</c> where the substring begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="813f4-336">部分文字列の文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-336">The number of characters in the substring.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="813f4-337">
            <see cref="T:System.Text.StringBuilder" /> の推奨される開始サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-337">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-338">指定した部分文字列および容量から <see cref="T:System.Text.StringBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-338">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class from the specified substring and capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-339">`capacity`パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる文字の最大数を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-339">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="813f4-340">その値は、<xref:System.Text.StringBuilder.Capacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-340">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="813f4-341">この現在のインスタンスに格納される文字数を超えたかどうか`capacity`値、<xref:System.Text.StringBuilder>オブジェクトがそれらを格納する追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="813f4-341">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>  
  
 <span data-ttu-id="813f4-342">場合`capacity`0 の場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-342">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-343">次の例では、呼び出す方法、<xref:System.Text.StringBuilder.%23ctor%2A>コンス トラクターで指定した文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-343">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with the specified string.</span></span>  
  
 [!code-cpp[System.Text.StringBuilder.Constructors#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#6)]
 [!code-csharp[System.Text.StringBuilder.Constructors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#6)]
 [!code-vb[System.Text.StringBuilder.Constructors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-344">
            <paramref name="capacity" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-344">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-345">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-345">-or-</span>
          </span>
          <span data-ttu-id="813f4-346">
            <paramref name="startIndex" /> に <paramref name="length" /> を加算した値が、<paramref name="value" /> 内にない位置を示しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-346">
              <paramref name="startIndex" /> plus <paramref name="length" /> is not a position within <paramref name="value" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-347">指定したオブジェクトの文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-347">Appends the string representation of a specified object to this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Boolean) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(bool value);" />
      <MemberSignature Language="F#" Value="member this.Append : bool -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-348">追加するブール値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-348">The Boolean value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-349">指定したブール値の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-349">Appends the string representation of a specified Boolean value to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-350">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-350">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-351"><xref:System.Text.StringBuilder.Append%28System.Boolean%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-351">The <xref:System.Text.StringBuilder.Append%28System.Boolean%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-352">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-352">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#2)]
 [!code-vb[System.Text.StringBuilder.Append#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#2)]  
  
 <span data-ttu-id="813f4-353"><xref:System.Text.StringBuilder.Append%28System.Boolean%29>メソッドの呼び出し、<xref:System.Boolean.ToString?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-353">The <xref:System.Text.StringBuilder.Append%28System.Boolean%29> method calls the <xref:System.Boolean.ToString?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="813f4-354">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-354">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-355">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-355">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-356">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-356">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Byte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.Append : byte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-357">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-357">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-358">指定した 8 ビット符号なし整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-358">Appends the string representation of a specified 8-bit unsigned integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-359">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-359">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-360"><xref:System.Text.StringBuilder.Append%28System.Byte%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-360">The <xref:System.Text.StringBuilder.Append%28System.Byte%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-361">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-361">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#3)]
 [!code-vb[System.Text.StringBuilder.Append#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#3)]  
  
 <span data-ttu-id="813f4-362"><xref:System.Text.StringBuilder.Append%28System.Byte%29>メソッドの呼び出し、<xref:System.Byte.ToString%28System.IFormatProvider%29>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-362">The <xref:System.Text.StringBuilder.Append%28System.Byte%29> method calls the <xref:System.Byte.ToString%28System.IFormatProvider%29> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-363">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-363">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-364">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-364">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-365">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-365">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-366">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-366">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char value);" />
      <MemberSignature Language="F#" Value="member this.Append : char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-367">追加する UTF-16 でエンコードされたコード単位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-367">The UTF-16-encoded code unit to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-368">指定した <see cref="T:System.Char" /> オブジェクトの文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-368">Appends the string representation of a specified <see cref="T:System.Char" /> object to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-369">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-369">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-370"><xref:System.Text.StringBuilder.Append%28System.Char%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-370">The <xref:System.Text.StringBuilder.Append%28System.Char%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-371">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-371">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#4)]
 [!code-vb[System.Text.StringBuilder.Append#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#4)]  
  
 <span data-ttu-id="813f4-372">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-372">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-373">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-373">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-374">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-374">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : char[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-375">追加する文字の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-375">The array of characters to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-376">指定した配列内の Unicode 文字の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-376">Appends the string representation of the Unicode characters in a specified array to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-377">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-377">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-378">このメソッドに表示される現在のインスタンスと同じ順序で指定した配列内のすべての文字を追加`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-378">This method appends all the characters in the specified array to the current instance in the same order as they appear in `value`.</span></span> <span data-ttu-id="813f4-379">場合`value`は`null`変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="813f4-379">If `value` is `null`, no changes are made.</span></span>  
  
 <span data-ttu-id="813f4-380"><xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-380">The <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-381">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-381">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#6)]
 [!code-vb[System.Text.StringBuilder.Append#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#6)]  
  
 <span data-ttu-id="813f4-382">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-382">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-383">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-383">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-384">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-384">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Decimal) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.Append : decimal -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-385">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-385">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-386">指定した 10 進数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-386">Appends the string representation of a specified decimal number to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-387">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-387">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-388"><xref:System.Text.StringBuilder.Append%28System.Decimal%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-388">The <xref:System.Text.StringBuilder.Append%28System.Decimal%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-389">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-389">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#8)]
 [!code-vb[System.Text.StringBuilder.Append#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#8)]  
  
 <span data-ttu-id="813f4-390"><xref:System.Text.StringBuilder.Append%28System.Decimal%29>メソッドの呼び出し、<xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-390">The <xref:System.Text.StringBuilder.Append%28System.Decimal%29> method calls the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-391">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-391">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-392">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-392">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-393">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-393">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-394">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-394">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Double) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(double value);" />
      <MemberSignature Language="F#" Value="member this.Append : double -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-395">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-395">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-396">指定した倍精度浮動小数点数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-396">Appends the string representation of a specified double-precision floating-point number to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-397">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-397">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-398"><xref:System.Text.StringBuilder.Append%28System.Double%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-398">The <xref:System.Text.StringBuilder.Append%28System.Double%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-399">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-399">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#9)]
 [!code-vb[System.Text.StringBuilder.Append#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#9)]  
  
 <span data-ttu-id="813f4-400"><xref:System.Text.StringBuilder.Append%28System.Double%29>メソッドの呼び出し、<xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-400">The <xref:System.Text.StringBuilder.Append%28System.Double%29> method calls the <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-401">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-401">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-402">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-402">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-403">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-403">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-404">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-404">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Short) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(short value);" />
      <MemberSignature Language="F#" Value="member this.Append : int16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-405">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-405">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-406">指定した 16 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-406">Appends the string representation of a specified 16-bit signed integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-407">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-407">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-408"><xref:System.Text.StringBuilder.Append%28System.Int16%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-408">The <xref:System.Text.StringBuilder.Append%28System.Int16%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-409">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-409">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#10)]
 [!code-vb[System.Text.StringBuilder.Append#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#10)]  
  
 <span data-ttu-id="813f4-410"><xref:System.Text.StringBuilder.Append%28System.Int16%29>メソッドの呼び出し、<xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-410">The <xref:System.Text.StringBuilder.Append%28System.Int16%29> method calls the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-411">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-411">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-412">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-412">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-413">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-413">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-414">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-414">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(int value);" />
      <MemberSignature Language="F#" Value="member this.Append : int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-415">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-415">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-416">指定した 32 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-416">Appends the string representation of a specified 32-bit signed integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-417">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-417">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-418"><xref:System.Text.StringBuilder.Append%28System.Int32%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-418">The <xref:System.Text.StringBuilder.Append%28System.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-419">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-419">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#11)]
 [!code-vb[System.Text.StringBuilder.Append#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#11)]  
  
 <span data-ttu-id="813f4-420"><xref:System.Text.StringBuilder.Append%28System.Int32%29>メソッドの呼び出し、<xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-420">The <xref:System.Text.StringBuilder.Append%28System.Int32%29> method calls the <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-421">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-421">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-422">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-422">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-423">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-423">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-424">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-424">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Long) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(long value);" />
      <MemberSignature Language="F#" Value="member this.Append : int64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-425">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-425">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-426">指定した 64 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-426">Appends the string representation of a specified 64-bit signed integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-427">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-427">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-428"><xref:System.Text.StringBuilder.Append%28System.Int64%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-428">The <xref:System.Text.StringBuilder.Append%28System.Int64%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-429">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-429">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#12)]
 [!code-vb[System.Text.StringBuilder.Append#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#12)]  
  
 <span data-ttu-id="813f4-430"><xref:System.Text.StringBuilder.Append%28System.Int64%29>メソッドの呼び出し、<xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>の文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-430">The <xref:System.Text.StringBuilder.Append%28System.Int64%29> method calls the <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-431">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-431">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-432">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-432">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-433">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-433">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-434">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-434">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-435">追加するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-435">The object to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-436">指定したオブジェクトの文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-436">Appends the string representation of a specified object to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-437">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-437">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-438"><xref:System.Text.StringBuilder.Append%28System.Object%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-438">The <xref:System.Text.StringBuilder.Append%28System.Object%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-439">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-439">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span> <span data-ttu-id="813f4-440">定義しますを`Dog`クラスを作成、`Dog`オブジェクト、およびには 3 つの呼び出し、 <xref:System.Text.StringBuilder.Append%2A> dog の名前と種類を含む文字列を作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-440">It defines a `Dog` class, creates a `Dog` object, and makes three calls to the <xref:System.Text.StringBuilder.Append%2A> method to create a string that contains the dog's name and breed.</span></span>  
  
 [!code-csharp[System.Text.Stringbuilder.Append#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append4.cs#18)]
 [!code-vb[System.Text.Stringbuilder.Append#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append4.vb#18)]  
  
 <span data-ttu-id="813f4-441"><xref:System.Text.StringBuilder.Append%28System.Object%29>メソッドの呼び出し、<xref:System.Object.ToString%2A?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-441">The <xref:System.Text.StringBuilder.Append%28System.Object%29> method calls the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="813f4-442">場合`value`は`null`に変更は行われません、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-442">If `value` is `null`, no changes are made to the <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-443">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-443">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-444">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-444">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-445">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-445">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ReadOnlySpan(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Append : ReadOnlySpan&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As SByte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.Append : sbyte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-446">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-446">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-447">指定した 8 ビット符号付き整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-447">Appends the string representation of a specified 8-bit signed integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-448">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-448">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-449"><xref:System.Text.StringBuilder.Append%28System.SByte%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-449">The <xref:System.Text.StringBuilder.Append%28System.SByte%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-450">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-450">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#13)]
 [!code-vb[System.Text.StringBuilder.Append#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#13)]  
  
 <span data-ttu-id="813f4-451"><xref:System.Text.StringBuilder.Append%28System.SByte%29>メソッドの呼び出し、<xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-451">The <xref:System.Text.StringBuilder.Append%28System.SByte%29> method calls the <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method  to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-452">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-452">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-453">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-453">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-454">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-454">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-455">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-455">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Single) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(float value);" />
      <MemberSignature Language="F#" Value="member this.Append : single -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-456">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-456">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-457">指定した単精度浮動小数点数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-457">Appends the string representation of a specified single-precision floating-point number to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-458">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-458">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-459"><xref:System.Text.StringBuilder.Append%28System.Single%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-459">The <xref:System.Text.StringBuilder.Append%28System.Single%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-460">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-460">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#14)]
 [!code-vb[System.Text.StringBuilder.Append#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#14)]  
  
 <span data-ttu-id="813f4-461"><xref:System.Text.StringBuilder.Append%28System.Single%29>メソッドの呼び出し、<xref:System.Single.ToString%2A?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-461">The <xref:System.Text.StringBuilder.Append%28System.Single%29> method calls the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-462">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-462">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-463">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-463">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-464">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-464">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-465">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-465">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-466">追加する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-466">The string to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-467">指定した文字列のコピーをこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-467">Appends a copy of the specified string to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-468">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-468">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-469"><xref:System.Text.StringBuilder.Append%28System.String%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-469">The <xref:System.Text.StringBuilder.Append%28System.String%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-470">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-470">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#2)]
 [!code-vb[System.Text.StringBuilder.Append#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#2)]  
  
 <span data-ttu-id="813f4-471">場合`value`は`null`変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="813f4-471">If `value` is `null`, no changes are made.</span></span>  
  
 <span data-ttu-id="813f4-472">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-472">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-473">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-473">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-474">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-474">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As StringBuilder) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Text.StringBuilder -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As UShort) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-475">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-475">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-476">指定した 16 ビット符号なし整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-476">Appends the string representation of a specified 16-bit unsigned integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-477">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-477">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-478"><xref:System.Text.StringBuilder.Append%28System.UInt16%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-478">The <xref:System.Text.StringBuilder.Append%28System.UInt16%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-479">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-479">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#15)]
 [!code-vb[System.Text.StringBuilder.Append#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#15)]  
  
 <span data-ttu-id="813f4-480"><xref:System.Text.StringBuilder.Append%28System.UInt16%29>メソッドの呼び出し、<xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-480">The <xref:System.Text.StringBuilder.Append%28System.UInt16%29> method calls the <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="813f4-481">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-481">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-482">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-482">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-483">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-483">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-484">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-484">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As UInteger) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint32 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-485">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-485">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-486">指定された 32 ビット符号なし整数の文字列表記をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-486">Appends the string representation of a specified 32-bit unsigned integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-487">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-487">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-488"><xref:System.Text.StringBuilder.Append%28System.UInt32%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-488">The <xref:System.Text.StringBuilder.Append%28System.UInt32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-489">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-489">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#16)]
 [!code-vb[System.Text.StringBuilder.Append#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#16)]  
  
 <span data-ttu-id="813f4-490"><xref:System.Text.StringBuilder.Append%28System.UInt32%29>呼び出し、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-490">The <xref:System.Text.StringBuilder.Append%28System.UInt32%29> calls the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-491">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-491">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-492">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-492">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-493">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-493">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-494">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-494">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ULong) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-495">追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-495">The value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-496">指定した 64 ビット符号なし整数の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-496">Appends the string representation of a specified 64-bit unsigned integer to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-497">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-497">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-498"><xref:System.Text.StringBuilder.Append%28System.UInt64%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-498">The <xref:System.Text.StringBuilder.Append%28System.UInt64%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-499">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-499">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#17)]
 [!code-vb[System.Text.StringBuilder.Append#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#17)]  
  
 <span data-ttu-id="813f4-500"><xref:System.Text.StringBuilder.Append%28System.UInt64%29>メソッドの呼び出し、<xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>メソッドの文字列表現を取得する`value`現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="813f4-500">The <xref:System.Text.StringBuilder.Append%28System.UInt64%29> method calls the <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="813f4-501">書式を制御する`value`を呼び出し、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-501">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 <span data-ttu-id="813f4-502">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-502">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-503">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-503">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-504">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-504">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char value, int repeatCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char value, int32 repeatCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char, repeatCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char value, int repeatCount);" />
      <MemberSignature Language="F#" Value="member this.Append : char * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, repeatCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="repeatCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-505">追加する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-505">The character to append.</span>
          </span>
        </param>
        <param name="repeatCount">
          <span data-ttu-id="813f4-506">
            <c>value</c> を追加する回数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-506">The number of times to append <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-507">Unicode 文字の文字列形式の、指定した数のコピーをこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-507">Appends a specified number of copies of the string representation of a Unicode character to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-508">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-508">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-509"><xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-509">The <xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-510">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-510">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#5)]
 [!code-vb[System.Text.StringBuilder.Append#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#5)]  
  
 <span data-ttu-id="813f4-511">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-511">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-512">
            <paramref name="repeatCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-512">
              <paramref name="repeatCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-513">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-513">-or-</span>
          </span>
          <span data-ttu-id="813f4-514">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-514">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-515">メモリが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-515">Out of memory.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-516">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-516">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char* value, int valueCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char* value, int32 valueCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char* value, int valueCount);" />
      <MemberSignature Language="F#" Value="member this.Append : nativeptr&lt;char&gt; * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, valueCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="valueCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-517">文字の配列を指すポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-517">A pointer to an array of characters.</span>
          </span>
        </param>
        <param name="valueCount">
          <span data-ttu-id="813f4-518">配列の文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-518">The number of characters in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-519">指定したアドレスで始まる Unicode 文字の配列をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-519">Appends an array of Unicode characters starting at a specified address to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-520">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-520">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-521">このメソッドは追加`valueCount`アドレスで始まる文字`value`現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-521">This method appends `valueCount` characters starting at address `value` to the current instance.</span></span>  
  
 <span data-ttu-id="813f4-522"><xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-522">The <xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-523">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-523">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-524">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-524">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-525">
            <paramref name="valueCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-525">
              <paramref name="valueCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-526">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-526">-or-</span>
          </span>
          <span data-ttu-id="813f4-527">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-527">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="813f4-528">
            <paramref name="value" /> が null ポインターです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-528">
              <paramref name="value" /> is a null pointer.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-529">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-529">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char[] value, int startIndex, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char[] value, int32 startIndex, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char(), startIndex As Integer, charCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(cli::array &lt;char&gt; ^ value, int startIndex, int charCount);" />
      <MemberSignature Language="F#" Value="member this.Append : char[] * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-530">文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-530">A character array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="813f4-531">
            <c>value</c> 内の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-531">The starting position in <c>value</c>.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="813f4-532">追加する文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-532">The number of characters to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-533">Unicode 文字の指定した部分配列の文字列形式をこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-533">Appends the string representation of a specified subarray of Unicode characters to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-534">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-534">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-535">このメソッドは、指定された文字の範囲を追加します。`value`現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-535">This method appends the specified range of characters in `value` to the current instance.</span></span> <span data-ttu-id="813f4-536">場合`value`は`null`と`startIndex`と`count`はどちらもゼロの変更が行われました。</span><span class="sxs-lookup"><span data-stu-id="813f4-536">If `value` is `null` and `startIndex` and `count` are both zero, no changes are made.</span></span>  
  
 <span data-ttu-id="813f4-537"><xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-537">The <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-538">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-538">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#7)]
 [!code-vb[System.Text.StringBuilder.Append#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#7)]  
  
 <span data-ttu-id="813f4-539">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-539">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-540">
            <paramref name="value" /> が <see langword="null" /> であり、<paramref name="startIndex" /> と <paramref name="charCount" /> が 0 以外の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-540">
              <paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-541">
            <paramref name="charCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-541">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-542">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-542">-or-</span>
          </span>
          <span data-ttu-id="813f4-543">
            <paramref name="startIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-543">
              <paramref name="startIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-544">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-544">-or-</span>
          </span>
          <span data-ttu-id="813f4-545">
            <paramref name="startIndex" /> + <paramref name="charCount" /> が <paramref name="value" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-545">
              <paramref name="startIndex" /> + <paramref name="charCount" /> is greater than the length of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="813f4-546">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-546">-or-</span>
          </span>
          <span data-ttu-id="813f4-547">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-547">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-548">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-548">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-549">追加する部分文字列を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-549">The string that contains the substring to append.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="813f4-550">
            <c>value</c> 内の部分文字列の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-550">The starting position of the substring within <c>value</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="813f4-551">
            <c>value</c> 内の追加する文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-551">The number of characters in <c>value</c> to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-552">指定した部分文字列のコピーをこのインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-552">Appends a copy of a specified substring to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-553">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-553">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-554">このメソッドは、指定された文字の範囲を追加します。`value`現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-554">This method appends the specified range of characters in `value` to the current instance.</span></span> <span data-ttu-id="813f4-555">場合`value`は`null`と`startIndex`と`count`はどちらもゼロの変更が行われました。</span><span class="sxs-lookup"><span data-stu-id="813f4-555">If `value` is `null` and `startIndex` and `count` are both zero, no changes are made.</span></span>  
  
 <span data-ttu-id="813f4-556"><xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29>メソッドは、このクラスの既存のインスタンスを変更します; クラスの新しいインスタンスを返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="813f4-556">The <xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="813f4-557">このため、上で呼び出せるメソッドまたはプロパティを既存の参照および戻り値を代入する必要はありません、<xref:System.Text.StringBuilder>オブジェクトを次の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-557">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Append#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#19)]
 [!code-vb[System.Text.StringBuilder.Append#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#19)]  
  
 <span data-ttu-id="813f4-558">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-558">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-559">
            <paramref name="value" /> が <see langword="null" /> であり、<paramref name="startIndex" /> と <paramref name="count" /> が 0 以外の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-559">
              <paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="count" /> are not zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-560">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-560">
              <paramref name="count" /> less than zero.</span>
          </span>
          <span data-ttu-id="813f4-561">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-561">-or-</span>
          </span>
          <span data-ttu-id="813f4-562">
            <paramref name="startIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-562">
              <paramref name="startIndex" /> less than zero.</span>
          </span>
          <span data-ttu-id="813f4-563">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-563">-or-</span>
          </span>
          <span data-ttu-id="813f4-564">
            <paramref name="startIndex" /> + <paramref name="count" /> が <paramref name="value" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-564">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="813f4-565">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-565">-or-</span>
          </span>
          <span data-ttu-id="813f4-566">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-566">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-567">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-567">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (System.Text.StringBuilder value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(class System.Text.StringBuilder value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As StringBuilder, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Text::StringBuilder ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Text.StringBuilder * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFormat">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-568">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-568">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-569">各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-569">Each format item is replaced by the string representation of a corresponding object argument.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="813f4-570">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-570">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="813f4-571">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-571">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-572">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-572">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-573">各書式項目は、単一の引数の文字列表記に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-573">Each format item is replaced by the string representation of a single argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-574">
            <paramref name="format" /> が追加されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-574">A reference to this instance with <paramref name="format" /> appended.</span>
          </span>
          <span data-ttu-id="813f4-575">
            <paramref name="format" /> の各書式指定項目は、<paramref name="arg0" /> の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-575">Each format item in <paramref name="format" /> is replaced by the string representation of <paramref name="arg0" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-576">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-576">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-577">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダー、書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="813f4-577">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</span></span> <span data-ttu-id="813f4-578">書式項目のインデックスに対応する場合は 0 をする必要があります`arg0`、このメソッドのパラメーター リスト内の 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-578">The index of the format items must be 0, to correspond to `arg0`, the single object in the parameter list of this method.</span></span> <span data-ttu-id="813f4-579">書式設定プロセスの文字列表現の各書式項目の置換`arg0`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-579">The formatting process replaces each format item with the string representation of `arg0`.</span></span>  
  
 <span data-ttu-id="813f4-580">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-580">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-581">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-581">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-582">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-582">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-583">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-583">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-584">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-584">Element</span></span>|<span data-ttu-id="813f4-585">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-585">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-586">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-586">*index*</span></span>|<span data-ttu-id="813f4-587">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-587">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-588">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-588">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-589">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-589">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-590">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-590">,*length*</span></span>|<span data-ttu-id="813f4-591">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-591">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-592">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-592">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-593">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-593">:*formatString*</span></span>|<span data-ttu-id="813f4-594">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-594">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-595">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-595">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-596">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-596">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-597">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-597">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-598">`arg0` 書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-598">`arg0` represents the object to be formatted.</span></span> <span data-ttu-id="813f4-599">各書式項目`format`の文字列形式に置き換えられます`arg0`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-599">Each format item in `format` is replaced with the string representation of `arg0`.</span></span> <span data-ttu-id="813f4-600">書式指定項目が含まれている場合`formatString`と`arg0`実装、<xref:System.IFormattable>インターフェイスし`arg0.ToString(formatString, null)`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-600">If the format item includes `formatString` and `arg0` implements the <xref:System.IFormattable> interface, then `arg0.ToString(formatString, null)` defines the formatting.</span></span> <span data-ttu-id="813f4-601">それ以外の場合、`arg0.ToString()`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-601">Otherwise, `arg0.ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="813f4-602">文字列が割り当てられている場合`format`は"いただきありがとうございます、献血の {0: ###}、慈善団体に食品の缶"。</span><span class="sxs-lookup"><span data-stu-id="813f4-602">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="813f4-603">`arg0`整数 10 の値を持つ、戻り値は「for your donation of 10 の cans of food to our charitable organization ありがとうございます」には。</span><span class="sxs-lookup"><span data-stu-id="813f4-603">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-604">次の例で、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-604">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-605">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-605">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-606">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-606">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-607">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-607">-or-</span>
          </span>
          <span data-ttu-id="813f4-608">書式項目のインデックスが 0 (ゼロ) 未満か、1 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-608">The index of a format item is less than 0 (zero), or greater than or equal to 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-609">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-609">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-610">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-610">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, ParamArray args As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="813f4-611">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-611">A composite format string.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="813f4-612">書式指定するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-612">An array of objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-613">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-613">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-614">各書式項目は、パラメーター配列内の対応する引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-614">Each format item is replaced by the string representation of a corresponding argument in a parameter array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-615">
            <paramref name="format" /> が追加されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-615">A reference to this instance with <paramref name="format" /> appended.</span>
          </span>
          <span data-ttu-id="813f4-616">
            <paramref name="format" /> の各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-616">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-617">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-617">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-618">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="813f4-618">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="813f4-619">書式設定プロセスでは、対応するオブジェクトの文字列形式で各書式項目を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="813f4-619">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="813f4-620">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-620">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-621">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-621">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-622">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-622">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-623">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-623">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-624">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-624">Element</span></span>|<span data-ttu-id="813f4-625">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-625">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-626">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-626">*index*</span></span>|<span data-ttu-id="813f4-627">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-627">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-628">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-628">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-629">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-629">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-630">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-630">,*length*</span></span>|<span data-ttu-id="813f4-631">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-631">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-632">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-632">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-633">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-633">:*formatString*</span></span>|<span data-ttu-id="813f4-634">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-634">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-635">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-635">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-636">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-636">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-637">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-637">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-638">`args` 書式設定されるオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-638">`args` represents the objects to be formatted.</span></span> <span data-ttu-id="813f4-639">各書式項目`format`は内の対応するオブジェクトの文字列形式に置き換えられます`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-639">Each format item in `format` is replaced with the string representation of the corresponding object in `args`.</span></span> <span data-ttu-id="813f4-640">書式指定項目が含まれている場合`formatString`との対応するオブジェクト`args`実装、<xref:System.IFormattable>インターフェイスし`args[index].ToString(formatString, provider)`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-640">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `args[index].ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="813f4-641">それ以外の場合、`args[index].ToString()`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-641">Otherwise, `args[index].ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="813f4-642">文字列が割り当てられている場合`format`は"いただきありがとうございます、献血の {0: ###}、慈善団体に食品の缶"。</span><span class="sxs-lookup"><span data-stu-id="813f4-642">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="813f4-643">`arg0`整数 10 の値を持つ、戻り値は「for your donation of 10 の cans of food to our charitable organization ありがとうございます」には。</span><span class="sxs-lookup"><span data-stu-id="813f4-643">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-644">次の例で、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-644">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-645">
            <paramref name="format" /> または <paramref name="args" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-645">
              <paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-646">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-646">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-647">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-647">-or-</span>
          </span>
          <span data-ttu-id="813f4-648">書式項目のインデックスが 0 より小さいか、<paramref name="args" /> 配列の長さ以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-648">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-649">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-649">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-650">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-650">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="813f4-651">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-651">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="813f4-652">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-652">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="813f4-653">書式指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-653">The object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-654">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-654">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-655">各書式項目は、指定された書式プロバイダーを使用して単一の引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-655">Each format item is replaced by the string representation of a single argument using a specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-656">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-656">A reference to this instance after the append operation has completed.</span>
          </span>
          <span data-ttu-id="813f4-657">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <paramref name="format" /> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、<paramref name="arg0" /> の文字列形式に置換されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-657">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> in which any format specification is replaced by the string representation of <paramref name="arg0" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-658">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)の値に変換する .NET Framework の`arg0`テキスト表現にし、現在の表現を埋め込む<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-658">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of `arg0` to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-659">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダー、書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="813f4-659">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</span></span> <span data-ttu-id="813f4-660">このメソッドには、単一の引数、引数リストが含まれているために、各書式項目のインデックスはゼロ (0) にある必要があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-660">The index of each format item must be zero (0) since this method includes an argument list with a single argument.</span></span> <span data-ttu-id="813f4-661">書式設定プロセスの文字列表現の各書式項目の置換`arg0`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-661">The formatting process replaces each format item with the string representation of `arg0`.</span></span>  
  
 <span data-ttu-id="813f4-662">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-662">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-663">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-663">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-664">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-664">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-665">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-665">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-666">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-666">Element</span></span>|<span data-ttu-id="813f4-667">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-667">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-668">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-668">*index*</span></span>|<span data-ttu-id="813f4-669">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-669">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-670">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-670">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-671">この場合、以降、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29>メソッドが引数リストの値の 1 つの引数を持つ*インデックス*常に 0 があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-671">In this case, since the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> method has a single argument in the argument list, the value of *index* must always be 0.</span></span> <span data-ttu-id="813f4-672">そうでない場合、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-672">If it is not, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-673">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-673">,*length*</span></span>|<span data-ttu-id="813f4-674">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-674">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-675">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-675">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-676">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-676">:*formatString*</span></span>|<span data-ttu-id="813f4-677">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-677">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-678">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-678">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-679">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-679">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-680">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-680">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-681">`provider`パラメーターを指定します、<xref:System.IFormatProvider>内のオブジェクトの書式設定情報を提供する実装`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-681">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for the objects in `args`.</span></span> <span data-ttu-id="813f4-682">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="813f4-682">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="813f4-683">A<xref:System.Globalization.CultureInfo>カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-683">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="813f4-684">A<xref:System.Globalization.NumberFormatInfo>カルチャ固有の書式設定情報を提供するオブジェクト`arg0`が数値の値の場合。</span><span class="sxs-lookup"><span data-stu-id="813f4-684">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` if it is a numeric value.</span></span>  
  
-   <span data-ttu-id="813f4-685">A<xref:System.Globalization.DateTimeFormatInfo>カルチャ固有の書式設定情報を提供するオブジェクト`arg0`が日付と時刻の値の場合。</span><span class="sxs-lookup"><span data-stu-id="813f4-685">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0` if it is a date and time value.</span></span>  
  
-   <span data-ttu-id="813f4-686">カスタム<xref:System.IFormatProvider>に対する書式設定情報を提供する実装`arg0`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-686">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0`.</span></span> <span data-ttu-id="813f4-687">通常、このようなもを実装する、<xref:System.ICustomFormatter>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="813f4-687">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>  
  
 <span data-ttu-id="813f4-688">場合、`provider`パラメーターが`null`、書式設定情報は、現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-688">If the `provider` parameter is `null`, formatting information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="813f4-689">`arg0` 書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-689">`arg0` represents the object to be formatted.</span></span> <span data-ttu-id="813f4-690">各書式項目`format`の文字列形式に置き換えられます`arg0`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-690">Each format item in `format` is replaced with the string representation of `arg0`.</span></span> <span data-ttu-id="813f4-691">書式指定項目が含まれている場合`formatString`と`arg0`実装、<xref:System.IFormattable>インターフェイスし`arg0.ToString(formatString, provider)`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-691">If the format item includes `formatString` and `arg0` implements the <xref:System.IFormattable> interface, then `arg0.ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="813f4-692">それ以外の場合、`arg0.ToString()`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-692">Otherwise, `arg0.ToString()` defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-693">次に 2 つの呼び出しが含まれています、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-693">The following includes two calls to the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="813f4-694">英語-英国 (EN-GB) カルチャの書式設定規則はどちらも使用します。</span><span class="sxs-lookup"><span data-stu-id="813f4-694">Both use the formatting conventions of the English-Great Britain (en-GB) culture.</span></span> <span data-ttu-id="813f4-695">最初の文字列表現を挿入する、<xref:System.Decimal>結果の文字列に通貨の値します。</span><span class="sxs-lookup"><span data-stu-id="813f4-695">The first inserts the string representation of a <xref:System.Decimal> value currency in a result string.</span></span> <span data-ttu-id="813f4-696">2 番目の挿入、<xref:System.DateTime>だけで、短い日付文字列と 2 番目の短い形式の時刻の文字列の最初のなどの結果を 2 か所に値が文字列します。</span><span class="sxs-lookup"><span data-stu-id="813f4-696">The second inserts a <xref:System.DateTime> value in two places in a result string, the first including only the short date string and the second the short time string.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat1.cs#2)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-697">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-697">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-698">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-698">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-699">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-699">-or-</span>
          </span>
          <span data-ttu-id="813f4-700">書式項目のインデックスが 0 (ゼロ) より小さいか、または 1 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-700">The index of a format item is less than 0 (zero), or greater than or equal to one (1).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-701">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-701">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-702">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-702">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, ParamArray args As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="813f4-703">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-703">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="813f4-704">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-704">A composite format string.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="813f4-705">書式指定するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-705">An array of objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-706">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-706">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-707">各書式項目は、指定された書式プロバイダーを使用した、パラメーター配列内の対応する引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-707">Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-708">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-708">A reference to this instance after the append operation has completed.</span>
          </span>
          <span data-ttu-id="813f4-709">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <paramref name="format" /> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、対応するオブジェクト引数の文字列形式に置換されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-709">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-710">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-710">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-711">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="813f4-711">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="813f4-712">書式設定プロセスでは、対応するオブジェクトの文字列形式で各書式項目を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="813f4-712">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="813f4-713">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-713">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-714">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-714">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-715">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-715">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-716">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-716">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-717">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-717">Element</span></span>|<span data-ttu-id="813f4-718">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-718">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-719">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-719">*index*</span></span>|<span data-ttu-id="813f4-720">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-720">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-721">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-721">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-722">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-722">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-723">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-723">,*length*</span></span>|<span data-ttu-id="813f4-724">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-724">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-725">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-725">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-726">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-726">:*formatString*</span></span>|<span data-ttu-id="813f4-727">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-727">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-728">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-728">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-729">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-729">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-730">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-730">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-731">`provider`パラメーターを指定します、<xref:System.IFormatProvider>内のオブジェクトの書式設定情報を提供する実装`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-731">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for the objects in `args`.</span></span> <span data-ttu-id="813f4-732">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="813f4-732">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="813f4-733">A<xref:System.Globalization.CultureInfo>カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-733">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="813f4-734">A<xref:System.Globalization.NumberFormatInfo>内の数値のカルチャに固有の書式設定情報を提供するオブジェクト`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-734">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for numeric values in `args`.</span></span>  
  
-   <span data-ttu-id="813f4-735">A<xref:System.Globalization.DateTimeFormatInfo>で日付と時刻の値をカルチャに固有の書式設定情報を提供するオブジェクト`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-735">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for date and time values in `args`.</span></span>  
  
-   <span data-ttu-id="813f4-736">カスタム<xref:System.IFormatProvider>内のオブジェクトの 1 つ以上の書式情報を提供する実装`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-736">A custom <xref:System.IFormatProvider> implementation that provides formatting information for one or more of the objects in `args`.</span></span> <span data-ttu-id="813f4-737">通常、このようなもを実装する、<xref:System.ICustomFormatter>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="813f4-737">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span> <span data-ttu-id="813f4-738">次のセクションでは、2 番目の例を示しています、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>メソッドの呼び出しをカスタム<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="813f4-738">The second example in the next section illustrates an <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method call with a custom <xref:System.IFormatProvider> implementation.</span></span>  
  
 <span data-ttu-id="813f4-739">場合、`provider`パラメーターが`null`、現在のカルチャから書式プロバイダーの情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="813f4-739">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="813f4-740">`args` 書式設定されるオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-740">`args` represents the objects to be formatted.</span></span> <span data-ttu-id="813f4-741">各書式項目`format`は内の対応するオブジェクトの文字列形式に置き換えられます`args`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-741">Each format item in `format` is replaced with the string representation of the corresponding object in `args`.</span></span> <span data-ttu-id="813f4-742">書式指定項目が含まれている場合`formatString`との対応するオブジェクト`args`実装、<xref:System.IFormattable>インターフェイスし`args[index].ToString(formatString, provider)`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-742">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `args[index].ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="813f4-743">それ以外の場合、`args[index].ToString()`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-743">Otherwise, `args[index].ToString()` defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-744">次の例で、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-744">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 <span data-ttu-id="813f4-745">次の例では、カスタム<xref:System.IFormatProvider>という名前の実装`CustomerFormatter`10 桁の顧客番号をハイフンを 4 番目と 7 番目の数字の後に書式設定します。</span><span class="sxs-lookup"><span data-stu-id="813f4-745">The following example defines a custom <xref:System.IFormatProvider> implementation named `CustomerFormatter` that formats a 10-digit customer number with hyphens after the fourth and seventh digits.</span></span> <span data-ttu-id="813f4-746">渡される、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>顧客名と書式設定された顧客の数を含む文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="813f4-746">It is passed to the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method to create a string that includes the formatted customer number and customer name.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/customernumberformatter1.cs#1)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/customernumberformatter1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-747">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-747">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-748">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-748">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-749">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-749">-or-</span>
          </span>
          <span data-ttu-id="813f4-750">書式項目のインデックスが 0 より小さいか、<paramref name="args" /> 配列の長さ以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-750">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-751">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-751">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-752">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-752">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object, arg1 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="813f4-753">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-753">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="813f4-754">1 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-754">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="813f4-755">2 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-755">The second object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-756">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-756">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-757">各書式項目は、2 つの引数のどちらかの文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-757">Each format item is replaced by the string representation of either of two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-758">
            <paramref name="format" /> が追加されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-758">A reference to this instance with <paramref name="format" /> appended.</span>
          </span>
          <span data-ttu-id="813f4-759">
            <paramref name="format" /> の各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-759">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-760">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-760">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-761">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーに対応する書式指定項目と呼ばれる個以上のテキストを混在させる`arg0`と`arg1`、このメソッドのパラメーター リスト内の 2 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-761">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to `arg0` and `arg1`, the two objects in the parameter list of this method.</span></span> <span data-ttu-id="813f4-762">書式設定プロセスでは、対応するオブジェクトの文字列形式で各書式項目を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="813f4-762">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="813f4-763">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-763">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-764">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-764">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-765">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-765">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-766">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-766">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-767">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-767">Element</span></span>|<span data-ttu-id="813f4-768">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-768">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-769">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-769">*index*</span></span>|<span data-ttu-id="813f4-770">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-770">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-771">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-771">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-772">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-772">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-773">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-773">,*length*</span></span>|<span data-ttu-id="813f4-774">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-774">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-775">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-775">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-776">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-776">:*formatString*</span></span>|<span data-ttu-id="813f4-777">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-777">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-778">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-778">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-779">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-779">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-780">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-780">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-781">`arg0` `arg1`書式設定されるオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-781">`arg0` and `arg1` represent the objects to be formatted.</span></span> <span data-ttu-id="813f4-782">各書式項目`format`はいずれかの文字列形式に置き換えられます`arg0`または`arg1`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-782">Each format item in `format` is replaced with the string representation of either `arg0` or `arg1`.</span></span> <span data-ttu-id="813f4-783">書式指定項目が含まれている場合`formatString`し、対応するオブジェクトを実装、<xref:System.IFormattable>インターフェイスし`arg` *x* `.ToString(formatString, provider)` 、書式設定を定義*x*引数のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="813f4-783">If the format item includes `formatString` and the corresponding object implements the <xref:System.IFormattable> interface, then `arg`*x*`.ToString(formatString, provider)` defines the formatting, where *x* is the index of the argument.</span></span> <span data-ttu-id="813f4-784">それ以外の場合、 `arg` *x* `.ToString()`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-784">Otherwise, `arg`*x*`.ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="813f4-785">文字列が割り当てられている場合`format`は"いただきありがとうございます、献血の {0: ###}、慈善団体に食品の缶"。</span><span class="sxs-lookup"><span data-stu-id="813f4-785">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="813f4-786">`arg0`整数 10 の値を持つ、戻り値は「for your donation of 10 の cans of food to our charitable organization ありがとうございます」には。</span><span class="sxs-lookup"><span data-stu-id="813f4-786">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-787">次の例で、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-787">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-788">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-788">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-789">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-789">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-790">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-790">-or-</span>
          </span>
          <span data-ttu-id="813f4-791">書式項目のインデックスが 0 (ゼロ) 未満か、または 2 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-791">The index of a format item is less than 0 (zero), or greater than or equal to 2.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-792">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-792">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-793">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-793">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="813f4-794">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-794">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="813f4-795">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-795">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="813f4-796">1 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-796">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="813f4-797">2 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-797">The second object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-798">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-798">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-799">各書式項目は、指定された書式プロバイダーを使用して 2 つの引数のいずれかの文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-799">Each format item is replaced by the string representation of either of two arguments using a specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-800">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-800">A reference to this instance after the append operation has completed.</span>
          </span>
          <span data-ttu-id="813f4-801">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <paramref name="format" /> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、対応するオブジェクト引数の文字列形式に置換されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-801">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-802">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-802">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-803">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="813f4-803">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="813f4-804">書式設定プロセスでは、対応するオブジェクトの文字列形式で各書式項目を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="813f4-804">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="813f4-805">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-805">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-806">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-806">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-807">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-807">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-808">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-808">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-809">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-809">Element</span></span>|<span data-ttu-id="813f4-810">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-810">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-811">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-811">*index*</span></span>|<span data-ttu-id="813f4-812">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-812">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-813">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-813">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-814">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-814">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-815">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-815">,*length*</span></span>|<span data-ttu-id="813f4-816">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-816">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-817">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-817">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-818">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-818">:*formatString*</span></span>|<span data-ttu-id="813f4-819">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-819">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-820">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-820">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-821">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-821">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-822">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-822">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-823">`provider`パラメーターを指定します、<xref:System.IFormatProvider>の書式設定情報を提供する実装`arg0`と`arg1`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-823">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="813f4-824">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="813f4-824">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="813f4-825">A<xref:System.Globalization.CultureInfo>カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-825">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="813f4-826">A<xref:System.Globalization.NumberFormatInfo>カルチャ固有の書式設定情報を提供するオブジェクト`arg0`または`arg1`数値を指定している場合。</span><span class="sxs-lookup"><span data-stu-id="813f4-826">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are numeric values.</span></span>  
  
-   <span data-ttu-id="813f4-827">A<xref:System.Globalization.DateTimeFormatInfo>カルチャ固有の書式設定情報を提供するオブジェクト`arg0`または`arg1`場合は、日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="813f4-827">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are date and time values.</span></span>  
  
-   <span data-ttu-id="813f4-828">カスタム<xref:System.IFormatProvider>に対する書式設定情報を提供する実装`arg0`と`arg1`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-828">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="813f4-829">通常、このようなもを実装する、<xref:System.ICustomFormatter>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="813f4-829">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>  
  
 <span data-ttu-id="813f4-830">場合、`provider`パラメーターが`null`、現在のカルチャから書式プロバイダーの情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="813f4-830">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="813f4-831">`arg0` `arg1`書式設定されるオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-831">`arg0` and `arg1` represent the objects to be formatted.</span></span> <span data-ttu-id="813f4-832">各書式項目`format`は対応するインデックスを持つオブジェクトの文字列表現に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="813f4-832">Each format item in `format` is replaced with the string representation of the object that has the corresponding index.</span></span> <span data-ttu-id="813f4-833">書式指定項目が含まれている場合`formatString`、対応する引数を実装して、<xref:System.IFormattable>インターフェイス、引数の`ToString(formatString, provider)`書式設定メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-833">If the format item includes `formatString` and the corresponding argument implements the <xref:System.IFormattable> interface, then the argument's `ToString(formatString, provider)` method defines the formatting.</span></span> <span data-ttu-id="813f4-834">それ以外の場合、引数の`ToString()`書式設定メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-834">Otherwise, the argument's `ToString()` method defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-835">次の例では、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29>ジェネリックに格納されている時間と温度データを表示するメソッドを<xref:System.Collections.Generic.Dictionary%602>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-835">The following example uses the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29> method to display time and temperature data stored in a generic <xref:System.Collections.Generic.Dictionary%602> object.</span></span> <span data-ttu-id="813f4-836">書式設定するオブジェクトのみにありますが、書式指定文字列に 3 つの書式指定項目に注意してください。</span><span class="sxs-lookup"><span data-stu-id="813f4-836">Note that the format string has three format items, although there are only to objects to format.</span></span> <span data-ttu-id="813f4-837">これは (日付と時刻の値) の一覧の最初のオブジェクトが 2 つの書式指定項目によって使用されるためです。 時間、および 2 つ目は、日付を表示します。 最初の書式項目の表示。</span><span class="sxs-lookup"><span data-stu-id="813f4-837">This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat2.cs#3)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-838">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-838">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-839">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-839">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-840">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-840">-or-</span>
          </span>
          <span data-ttu-id="813f4-841">書式項目のインデックスが 0 (ゼロ) 未満か、または 2 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-841">The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-842">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-842">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-843">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-843">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object, arg1 As Object, arg2 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="813f4-844">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-844">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="813f4-845">1 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-845">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="813f4-846">2 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-846">The second object to format.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="813f4-847">3 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-847">The third object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-848">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-848">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-849">各書式項目は、3 つの引数のいずれかの文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-849">Each format item is replaced by the string representation of either of three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-850">
            <paramref name="format" /> が追加されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-850">A reference to this instance with <paramref name="format" /> appended.</span>
          </span>
          <span data-ttu-id="813f4-851">
            <paramref name="format" /> の各書式項目は、対応するオブジェクト引数の文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-851">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-852">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-852">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-853">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーに対応する書式指定項目と呼ばれる個以上のテキストを混在させる`arg0`を通じて`arg2`、このメソッドのパラメーター リスト内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-853">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to `arg0` through `arg2`, the objects in the parameter list of this method.</span></span> <span data-ttu-id="813f4-854">書式設定プロセスでは、対応するオブジェクトの文字列形式で各書式項目を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="813f4-854">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="813f4-855">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-855">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-856">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-856">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-857">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-857">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-858">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-858">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-859">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-859">Element</span></span>|<span data-ttu-id="813f4-860">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-860">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-861">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-861">*index*</span></span>|<span data-ttu-id="813f4-862">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-862">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-863">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-863">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-864">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-864">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-865">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-865">,*length*</span></span>|<span data-ttu-id="813f4-866">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-866">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-867">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-867">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-868">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-868">:*formatString*</span></span>|<span data-ttu-id="813f4-869">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-869">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-870">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-870">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-871">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-871">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-872">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-872">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-873">`arg0`、 `arg1`、および`arg2`書式設定されるオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-873">`arg0`, `arg1`, and `arg2` represent the objects to be formatted.</span></span> <span data-ttu-id="813f4-874">各書式項目`format`はいずれかの文字列形式に置き換えられます`arg0`、 `arg1`、または`arg2`、書式指定項目のインデックスによって異なります。</span><span class="sxs-lookup"><span data-stu-id="813f4-874">Each format item in `format` is replaced with the string representation of either `arg0`, `arg1`, or `arg2`, depending on the index of the format item.</span></span> <span data-ttu-id="813f4-875">書式指定項目が含まれている場合`formatString`との対応するオブジェクト`args`実装、<xref:System.IFormattable>インターフェイスし`arg` *x* `.ToString(formatString, null)`位置、書式設定を定義*x*は、引数のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="813f4-875">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `arg`*x*`.ToString(formatString, null)` defines the formatting, where *x* is the index of the argument.</span></span> <span data-ttu-id="813f4-876">それ以外の場合、 `arg` *x* `.ToString()`書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-876">Otherwise, `arg`*x*`.ToString()` defines the formatting.</span></span>  
  
 <span data-ttu-id="813f4-877">文字列が割り当てられている場合`format`は"いただきありがとうございます、献血の {0: ###}、慈善団体に食品の缶"。</span><span class="sxs-lookup"><span data-stu-id="813f4-877">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="813f4-878">`arg0`整数 10 の値を持つ、戻り値は「for your donation of 10 の cans of food to our charitable organization ありがとうございます」には。</span><span class="sxs-lookup"><span data-stu-id="813f4-878">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-879">次の例で、<xref:System.Text.StringBuilder.AppendFormat%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-879">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-880">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-880">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-881">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-881">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-882">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-882">-or-</span>
          </span>
          <span data-ttu-id="813f4-883">書式項目のインデックスが 0 (ゼロ) 未満か、または 3 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-883">The index of a format item is less than 0 (zero), or greater than or equal to 3.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-884">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-884">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-885">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-885">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object, arg2 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="813f4-886">カルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-886">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="813f4-887">複合書式設定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-887">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="813f4-888">1 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-888">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="813f4-889">2 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-889">The second object to format.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="813f4-890">3 番目に書式設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-890">The third object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-891">0 個以上の書式項目を含んでいる複合書式指定文字列を処理することで返される文字列を、このインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-891">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span>
          </span>
          <span data-ttu-id="813f4-892">各書式項目は、指定された書式プロバイダーを使用して 3 つの引数のいずれかの文字列形式に置換されます。各書式項目は、指定された書式プロバイダーを使用して 3 つの引数のいずれかの文字列形式に置換されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-892">Each format item is replaced by the string representation of either of three arguments using a specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-893">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-893">A reference to this instance after the append operation has completed.</span>
          </span>
          <span data-ttu-id="813f4-894">追加操作の完了後、このインスタンスには、操作前に存在していたデータの末尾に <paramref name="format" /> のコピーが付加されたものが含まれます。このコピーでは、書式指定が、対応するオブジェクト引数の文字列形式に置換されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-894">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-895">このメソッドを使用して、[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)をテキスト形式のオブジェクトの値に変換し、現在の表現を埋め込む .NET Framework の<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-895">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-896">`format`パラメーターは、0 または 0 個以上のインデックス付きプレース ホルダーをこのメソッドのパラメーター リスト内のオブジェクトに対応する書式指定項目と呼ばれる個以上のテキストが混在します。</span><span class="sxs-lookup"><span data-stu-id="813f4-896">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="813f4-897">書式設定プロセスでは、対応するオブジェクトの文字列形式で各書式項目を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="813f4-897">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>  
  
 <span data-ttu-id="813f4-898">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="813f4-898">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="813f4-899">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="813f4-899">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="813f4-900">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="813f4-900">Elements in square brackets are optional.</span></span> <span data-ttu-id="813f4-901">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="813f4-901">The following table describes each element.</span></span>  
  
|<span data-ttu-id="813f4-902">要素</span><span class="sxs-lookup"><span data-stu-id="813f4-902">Element</span></span>|<span data-ttu-id="813f4-903">説明</span><span class="sxs-lookup"><span data-stu-id="813f4-903">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="813f4-904">*index*</span><span class="sxs-lookup"><span data-stu-id="813f4-904">*index*</span></span>|<span data-ttu-id="813f4-905">書式設定するオブジェクトのパラメーター リスト内の 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="813f4-905">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="813f4-906">オブジェクトを指定して場合*インデックス*は`null`、書式指定項目が置き換え<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="813f4-906">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-907">内のパラメーターがない場合、*インデックス*、位置、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="813f4-907">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="813f4-908">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="813f4-908">,*length*</span></span>|<span data-ttu-id="813f4-909">パラメーターの文字列表記で文字の最小数。</span><span class="sxs-lookup"><span data-stu-id="813f4-909">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="813f4-910">パラメーターでは、右揃え、正の場合負の場合は、左揃えをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="813f4-910">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="813f4-911">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="813f4-911">:*formatString*</span></span>|<span data-ttu-id="813f4-912">パラメーターでサポートされている標準またはカスタム書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-912">A standard or custom format string that is supported by the parameter.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="813f4-913">日付と時刻の値で使用される標準およびカスタムの書式文字列を参照してください。 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)と[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-913">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="813f4-914">数値と共に使用される標準およびカスタムの書式文字列を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-914">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="813f4-915">列挙体で使用する標準書式指定文字列を参照してください。[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="813f4-915">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
 <span data-ttu-id="813f4-916">`provider`パラメーターを指定します、<xref:System.IFormatProvider>の書式設定情報を提供する実装`arg0`と`arg1`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-916">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="813f4-917">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="813f4-917">`provider` can be any of the following:</span></span>  
  
-   <span data-ttu-id="813f4-918">A<xref:System.Globalization.CultureInfo>カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-918">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>  
  
-   <span data-ttu-id="813f4-919">A<xref:System.Globalization.NumberFormatInfo>カルチャ固有の書式設定情報を提供するオブジェクト`arg0`または`arg1`数値を指定している場合。</span><span class="sxs-lookup"><span data-stu-id="813f4-919">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are numeric values.</span></span>  
  
-   <span data-ttu-id="813f4-920">A<xref:System.Globalization.DateTimeFormatInfo>カルチャ固有の書式設定情報を提供するオブジェクト`arg0`、 `arg1`、または`arg2`場合は、日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="813f4-920">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0`, `arg1`, or `arg2` if they are date and time values.</span></span>  
  
-   <span data-ttu-id="813f4-921">カスタム<xref:System.IFormatProvider>に対する書式設定情報を提供する実装`arg0`、 `arg1`、および`arg2`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-921">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0`,  `arg1`, and `arg2`.</span></span> <span data-ttu-id="813f4-922">通常、このようなもを実装する、<xref:System.ICustomFormatter>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="813f4-922">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>  
  
 <span data-ttu-id="813f4-923">場合、`provider`パラメーターが`null`、現在のカルチャから書式プロバイダーの情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="813f4-923">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>  
  
 <span data-ttu-id="813f4-924">`arg0`、 `arg1`、および`arg2`書式設定されるオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="813f4-924">`arg0`, `arg1`, and `arg2` represent the objects to be formatted.</span></span> <span data-ttu-id="813f4-925">各書式項目`format`は対応するインデックスを持つオブジェクトの文字列表現に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="813f4-925">Each format item in `format` is replaced with the string representation of the object that has the corresponding index.</span></span> <span data-ttu-id="813f4-926">書式指定項目が含まれている場合`formatString`、対応する引数を実装して、<xref:System.IFormattable>インターフェイス、引数の`ToString(formatString, provider)`書式設定メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-926">If the format item includes `formatString` and the corresponding argument implements the <xref:System.IFormattable> interface, then the argument's `ToString(formatString, provider)` method defines the formatting.</span></span> <span data-ttu-id="813f4-927">それ以外の場合、引数の`ToString()`書式設定メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="813f4-927">Otherwise, the argument's `ToString()` method defines the formatting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-928">次の例では、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29>ブール値の結果を示すためにメソッド`And`整数値で操作します。</span><span class="sxs-lookup"><span data-stu-id="813f4-928">The following example uses the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to illustrate the result of a Boolean `And` operation with integer values.</span></span> <span data-ttu-id="813f4-929">各項目が 2 つの方法で書式設定されたために、書式指定文字列に 6 つの書式項目が含まれていますが、メソッドの引数リストに 3 つだけの項目には注意してください。</span><span class="sxs-lookup"><span data-stu-id="813f4-929">Note that the format string includes six format items, but the method has only three items in its argument list, because each item is formatted in two different ways.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.AppendFormat#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat3.cs#4)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat3.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-930">
            <paramref name="format" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-930">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="813f4-931">
            <paramref name="format" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-931">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="813f4-932">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-932">-or-</span>
          </span>
          <span data-ttu-id="813f4-933">書式項目のインデックスが 0 (ゼロ) 未満か、3 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-933">The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-934">文字列を展開すると、長さが <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-934">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-935">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-935">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (char separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(char separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As Char, ParamArray values As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (char separator, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(char separator, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As Char, ParamArray values As String()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * string[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (string separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(string separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As String, ParamArray values As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (string separator, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(string separator, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As String, ParamArray values As String()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * string[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin&lt;T&gt; (char separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin&lt;T&gt;(char separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin(Of T) (separator As Char, values As IEnumerable(Of T)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * seq&lt;'T&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin&lt;T&gt; (string separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin&lt;T&gt;(string separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin(Of T) (separator As String, values As IEnumerable(Of T)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * seq&lt;'T&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendLine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-936">既定の行終端記号、または指定した文字列のコピーと既定の行終端記号を、このインスタンスの末尾に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-936">Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendLine" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendLine();" />
      <MemberSignature Language="F#" Value="member this.AppendLine : unit -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="813f4-937">既定の行終端記号を現在の <see cref="T:System.Text.StringBuilder" /> オブジェクトの末尾に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-937">Appends the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-938">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-938">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-939">既定の行終端記号はの現在の値、<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-939">The default line terminator is the current value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="813f4-940">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-940">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-941">次の例で、<xref:System.Text.StringBuilder.AppendLine%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-941">The following example demonstrates the <xref:System.Text.StringBuilder.AppendLine%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.appendline#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendline/CPP/al.cpp#1)]
 [!code-csharp[stringbuilder.appendline#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendline/CS/al.cs#1)]
 [!code-vb[stringbuilder.appendline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendline/VB/al.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-942">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-942">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-943">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-943">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine (value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AppendLine : string -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="813f4-944">追加する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-944">The string to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-945">指定した文字列のコピーと既定の行終端記号を、現在の <see cref="T:System.Text.StringBuilder" /> オブジェクトの末尾に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-945">Appends a copy of the specified string followed by the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-946">追加操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-946">A reference to this instance after the append operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-947">既定の行終端記号はの現在の値、<xref:System.Environment.NewLine%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-947">The default line terminator is the current value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="813f4-948">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-948">The capacity of this instance is adjusted as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-949">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-949">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-950">
            <para>[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<see cref="T:System.Text.StringBuilder" />オブジェクトを呼び出すことによって、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />長さと容量の両方のコンス トラクター、<see cref="T:System.Text.StringBuilder" />インスタンスは、の値を超えて増加できますその<see cref="P:System.Text.StringBuilder.MaxCapacity" />プロパティ。特に呼び出しが発生することができます、<see cref="M:System.Text.StringBuilder.Append(System.String)" />と<see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />小さな文字列を追加する方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-950">
              <para>In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property. This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Text.StringBuilder.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-951">現在のインスタンスによって割り当てられたメモリに格納できる最大文字数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-951">Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="813f4-952">現在のインスタンスによって割り当てられたメモリに格納できる最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-952">The maximum number of characters that can be contained in the memory allocated by the current instance.</span>
          </span>
          <span data-ttu-id="813f4-953">この値の範囲は <see cref="P:System.Text.StringBuilder.Length" /> ～ <see cref="P:System.Text.StringBuilder.MaxCapacity" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-953">Its value can range from <see cref="P:System.Text.StringBuilder.Length" /> to <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-954"><xref:System.Text.StringBuilder.Capacity%2A> 現在のインスタンスの文字列値には影響しません。</span><span class="sxs-lookup"><span data-stu-id="813f4-954"><xref:System.Text.StringBuilder.Capacity%2A> does not affect the string value of the current instance.</span></span> <span data-ttu-id="813f4-955"><xref:System.Text.StringBuilder.Capacity%2A> ない限り、縮小の下限より小さい<xref:System.Text.StringBuilder.Length%2A>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-955"><xref:System.Text.StringBuilder.Capacity%2A> can be decreased as long as it is not less than <xref:System.Text.StringBuilder.Length%2A>.</span></span>  
  
 <span data-ttu-id="813f4-956"><xref:System.Text.StringBuilder>動的に必要な場合より多くの領域を割り当てるし、増加<xref:System.Text.StringBuilder.Capacity%2A>それに応じて。</span><span class="sxs-lookup"><span data-stu-id="813f4-956">The <xref:System.Text.StringBuilder> dynamically allocates more space when required and increases <xref:System.Text.StringBuilder.Capacity%2A> accordingly.</span></span> <span data-ttu-id="813f4-957">パフォーマンス向上のため、<xref:System.Text.StringBuilder>の場合よりも多くのメモリを割り当てることがあります。</span><span class="sxs-lookup"><span data-stu-id="813f4-957">For performance reasons, a <xref:System.Text.StringBuilder> might allocate more memory than needed.</span></span> <span data-ttu-id="813f4-958">割り当てられたメモリの量は、実装に固有です。</span><span class="sxs-lookup"><span data-stu-id="813f4-958">The amount of memory allocated is implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-959">次の例で、<xref:System.Text.StringBuilder.Capacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-959">The following example demonstrates the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-960">設定操作に指定された値は、このインスタンスの現在の長さより小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-960">The value specified for a set operation is less than the current length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-961">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-961">-or-</span>
          </span>
          <span data-ttu-id="813f4-962">設定操作に指定された値は、最大容量を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-962">The value specified for a set operation is greater than the maximum capacity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public char this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Chars(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Chars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Chars(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); void set(int index, char value); };" />
      <MemberSignature Language="F#" Value="member this.Chars(int) : char with get, set" Usage="System.Text.StringBuilder.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-963">文字の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-963">The position of the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-964">このインスタンス内の指定した文字位置の文字を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-964">Gets or sets the character at the specified character position in this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="813f4-965">
            <paramref name="index" /> 位置の Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-965">The Unicode character at position <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-966">`index`パラメーターは内の文字の位置、<xref:System.Text.StringBuilder>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-966">The `index` parameter is the position of a character within the <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="813f4-967">文字列の最初の文字は、インデックス 0 位置にあるがします。</span><span class="sxs-lookup"><span data-stu-id="813f4-967">The first character in the string is at index 0.</span></span> <span data-ttu-id="813f4-968">文字列の長さには、それに含まれる文字数です。</span><span class="sxs-lookup"><span data-stu-id="813f4-968">The length of a string is the number of characters it contains.</span></span> <span data-ttu-id="813f4-969">最後のアクセス可能な文字を<xref:System.Text.StringBuilder>インスタンス インデックス位置にある<xref:System.Text.StringBuilder.Length%2A>- 1。</span><span class="sxs-lookup"><span data-stu-id="813f4-969">The last accessible character of a <xref:System.Text.StringBuilder> instance is at index <xref:System.Text.StringBuilder.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="813f4-970"><xref:System.Text.StringBuilder.Chars%2A> 既定のプロパティ、<xref:System.Text.StringBuilder>クラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-970"><xref:System.Text.StringBuilder.Chars%2A> is the default property of the <xref:System.Text.StringBuilder> class.</span></span> <span data-ttu-id="813f4-971">C# では、インデクサーです。</span><span class="sxs-lookup"><span data-stu-id="813f4-971">In C#, it is an indexer.</span></span> <span data-ttu-id="813f4-972">つまり、個々 の文字から取得できること、<xref:System.Text.StringBuilder.Chars%2A>ホワイト スペース、アルファベットの数をカウントするには、次の例で示すようにプロパティおよび区切り文字の文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-972">This means that individual characters can be retrieved from the <xref:System.Text.StringBuilder.Chars%2A> property as shown in the following example, which counts the number of alphabetic, white-space, and punctuation characters in a string.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Chars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.chars/cs/chars1.cs#1)]
 [!code-vb[System.Text.StringBuilder.Chars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.chars/vb/chars1.vb#1)]  

### <a name="performance-and-character-based-indexing"></a><span data-ttu-id="813f4-973">パフォーマンスと文字ベースのインデックス作成</span><span class="sxs-lookup"><span data-stu-id="813f4-973">Performance and character-based indexing</span></span>

[!INCLUDE[stringbuilder-performance-note](~/includes/stringbuilder-perf-note.md)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-974">文字の設定において、<paramref name="index" /> がこのインスタンスの境界外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-974">
              <paramref name="index" /> is outside the bounds of this instance while setting a character.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="813f4-975">文字の取得において、<paramref name="index" /> がこのインスタンスの境界外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-975">
              <paramref name="index" /> is outside the bounds of this instance while getting a character.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Text.StringBuilder" Usage="stringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="813f4-976">現在の <see cref="T:System.Text.StringBuilder" /> インスタンスからすべての文字を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-976">Removes all characters from the current <see cref="T:System.Text.StringBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-977">
            <see cref="P:System.Text.StringBuilder.Length" /> が 0 (ゼロ) であるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-977">An object whose <see cref="P:System.Text.StringBuilder.Length" /> is 0 (zero).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-978"><xref:System.Text.StringBuilder.Clear%2A> 設定に相当する便利なメソッドは、 <xref:System.Text.StringBuilder.Length%2A> 0 (ゼロ) には、現在のインスタンスのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-978"><xref:System.Text.StringBuilder.Clear%2A> is a convenience method that is equivalent to setting the <xref:System.Text.StringBuilder.Length%2A> property of the current instance to 0 (zero).</span></span>  
  
 <span data-ttu-id="813f4-979">呼び出す、<xref:System.Text.StringBuilder.Clear%2A>メソッドは、現在のインスタンスを変更しない<xref:System.Text.StringBuilder.Capacity%2A>または<xref:System.Text.StringBuilder.MaxCapacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-979">Calling the <xref:System.Text.StringBuilder.Clear%2A> method does not modify the current instance's <xref:System.Text.StringBuilder.Capacity%2A> or <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-980">次の例では、インスタンス化、<xref:System.Text.StringBuilder>オブジェクトを呼び出し、文字列、<xref:System.Text.StringBuilder.Clear%2A>メソッド、新しい文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="813f4-980">The following example instantiates a <xref:System.Text.StringBuilder> object with a string, calls the <xref:System.Text.StringBuilder.Clear%2A> method, and then appends a new string.</span></span>  
  
 [!code-csharp[System.Text.StringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.clear/cs/clear1.cs#1)]
 [!code-vb[System.Text.StringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.clear/vb/clear1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, Span&lt;char&gt; destination, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, valuetype System.Span`1&lt;char&gt; destination, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Span(Of Char), count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, Span&lt;char&gt; destination, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * Span&lt;char&gt; * int -&gt; unit" Usage="stringBuilder.CopyTo (sourceIndex, destination, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, char[] destination, int destinationIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;char&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * char[] * int * int -&gt; unit" Usage="stringBuilder.CopyTo (sourceIndex, destination, destinationIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">
          <span data-ttu-id="813f4-981">このインスタンスにおける文字のコピーの開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-981">The starting position in this instance where characters will be copied from.</span>
          </span>
          <span data-ttu-id="813f4-982">インデックスの値は、0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-982">The index is zero-based.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="813f4-983">文字のコピー先となる配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-983">The array where characters will be copied.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="813f4-984">
            <c>destination</c> における文字のコピーの開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-984">The starting position in <c>destination</c> where characters will be copied.</span>
          </span>
          <span data-ttu-id="813f4-985">インデックスの値は、0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-985">The index is zero-based.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="813f4-986">コピーする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-986">The number of characters to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-987">このインスタンスの指定したセグメントにある文字を、目的の <see cref="T:System.Char" /> 配列の指定したセグメントにコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-987">Copies the characters from a specified segment of this instance to a specified segment of a destination <see cref="T:System.Char" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-988"><xref:System.Text.StringBuilder.CopyTo%2A>メソッドの連続するセクションを効率的にコピーする必要があるときに、まれな状況で使用されるものでは、<xref:System.Text.StringBuilder>オブジェクトを配列にします。</span><span class="sxs-lookup"><span data-stu-id="813f4-988">The <xref:System.Text.StringBuilder.CopyTo%2A> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <xref:System.Text.StringBuilder> object to an array.</span></span> <span data-ttu-id="813f4-989">配列は、事前に割り当てられる、再利用可能なおよび場合によってグローバルにアクセスでき、固定サイズである必要があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-989">The array should be a fixed size, preallocated, reusable, and possibly globally accessible.</span></span>  
  
 <span data-ttu-id="813f4-990">たとえば、アプリケーションが設定でしたを<xref:System.Text.StringBuilder>文字の数が多いオブジェクトを使用して、<xref:System.Text.StringBuilder.CopyTo%2A>の小規模の連続する部分をコピーする方法、<xref:System.Text.StringBuilder>オブジェクトを配列の部分が処理されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-990">For example, your application could populate a <xref:System.Text.StringBuilder> object with a large number of characters then use the <xref:System.Text.StringBuilder.CopyTo%2A> method to copy small, successive pieces of the <xref:System.Text.StringBuilder> object to an array where the pieces are processed.</span></span> <span data-ttu-id="813f4-991">ときにすべてのデータ、<xref:System.Text.StringBuilder>オブジェクトを処理するのサイズ、<xref:System.Text.StringBuilder>オブジェクトが 0 に設定され、サイクルが繰り返されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-991">When all the data in the <xref:System.Text.StringBuilder> object is processed, the size of the <xref:System.Text.StringBuilder> object is set to zero and the cycle is repeated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-992">次の例で、<xref:System.Text.StringBuilder.CopyTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-992">The following example demonstrates the <xref:System.Text.StringBuilder.CopyTo%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.copyto2/CPP/ct2.cpp#1)]
 [!code-csharp[stringbuilder.copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.copyto2/CS/ct2.cs#1)]
 [!code-vb[stringbuilder.copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.copyto2/VB/ct2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-993">
            <paramref name="destination" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-993">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-994">
            <paramref name="sourceIndex" />、<paramref name="destinationIndex" />、または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-994">
              <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" />, is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-995">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-995">-or-</span>
          </span>
          <span data-ttu-id="813f4-996">
            <paramref name="sourceIndex" /> がこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-996">
              <paramref name="sourceIndex" /> is greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="813f4-997">
            <paramref name="sourceIndex" /> + <paramref name="count" /> がこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-997">
              <paramref name="sourceIndex" /> + <paramref name="count" /> is greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-998">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-998">-or-</span>
          </span>
          <span data-ttu-id="813f4-999">
            <paramref name="destinationIndex" /> + <paramref name="count" /> が <paramref name="destination" /> の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-999">
              <paramref name="destinationIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="destination" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureCapacity">
      <MemberSignature Language="C#" Value="public int EnsureCapacity (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EnsureCapacity(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureCapacity (capacity As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EnsureCapacity(int capacity);" />
      <MemberSignature Language="F#" Value="member this.EnsureCapacity : int -&gt; int" Usage="stringBuilder.EnsureCapacity capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="813f4-1000">必要な最小容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1000">The minimum capacity to ensure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1001">このインスタンスの <see cref="T:System.Text.StringBuilder" /> の容量が、指定した値以上になるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1001">Ensures that the capacity of this instance of <see cref="T:System.Text.StringBuilder" /> is at least the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1002">このインスタンスの新しい容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1002">The new capacity of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1003">現在の容量がある場合より小さい`capacity`パラメーターでは、このインスタンスのメモリは以上で保持するために再割り当て`capacity`文字数。 それ以外の場合、メモリは変更されません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1003">If the current capacity is less than the `capacity` parameter, memory for this instance is reallocated to hold at least `capacity` number of characters; otherwise, no memory is changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1004">次の例で、<xref:System.Text.StringBuilder.EnsureCapacity%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1004">The following example demonstrates the <xref:System.Text.StringBuilder.EnsureCapacity%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1005">
            <paramref name="capacity" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1005">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-1006">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1006">-or-</span>
          </span>
          <span data-ttu-id="813f4-1007">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1007">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ReadOnlySpan&lt;char&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ReadOnlySpan`1&lt;char&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (span As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ReadOnlySpan&lt;char&gt; span);" />
      <MemberSignature Language="F#" Value="override this.Equals : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="stringBuilder.Equals span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="span">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (sb As StringBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.StringBuilder -&gt; bool" Usage="stringBuilder.Equals sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="813f4-1008">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1008">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1009">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1009">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1010">このインスタンスと <paramref name="sb" /> が同じ文字列、<see cref="P:System.Text.StringBuilder.Capacity" /> 値、および <see cref="P:System.Text.StringBuilder.MaxCapacity" /> 値を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1010">
              <see langword="true" /> if this instance and <paramref name="sb" /> have equal string, <see cref="P:System.Text.StringBuilder.Capacity" />, and <see cref="P:System.Text.StringBuilder.MaxCapacity" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="813f4-1011">次のコードでは、 <xref:System.Text.StringBuilder.Equals%2A> 2 つかどうかを確認する方法を<xref:System.Text.StringBuilder>オブジェクトが等しい。</span><span class="sxs-lookup"><span data-stu-id="813f4-1011">The following code uses the <xref:System.Text.StringBuilder.Equals%2A> method to check whether two <xref:System.Text.StringBuilder> objects are equal.</span></span> <span data-ttu-id="813f4-1012">メソッドは、後にオブジェクトごとに、小さな変更を加えるし、結果がコンソールに表示されます、繰り返し呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1012">The method is called repeatedly after small changes are made to each object, and the results are displayed to the console.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-1013">指定されたオブジェクトの文字列表記をこのインスタンスの指定された文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1013">Inserts the string representation of a specified object into this instance at a specified character position.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Boolean) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, bool value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * bool -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1014">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1014">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1015">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1015">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1016">Boolean 値の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1016">Inserts the string representation of a Boolean value into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1017">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1017">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1018"><xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1018"><xref:System.Boolean.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1019">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1019">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1020">必要に応じて、容量が調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1020">The capacity is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1021">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1021">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1022">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1022">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1023">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1023">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1024">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1024">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Byte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * byte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1025">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1025">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1026">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1026">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1027">指定した 8 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1027">Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1028">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1028">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1029"><xref:System.Byte.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1029"><xref:System.Byte.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1030">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1030">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1031">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1031">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1032">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1032">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1033">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1033">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1034">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1034">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1035">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1035">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, char value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1036">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1036">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1037">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1037">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1038">指定した Unicode 文字の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1038">Inserts the string representation of a specified Unicode character into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1039">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1039">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1040"><xref:System.Char.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1040"><xref:System.Char.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1041">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1041">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1042">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1042">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1043">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1043">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1044">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1044">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-1045">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1045">-or-</span>
          </span>
          <span data-ttu-id="813f4-1046">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1046">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1047">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1047">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1048">挿入する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1048">The character array to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1049">指定した Unicode 文字の配列の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1049">Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1050">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1050">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1051">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1051">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1052">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1052">The capacity of this instance is adjusted as needed.</span></span>  
  
 <span data-ttu-id="813f4-1053">場合`value`は`null`、<xref:System.Text.StringBuilder>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1053">If `value` is `null`, the <xref:System.Text.StringBuilder> is not changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1054">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1054">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1055">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1055">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-1056">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1056">-or-</span>
          </span>
          <span data-ttu-id="813f4-1057">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1057">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Decimal) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * decimal -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1058">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1058">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1059">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1059">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1060">10 進数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1060">Inserts the string representation of a decimal number into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1061">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1061">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1062"><xref:System.Decimal.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1062"><xref:System.Decimal.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1063">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1063">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1064">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1064">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1065">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1065">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1066">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1066">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1067">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1067">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1068">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1068">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Double) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, double value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * double -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1069">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1069">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1070">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1070">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1071">倍精度浮動小数点数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1071">Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1072">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1072">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1073"><xref:System.Double.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1073"><xref:System.Double.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1074">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1074">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1075">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1075">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1076">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1076">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1077">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1077">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1078">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1078">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1079">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1079">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Short) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, short value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1080">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1080">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1081">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1081">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1082">指定した 16 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1082">Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1083">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1083">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1084"><xref:System.Int16.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1084"><xref:System.Int16.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1085">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1085">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1086">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1086">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1087">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1087">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1088">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1088">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1089">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1089">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1090">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1090">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, int value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1091">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1091">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1092">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1092">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1093">指定した 32 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1093">Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1094">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1094">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1095"><xref:System.Int32.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1095"><xref:System.Int32.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1096">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1096">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1097">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1097">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1098">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1098">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1099">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1099">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1100">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1100">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1101">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1101">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Long) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, long value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1102">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1102">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1103">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1103">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1104">64 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1104">Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1105">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1105">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1106"><xref:System.Int64.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1106"><xref:System.Int64.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1107">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1107">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1108">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1108">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1109">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1109">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1110">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1110">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1111">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1111">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1112">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1112">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1113">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1113">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1114">挿入するオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1114">The object to insert, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1115">オブジェクトの文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1115">Inserts the string representation of an object into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1116">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1116">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1117"><xref:System.Object.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1117"><xref:System.Object.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1118">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1118">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1119">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1119">The capacity of this instance is adjusted as needed.</span></span>  
  
 <span data-ttu-id="813f4-1120">場合`value`は`null`、このインスタンスの値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1120">If `value` is `null`, the value of this instance is unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1121">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1121">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1122">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1122">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1123">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1123">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1124">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1124">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As ReadOnlySpan(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * ReadOnlySpan&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As SByte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * sbyte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1125">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1125">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1126">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1126">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1127">指定した 8 ビット符号付き整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1127">Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1128">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1128">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1129"><xref:System.SByte.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1129"><xref:System.SByte.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1130">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1130">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1131">必要に応じて、容量が調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1131">The capacity is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1132">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1132">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1133">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1133">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1134">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1134">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1135">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1135">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Single) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, float value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * single -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1136">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1136">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1137">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1137">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1138">単精度浮動小数点数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1138">Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1139">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1139">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1140"><xref:System.Single.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1140"><xref:System.Single.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1141">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1141">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1142">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1142">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1143">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1143">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1144">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1144">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1145">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1145">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1146">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1146">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1147">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1147">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1148">挿入する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1148">The string to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1149">文字列をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1149">Inserts a string into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1150">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1150">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1151">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1151">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1152">必要に応じて、容量が調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1152">The capacity is adjusted as needed.</span></span>  
  
 <span data-ttu-id="813f4-1153">このインスタンスの<xref:System.Text.StringBuilder>場合は変更されません`value`は`null`、または`value`でない`null`が、その長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="813f4-1153">This instance of <xref:System.Text.StringBuilder> is not changed if `value` is `null`, or `value` is not `null` but its length is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1154">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1154">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1155">
            <paramref name="index" /> が、0 未満か、このインスタンスの現在の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1155">
              <paramref name="index" /> is less than zero or greater than the current length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-1156">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1156">-or-</span>
          </span>
          <span data-ttu-id="813f4-1157">この <see cref="T:System.Text.StringBuilder" /> オブジェクトの現在の長さと <paramref name="value" /> の長さを足した値が <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1157">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As UShort) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1158">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1158">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1159">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1159">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1160">16 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1160">Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1161">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1161">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1162"><xref:System.UInt16.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1162"><xref:System.UInt16.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1163">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1163">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1164">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1164">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1165">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1165">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1166">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1166">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1167">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1167">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1168">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1168">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As UInteger) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint32 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1169">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1169">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1170">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1170">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1171">32 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1171">Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1172">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1172">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1173"><xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1173"><xref:System.UInt32.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1174">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1174">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1175">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1175">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1176">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1176">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1177">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1177">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1178">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1178">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1179">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1179">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As ULong) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1180">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1180">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1181">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1181">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1182">64 ビット符号なし整数の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1182">Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1183">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1183">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1184"><xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 文字列表現を取得するために使用`value`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1184"><xref:System.UInt64.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="813f4-1185">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1185">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1186">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1186">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1187">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1187">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1188">
            <paramref name="index" /> が、0 未満か、またはこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1188">
              <paramref name="index" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1189">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1189">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="813f4-1190">
            <para>[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]と以前のバージョンでは、このメソッドの呼び出しがスローされました、<see cref="T:System.ArgumentOutOfRangeException" />挿入する場合<paramref name="value" />オブジェクトの合計の長さを超えることになる<see cref="P:System.Text.StringBuilder.MaxCapacity" />。以降では、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]がスローされます、<see cref="T:System.OutOfMemoryException" />します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1190">
              <para>In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, string value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, string value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As String, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::String ^ value, int count);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1191">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1191">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1192">挿入する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1192">The string to insert.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="813f4-1193">
            <c>value</c> を挿入する回数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1193">The number of times to insert <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1194">指定した文字列の 1 つ以上のコピーをこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1194">Inserts one or more copies of a specified string into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1195">挿入が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1195">A reference to this instance after insertion has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1196">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1196">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1197">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1197">The capacity of this instance is adjusted as needed.</span></span>  
  
 <span data-ttu-id="813f4-1198">これは、<xref:System.Text.StringBuilder>場合、オブジェクトは変更されません`value`は`null`、`value`ない`null`が、その長さが 0、または`count`は 0 です。</span><span class="sxs-lookup"><span data-stu-id="813f4-1198">This <xref:System.Text.StringBuilder> object is not changed if `value` is `null`, `value` is not `null` but its length is zero, or `count` is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1199">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1199">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1200">
            <paramref name="index" /> が、0 未満か、このインスタンスの現在の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1200">
              <paramref name="index" /> is less than zero or greater than the current length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-1201">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1201">-or-</span>
          </span>
          <span data-ttu-id="813f4-1202">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1202">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="813f4-1203">この <see cref="T:System.Text.StringBuilder" /> オブジェクトの現在の長さと、<paramref name="value" /> に <paramref name="count" /> をかけたものを足した値が、<see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1203">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> times <paramref name="count" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char[] value, int startIndex, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char[] value, int32 startIndex, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char(), startIndex As Integer, charCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, cli::array &lt;char&gt; ^ value, int startIndex, int charCount);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char[] * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value, startIndex, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="813f4-1204">このインスタンスにおける挿入の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1204">The position in this instance where insertion begins.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="813f4-1205">文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1205">A character array.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="813f4-1206">
            <c>value</c> 内の開始インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1206">The starting index within <c>value</c>.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="813f4-1207">挿入する文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1207">The number of characters to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1208">Unicode 文字の指定した部分配列の文字列形式をこのインスタンスの指定した文字位置に挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1208">Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1209">挿入操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1209">A reference to this instance after the insert operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1210">既存の文字は新しいテキスト用に確保するためにシフトします。</span><span class="sxs-lookup"><span data-stu-id="813f4-1210">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="813f4-1211">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1211">The capacity of this instance is adjusted as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1212">次の例で、<xref:System.Text.StringBuilder.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1212">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-1213">
            <paramref name="value" /> が <see langword="null" /> であり、<paramref name="startIndex" /> と <paramref name="charCount" /> が 0 以外の値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1213">
              <paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1214">
            <paramref name="index" />、<paramref name="startIndex" />、または <paramref name="charCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1214">
              <paramref name="index" />, <paramref name="startIndex" />, or <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-1215">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1215">-or-</span>
          </span>
          <span data-ttu-id="813f4-1216">
            <paramref name="index" /> がこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1216">
              <paramref name="index" /> is greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="813f4-1217">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1217">-or-</span>
          </span>
          <span data-ttu-id="813f4-1218">
            <paramref name="startIndex" /> に <paramref name="charCount" /> を加算した値が、<paramref name="value" /> 内にない位置を示しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1218">
              <paramref name="startIndex" /> plus <paramref name="charCount" /> is not a position within <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="813f4-1219">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1219">-or-</span>
          </span>
          <span data-ttu-id="813f4-1220">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1220">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Text.StringBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-1221">現在の <see cref="T:System.Text.StringBuilder" /> オブジェクトの長さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1221">Gets or sets the length of the current <see cref="T:System.Text.StringBuilder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="813f4-1222">このインスタンスの長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1222">The length of this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1223">長さ、<xref:System.Text.StringBuilder>オブジェクトの数によって定義されます<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-1223">The length of a <xref:System.Text.StringBuilder> object is defined by its number of <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="813f4-1224">ように、<xref:System.String.Length%2A?displayProperty=nameWithType>プロパティ、<xref:System.Text.StringBuilder.Length%2A>プロパティは、現在の string オブジェクトの長さを示します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1224">Like the <xref:System.String.Length%2A?displayProperty=nameWithType> property, the <xref:System.Text.StringBuilder.Length%2A> property indicates the length of the current string object.</span></span> <span data-ttu-id="813f4-1225">異なり、<xref:System.String.Length%2A?displayProperty=nameWithType>読み取り専用では、プロパティ、<xref:System.Text.StringBuilder.Length%2A>プロパティに格納されている文字列の長さを変更することができます、<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-1225">Unlike the <xref:System.String.Length%2A?displayProperty=nameWithType> property, which is read-only, the <xref:System.Text.StringBuilder.Length%2A> property allows you to modify the length of the string stored to the <xref:System.Text.StringBuilder> object.</span></span>  
  
 <span data-ttu-id="813f4-1226">指定された長さが現在の長さでは、現在よりも小さいかどうか<xref:System.Text.StringBuilder>オブジェクトは、指定された長さに切り詰められます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1226">If the specified length is less than the current length, the current <xref:System.Text.StringBuilder> object is truncated to the specified length.</span></span> <span data-ttu-id="813f4-1227">指定された長さが、現在の文字列値の末尾、現在の長さより大きいかどうか<xref:System.Text.StringBuilder>オブジェクトは、Unicode NULL 文字で埋められます (u+0000) です。</span><span class="sxs-lookup"><span data-stu-id="813f4-1227">If the specified length is greater than the current length, the end of the string value of the current <xref:System.Text.StringBuilder> object is padded with the Unicode NULL character (U+0000).</span></span>  
  
 <span data-ttu-id="813f4-1228">指定された長さが現在の容量を超える場合<xref:System.Text.StringBuilder.Capacity%2A>されるように指定した長さ以上に増加します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1228">If the specified length is greater than the current capacity, <xref:System.Text.StringBuilder.Capacity%2A> increases so that it is greater than or equal to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1229">次の例で、<xref:System.Text.StringBuilder.Length%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-1229">The following example demonstrates the <xref:System.Text.StringBuilder.Length%2A> property.</span></span>  
  
 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1230">set 操作に指定された値が 0 より小さいか、<see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1230">The value specified for a set operation is less than zero or greater than <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxCapacity">
      <MemberSignature Language="C#" Value="public int MaxCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.MaxCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCapacity : int" Usage="System.Text.StringBuilder.MaxCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-1231">このインスタンスの最大容量を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1231">Gets the maximum capacity of this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="813f4-1232">このインスタンスが保持できる最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1232">The maximum number of characters this instance can hold.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1233">この実装の最大容量は<xref:System.Int32.MaxValue?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1233">The maximum capacity for this implementation is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="813f4-1234">ただし、この値は実装に固有で、またはそれ以降の実装では異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="813f4-1234">However, this value is implementation-specific and might be different in other or later implementations.</span></span> <span data-ttu-id="813f4-1235">最大容量を明示的に設定することができます、<xref:System.Text.StringBuilder>オブジェクトを呼び出すことによって、<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="813f4-1235">You can explicitly set the maximum capacity of a <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="813f4-1236">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]と[!INCLUDE[net_v45](~/includes/net-v45-md.md)]インスタンス化するとき、<xref:System.Text.StringBuilder>オブジェクトを呼び出すことによって、<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29>長さと容量の両方のコンス トラクター、<xref:System.Text.StringBuilder>インスタンスは、の値を超えて増加できますその<xref:System.Text.StringBuilder.MaxCapacity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="813f4-1236">In the[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], when you instantiate the <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor, both the length and the capacity of the <xref:System.Text.StringBuilder> instance can grow beyond the value of its <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span> <span data-ttu-id="813f4-1237">特に呼び出しが発生することができます、<xref:System.Text.StringBuilder.Append%2A>と<xref:System.Text.StringBuilder.AppendFormat%2A>小さな文字列を追加する方法。</span><span class="sxs-lookup"><span data-stu-id="813f4-1237">This can occur particularly when you call the <xref:System.Text.StringBuilder.Append%2A> and <xref:System.Text.StringBuilder.AppendFormat%2A> methods to append small strings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Remove (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Remove(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer, length As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Remove(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Remove (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">To be added.</param>
        <param name="length">
          <span data-ttu-id="813f4-1238">削除する文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1238">The number of characters to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1239">このインスタンスから、指定した範囲の文字を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1239">Removes the specified range of characters from this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1240">削除操作が完了した後のこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1240">A reference to this instance after the excise operation has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1241">現在のメソッドでは、現在のインスタンスから指定された文字の範囲を削除します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1241">The current method removes the specified range of characters from the current instance.</span></span> <span data-ttu-id="813f4-1242">文字 (`startIndex` + `length`) に移動されます`startIndex`、によって、現在のインスタンスの文字列値が簡略化および`length`します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1242">The characters at (`startIndex` + `length`) are moved to `startIndex`, and the string value of the current instance is shortened by `length`.</span></span> <span data-ttu-id="813f4-1243">現在のインスタンスの容量に影響はありません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1243">The capacity of the current instance is unaffected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="813f4-1244"><xref:System.Text.StringBuilder.Remove%2A>メソッドは、現在の値を変更します。<xref:System.Text.StringBuilder>をインスタンス化し、そのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1244">The <xref:System.Text.StringBuilder.Remove%2A> method modifies the value of the current <xref:System.Text.StringBuilder> instance and returns that instance.</span></span> <span data-ttu-id="813f4-1245">これの作成し、新しいを返すは<xref:System.Text.StringBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="813f4-1245">It does not create and return a new <xref:System.Text.StringBuilder> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1246">次の例で、<xref:System.Text.StringBuilder.Remove%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1246">The following example demonstrates the <xref:System.Text.StringBuilder.Remove%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.remove/CPP/remove.cpp#1)]
 [!code-csharp[stringbuilder.remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.remove/CS/remove.cs#1)]
 [!code-vb[stringbuilder.remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.remove/VB/remove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1247">
            <paramref name="startIndex" /> または <paramref name="length" /> が 0 未満か、<paramref name="startIndex" /> + <paramref name="length" /> がこのインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1247">If <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="length" /> is greater than the length of this instance.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.StringBuilder.Replace(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-1248">このインスタンスに出現する指定文字または指定文字列をすべて、別に指定した文字または文字列に置換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1248">Replaces all occurrences of a specified character or string in this instance with another specified character or string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (char oldChar, char newChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(char oldChar, char newChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(char oldChar, char newChar);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldChar, newChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="oldChar">
          <span data-ttu-id="813f4-1249">置換する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1249">The character to replace.</span>
          </span>
        </param>
        <param name="newChar">
          <span data-ttu-id="813f4-1250">
            <c>oldChar</c> を置換する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1250">The character that replaces <c>oldChar</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1251">このインスタンスに出現する指定文字をすべて、別に指定した文字に置換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1251">Replaces all occurrences of a specified character in this instance with another specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1252">
            <paramref name="oldChar" /> が <paramref name="newChar" /> に置換されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1252">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1253">このメソッドの出現箇所を識別するために、序数に基づく、大文字小文字の比較を実行`oldChar`で現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-1253">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldChar` in the current instance.</span></span> <span data-ttu-id="813f4-1254">現在のサイズ<xref:System.Text.StringBuilder>インスタンスには、交換した後は変更されません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1254">The size of the current <xref:System.Text.StringBuilder> instance is unchanged after the replacement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1255">次の例で、<xref:System.Text.StringBuilder.Replace%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1255">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(System::String ^ oldValue, System::String ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="813f4-1256">置換する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1256">The string to replace.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="813f4-1257">
            <c>oldValue</c> を置換する文字列、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1257">The string that replaces <c>oldValue</c>, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1258">このインスタンスに出現するすべての指定した文字列を、別の指定した文字列に置換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1258">Replaces all occurrences of a specified string in this instance with another specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1259">
            <paramref name="oldValue" /> のすべてのインスタンスが <paramref name="newValue" /> に置換されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1259">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1260">このメソッドの出現箇所を識別するために、序数に基づく、大文字小文字の比較を実行`oldValue`で現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-1260">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldValue` in the current instance.</span></span> <span data-ttu-id="813f4-1261">場合`newValue`は`null`または<xref:System.String.Empty?displayProperty=nameWithType>、出現するすべての`oldValue`が削除されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1261">If `newValue` is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, all occurrences of `oldValue` are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1262">次の例で、<xref:System.Text.StringBuilder.Replace%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1262">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-1263">
            <paramref name="oldValue" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1263">
              <paramref name="oldValue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="813f4-1264">
            <paramref name="oldValue" /> の長さが 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1264">The length of <paramref name="oldValue" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1265">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1265">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (char oldChar, char newChar, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(char oldChar, char newChar, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(char oldChar, char newChar, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldChar, newChar, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldChar">
          <span data-ttu-id="813f4-1266">置換する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1266">The character to replace.</span>
          </span>
        </param>
        <param name="newChar">
          <span data-ttu-id="813f4-1267">
            <c>oldChar</c> を置換する文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1267">The character that replaces <c>oldChar</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="813f4-1268">このインスタンスにおける部分文字列の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1268">The position in this instance where the substring begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="813f4-1269">部分文字列の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1269">The length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1270">このインスタンスの部分文字列に出現するすべての指定した文字を、別の指定した文字に置換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1270">Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1271">
            <paramref name="startIndex" /> から <paramref name="startIndex" /> + <paramref name="count" /> -1 までの範囲内で、<paramref name="oldChar" /> が <paramref name="newChar" /> に置換されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1271">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1272">このメソッドの出現箇所を識別するために、序数に基づく、大文字小文字の比較を実行`oldChar`で現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="813f4-1272">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldChar` in the current instance.</span></span> <span data-ttu-id="813f4-1273">現在のサイズ<xref:System.Text.StringBuilder>オブジェクトには、交換した後は変更されません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1273">The size of the current <xref:System.Text.StringBuilder> object is unchanged after the replacement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1274">次の例で、<xref:System.Text.StringBuilder.Replace%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1274">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1275">
            <paramref name="startIndex" /> + <paramref name="count" />このインスタンスの値の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1275">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of the value of this instance.</span>
          </span>
          <span data-ttu-id="813f4-1276">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1276">-or-</span>
          </span>
          <span data-ttu-id="813f4-1277">
            <paramref name="startIndex" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1277">
              <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (string oldValue, string newValue, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(string oldValue, string newValue, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(System::String ^ oldValue, System::String ^ newValue, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldValue, newValue, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="813f4-1278">置換する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1278">The string to replace.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="813f4-1279">
            <c>oldValue</c> を置換する文字列、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1279">The string that replaces <c>oldValue</c>, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="813f4-1280">このインスタンスにおける部分文字列の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1280">The position in this instance where the substring begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="813f4-1281">部分文字列の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1281">The length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1282">このインスタンスの部分文字列に出現するすべての指定した文字列を、別の指定した文字列に置換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1282">Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1283">
            <paramref name="startIndex" /> から <paramref name="startIndex" /> + <paramref name="count" /> 1 までの範囲内で、<paramref name="oldValue" /> のすべてのインスタンスが <paramref name="newValue" /> に置換されたこのインスタンスへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1283">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1284">このメソッドの出現箇所を識別するために、序数に基づく、大文字小文字の比較を実行`oldValue`で指定された部分文字列。</span><span class="sxs-lookup"><span data-stu-id="813f4-1284">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldValue` in the specified substring.</span></span> <span data-ttu-id="813f4-1285">場合`newValue`は`null`または<xref:System.String.Empty?displayProperty=nameWithType>、出現するすべての`oldValue`が削除されます。</span><span class="sxs-lookup"><span data-stu-id="813f4-1285">If `newValue` is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, all occurrences of `oldValue` are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1286">次の例で、<xref:System.Text.StringBuilder.Replace%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="813f4-1286">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>  
  
 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-1287">
            <paramref name="oldValue" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1287">
              <paramref name="oldValue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="813f4-1288">
            <paramref name="oldValue" /> の長さが 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1288">The length of <paramref name="oldValue" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1289">
            <paramref name="startIndex" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1289">
              <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-1290">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1290">-or-</span>
          </span>
          <span data-ttu-id="813f4-1291">
            <paramref name="startIndex" /> と <paramref name="count" /> を足した数が、このインスタンス内にない文字位置を示しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1291">
              <paramref name="startIndex" /> plus <paramref name="count" /> indicates a character position not within this instance.</span>
          </span>
          <span data-ttu-id="813f4-1292">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1292">-or-</span>
          </span>
          <span data-ttu-id="813f4-1293">このインスタンスの値を増やすと <see cref="P:System.Text.StringBuilder.MaxCapacity" /> を超えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1293">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="813f4-1294">シリアル化情報が設定されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1294">The object to populate with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="813f4-1295">シリアル化データを格納および取得する場所。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1295">The place to store and retrieve serialized data.</span>
          </span>
          <span data-ttu-id="813f4-1296">将来使用するために予約されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1296">Reserved for future use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1297">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.Text.StringBuilder" /> オブジェクトの逆シリアル化に必要なデータを入力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1297">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.StringBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1298">`context`パラメーターは将来使用するために予約されていると、この操作に関与しません。</span><span class="sxs-lookup"><span data-stu-id="813f4-1298">The `context` parameter is reserved for future use and does not participate in this operation.</span></span>  
  
 <span data-ttu-id="813f4-1299">詳細については、<xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="813f4-1299">For more information, see the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="813f4-1300">
            <paramref name="info" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1300">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="813f4-1301">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1301">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="813f4-1302">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1302">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="813f4-1303">
            <see cref="T:System.Text.StringBuilder" /> の値を <see cref="T:System.String" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1303">Converts the value of a <see cref="T:System.Text.StringBuilder" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="813f4-1304">このインスタンスの値を <see cref="T:System.String" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1304">Converts the value of this instance to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1305">このインスタンスと同じ値の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1305">A string whose value is the same as this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1306">呼び出す必要があります、<xref:System.Text.StringBuilder.ToString%2A>に変換するメソッド、<xref:System.Text.StringBuilder>オブジェクトを<xref:System.String>オブジェクトによって表される文字列を渡す前に、<xref:System.Text.StringBuilder>オブジェクトを持つメソッドを<xref:System.String>パラメーターまたはユーザー インターフェイスで表示します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1306">You must call the <xref:System.Text.StringBuilder.ToString%2A> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="813f4-1307">次の例では、<xref:System.Text.StringBuilder.ToString%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="813f4-1307">The following example demonstrates calling the <xref:System.Text.StringBuilder.ToString%2A> method.</span></span> <span data-ttu-id="813f4-1308">この例が示されている例の一部、<xref:System.Text.StringBuilder>クラス。</span><span class="sxs-lookup"><span data-stu-id="813f4-1308">This example is part of a larger example provided for the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-cpp[StringBuilder#5](~/samples/snippets/cpp/VS_Snippets_CLR/StringBuilder/cpp/StringBuilder.cpp#5)]
 [!code-csharp[StringBuilder#5](~/samples/snippets/csharp/VS_Snippets_CLR/StringBuilder/CS/StringBuilder.cs#5)]
 [!code-vb[StringBuilder#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringBuilder/VB/StringBuilder.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="stringBuilder.ToString (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="813f4-1309">このインスタンス内の部分文字列の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1309">The starting position of the substring in this instance.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="813f4-1310">部分文字列の長さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1310">The length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="813f4-1311">このインスタンスの部分文字列の値を <see cref="T:System.String" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1311">Converts the value of a substring of this instance to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="813f4-1312">このインスタンスの指定した部分文字列と同じ値の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1312">A string whose value is the same as the specified substring of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="813f4-1313">呼び出す必要があります、<xref:System.Text.StringBuilder.ToString%2A>に変換するメソッド、<xref:System.Text.StringBuilder>オブジェクトを<xref:System.String>オブジェクトによって表される文字列を渡す前に、<xref:System.Text.StringBuilder>オブジェクトを持つメソッドを<xref:System.String>パラメーターまたはユーザー インターフェイスで表示します。</span><span class="sxs-lookup"><span data-stu-id="813f4-1313">You must call the <xref:System.Text.StringBuilder.ToString%2A> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="813f4-1314">
            <paramref name="startIndex" /> または <paramref name="length" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1314">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="813f4-1315">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1315">-or-</span>
          </span>
          <span data-ttu-id="813f4-1316">
            <paramref name="startIndex" /> と <paramref name="length" /> の合計値が、現在のインスタンスの長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="813f4-1316">The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the length of the current instance.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>