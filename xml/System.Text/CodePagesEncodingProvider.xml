<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="205829b3aae2ef172509db7e9101c23343aa655f" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68434832" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider : System.Text.EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Text.EncodingProvider" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider&#xA;Inherits EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed : System::Text::EncodingProvider" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class&#xA;    inherit EncodingProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-plat-ext-2.1">System.Text.EncodingProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コード ページのエンコード プロバイダーへのアクセスを提供します。それ以外の場合、このページはデスクトップの .NET Framework でのみサポートされます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
    
 Windows デスクトップの .NET Framework は、大規模な Unicode およびコードページエンコードのセットをサポートしています。 一方、.NET Core では、次のエンコーディングのみがサポートされています。  
  
-   ASCII (コードページ 20127)。これは<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   ISO-8859-1 (コードページ 28591)。  
  
-   Utf-7 (コードページ 65000)。これは<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   Utf-8 (コードページ 65001)。これは<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   Utf-16 および 16LE (コードページ 1200)。 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   Utf-16 be (コードページ<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> 1201) `true`。 `bigEndian`値を指定してまたは<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>コンストラクターを呼び出すことによってインスタンス化されます。  
  
-   32 utf-8 と utf-16 le (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   UTF (コードページ 12001) は、パラメーターを<xref:System.Text.UTF32Encoding> `bigEndian`持つコンストラクターを呼び出し、メソッド呼び出しにの`true`値を指定することによってインスタンス化されます。  
  
 コードページ20127以外のコードページエンコーディングはサポートされていません。  
  
 クラス<xref:System.Text.CodePagesEncodingProvider>を拡張<xref:System.Text.EncodingProvider>して、これらのコードページを .net Core で使用できるようにします。 これらの追加のコードページを使用するには、次の手順を実行します。  
  
-   プロジェクトに、参照を追加して、コードページ...........................  
  
-   <xref:System.Text.CodePagesEncodingProvider> 静的<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>プロパティからオブジェクトを取得します。  
  
-   <xref:System.Text.CodePagesEncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡します。  
  
 オブジェクトが登録された後、でサポートされているエンコーディングは、 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>のオーバーロードを呼び出すこと<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>によって使用できます。オーバーロードを呼び出さないでください。 <xref:System.Text.EncodingProvider>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="codepage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デスクトップの .NET Framework ではサポートされているものの現在の .NET Framework プラットフォームではサポートされていないコード ページのエンコーディング プロバイダーを取得します。</summary>
        <value>現在の .NET Framework プラットフォームでサポートされていないエンコーディングへのアクセスを許可するエンコーディングプロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 Windows デスクトップの .NET Framework では、多数の文字エンコーディングとコードページがサポートされています。 エンコードの完全な一覧を取得するには、 <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> Windows デスクトップの完全な .NET Framework にあるメソッドを呼び出します。 一方、.NET Core では、次のエンコーディングのみが既定でサポートされています。  
  
-   ASCII (コードページ 20127)。これは<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   ISO-8859-1 (コードページ 28591)。  
  
-   Utf-7 (コードページ 65000)。これは<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   Utf-8 (コードページ 65001)。これは<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   Utf-16 および 16LE (コードページ 1200)。 <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   Utf-16 be (コードページ<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> 1201) `true`。 `bigEndian`値を指定してまたは<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>コンストラクターを呼び出すことによってインスタンス化されます。  
  
-   32 utf-8 と utf-16 le (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>プロパティによって返されます。  
  
-   UTF (コードページ 12001) は、パラメーターを<xref:System.Text.UTF32Encoding> `bigEndian`持つコンストラクターを呼び出し、メソッド呼び出しにの`true`値を指定することによってインスタンス化されます。  
  
 .NET Core ではなく、Windows デスクトップの .NET Framework に存在するエンコーディングを取得するには、次の手順を実行します。  
  
-   プロジェクトに、参照を追加して、コードページ...........................  
  
-   <xref:System.Text.EncodingProvider> 静的<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>プロパティからオブジェクトを取得します。  
  
-   オブジェクトによって<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> <xref:System.Text.EncodingProvider>提供されるエンコーディングを共通言語ランタイムで使用できるようにするには、オブジェクトをメソッドに渡します。<xref:System.Text.EncodingProvider>  
  
-   <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>オーバーロードを呼び出して、エンコーディングを取得します。 メソッドは、対応<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>するメソッドを呼び出して、要求されたエンコーディングを提供できるかどうかを判断します。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>