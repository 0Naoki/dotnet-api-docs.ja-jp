<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ASCIIEncoding.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab5211a8f9320a934d74d9b3f821ee108ec6cb24.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab5211a8f9320a934d74d9b3f821ee108ec6cb24</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Represents an ASCII character encoding of Unicode characters.</source>
          <target state="translated">Unicode 文字の ASCII 文字エンコードを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</source>
          <target state="translated">エンコーディングは、Unicode 文字のセットをバイト シーケンスに変換するプロセスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</source>
          <target state="translated">デコードは、エンコードされたバイトのシーケンスを Unicode 文字のセットに変換するプロセスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> corresponds to the Windows code page 20127.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> Windows コード ページ 20127 に対応します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</source>
          <target state="translated">ASCII は、7 ビット エンコードであるために、ASCII 文字は u+0000 U +0 007F ~ から下位 128 Unicode 文字に制限されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>If you use the default encoder returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.%23ctor%2A&gt;</ph> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</source>
          <target state="translated">によって返される既定のエンコーダーを使用する場合、<ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph>プロパティまたは<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.%23ctor%2A&gt;</ph>エンコーディングの処理が行われる前に、コンス トラクター、その範囲外の文字は疑問符 (?) に置き換えられます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class supports only a limited character set, the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.UTF32Encoding&gt;</ph> classes are better suited for globalized applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>クラスには、制限文字セットのみがサポートしている、 <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、および<ph id="ph4">&lt;xref:System.Text.UTF32Encoding&gt;</ph>クラスは、グローバライズされたアプリケーションに適しています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The following considerations can help you to decide whether to use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>:</source>
          <target state="translated">次の考慮事項では、使用するかどうかを決定するのに役立ちます<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Some protocols require ASCII or a subset of ASCII.</source>
          <target state="translated">一部のプロトコルは、ASCII または ASCII のサブセットが必要です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>In these cases ASCII encoding is appropriate.</source>
          <target state="translated">このような場合の ASCII エンコードが適切です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</source>
          <target state="translated">8 ビット エンコードが予想される場合、ASCII は、適切な選択可能性がありますが、です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Instead, consider using UTF8 instead of ASCII.</source>
          <target state="translated">代わりに、ASCII ではなく UTF8 を使用します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</source>
          <target state="translated">U +0 007F ~ 文字 u+0000 の結果が同じですがすべての Unicode 文字データの損失を回避できる utf-8 で表現可能です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>For security reasons, you should use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用する必要があります<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>し、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドでは、Unicode 文字のセットをエンコードで発生するまでのバイト数を決定し、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>メソッドでは、実際のエンコードを実行します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> methods perform the actual decoding.</source>
          <target state="translated">同様に、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドは、バイト シーケンスをデコード中に発生する文字数を決定し、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph>メソッドでは、実際のデコードを実行します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Note that the default <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> constructor by itself might not have the appropriate behavior for your application.</source>
          <target state="translated">なお、既定<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>コンス トラクター自体では、アプリケーションの適切な動作がないです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>You might want to consider setting the <ph id="ph1">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> or <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> to prevent sequences with the 8th bit set.</source>
          <target state="translated">設定を検討することができます、<ph id="ph1">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph>プロパティを<ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>または<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>を 8 ビットが設定されたシーケンスを防ぐためにします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Custom behavior might also be appropriate for these cases.</source>
          <target state="translated">カスタム動作は、このような場合の適切な場合もあります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The following example demonstrates how to encode Unicode characters into ASCII.</source>
          <target state="translated">次の例では、ASCII に Unicode 文字をエンコードする方法を示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Notice the loss of data that occurs when your application uses <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode Unicode characters outside of the ASCII range.</source>
          <target state="translated">アプリケーションで使用するときに発生するデータの損失に注意してください<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>ASCII の範囲外での Unicode 文字をエンコードします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>クラスはエラーの検出を提供しません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>For security reasons, you should use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> class and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用する必要があります、 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>クラスし、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</source>
          <target state="translated">ASCII エンコーディングを使用するように選択すると場合、は、このコンス トラクターは、アプリケーションに適切なフォールバック動作を指定可能性があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>It uses the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>クラスに u+0000 U +0 007F 経由の範囲外のすべての文字を疑問符 (?) に置き換えます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Instead, you can call the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> method and pass it <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> objects to use exception fallback.</source>
          <target state="translated">代わりに、呼び出すことができます、<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph>メソッドを渡す<ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>と<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>例外フォールバックを使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> supports only the Unicode character values between U+0000 and U+007F.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> Unicode 文字値の間は U +0 0000 と 007F のみサポートされます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> are better suited for globalized applications.</source>
          <target state="translated">そのため、 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、および<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>グローバライズされたアプリケーションが適しています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>The following example demonstrates how to create a new <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> instance and display the name of the encoding.</source>
          <target state="translated">次の例では、新規作成<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>をインスタンス化し、エンコーディングの名前を表示します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">文字のセットをエンコードすることによって生成されるバイト数を計算します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">エンコード対象の文字のセットを格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>Calculates the number of bytes produced by encoding the characters in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 内の文字をエンコードすることによって生成されるバイト数を計算します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">指定した文字をエンコードすることによって生成されるバイト数。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>結果のバイトを格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode a string using <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>を使用して文字列をエンコードするために必要なバイト数を返すメソッドを<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">エンコードする最初の文字へのポインター。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">エンコードする文字数。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">指定した文字ポインターで始まる文字のセットをエンコードすることによって生成されるバイト数を計算します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">指定した文字をエンコードすることによって生成されるバイト数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>結果のバイトを格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">エンコード対象の文字のセットを格納している文字配列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">エンコードする最初の文字のインデックス。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">エンコードする文字数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">指定した文字配列から文字のセットをエンコードすることによって生成されるバイト数を計算します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">指定した文字をエンコードすることによって生成されるバイト数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>結果のバイトを格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode an array of Unicode characters using <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>を使用して Unicode 文字の配列をエンコードするために必要なバイト数を返すメソッドを<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> および <ph id="ph2">&lt;paramref name="count" /&gt;</ph> は <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> において有効な範囲を表していません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">文字のセットをバイト シーケンスにエンコードします。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">エンコードする最初の文字へのポインター。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">エンコードする文字数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">結果のバイト シーケンスの書き込みを開始する位置へのポインター。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">指定した文字ポインターで始まる文字のセットを、指定したバイト ポインターを開始位置として格納されるバイト シーケンスにエンコードします。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The actual number of bytes written at the location indicated by <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> によって示される位置に書き込まれる実際のバイト数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>結果のバイトを格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>によって提供される、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>メソッドまたは<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>メソッド、それぞれします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</source>
          <target state="translated">U +0 007F よりも大きい値の任意の Unicode 文字を ASCII 疑問符 () に変換されます ("?") です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用するアプリケーションが推奨<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>し、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> または <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> が結果のバイト数より少なくなっています。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">エンコード対象の文字のセットを格納している文字配列。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">エンコードする最初の文字のインデックス。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">エンコードする文字数。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">結果のバイト シーケンスを格納するバイト配列。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">結果のバイト シーケンスを書き込む開始位置のインデックス。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified character array into the specified byte array.</source>
          <target state="translated">指定した文字配列に格納されている文字のセットを指定したバイト配列にエンコードします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> に書き込まれた実際のバイト数。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>結果のバイトを格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>によって提供される、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>メソッドまたは<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>メソッド、それぞれします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</source>
          <target state="translated">U +0 007F よりも大きい値の任意の Unicode 文字が、ASCII 疑問符 (?) としてエンコードされます ("?") です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用するアプリケーションが推奨<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>し、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>メソッドは、文字列から文字の範囲のエンコードをバイト配列の要素の範囲内でエンコードされた文字を格納します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> および <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> は <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> において有効な範囲を表していません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> が <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> の有効なインデックスではありません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> には、<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">エンコード対象の文字のセットを格納している <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">エンコードする最初の文字のインデックス。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">エンコードする文字数。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">結果のバイト シーケンスを格納するバイト配列。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">結果のバイト シーケンスを書き込む開始位置のインデックス。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into the specified byte array.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> の文字セットを、指定したバイト配列にエンコードします。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> に書き込まれた実際のバイト数。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>結果のバイトを格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>によって提供される、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>メソッドまたは<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>メソッド、それぞれします。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</source>
          <target state="translated">U +0 007F よりも大きい値の任意の Unicode 文字が、ASCII 疑問符 (?) としてエンコードされます ("?") です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用するアプリケーションが推奨<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>し、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">次の例で使用する方法、 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> Unicode 文字配列から要素の範囲をエンコードし、バイト配列の要素の範囲内でエンコードされたバイトを格納します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> および <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> は <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> において有効な範囲を表していません。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> が <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> の有効なインデックスではありません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> には、<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">バイト シーケンスをデコードすることによって生成される文字数を計算します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">デコードする最初のバイトへのポインター。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">デコードするバイト数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">指定したバイト ポインターで始まるバイト シーケンスをデコードすることによって生成される文字数を計算します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">指定したバイト シーケンスをデコードすることによって生成される文字数。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>結果の文字を格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">デコード対象のバイト シーケンスが格納されたバイト配列。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">デコードする最初のバイトのインデックス。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">デコードするバイト数。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">指定したバイト配列からバイト シーケンスをデコードすることによって生成される文字数を計算します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">指定したバイト シーケンスをデコードすることによって生成される文字数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>結果の文字を格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method to return the number of characters produced by decoding a range of elements in a byte array.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>バイト配列の要素の範囲をデコードして生成される文字数を返すメソッドをします。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> および <ph id="ph2">&lt;paramref name="count" /&gt;</ph> は <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> において有効な範囲を表していません。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">バイト シーケンスを文字のセットにデコードします。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">デコードする最初のバイトへのポインター。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">デコードするバイト数。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">結果の文字セットの書き込みを開始する位置へのポインター。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">書き込む文字の最大数。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">指定したバイト ポインターで始まるバイト シーケンスを、指定した文字ポインターを開始位置として格納される文字のセットにデコードします。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The actual number of characters written at the location indicated by <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> によって示される位置に書き込まれる実際の文字数。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>結果の文字を格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>によって提供される、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>メソッドまたは<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>メソッド、それぞれします。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">16 進数の 0x7F よりも大きいすべてのバイトが Unicode の疑問符 () としてデコード ("?") です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用するアプリケーションが推奨<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>し、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> または <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> が結果の文字数より少なくなっています。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">デコード対象のバイト シーケンスが格納されたバイト配列。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">デコードする最初のバイトのインデックス。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">デコードするバイト数。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">結果の文字のセットを格納する文字配列。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">結果の文字のセットを書き込む開始位置のインデックス。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Decodes a sequence of bytes from the specified byte array into the specified character array.</source>
          <target state="translated">指定したバイト配列に格納されているバイト シーケンスを指定した文字配列にデコードします。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> に書き込まれた実際の文字数。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">必要な厳密な配列のサイズを計算する<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>結果の文字を格納するアプリケーションを使用して<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">配列の最大サイズを計算するアプリケーションを使用する必要があります<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドは通常より少ないメモリの割り当てを使用するときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>によって提供される、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>メソッドまたは<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>メソッド、それぞれします。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">16 進数の 0x7F よりも大きいすべてのバイトが Unicode の疑問符 () としてデコード ("?") です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">セキュリティ上の理由から、使用するアプリケーションが推奨<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>し、エラーの検出を有効にします。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</source>
          <target state="translated">次の例では、ある範囲のバイト配列から要素をデコードし、一連の Unicode 文字配列の要素に結果を格納する方法を示します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> および <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> は <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> において有効な範囲を表していません。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> が <ph id="ph2">&lt;paramref name="chars" /&gt;</ph> の有効なインデックスではありません。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> には、<ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> から配列の末尾までに十分なサイズがなく、結果の文字を格納できません。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">ASCII でエンコードされたバイト シーケンスを Unicode 文字のシーケンスに変換するデコーダーを取得します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">ASCII でエンコードされたバイト シーケンスを Unicode 文字のシーケンスに変換する <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph>メソッドと同様の方法で、文字のシーケンシャル ブロックにバイトのシーケンシャル ブロックを変換する、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>このクラスのメソッドです。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>のブロックをまたぐバイト シーケンスを正しくデコードすることができますのでの呼び出しの間の状態情報を保持します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>もデータ ブロックの末尾にある末尾バイトを保持し、[次へ] のデコード操作で末尾バイトを使用します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>の完全なデータ ストリームではなくデータ ブロックを頻繁にこれらの操作を処理するためにネットワーク転送、ファイル操作に便利です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</source>
          <target state="translated">Unicode 文字のシーケンスを ASCII でエンコードされたバイト シーケンスに変換するエンコーダーを取得します。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</source>
          <target state="translated">Unicode 文字のシーケンスを ASCII でエンコードされたバイト シーケンスに変換する <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph>メソッドと同様のバイト数のシーケンシャル ブロックに文字のシーケンシャル ブロックを変換する、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>このクラスのメソッドです。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>However, an <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> maintains state information between calls so it can correctly encode character sequences that span blocks.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>のブロックをまたぐ文字シーケンスを正しくエンコードすることができますのでの呼び出しの間の状態情報を保持します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>末尾が保存されますが、データ ブロックの最後の文字し、末尾の文字を使用して、次のエンコード操作もします。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</source>
          <target state="translated">たとえば、データ ブロックが上位サロゲートで終了し、一致する下位サロゲートが [次へ] のデータ ブロック内にある可能性があります。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>の完全なデータ ストリームではなくデータ ブロックを頻繁にこれらの操作を処理するためにネットワーク転送、ファイル操作に便利です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">エンコードする文字数。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>Calculates the maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">指定した文字数をエンコードすることによって生成される最大バイト数を計算します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">指定した文字数をエンコードすることによって生成される最大バイト数。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to store the resulting bytes, whereas the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method calculates the maximum array size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドで必要な厳密な配列のサイズを計算、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>一方、結果のバイトを格納する方法、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは配列の最大サイズを計算します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, but the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>メソッドは通常より少ないメモリを割り当てますが、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 現在選択されている最悪のケースを含め、最悪の番号は、<ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If you choose a replacement fallback with a potentially large string, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">代わりにある可能性がある文字列で、フォールバックを選んだ場合<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>大きな値を返すことができます。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method considers potential leftover surrogates from a previous encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドが前のエンコード操作からサロゲートが残っている可能性があると見なします。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>As a result, if the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns <ph id="ph2">`charCount`</ph> + 1.</source>
          <target state="translated">その結果場合、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>オブジェクトは、既定値の置換フォールバックを使用またはメソッドが返す場合は、カスタムの置換フォールバックは、1 つの可能なフォールバック文字で定義されている、 <ph id="ph2">`charCount`</ph> + 1 です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object uses a replacement fallback with more than one possible fallback character, the method returns <bpt id="p1">*</bpt>n<ept id="p1">*</ept> * (<ph id="ph2">`charCount`</ph> + 1), where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the maximum number of fallback characters.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>オブジェクトは、1 つ以上の可能なフォールバック文字を置換フォールバックを使用して、返します<bpt id="p1">*</bpt>n<ept id="p1">*</ept> * (<ph id="ph2">`charCount`</ph> + 1) ここで、 <bpt id="p2">*</bpt>n<ept id="p2">*</ept>フォールバックの最大数は、文字があります。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 関係を持たない<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">使用するような関数が、アプリケーションに必要なかどうかは<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>、それを使用する必要があります<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">`GetMaxByteCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxByteCount(N)`</ph> 必ずしもと同じ値ではない<ph id="ph2">`N* GetMaxByteCount(1)`</ph>です。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method to calculate the bytes required to encode a specified number of characters.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>メソッドを指定した文字数をエンコードするために必要なバイト数を計算します。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">デコードするバイト数。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>Calculates the maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">指定したバイト数をデコードすることによって生成される最大文字数を計算します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">指定したバイト数をデコードすることによって生成される最大文字数。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> method to store the resulting characters, whereas  the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method calculates the maximum array size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドで必要な厳密な配列のサイズを計算、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>文字では、その結果を格納する方法、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドは配列の最大サイズを計算します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>メソッドでは、メモリが少なく、通常が割り当てるときに、<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドは通常、速く実行します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> retrieves a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 現在選択されている最悪のケースを含む、最悪のシナリオの数を取得<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>If a decoder fallback is present that has a maximum fallback length of <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method returns <bpt id="p2">*</bpt>n<ept id="p2">*</ept><ph id="ph2"> * </ph><ph id="ph3">`byteCount`</ph>.</source>
          <target state="translated">デコーダー フォールバックが存在する場合のフォールバックを最長を持つ<bpt id="p1">*</bpt>n<ept id="p1">*</ept>、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドを返します。 <bpt id="p2">*</bpt>n<ept id="p2">*</ept><ph id="ph2"> * </ph><ph id="ph3">`byteCount`</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 関係を持たない<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">使用するような関数が、アプリケーションに必要なかどうかは<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>、それを使用する必要があります<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">`GetMaxCharCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxCharCount(N)`</ph> 必ずしもと同じ値ではない<ph id="ph2">`N* GetMaxCharCount(1)`</ph>です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method to calculate the maximum number of characters needed to decode a specified number of bytes.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>メソッドを指定したバイト数をデコードするために必要な文字の最大数を計算します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">結果のバイト数が、整数として返すことのできる最大数を超えています。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">デコード対象のバイト シーケンスが格納されたバイト配列。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">デコードする最初のバイトのインデックス。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">デコードするバイト数。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes a range of bytes from a byte array into a string.</source>
          <target state="translated">バイト配列に格納されているある範囲のバイトを文字列にデコードします。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the results of decoding the specified sequence of bytes.</source>
          <target state="translated">指定したバイト シーケンスのデコード結果が格納されている <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">この場合、またはデータの量がより小さなブロックに分割する必要があることが非常に大きい場合は、アプリケーションが使用する必要があります、<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>または<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>によって提供される、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>メソッドまたは<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>メソッド、それぞれします。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> エラーの検出は提供されません。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">16 進数の 0x7F よりも大きいすべてのバイトが Unicode の疑問符 () としてデコード ("?") です。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>For security reasons, you should use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> classes and enable error detection instead of using the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class.</source>
          <target state="translated">セキュリティ上の理由から、使用する必要があります、 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>、 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、または<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>クラスおよび使用する代わりに、エラーの検出を有効にする、<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> method to convert a byte array into a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph>にバイト配列に変換するメソッド、<ph id="ph2">&lt;xref:System.String&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> および <ph id="ph2">&lt;paramref name="count" /&gt;</ph> は <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> において有効な範囲を表していません。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">フォールバックが発生しました (詳細な説明は、「<bpt id="p1">[</bpt>.NET Framework における文字エンコーディング<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>」をご覧ください)</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">および</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>Gets a value indicating whether the current encoding uses single-byte code points.</source>
          <target state="translated">現在のエンコーディングが 1 バイトのコード ポイントを使用するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>This property is always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>Instead of using the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> * the number of characters to be encoded), you should call the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method for encoding operations and the <ph id="ph5">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> or <ph id="ph6">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method for decoding operations.</source>
          <target state="translated">使用せずに、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph>エンコード操作およびデコード操作の文字配列のサイズをバイト配列のサイズを決定するプロパティ (バイト配列のサイズができるように、 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> * エンコードする文字数)、呼び出す必要があります、<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>エンコード操作のメソッドと<ph id="ph5">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>または<ph id="ph6">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>デコード操作のメソッドです。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>These methods takes the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object's replacement fallback strategy into account when calculating the required array size.</source>
          <target state="translated">これらのメソッドは、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>必要な配列のサイズを計算するときに、オブジェクトの置換フォールバック ストラテジです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>