<Type Name="ASCIIEncoding" FullName="System.Text.ASCIIEncoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1bfc7c4ff8f3ce1008c349e1868249d7a2c6309" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48764761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ASCIIEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ASCIIEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.ASCIIEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class ASCIIEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class ASCIIEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type ASCIIEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3d985-101">Unicode 文字の ASCII 文字エンコードを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d985-101">Represents an ASCII character encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-102">エンコーディングは、Unicode 文字のセットをバイト シーケンスに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="3d985-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="3d985-103">デコードは、Unicode 文字のセットにエンコードされたバイトのシーケンスを変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="3d985-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="3d985-104"><xref:System.Text.ASCIIEncoding> Windows コード ページ 20127 に対応します。</span><span class="sxs-lookup"><span data-stu-id="3d985-104"><xref:System.Text.ASCIIEncoding> corresponds to the Windows code page 20127.</span></span> <span data-ttu-id="3d985-105">ASCII は、7 ビットのエンコーディングであるために、ASCII 文字は、u+0000 U + 007F ~ から下位 128 Unicode 文字に制限されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-105">Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span> <span data-ttu-id="3d985-106">によって返される既定のエンコーダーを使用する場合、<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>プロパティまたは<xref:System.Text.ASCIIEncoding.%23ctor%2A>エンコード処理を実行する前にコンス トラクター、その範囲外の文字は疑問符 (?) に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="3d985-106">If you use the default encoder returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property or the <xref:System.Text.ASCIIEncoding.%23ctor%2A> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</span></span>  <span data-ttu-id="3d985-107"><xref:System.Text.ASCIIEncoding>クラスは、制限付きの文字セットのみをサポートしている、 <xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、および<xref:System.Text.UTF32Encoding>クラスは、グローバル化されたアプリケーションに適しています。</span><span class="sxs-lookup"><span data-stu-id="3d985-107">Because the <xref:System.Text.ASCIIEncoding> class supports only a limited character set, the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> classes are better suited for globalized applications.</span></span> <span data-ttu-id="3d985-108">次の考慮事項を使用するかどうかを決定する際に役立つ<xref:System.Text.ASCIIEncoding>:</span><span class="sxs-lookup"><span data-stu-id="3d985-108">The following considerations can help you to decide whether to use <xref:System.Text.ASCIIEncoding>:</span></span>  
  
-   <span data-ttu-id="3d985-109">一部のプロトコルでは、ASCII または ASCII のサブセットが必要です。</span><span class="sxs-lookup"><span data-stu-id="3d985-109">Some protocols require ASCII or a subset of ASCII.</span></span> <span data-ttu-id="3d985-110">このような場合の ASCII エンコードが適切です。</span><span class="sxs-lookup"><span data-stu-id="3d985-110">In these cases ASCII encoding is appropriate.</span></span>  
  
-   <span data-ttu-id="3d985-111">8 ビット エンコードが必要ですが場合、し ASCII は正しい選択をおそらくありません。</span><span class="sxs-lookup"><span data-stu-id="3d985-111">If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</span></span> <span data-ttu-id="3d985-112">代わりに、ASCII ではなく UTF8 の使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="3d985-112">Instead, consider using UTF8 instead of ASCII.</span></span> <span data-ttu-id="3d985-113">U + 007F ~ 文字 u+0000、結果は同じですが、すべての Unicode 文字は、データの損失を回避する utf-8 で表現できます。</span><span class="sxs-lookup"><span data-stu-id="3d985-113">For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-114"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-114"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-115">セキュリティ上の理由から、使用する必要があります<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>し、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-115">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 <span data-ttu-id="3d985-116"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドでは、バイト数が、Unicode 文字のセットがエンコードされるかを判断します。 および<xref:System.Text.ASCIIEncoding.GetBytes%2A>メソッドは、実際のエンコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="3d985-116">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="3d985-117">同様に、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドでは、文字数が発生するシーケンス (バイト単位) をデコードするかを判断します。 および<xref:System.Text.ASCIIEncoding.GetChars%2A>と<xref:System.Text.ASCIIEncoding.GetString%2A>メソッドは、実際のデコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="3d985-117">Likewise, the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.ASCIIEncoding.GetChars%2A> and <xref:System.Text.ASCIIEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="3d985-118">なお、既定<xref:System.Text.ASCIIEncoding>コンス トラクター自体では、アプリケーションの適切な動作がありません。</span><span class="sxs-lookup"><span data-stu-id="3d985-118">Note that the default <xref:System.Text.ASCIIEncoding> constructor by itself might not have the appropriate behavior for your application.</span></span> <span data-ttu-id="3d985-119">設定を検討したい場合があります、<xref:System.Text.Encoding.EncoderFallback%2A>または<xref:System.Text.Encoding.DecoderFallback%2A>プロパティを<xref:System.Text.EncoderExceptionFallback>または<xref:System.Text.DecoderExceptionFallback>を 8 ビットが設定されたシーケンスを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="3d985-119">You might want to consider setting the <xref:System.Text.Encoding.EncoderFallback%2A> or <xref:System.Text.Encoding.DecoderFallback%2A> property to <xref:System.Text.EncoderExceptionFallback> or <xref:System.Text.DecoderExceptionFallback> to prevent sequences with the 8th bit set.</span></span> <span data-ttu-id="3d985-120">カスタム動作は、このような場合の適切な場合もあります。</span><span class="sxs-lookup"><span data-stu-id="3d985-120">Custom behavior might also be appropriate for these cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-121">次の例では、ASCII に Unicode 文字をエンコードする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3d985-121">The following example demonstrates how to encode Unicode characters into ASCII.</span></span> <span data-ttu-id="3d985-122">アプリケーションで使用するときに発生するデータの損失に注意してください<xref:System.Text.ASCIIEncoding>ASCII 範囲外の Unicode 文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3d985-122">Notice the loss of data that occurs when your application uses <xref:System.Text.ASCIIEncoding> to encode Unicode characters outside of the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
      <span data-ttu-id="3d985-123">エンコーディングの理解</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d985-123">Understanding Encodings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ASCIIEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ASCIIEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d985-124">
            <see cref="T:System.Text.ASCIIEncoding" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-124">Initializes a new instance of the <see cref="T:System.Text.ASCIIEncoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-125"><xref:System.Text.ASCIIEncoding>クラスは、エラーの検出を提供しません。</span><span class="sxs-lookup"><span data-stu-id="3d985-125">The <xref:System.Text.ASCIIEncoding> class does not provide error detection.</span></span> <span data-ttu-id="3d985-126">セキュリティ上の理由から、使用する必要があります、 <xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>クラスし、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-126">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> class and enable error detection.</span></span>  
  
 <span data-ttu-id="3d985-127">ASCII エンコーディングを使用する場合は、このコンス トラクターが、アプリケーションの適切なフォールバック動作を提供可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="3d985-127">If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</span></span> <span data-ttu-id="3d985-128">使用して、<xref:System.Text.EncoderReplacementFallback>と<xref:System.Text.DecoderReplacementFallback>クラスに u+0000 U + 007F 経由の範囲外のすべての文字を疑問符 (?) に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="3d985-128">It uses the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallback> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</span></span> <span data-ttu-id="3d985-129">代わりに、呼び出すことができます、<xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType>または<xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType>メソッドを渡して<xref:System.Text.EncoderExceptionFallback>と<xref:System.Text.DecoderExceptionFallback>例外フォールバックを使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3d985-129">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method and pass it <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> objects to use exception fallback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d985-130"><xref:System.Text.ASCIIEncoding> Unicode 文字値間 U + 0000 と 007F のみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3d985-130"><xref:System.Text.ASCIIEncoding> supports only the Unicode character values between U+0000 and U+007F.</span></span> <span data-ttu-id="3d985-131">そのため、 <xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、および<xref:System.Text.UTF32Encoding>グローバル化されたアプリケーションはやりやすくなります。</span><span class="sxs-lookup"><span data-stu-id="3d985-131">Therefore, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> are better suited for globalized applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-132">次の例は、新たに作成する方法を示します<xref:System.Text.ASCIIEncoding>インスタンスし、エンコーディングの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="3d985-132">The following example demonstrates how to create a new <xref:System.Text.ASCIIEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d985-133">文字のセットをエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-133">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3d985-134">エンコード対象の文字のセットを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-134">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-135">指定した <see cref="T:System.String" /> 内の文字をエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-135">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-136">指定した文字をエンコードすることによって生成されるバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-136">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-137">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetBytes%2A>アプリケーションが使用するには、結果のバイトを格納するには、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-137">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3d985-138">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-138">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3d985-139"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-139">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-140">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドを使用して文字列をエンコードするために必要なバイト数を返す<xref:System.Text.ASCIIEncoding>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-140">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode a string using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CPP/getbytecount-string.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CS/getbytecount-string.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/VB/getbytecount-string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-141">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-141">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-142">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-142">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3d985-143">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-143">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-144">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-144">-and-</span>
          </span>
          <span data-ttu-id="3d985-145">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-145">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="3d985-146">エンコーディングの理解</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-146">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3d985-147">エンコードする最初の文字へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-147">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3d985-148">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-148">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-149">指定した文字ポインターで始まる文字のセットをエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-149">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-150">指定した文字をエンコードすることによって生成されるバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-150">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-151">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetBytes%2A>アプリケーションが使用するには、結果のバイトを格納するには、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-151">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3d985-152">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-152">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3d985-153"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-153">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-154">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-154">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-155">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-155">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-156">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-156">-or-</span>
          </span>
          <span data-ttu-id="3d985-157">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-157">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3d985-158">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-158">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-159">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-159">-and-</span>
          </span>
          <span data-ttu-id="3d985-160">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-160">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d985-161">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-161">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3d985-162">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-162">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3d985-163">エンコード対象の文字のセットを格納している文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-163">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3d985-164">エンコードする最初の文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-164">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3d985-165">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-165">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-166">指定した文字配列から文字のセットをエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-166">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-167">指定した文字をエンコードすることによって生成されるバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-167">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-168">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetBytes%2A>アプリケーションが使用するには、結果のバイトを格納するには、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-168">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3d985-169">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-169">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3d985-170"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-170">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-171">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドを使用して Unicode 文字の配列をエンコードするために必要なバイト数を返す<xref:System.Text.ASCIIEncoding>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-171">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode an array of Unicode characters using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-172">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-172">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-173">
            <paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-173">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-174">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-174">-or-</span>
          </span>
          <span data-ttu-id="3d985-175">
            <paramref name="index" /> および <paramref name="count" /> は <paramref name="chars" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-175">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="3d985-176">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-176">-or-</span>
          </span>
          <span data-ttu-id="3d985-177">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-177">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3d985-178">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-178">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-179">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-179">-and-</span>
          </span>
          <span data-ttu-id="3d985-180">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-180">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d985-181">文字のセットをバイト シーケンスにエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-181">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3d985-182">エンコードする最初の文字へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-182">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3d985-183">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-183">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="3d985-184">結果のバイト シーケンスの書き込みを開始する位置へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-184">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3d985-185">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-185">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-186">指定した文字ポインターで始まる文字のセットを、指定したバイト ポインターを開始位置として格納されるバイト シーケンスにエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-186">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-187">
            <paramref name="bytes" /> によって示される位置に書き込まれる実際のバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-187">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-188">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetBytes%2A>アプリケーションが使用するには、結果のバイトを格納するには、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-188">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3d985-189">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-189">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3d985-190"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-190">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-191">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</span><span class="sxs-lookup"><span data-stu-id="3d985-191">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3d985-192">ここでは、データの量が非常に大きいため、小さなブロックに分割する必要がある場合、アプリケーションで使用するか、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>メソッドまたは<xref:System.Text.ASCIIEncoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="3d985-192">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3d985-193"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-193"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-194">U + 007F よりも大きい任意の Unicode 文字が ASCII の疑問符 () に変換されます ("?")。</span><span class="sxs-lookup"><span data-stu-id="3d985-194">Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-195">セキュリティ上の理由から、使用するアプリケーションが推奨<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>し、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-195">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-196">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-196">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d985-197">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-197">-or-</span>
          </span>
          <span data-ttu-id="3d985-198">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-198">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-199">
            <paramref name="charCount" /> または <paramref name="byteCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-199">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d985-200">
            <paramref name="byteCount" /> が結果のバイト数より少なくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-200">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3d985-201">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-201">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-202">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-202">-and-</span>
          </span>
          <span data-ttu-id="3d985-203">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-203">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d985-204">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-204">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3d985-205">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-205">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3d985-206">エンコード対象の文字のセットを格納している文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-206">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="3d985-207">エンコードする最初の文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-207">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3d985-208">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-208">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="3d985-209">結果のバイト シーケンスを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-209">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3d985-210">結果のバイト シーケンスを書き込む開始位置のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-210">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-211">指定した文字配列に格納されている文字のセットを指定したバイト配列にエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-211">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-212">
            <paramref name="bytes" /> に書き込まれた実際のバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-212">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-213">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetBytes%2A>アプリケーションが使用するには、結果のバイトを格納するには、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-213">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3d985-214">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-214">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3d985-215"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-215">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-216">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</span><span class="sxs-lookup"><span data-stu-id="3d985-216">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3d985-217">ここでは、データの量が非常に大きいため、小さなブロックに分割する必要がある場合、アプリケーションで使用するか、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>メソッドまたは<xref:System.Text.ASCIIEncoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="3d985-217">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3d985-218"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-218"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-219">U + 007F よりも大きい任意の Unicode 文字が ASCII の疑問符 () としてエンコードされます ("?")。</span><span class="sxs-lookup"><span data-stu-id="3d985-219">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-220">セキュリティ上の理由から、使用するアプリケーションが推奨<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>し、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-220">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-221">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetBytes%2A>メソッドを文字列から文字の範囲をエンコードし、バイト配列内の要素の範囲内でエンコードされた文字を格納します。</span><span class="sxs-lookup"><span data-stu-id="3d985-221">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-222">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-222">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d985-223">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-223">-or-</span>
          </span>
          <span data-ttu-id="3d985-224">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-224">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-225">
            <paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-225">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-226">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-226">-or-</span>
          </span>
          <span data-ttu-id="3d985-227">
            <paramref name="charIndex" /> および <paramref name="charCount" /> は <paramref name="chars" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-227">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="3d985-228">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-228">-or-</span>
          </span>
          <span data-ttu-id="3d985-229">
            <paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-229">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d985-230">
            <paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-230">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3d985-231">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-231">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-232">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-232">-and-</span>
          </span>
          <span data-ttu-id="3d985-233">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-233">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3d985-234">エンコード対象の文字のセットを格納している <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-234">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="3d985-235">エンコードする最初の文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-235">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3d985-236">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-236">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="3d985-237">結果のバイト シーケンスを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-237">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3d985-238">結果のバイト シーケンスを書き込む開始位置のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-238">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-239">指定した <see cref="T:System.String" /> の文字セットを、指定したバイト配列にエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-239">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-240">
            <paramref name="bytes" /> に書き込まれた実際のバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-240">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-241">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetBytes%2A>アプリケーションが使用するには、結果のバイトを格納するには、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-241">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3d985-242">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-242">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3d985-243"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-243">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-244">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</span><span class="sxs-lookup"><span data-stu-id="3d985-244">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3d985-245">ここでは、データの量が非常に大きいため、小さなブロックに分割する必要がある場合、アプリケーションで使用するか、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>メソッドまたは<xref:System.Text.ASCIIEncoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="3d985-245">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3d985-246"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-246"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-247">U + 007F よりも大きい任意の Unicode 文字が ASCII の疑問符 () としてエンコードされます ("?")。</span><span class="sxs-lookup"><span data-stu-id="3d985-247">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-248">セキュリティ上の理由から、使用するアプリケーションが推奨<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>し、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-248">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-249">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetBytes%2A>範囲の Unicode 文字配列から要素をエンコードおよびバイト配列内の要素の範囲内でエンコードされたバイトを格納するメソッド。</span><span class="sxs-lookup"><span data-stu-id="3d985-249">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-250">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-250">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d985-251">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-251">-or-</span>
          </span>
          <span data-ttu-id="3d985-252">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-252">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-253">
            <paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-253">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-254">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-254">-or-</span>
          </span>
          <span data-ttu-id="3d985-255">
            <paramref name="charIndex" /> および <paramref name="charCount" /> は <paramref name="chars" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-255">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="3d985-256">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-256">-or-</span>
          </span>
          <span data-ttu-id="3d985-257">
            <paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-257">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d985-258">
            <paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-258">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3d985-259">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-259">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-260">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-260">-and-</span>
          </span>
          <span data-ttu-id="3d985-261">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-261">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d985-262">バイト シーケンスをデコードすることによって生成される文字数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-262">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3d985-263">デコードする最初のバイトへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-263">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3d985-264">デコードするバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-264">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-265">指定したバイト ポインターで始まるバイト シーケンスをデコードすることによって生成される文字数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-265">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-266">指定したバイト シーケンスをデコードすることによって生成される文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-266">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-267">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetChars%2A>アプリケーションが使用するには、結果の文字を格納するには、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-267">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3d985-268">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-268">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3d985-269"><xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-269">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-270">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-270">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-271">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-271">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-272">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-272">-or-</span>
          </span>
          <span data-ttu-id="3d985-273">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-273">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3d985-274">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-274">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-275">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-275">-and-</span>
          </span>
          <span data-ttu-id="3d985-276">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-276">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d985-277">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-277">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3d985-278">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-278">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3d985-279">デコード対象のバイト シーケンスが格納されたバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-279">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3d985-280">デコードする最初のバイトのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-280">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3d985-281">デコードするバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-281">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-282">指定したバイト配列からバイト シーケンスをデコードすることによって生成される文字数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-282">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-283">指定したバイト シーケンスをデコードすることによって生成される文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-283">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-284">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetChars%2A>アプリケーションが使用するには、結果の文字を格納するには、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-284">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3d985-285">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-285">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3d985-286"><xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-286">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-287">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>バイト配列内の要素の範囲をデコードすることによって生成される文字数を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="3d985-287">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-288">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-288">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-289">
            <paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-289">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-290">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-290">-or-</span>
          </span>
          <span data-ttu-id="3d985-291">
            <paramref name="index" /> および <paramref name="count" /> は <paramref name="bytes" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-291">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="3d985-292">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-292">-or-</span>
          </span>
          <span data-ttu-id="3d985-293">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-293">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3d985-294">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-295">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-295">-and-</span>
          </span>
          <span data-ttu-id="3d985-296">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-296">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d985-297">バイト シーケンスを文字のセットにデコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-297">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3d985-298">デコードする最初のバイトへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-298">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3d985-299">デコードするバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-299">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="3d985-300">結果の文字セットの書き込みを開始する位置へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-300">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3d985-301">書き込む文字の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-301">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-302">指定したバイト ポインターで始まるバイト シーケンスを、指定した文字ポインターを開始位置として格納される文字のセットにデコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-302">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-303">
            <paramref name="chars" /> によって示される位置に書き込まれる実際の文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-303">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-304">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetChars%2A>アプリケーションが使用するには、結果の文字を格納するには、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-304">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3d985-305">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-305">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3d985-306"><xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-306">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-307">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</span><span class="sxs-lookup"><span data-stu-id="3d985-307">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3d985-308">ここでは、データの量が非常に大きいため、小さなブロックに分割する必要がある場合、アプリケーションで使用するか、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>メソッドまたは<xref:System.Text.ASCIIEncoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="3d985-308">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3d985-309"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-309"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-310">16 進数の 0x7F よりも大きい任意のバイトが Unicode の疑問符 () としてデコード ("?")。</span><span class="sxs-lookup"><span data-stu-id="3d985-310">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-311">セキュリティ上の理由から、使用するアプリケーションが推奨<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>し、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-311">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-312">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-312">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d985-313">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-313">-or-</span>
          </span>
          <span data-ttu-id="3d985-314">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-314">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-315">
            <paramref name="byteCount" /> または <paramref name="charCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-315">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d985-316">
            <paramref name="charCount" /> が結果の文字数より少なくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-316">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3d985-317">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-317">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-318">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-318">-and-</span>
          </span>
          <span data-ttu-id="3d985-319">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-319">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d985-320">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-320">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3d985-321">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-321">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3d985-322">デコード対象のバイト シーケンスが格納されたバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-322">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3d985-323">デコードする最初のバイトのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-323">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3d985-324">デコードするバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-324">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="3d985-325">結果の文字のセットを格納する文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-325">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="3d985-326">結果の文字のセットを書き込む開始位置のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-326">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-327">指定したバイト配列に格納されているバイト シーケンスを指定した文字配列にデコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-327">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-328">
            <paramref name="chars" /> に書き込まれた実際の文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-328">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-329">必要な正確な配列のサイズを計算する<xref:System.Text.ASCIIEncoding.GetChars%2A>アプリケーションが使用するには、結果の文字を格納するには、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-329">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3d985-330">配列の最大サイズを計算するアプリケーションを使用する必要があります<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-330">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3d985-331"><xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドは、一般に、メモリの割り当てを使用するときに、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-331">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-332">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</span><span class="sxs-lookup"><span data-stu-id="3d985-332">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3d985-333">ここでは、データの量が非常に大きいため、小さなブロックに分割する必要がある場合、アプリケーションで使用するか、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>メソッドまたは<xref:System.Text.ASCIIEncoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="3d985-333">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3d985-334"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-334"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-335">16 進数の 0x7F よりも大きい任意のバイトが Unicode の疑問符 () としてデコード ("?")。</span><span class="sxs-lookup"><span data-stu-id="3d985-335">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-336">セキュリティ上の理由から、使用するアプリケーションが推奨<xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>し、エラーの検出を有効にします。</span><span class="sxs-lookup"><span data-stu-id="3d985-336">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-337">次の例では、バイト配列から要素の範囲をデコードし、一連の Unicode 文字配列内の要素の結果を格納する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3d985-337">The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-338">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-338">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d985-339">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-339">-or-</span>
          </span>
          <span data-ttu-id="3d985-340">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-340">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-341">
            <paramref name="byteIndex" />、<paramref name="byteCount" />、または <paramref name="charIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-341">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-342">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-342">-or-</span>
          </span>
          <span data-ttu-id="3d985-343">
            <paramref name="byteindex" /> および <paramref name="byteCount" /> は <paramref name="bytes" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-343">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="3d985-344">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-344">-or-</span>
          </span>
          <span data-ttu-id="3d985-345">
            <paramref name="charIndex" /> が <paramref name="chars" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-345">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d985-346">
            <paramref name="chars" /> には、<paramref name="charIndex" /> から配列の末尾までに十分なサイズがなく、結果の文字を格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-346">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3d985-347">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-347">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-348">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-348">-and-</span>
          </span>
          <span data-ttu-id="3d985-349">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-349">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="aSCIIEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d985-350">ASCII でエンコードされたバイト シーケンスを Unicode 文字のシーケンスに変換するデコーダーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-350">Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-351">ASCII でエンコードされたバイト シーケンスを Unicode 文字のシーケンスに変換する <see cref="T:System.Text.Decoder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-351">A <see cref="T:System.Text.Decoder" /> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-352"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>メソッドと同様の方法で、文字のシーケンシャル ブロックにバイトのシーケンシャル ブロックを変換する、<xref:System.Text.ASCIIEncoding.GetChars%2A>このクラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3d985-352">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="3d985-353">ただし、<xref:System.Text.Decoder>のブロックをまたぐバイト シーケンスが正しくデコードするための呼び出しの間の状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="3d985-353">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="3d985-354"><xref:System.Text.Decoder>もデータ ブロックの末尾にある後続バイトが保持され、[次へ] のデコード操作で末尾のバイトを使用します。</span><span class="sxs-lookup"><span data-stu-id="3d985-354">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="3d985-355">そのため、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>と<xref:System.Text.ASCIIEncoding.GetEncoder%2A>は完全なデータ ストリームではなくデータのブロックを頻繁にこれらの操作を処理するためにネットワーク転送と、ファイル操作に便利です。</span><span class="sxs-lookup"><span data-stu-id="3d985-355">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="3d985-356">エンコーディングの理解</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-356">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="aSCIIEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d985-357">Unicode 文字のシーケンスを ASCII でエンコードされたバイト シーケンスに変換するエンコーダーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-357">Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-358">Unicode 文字のシーケンスを ASCII でエンコードされたバイト シーケンスに変換する <see cref="T:System.Text.Encoder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-358">An <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-359"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType>メソッドと同様の方法で、バイトのブロックをシーケンシャルに文字のシーケンシャル ブロックを変換する、<xref:System.Text.ASCIIEncoding.GetBytes%2A>このクラスのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3d985-359">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="3d985-360">ただし、<xref:System.Text.Encoder>のブロックをまたぐ文字シーケンスを正しくエンコードすることができますので、呼び出しの間の状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="3d985-360">However, an <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="3d985-361"><xref:System.Text.Encoder>も末尾の保持のデータ ブロックの末尾に文字し、末尾の文字を次のエンコードの操作に使用されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-361">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="3d985-362">たとえば、データ ブロック上位サロゲートで終了し、[次へ] のデータ ブロックに一致する下位サロゲートがあります。</span><span class="sxs-lookup"><span data-stu-id="3d985-362">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="3d985-363">そのため、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>と<xref:System.Text.ASCIIEncoding.GetEncoder%2A>は完全なデータ ストリームではなくデータのブロックを頻繁にこれらの操作を処理するためにネットワーク転送と、ファイル操作に便利です。</span><span class="sxs-lookup"><span data-stu-id="3d985-363">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
          <span data-ttu-id="3d985-364">エンコーディングの理解</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-364">Understanding Encodings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="3d985-365">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-365">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-366">指定した文字数をエンコードすることによって生成される最大バイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-366">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-367">指定した文字数をエンコードすることによって生成される最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-367">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-368"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドで必要な正確な配列のサイズを計算、<xref:System.Text.ASCIIEncoding.GetBytes%2A>は結果のバイトを格納する方法、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは配列の最大サイズを計算します。</span><span class="sxs-lookup"><span data-stu-id="3d985-368">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to store the resulting bytes, whereas the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="3d985-369"><xref:System.Text.ASCIIEncoding.GetByteCount%2A>メソッドは一般に、メモリが少ないを割り当てますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-369">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allocates less memory, but the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-370"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 現在選択されているは、最悪のケースを含め、最悪の番号は、<xref:System.Text.EncoderFallback>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-370"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span>  <span data-ttu-id="3d985-371">置換フォールバックが大きくなる可能性の文字列を選択した場合<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>大きな値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="3d985-371">If you choose a replacement fallback with a potentially large string, <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="3d985-372"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>メソッドが、前のエンコード操作から潜在的なサロゲートが残っていると見なします。</span><span class="sxs-lookup"><span data-stu-id="3d985-372">The <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method considers potential leftover surrogates from a previous encoding operation.</span></span> <span data-ttu-id="3d985-373">その結果場合、<xref:System.Text.ASCIIEncoding>オブジェクトは、既定値の置換フォールバックを使用して、置換フォールバックのカスタムが可能なフォールバック文字を 1 つで定義されている場合、メソッドを返しますまたは`charCount`+ 1 です。</span><span class="sxs-lookup"><span data-stu-id="3d985-373">As a result, if the <xref:System.Text.ASCIIEncoding> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns `charCount` + 1.</span></span> <span data-ttu-id="3d985-374">場合、<xref:System.Text.ASCIIEncoding>オブジェクトは、1 つ以上の可能なフォールバック文字を置換フォールバックを使用するメソッドを返します*n* \* (`charCount` + 1) ここで、 *n*フォールバックの最大数は、文字。</span><span class="sxs-lookup"><span data-stu-id="3d985-374">If the <xref:System.Text.ASCIIEncoding> object uses a replacement fallback with more than one possible fallback character, the method returns *n* \* (`charCount` + 1), where *n* is the maximum number of fallback characters.</span></span>  
  
 <span data-ttu-id="3d985-375"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 関係を持たない<xref:System.Text.ASCIIEncoding.GetChars%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-375"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetChars%2A>.</span></span> <span data-ttu-id="3d985-376">アプリケーションで使用するような関数が必要なかどうか<xref:System.Text.ASCIIEncoding.GetChars%2A>、どちらを使用する<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-376">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetChars%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d985-377">`GetMaxByteCount(N)` 同じ値とは限りません`N* GetMaxByteCount(1)`します。</span><span class="sxs-lookup"><span data-stu-id="3d985-377">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-378">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>指定数の文字をエンコードするために必要なバイト数を計算するメソッド。</span><span class="sxs-lookup"><span data-stu-id="3d985-378">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method to calculate the bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-379">
            <paramref name="charCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-379">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-380">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-380">-or-</span>
          </span>
          <span data-ttu-id="3d985-381">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-381">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="3d985-382">デコードするバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-382">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-383">指定したバイト数をデコードすることによって生成される最大文字数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-383">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-384">指定したバイト数をデコードすることによって生成される最大文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-384">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-385"><xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドで必要な正確な配列のサイズを計算、 <xref:System.Text.ASCIIEncoding.GetChars%2A> 、その結果を格納する方法の文字は、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドは配列の最大サイズを計算します。</span><span class="sxs-lookup"><span data-stu-id="3d985-385">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetChars%2A> method to store the resulting characters, whereas  the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="3d985-386"><xref:System.Text.ASCIIEncoding.GetCharCount%2A>メソッドが一般に、メモリが少ないを割り当てるときに、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドは通常、高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="3d985-386">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3d985-387"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 現在選択されているは、最悪のケースを含む、最悪の数を取得<xref:System.Text.DecoderFallback>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-387"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="3d985-388">デコーダーのフォールバックが存在する場合の最大のフォールバック長を持つ*n*、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドを返します。 *n* \* `byteCount`します。</span><span class="sxs-lookup"><span data-stu-id="3d985-388">If a decoder fallback is present that has a maximum fallback length of *n*, the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method returns *n* \* `byteCount`.</span></span>  
  
 <span data-ttu-id="3d985-389"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 関係を持たない<xref:System.Text.ASCIIEncoding.GetBytes%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-389"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="3d985-390">アプリケーションで使用するような関数が必要なかどうか<xref:System.Text.ASCIIEncoding.GetBytes%2A>、どちらを使用する<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-390">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetBytes%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d985-391">`GetMaxCharCount(N)` 同じ値とは限りません`N* GetMaxCharCount(1)`します。</span><span class="sxs-lookup"><span data-stu-id="3d985-391">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-392">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>メソッドを指定したバイト数をデコードするために必要な文字の最大数を計算します。</span><span class="sxs-lookup"><span data-stu-id="3d985-392">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method to calculate the maximum number of characters needed to decode a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-393">
            <paramref name="byteCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-393">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-394">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-394">-or-</span>
          </span>
          <span data-ttu-id="3d985-395">結果のバイト数が、整数として返すことのできる最大数を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-395">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] -&gt; string" Usage="aSCIIEncoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 byteIndex, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), byteIndex As Integer, byteCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="aSCIIEncoding.GetString (bytes, byteIndex, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3d985-396">デコード対象のバイト シーケンスが格納されたバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-396">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3d985-397">デコードする最初のバイトのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-397">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3d985-398">デコードするバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-398">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d985-399">バイト配列に格納されているある範囲のバイトを文字列にデコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-399">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d985-400">指定したバイト シーケンスのデコード結果が格納されている <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-400">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-401">シーケンシャル ブロック内でのみ使用できるは、ストリームから読み取られるデータなど、変換するデータ。</span><span class="sxs-lookup"><span data-stu-id="3d985-401">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3d985-402">ここでは、データの量が非常に大きいため、小さなブロックに分割する必要がある場合、アプリケーションで使用するか、<xref:System.Text.Decoder>または<xref:System.Text.Encoder>によって提供される、<xref:System.Text.ASCIIEncoding.GetDecoder%2A>メソッドまたは<xref:System.Text.ASCIIEncoding.GetEncoder%2A>メソッド、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="3d985-402">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3d985-403"><xref:System.Text.ASCIIEncoding> エラーの検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="3d985-403"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3d985-404">16 進数の 0x7F よりも大きい任意のバイトが Unicode の疑問符 () としてデコード ("?")。</span><span class="sxs-lookup"><span data-stu-id="3d985-404">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3d985-405">セキュリティ上の理由から、使用する必要があります、 <xref:System.Text.UTF8Encoding>、 <xref:System.Text.UnicodeEncoding>、または<xref:System.Text.UTF32Encoding>クラスを使用する代わりに、エラーの検出を有効にし、<xref:System.Text.ASCIIEncoding>クラス。</span><span class="sxs-lookup"><span data-stu-id="3d985-405">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> classes and enable error detection instead of using the <xref:System.Text.ASCIIEncoding> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d985-406">次の例では、使用する方法、<xref:System.Text.ASCIIEncoding.GetString%2A>にバイト配列に変換するメソッド、<xref:System.String>します。</span><span class="sxs-lookup"><span data-stu-id="3d985-406">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetString%2A> method to convert a byte array into a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CPP/getstring-byte[].cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CS/getstring-byte[].cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/VB/getstring-byte[].vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d985-407">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-407">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d985-408">
            <paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-408">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d985-409">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-409">-or-</span>
          </span>
          <span data-ttu-id="3d985-410">
            <paramref name="index" /> および <paramref name="count" /> は <paramref name="bytes" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-410">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3d985-411">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-411">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3d985-412">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-412">-and-</span>
          </span>
          <span data-ttu-id="3d985-413">
            <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-413">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public override bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d985-414">現在のエンコーディングが 1 バイトのコード ポイントを使用するかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-414">Gets a value indicating whether the current encoding uses single-byte code points.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d985-415">このプロパティは常に <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d985-415">This property is always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d985-416">使用する代わりに、<xref:System.Text.ASCIIEncoding.IsSingleByte%2A>エンコード操作およびデコード操作の文字配列のサイズをバイト配列のサイズを決定するプロパティ (バイト配列のサイズはようになど<xref:System.Text.ASCIIEncoding.IsSingleByte%2A>\* する文字の数エンコード) を呼び出す必要があります、<xref:System.Text.ASCIIEncoding.GetByteCount%2A>または<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>エンコード操作のメソッドと<xref:System.Text.ASCIIEncoding.GetCharCount%2A>または<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>デコード操作のメソッド。</span><span class="sxs-lookup"><span data-stu-id="3d985-416">Instead of using the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* the number of characters to be encoded), you should call the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method for encoding operations and the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method for decoding operations.</span></span> <span data-ttu-id="3d985-417">これらのメソッドは、<xref:System.Text.ASCIIEncoding>に必要な配列のサイズを計算するときにアカウントのオブジェクトの置換フォールバック ストラテジです。</span><span class="sxs-lookup"><span data-stu-id="3d985-417">These methods takes the <xref:System.Text.ASCIIEncoding> object's replacement fallback strategy into account when calculating the required array size.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>