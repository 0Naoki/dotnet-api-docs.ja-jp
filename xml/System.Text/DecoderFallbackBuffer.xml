<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c35b585fc3df6974d13a06fcf1ecc95b1f6e884" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231014" /></Metadata><TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type DecoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>フォールバック ハンドラーが入力バイト シーケンスをデコードできないときに、デコーダーに別の文字列を返せるようにするためのバッファーを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンコーディングは、Unicode 文字とエンコードされたバイトシーケンスとの間のマッピングを定義します。 入力バイトシーケンスを出力文字に変換するデコード操作は、特定のバイトシーケンスに対してマッピングが定義されていない場合に失敗します。  
  
 変換を実行できない場合、.NET Framework はフォールバックと呼ばれるエラー処理機構を提供します。 すべてのデコーダーフォールバックハンドラーは、次のものを実装する必要があります。  
  
-   デコーダーフォールバック。 <xref:System.Text.DecoderFallback>クラスから派生したクラスによって表されます。  
  
-   デコーダーフォールバックバッファー。変換操作に文字列を返すことができる<xref:System.Text.DecoderFallbackBuffer>クラスから派生した型によって表されます。  
  
 フォールバックでは、変換エラーを処理するために3つの方法を使用できます。  
  
-   最適マッピング。 デコーダーフォールバックバッファーは、入力バイトシーケンスに対する近似値を表す文字列を返すことができます。 .NET Framework には、最適な<xref:System.Text.DecoderFallbackBuffer>パブリック実装が用意されていません。  
  
-   代わりに. デコーダーフォールバックバッファーは、バイトシーケンスをデコードできなかったことを示す疑問符 ("?") などの文字列を返すことができます。 .NET Framework では、クラス<xref:System.Text.DecoderReplacementFallback>と<xref:System.Text.DecoderReplacementFallbackBuffer>クラスは、パブリックな置換フォールバックバッファーの実装を提供します。 <xref:System.Text.DecoderReplacementFallback>クラスのコンストラクターを使用すると、置換文字列を定義できます。  
  
-   例外。 この<xref:System.Text.DecoderFallbackBuffer>実装では、バイトシーケンスをデコードできないことを示す例外がスローされ、デコード操作が終了します。 この場合、フォールバックハンドラーは<xref:System.Text.DecoderFallbackBuffer>実装を提供する必要がありますが、デコーダーに文字列を返しません。 .NET Framework では、クラス<xref:System.Text.DecoderExceptionFallback>と<xref:System.Text.DecoderExceptionFallbackBuffer>クラスは、バイトシーケンスをデコードできない場合<xref:System.Text.DecoderFallbackException>にをスローするパブリック例外フォールバックの実装を提供します。  
  
 <xref:System.Text.DecoderFallbackBuffer>実装内のバッファーは、デコーダーフォールバックに応じてデコーダーに返される文字列全体を表します。 通常、実装には、デコーダーに返す次の文字のインデックスや、返される残りの文字数など、状態情報も含まれます。 は<xref:System.Text.DecoderFallbackBuffer>抽象クラスであるため、少なくとも次のメンバーを実装するための派生クラスが必要です。  
  
-   <xref:System.Text.DecoderFallbackBuffer.Fallback%2A>メソッド。バイトシーケンスをデコードできないときにデコーダーによって呼び出されます。 デコーダーは、2つの情報をフォールバックバッファーの実装に渡します。デコードできなかったバイトを格納する配列と、入力バイト配列内の最初のバイトのインデックスです。 デコーダーフォールバック例外ハンドラーでは、このメソッドで例外がスローされます。 それ以外の場合、 `true`メソッドはフォールバックを提供するか`false` 、そうでない場合はを返します。  
  
-   メソッド。 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A>メソッドがを返し`true`た場合にデコーダーによって繰り返し呼び出されます。 <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> 後続の呼び出しでは、ハンドラーはバッファー内の各文字を返す必要があります。 すべての文字が返された場合は、U + 0000 を返します。 例外フォールバックハンドラーは常に U + 0000 を返します。  
  
-   メソッド<xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> 。このメソッドは、ポインターをバッファー内の前の位置に移動しようとし、移動が成功したかどうかを示します。 例外ハンドラーは常に`false`を返します。  
  
-   <xref:System.Text.DecoderFallbackBuffer.Remaining%2A>プロパティ。デコーダーに返される残りの文字数を示します。 例外フォールバックハンドラーは常に0を返します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">.NET Framework における文字エンコーディング</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Text.DecoderFallbackBuffer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : byte[] * int -&gt; bool" Usage="decoderFallbackBuffer.Fallback (bytesUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">入力バイト配列。</param>
        <param name="index"><paramref name="bytesUnknown" /> におけるバイトのインデックス位置。</param>
        <summary>派生クラスでオーバーライドされた場合、指定した入力バイト シーケンスを処理するためのフォールバック バッファーを確保します。</summary>
        <returns>フォールバック バッファーが <paramref name="bytesUnknown" /> を処理できる場合は <see langword="true" />、フォールバック バッファーが <paramref name="bytesUnknown" /> を無視する場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 、 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 、<xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>および<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>の各メソッドは、デコードできない不明な入力バイトシーケンスが検出された場合、を呼び出します。 <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> 戻り値がの`true`場合は、フォールバックバッファーが入力バイトシーケンスを処理できることを示します。これにより<xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> 、呼び出し元のメソッドがメソッドを呼び出し、フォールバックバッファーの各文字を取得します。 個々のバイトを処理しないため、 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A>例外フォールバックハンドラーのメソッドは例外をスローします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="decoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合、フォールバック バッファーの次の文字を取得します。</summary>
        <returns>フォールバック バッファーの次の文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作によって入力<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>に不明なバイトシーケンスが検出された場合、デコード操作はメソッドを呼び出します。 メソッドから<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>が返さ`true`れた場合は、不明な入力をデコードする代わりに、出力に挿入できる代替文字列が存在します。 デコード操作は、 <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A>メソッドを繰り返し呼び出し、置換文字列を一度に1文字ずつ取得します。 フォールバックバッファー内のすべての文字がデコーダーに返されると、メソッドは U + 0000 を返す必要があります。  
  
 例外フォールバックハンドラーの場合、メソッド<xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A>は U + 0000 を返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="decoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合、<see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> メソッドに対する次の呼び出しで、データ バッファーにおける現在の文字位置の前の文字位置に移動します。</summary>
        <returns><see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> 操作が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例外フォールバックハンドラーはを返す`false`必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合、現在の <see cref="T:System.Text.DecoderFallbackBuffer" /> オブジェクト内に処理されずに残っている文字数を取得します。</summary>
        <value>現在のフォールバック バッファーに処理されずに残っている文字数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 が<xref:System.Text.DecoderFallbackBuffer.Fallback%2A> 0 以外`true`の<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>値の場合、メソッドはを返します。  
  
 例外フォールバックハンドラーの場合、メソッド<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>は0を返す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このフォールバック バッファーに関連するすべてのデータおよびステータス情報を初期化します。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Text.DecoderFallbackBuffer.Reset" />メソッドを呼び出した後、 <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" />プロパティは0を返し、 <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" />メソッドは U + 0000 を返す必要が<see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" />あり、メソッド<see langword="false" />はを返す必要があります。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
