<Type Name="Encoder" FullName="System.Text.Encoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="935e8a3f446a4bf08e1efb7afb01e36886d1cd6f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Encoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoder abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1aa21-101">文字のセットをバイトのシーケンスに変換します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1aa21-101">Converts a set of characters into a sequence of bytes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-102">実装のインスタンスを取得する、<xref:System.Text.Encoder>クラス、アプリケーションで使用する必要があります、<xref:System.Text.Encoding.GetEncoder%2A>のメソッド、<xref:System.Text.Encoding>実装します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-102">To obtain an instance of an implementation of the <xref:System.Text.Encoder> class, the application should use the <xref:System.Text.Encoding.GetEncoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
 <span data-ttu-id="1aa21-103"><xref:System.Text.Encoder.GetByteCount%2A>メソッドでは、Unicode 文字のセットをエンコードで発生するまでのバイト数を決定し、<xref:System.Text.Encoder.GetBytes%2A>メソッドでは、実際のエンコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-103">The <xref:System.Text.Encoder.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoder.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="1aa21-104">いくつかのバージョンのどちらの方法で使用できる、<xref:System.Text.Encoder>クラスです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-104">There are several versions of both of these methods available in the <xref:System.Text.Encoder> class.</span></span> <span data-ttu-id="1aa21-105">詳細については、「<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1aa21-105">For more information, see <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1aa21-106">A<xref:System.Text.Encoder>オブジェクトは、連続する呼び出しの間の状態情報を保持`GetBytes`または<xref:System.Text.Decoder.Convert%2A>ことは正しくエンコードできますので、メソッドのブロックをまたぐシーケンスの文字です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-106">A <xref:System.Text.Encoder> object maintains state information between successive calls to `GetBytes` or <xref:System.Text.Decoder.Convert%2A> methods so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="1aa21-107"><xref:System.Text.Encoder>末尾が保存されますが、データ ブロックの最後の文字し、末尾の文字を使用して、次のエンコード操作もします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-107">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="1aa21-108">たとえば、データ ブロックが上位サロゲートで終了し、一致する下位サロゲートが [次へ] のデータ ブロック内にある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1aa21-108">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="1aa21-109">したがって、<xref:System.Text.Encoding.GetDecoder%2A>と<xref:System.Text.Encoding.GetEncoder%2A>の完全なデータ ストリームではなくデータ ブロックを頻繁にこれらの操作を処理するためにネットワーク転送、ファイル操作に便利です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-109">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1aa21-110">データを設定して、状態情報がフラッシュされることを確認が必要がありますのストリームをアプリケーションが完了すると、`flush`パラメーターを`true`適切なメソッドの呼び出しで。</span><span class="sxs-lookup"><span data-stu-id="1aa21-110">When the application is done with a stream of data it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="1aa21-111">例外が発生したかを呼び出してストリームをアプリケーションに切り替え場合、<xref:System.Text.Encoder.Reset%2A>の内部状態をクリアする、`Encoder`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1aa21-111">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Encoder.Reset%2A> to clear the internal state of the `Encoder` object.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="1aa21-112">バージョンの考慮事項</span><span class="sxs-lookup"><span data-stu-id="1aa21-112">Version Considerations</span></span>  
 <span data-ttu-id="1aa21-113">A<xref:System.Text.Decoder>または<xref:System.Text.Encoder>変換操作中に、オブジェクトをシリアル化することができます。</span><span class="sxs-lookup"><span data-stu-id="1aa21-113">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="1aa21-114">オブジェクトの状態が同じ .NET Framework のバージョンで逆シリアル化される場合、保持は、別のバージョンで逆シリアル化される場合を失われます。</span><span class="sxs-lookup"><span data-stu-id="1aa21-114">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1aa21-115">次の例では、指定されたエンコーディングを使用してバイトのブロックに Unicode 文字の配列を変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-115">The following example demonstrates how to convert an array of Unicode characters into blocks of bytes using a specified encoding.</span></span> <span data-ttu-id="1aa21-116">比較については、文字の配列は、まずを使用してエンコード<xref:System.Text.UTF7Encoding>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-116">For comparison, the array of characters is first encoded using <xref:System.Text.UTF7Encoding>.</span></span> <span data-ttu-id="1aa21-117">次に、文字の配列はエンコードを使用して、<xref:System.Text.Encoder>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-117">Next, the array of characters is encoded using an <xref:System.Text.Encoder>.</span></span>  
  
 [!code-cpp[System.Text.Encoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.Encoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.Encoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="1aa21-118">アプリケーションをこのクラスから継承するとき、すべてのメンバーをオーバーライドする必要があります。</span>
        <span class="sxs-lookup">
          <span data-stu-id="1aa21-118">When your application inherits from this class, it must override all the members.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoding" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-119">
            <see cref="T:System.Text.Encoder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-119">Initializes a new instance of the <see cref="T:System.Text.Encoder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-120">このクラスの実装のインスタンスを取得するアプリケーションを使用する必要があります、<xref:System.Text.Encoding.GetEncoder%2A>のメソッド、<xref:System.Text.Encoding>実装します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-120">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetEncoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1aa21-121">次の例では、新しい初期化するための 2 つの手法<xref:System.Text.Encoder>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="1aa21-121">The following example demonstrates two techniques for initializing a new <xref:System.Text.Encoder> instance.</span></span>  
  
 [!code-cpp[System.Text.Encoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Encoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Encoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-122">バッファーまたは配列に格納されている Unicode 文字を、エンコード済みバイト シーケンスに変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-122">Converts a buffer or array of Unicode characters to an encoded byte sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <param name="charsUsed">To be added.</param>
        <param name="bytesUsed">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (char* chars, int charCount, byte* bytes, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(char* chars, int charCount, System::Byte* bytes, int byteCount, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1aa21-123">UTF-16 でエンコードされた変換対象の文字の文字列のアドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-123">The address of a string of UTF-16 encoded characters to convert.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1aa21-124">変換する <c>chars</c> 内の文字の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-124">The number of characters in <c>chars</c> to convert.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1aa21-125">変換後のバイトを格納するバッファーのアドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-125">The address of a buffer to store the converted bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="1aa21-126">変換に使用する <c>bytes</c> 内の最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-126">The maximum number of bytes in <c>bytes</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="1aa21-127">これ以上データの変換を行わないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-127">
              <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="1aa21-128">このメソッドから制御が戻るときに、<c>chars</c> で変換に使用された文字数を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-128">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          </span>
          <span data-ttu-id="1aa21-129">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-129">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="1aa21-130">このメソッドから制御が戻るときに、変換に使用されたバイト数を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-130">When this method returns, contains the number of bytes that were used in the conversion.</span>
          </span>
          <span data-ttu-id="1aa21-131">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-131">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="1aa21-132">このメソッドから制御が戻るときに、<c>charCount</c> で指定したすべての文字が変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-132">When this method returns, contains <see langword="true" /> if all the characters specified by <c>charCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1aa21-133">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-133">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1aa21-134">バッファーに格納されている Unicode 文字をエンコード済みバイト シーケンスに変換し、その結果を別のバッファーに格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-134">Converts a buffer of Unicode characters to an encoded byte sequence and stores the result in another buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-135">注意して、<xref:System.Text.Encoder>オブジェクトへの呼び出しの間で状態を保存する<xref:System.Text.Encoder.Convert%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-135">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="1aa21-136">これを設定する必要があります、アプリケーションでは、データ ストリームの処理が終わったら、`flush`パラメーターを`true`状態情報がフラッシュされるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-136">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="1aa21-137">この設定では、エンコーダーは、データ ブロックの末尾に無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-137">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="1aa21-138">サロゲート ペアの上位サロゲートなどの論理ユニットの一部である残り処理後のデータは、現在のフォールバック設定に従って変換されます。</span><span class="sxs-lookup"><span data-stu-id="1aa21-138">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="1aa21-139">`Convert`メソッドが任意の量の入力のエンコードにはループ内で使用するように設計ファイルまたはストリームから読み取られるデータなどです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-139">The `Convert` method is designed to be used in a loop to encode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="1aa21-140">エンコード操作の出力は、固定サイズのバッファーに格納します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-140">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="1aa21-141"><xref:System.Text.Encoder.GetBytes%2A> 出力バッファーが十分でない場合、例外がスローされますが、<xref:System.Text.Encoder.Convert%2A>は、できるだけ多くの領域を入力し、読み取りと書き込みバイト数の文字を返します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-141"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="1aa21-142">参照してください、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>詳細コメントのトピックです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-142">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="1aa21-143">`completed`出力パラメーターは、入力バッファー内のすべてのデータが変換され、出力バッファーに格納されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-143">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="1aa21-144">このパラメーターに設定されている`false`で文字の数が指定されている場合、`charCount`パラメーターによって指定されたバイト数を超えずに変換できません、`byteCount`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1aa21-144">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="1aa21-145">状況では、アプリケーション、出力バッファーの内容を使用か、新しい出力バッファーを提供インクリメント、`chars`パラメーターで指定された文字の数によって、`charsUsed`パラメーター、まず、`Convert`残りの入力を処理するには、もう一度メソッド。</span><span class="sxs-lookup"><span data-stu-id="1aa21-145">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="1aa21-146">`completed`パラメーターを設定することも`false`場合でも、`charsUsed`と`charCount`パラメーターが等しい。</span><span class="sxs-lookup"><span data-stu-id="1aa21-146">The `completed` parameter can also be set to `false`, even though the `charsUsed` and `charCount` parameters are equal.</span></span> <span data-ttu-id="1aa21-147">内のデータが解決しない場合、このような状況が発生した、<xref:System.Text.Encoder>内に保存されていないオブジェクト、`chars`バッファー。</span><span class="sxs-lookup"><span data-stu-id="1aa21-147">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-148">
            <paramref name="chars" /> または <paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-148">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1aa21-149">
            <paramref name="charCount" /> または <paramref name="byteCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-149">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1aa21-150">出力バッファーが小さすぎて、変換した入力を格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-150">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="1aa21-151">出力バッファーは、<see cref="Overload:System.Text.Encoder.GetByteCount" /> メソッドで示されるサイズ以上である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-151">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-152">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-152">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-153">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-153">-and-</span>
          </span>
          <span data-ttu-id="1aa21-154">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-154">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1aa21-155">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-155">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1aa21-156">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-156">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex, int32 byteCount, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, byteCount As Integer, flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1aa21-157">変換する文字の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-157">An array of characters to convert.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="1aa21-158">変換する <c>chars</c> の最初の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-158">The first element of <c>chars</c> to convert.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1aa21-159">変換する <c>chars</c> の要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-159">The number of elements of <c>chars</c> to convert.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1aa21-160">変換後のバイトを格納する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-160">An array where the converted bytes are stored.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="1aa21-161">データを格納する <c>bytes</c> の最初の要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-161">The first element of <c>bytes</c> in which data is stored.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="1aa21-162">変換に使用する <c>bytes</c> 内の最大要素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-162">The maximum number of elements of <c>bytes</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="1aa21-163">これ以上データの変換を行わないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-163">
              <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="1aa21-164">このメソッドから制御が戻るときに、<c>chars</c> で変換に使用された文字数を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-164">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          </span>
          <span data-ttu-id="1aa21-165">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-165">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="1aa21-166">このメソッドから制御が戻るときに、変換の結果生成されたバイト数を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-166">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="1aa21-167">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-167">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="1aa21-168">このメソッドから制御が戻るときに、<c>charCount</c> で指定したすべての文字が変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-168">When this method returns, contains <see langword="true" /> if all the characters specified by <c>charCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1aa21-169">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-169">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1aa21-170">Unicode 文字の配列をエンコード済みバイト シーケンスに変換し、その結果をバイト配列に格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-170">Converts an array of Unicode characters to an encoded byte sequence and stores the result in an array of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-171">注意して、<xref:System.Text.Encoder>オブジェクトへの呼び出しの間で状態を保存する<xref:System.Text.Encoder.Convert%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-171">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="1aa21-172">これを設定する必要があります、アプリケーションでは、データ ストリームの処理が終わったら、`flush`パラメーターを`true`状態情報がフラッシュされるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-172">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="1aa21-173">この設定では、エンコーダーは、データ ブロックの末尾に無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-173">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="1aa21-174">サロゲート ペアの上位サロゲートなどの論理ユニットの一部である残り処理後のデータは、現在のフォールバック設定に従って変換されます。</span><span class="sxs-lookup"><span data-stu-id="1aa21-174">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="1aa21-175">`Convert`メソッドが、入力の任意の大きさをデコードするループ内で使用するため、ファイルまたはストリームから読み取られるデータなどです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-175">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="1aa21-176">エンコード操作の出力は、固定サイズのバッファーに格納します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-176">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="1aa21-177"><xref:System.Text.Encoder.GetBytes%2A> 出力バッファーが十分でない場合、例外がスローされますが、<xref:System.Text.Encoder.Convert%2A>は、できるだけ多くの領域を入力し、読み取りと書き込みバイト数の文字を返します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-177"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="1aa21-178">参照してください、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>詳細コメントのトピックです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-178">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="1aa21-179">`completed`出力パラメーターは、入力バッファー内のすべてのデータが変換され、出力バッファーに格納されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-179">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="1aa21-180">このパラメーターに設定されている`false`で文字の数が指定されている場合、`charCount`パラメーターによって指定されたバイト数を超えずに変換できません、`byteCount`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1aa21-180">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="1aa21-181">状況では、アプリケーション、出力バッファーの内容を使用か、新しい出力バッファーを提供インクリメント、`chars`パラメーターで指定された文字の数によって、`charsUsed`パラメーター、まず、`Convert`残りの入力を処理するには、もう一度メソッド。</span><span class="sxs-lookup"><span data-stu-id="1aa21-181">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="1aa21-182">`completed`パラメーターを設定することも`false`場合でも、`charsUsed`と`charCount`パラメーターが等しい。</span><span class="sxs-lookup"><span data-stu-id="1aa21-182">The `completed` parameter can also be set to `false`, even though the `charsUsed` and `charCount` parameters are equal.</span></span> <span data-ttu-id="1aa21-183">内のデータが解決しない場合、このような状況が発生した、<xref:System.Text.Encoder>内に保存されていないオブジェクト、`chars`バッファー。</span><span class="sxs-lookup"><span data-stu-id="1aa21-183">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1aa21-184">次の例では、 <xref:System.Text.Encoder.Convert%2A> utf-16 のファイルに変換するメソッドが、utf-8 文字列の文字を使用して、 <xref:System.Text.Decoder.Convert%2A> utf-8 文字を utf-16 文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-184">The following example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8, then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>  
  
 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-185">
            <paramref name="chars" /> または <paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-185">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1aa21-186">
            <paramref name="charIndex" />、<paramref name="charCount" />、<paramref name="byteIndex" />、または <paramref name="byteCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-186">
              <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1aa21-187">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-187">-or-</span>
          </span>
          <span data-ttu-id="1aa21-188">
            <paramref name="chars" /> - <paramref name="charIndex" /> の長さは <paramref name="charCount" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-188">The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          </span>
          <span data-ttu-id="1aa21-189">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-189">-or-</span>
          </span>
          <span data-ttu-id="1aa21-190">
            <paramref name="bytes" /> - <paramref name="byteIndex" /> の長さは <paramref name="byteCount" /> 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-190">The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1aa21-191">出力バッファーが小さすぎて、変換した入力を格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-191">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="1aa21-192">出力バッファーは、<see cref="Overload:System.Text.Encoder.GetByteCount" /> メソッドで示されるサイズ以上である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-192">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-193">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-193">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-194">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-194">-and-</span>
          </span>
          <span data-ttu-id="1aa21-195">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-195">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ Fallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-196">現在の <see cref="T:System.Text.EncoderFallback" /> オブジェクトの <see cref="T:System.Text.Encoder" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-196">Gets or sets a <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1aa21-197">
            <see cref="T:System.Text.EncoderFallback" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-197">A <see cref="T:System.Text.EncoderFallback" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-198"><xref:System.Text.EncoderFallback>オブジェクトは、文字をエンコード済みバイト シーケンスに変換できないときに呼び出されるエラー ハンドラーを表します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-198">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-199">設定操作の値が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-199">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1aa21-200">現在の <see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクトにまだエンコードされていないデータが含まれるため、設定操作に新しい値を代入できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-200">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object contains data that has not been encoded yet.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-201">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-201">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-202">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-202">-and-</span>
          </span>
          <span data-ttu-id="1aa21-203">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-203">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallbackBuffer ^ FallbackBuffer { System::Text::EncoderFallbackBuffer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-204">現在の <see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクトに関連付けられている <see cref="T:System.Text.Encoder" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-204">Gets the <see cref="T:System.Text.EncoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Encoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1aa21-205">
            <see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-205">A <see cref="T:System.Text.EncoderFallbackBuffer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-206"><xref:System.Text.Encoder.FallbackBuffer%2A>オブジェクトによって使用されるデータを表す、<xref:System.Text.EncoderFallback>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1aa21-206">The <xref:System.Text.Encoder.FallbackBuffer%2A> object represents data used by the <xref:System.Text.EncoderFallback> object.</span></span> <span data-ttu-id="1aa21-207"><xref:System.Text.EncoderFallback>オブジェクトは、文字をエンコード済みバイト シーケンスに変換できないときに呼び出されるエラー ハンドラーを表します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-207">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-208">派生クラスでオーバーライドされた場合、文字のセットをエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-208">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars, bool flush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count, bool flush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1aa21-209">エンコードする最初の文字へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-209">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1aa21-210">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-210">The number of characters to encode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="1aa21-211">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-211">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1aa21-212">派生クラスでオーバーライドされた場合、指定した文字ポインターから始まる文字のセットをエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-212">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
          <span data-ttu-id="1aa21-213">パラメーターでは、計算後にエンコーダーの内部状態をクリアするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-213">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1aa21-214">指定した文字、および内部バッファー内の文字をエンコードすることによって生成されるバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-214">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-215">このメソッドは、エンコーダーの状態には影響しません。</span><span class="sxs-lookup"><span data-stu-id="1aa21-215">This method does not affect the state of the encoder.</span></span>  
  
 <span data-ttu-id="1aa21-216">計算する正確な配列のサイズを<xref:System.Text.Encoder.GetBytes%2A>必要と結果のバイトを格納するアプリケーションを使用する必要があります<xref:System.Text.Encoder.GetByteCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-216">To calculate the exact array size that <xref:System.Text.Encoder.GetBytes%2A> requires to store the resulting bytes, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="1aa21-217">場合`GetBytes`で呼び出された`flush`'éý'`false`エンコーダーが内部バッファーにデータ ブロックの最後に末尾の文字を格納し、それらを次のエンコード操作で使用します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-217">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="1aa21-218">アプリケーションを呼び出す必要があります`GetByteCount`呼び出す前にすぐにデータのブロックに`GetBytes`同じブロックのため、前のブロックから文字の後続のすべてが含まれている計算にします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-218">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-219">
            <paramref name="chars" /> が <see langword="null" /> (Visual Basic .NET の場合は <see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-219">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1aa21-220">
            <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-220">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-221">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-221">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-222">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-222">-and-</span>
          </span>
          <span data-ttu-id="1aa21-223">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-223">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1aa21-224">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-224">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1aa21-225">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-225">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count, bool flush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1aa21-226">エンコード対象の文字のセットを格納している文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-226">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1aa21-227">エンコードする最初の文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-227">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1aa21-228">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-228">The number of characters to encode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="1aa21-229">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-229">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1aa21-230">派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセットをエンコードすることによって生成されるバイト数を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-230">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
          <span data-ttu-id="1aa21-231">パラメーターでは、計算後にエンコーダーの内部状態をクリアするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-231">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1aa21-232">指定した文字、および内部バッファー内の文字をエンコードすることによって生成されるバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-232">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-233">このメソッドは、エンコーダーの状態には影響しません。</span><span class="sxs-lookup"><span data-stu-id="1aa21-233">This method does not affect the state of the encoder.</span></span>  
  
 <span data-ttu-id="1aa21-234">計算する正確な配列のサイズを<xref:System.Text.Encoder.GetBytes%2A>必要と結果のバイトを格納するアプリケーションを使用する必要があります<xref:System.Text.Encoder.GetByteCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-234">To calculate the exact array size that <xref:System.Text.Encoder.GetBytes%2A> requires to store the resulting bytes, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="1aa21-235">場合`GetBytes`で呼び出された`flush`'éý'`false`エンコーダーが内部バッファーにデータ ブロックの最後に末尾の文字を格納し、それらを次のエンコード操作で使用します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-235">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="1aa21-236">アプリケーションを呼び出す必要があります`GetByteCount`呼び出す前にすぐにデータのブロックに`GetBytes`同じブロックのため、前のブロックから文字の後続のすべてが含まれている計算にします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-236">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1aa21-237">次のコード例を使用する方法を示しています、<xref:System.Text.Encoder.GetByteCount%2A>メソッドを使用して、Unicode 文字の配列をエンコードするために必要なバイト数を返す<xref:System.Text.Encoder>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-237">The following code example demonstrates how to use the <xref:System.Text.Encoder.GetByteCount%2A> method to return the number of bytes required to encode an array of characters using a Unicode <xref:System.Text.Encoder>.</span></span>  
  
 [!code-cpp[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-238">
            <paramref name="chars" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-238">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1aa21-239">
            <paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-239">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1aa21-240">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-240">-or-</span>
          </span>
          <span data-ttu-id="1aa21-241">
            <paramref name="index" /> および <paramref name="count" /> は <paramref name="chars" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-241">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-242">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-243">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-243">-and-</span>
          </span>
          <span data-ttu-id="1aa21-244">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-244">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-245">派生クラスでオーバーライドされた場合、文字のセットをバイト シーケンスにエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-245">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount, bool flush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1aa21-246">エンコードする最初の文字へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-246">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1aa21-247">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-247">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1aa21-248">結果のバイト シーケンスの書き込みを開始する位置へのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-248">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="1aa21-249">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-249">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="1aa21-250">変換後にエンコーダーの内部状態をクリアする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-250">
              <see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1aa21-251">派生クラスでオーバーライドされた場合、指定した文字ポインターで始まる文字のセット、および内部バッファー内の文字を、指定したバイト ポインターを開始位置として格納されるバイト シーケンスにエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-251">When overridden in a derived class, encodes a set of characters starting at the specified character pointer and any characters in the internal buffer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
          <span data-ttu-id="1aa21-252">パラメーターでは、変換後にエンコーダーの内部状態をクリアするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-252">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1aa21-253">
            <paramref name="bytes" /> パラメーターによって示される位置に書き込む実際のバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-253">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-254">注意して、<xref:System.Text.Encoder>オブジェクトへの呼び出しの間で状態を保存する<xref:System.Text.Encoder.GetBytes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-254">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.GetBytes%2A>.</span></span> <span data-ttu-id="1aa21-255">これを設定する必要があります、アプリケーションでは、データ ストリームの処理が終わったら、`flush`パラメーターを`true`最後の呼び出しで`GetBytes`状態情報がフラッシュされると、エンコード済みバイトが正しく終了しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-255">When the application is done with a stream of data, it should set the `flush` parameter to `true` in the last call to `GetBytes` to make sure that the state information is flushed and that the encoded bytes are properly terminated.</span></span> <span data-ttu-id="1aa21-256">この設定では、エンコーダーは、一致しないサロゲートや不完全な結合順序など、データ ブロックの末尾に無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-256">With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="1aa21-257">計算する正確なバッファーのサイズを`GetBytes`必要と結果の文字を格納するアプリケーションを使用する必要があります<xref:System.Text.Encoder.GetByteCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-257">To calculate the exact buffer size that `GetBytes` requires to store the resulting characters, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="1aa21-258">場合`GetBytes`で呼び出された`flush`'éý'`false`エンコーダーが内部バッファーにデータ ブロックの末尾にある末尾バイトを格納し、それらを次のエンコード操作で使用します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-258">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="1aa21-259">アプリケーションを呼び出す必要があります`GetByteCount`呼び出す前にすぐにデータのブロックに`GetBytes`同じブロックのため、前のブロックから文字の後続のすべてが含まれている計算にします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-259">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="1aa21-260">入力ストリームの数のセグメントに変換する、アプリケーションがある場合は、使用を検討して、<xref:System.Text.Encoder.Convert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-260">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Encoder.Convert%2A> method.</span></span> <span data-ttu-id="1aa21-261"><xref:System.Text.Encoder.GetBytes%2A> 出力バッファーが十分でない場合、例外がスローされますが、<xref:System.Text.Encoder.Convert%2A>は、できるだけ多くの領域を入力し、読み取りと書き込みバイト数の文字を返します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-261"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="1aa21-262">参照してください、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>詳細コメントのトピックです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-262">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-263">
            <paramref name="chars" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-263">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="1aa21-264">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-264">-or-</span>
          </span>
          <span data-ttu-id="1aa21-265">
            <paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-265">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1aa21-266">
            <paramref name="charCount" /> または <paramref name="byteCount" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-266">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1aa21-267">
            <paramref name="byteCount" /> が結果のバイト数より少なくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-267">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-268">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-268">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-269">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-269">-and-</span>
          </span>
          <span data-ttu-id="1aa21-270">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-270">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1aa21-271">直前の呼び出し元に対する完全な信頼が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-271">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1aa21-272">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-272">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, bool flush);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="1aa21-273">エンコード対象の文字のセットを格納している文字配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-273">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="1aa21-274">エンコードする最初の文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-274">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="1aa21-275">エンコードする文字数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-275">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="1aa21-276">結果のバイト シーケンスを格納するバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-276">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="1aa21-277">結果のバイト シーケンスを書き込む開始位置のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-277">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="1aa21-278">変換後にエンコーダーの内部状態をクリアする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-278">
              <see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1aa21-279">派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセット、および内部バッファー内の文字を、指定したバイト配列にエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-279">When overridden in a derived class, encodes a set of characters from the specified character array and any characters in the internal buffer into the specified byte array.</span>
          </span>
          <span data-ttu-id="1aa21-280">パラメーターでは、変換後にエンコーダーの内部状態をクリアするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-280">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1aa21-281">
            <paramref name="bytes" /> に書き込まれた実際のバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-281">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-282">注意して、<xref:System.Text.Encoder>オブジェクトへの呼び出しの間で状態を保存する<xref:System.Text.Encoder.GetBytes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-282">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.GetBytes%2A>.</span></span> <span data-ttu-id="1aa21-283">これを設定する必要があります、アプリケーションでは、データ ストリームの処理が終わったら、`flush`パラメーターを`true`最後の呼び出しで`GetBytes`状態情報がフラッシュされると、エンコード済みバイトが正しく終了しているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-283">When the application is done with a stream of data, it should set the `flush` parameter to `true` in the last call to `GetBytes` to make sure that the state information is flushed and that the encoded bytes are properly terminated.</span></span> <span data-ttu-id="1aa21-284">この設定では、エンコーダーは、一致しないサロゲートや不完全な結合順序など、データ ブロックの末尾に無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-284">With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="1aa21-285">計算する正確なバッファーのサイズを`GetBytes`必要と結果の文字を格納するアプリケーションを使用する必要があります<xref:System.Text.Encoder.GetByteCount%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-285">To calculate the exact buffer size that `GetBytes` requires to store the resulting characters, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="1aa21-286">場合`GetBytes`で呼び出された`flush`'éý'`false`エンコーダーが内部バッファーにデータ ブロックの末尾にある末尾バイトを格納し、それらを次のエンコード操作で使用します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-286">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="1aa21-287">アプリケーションを呼び出す必要があります`GetByteCount`呼び出す前にすぐにデータのブロックに`GetBytes`同じブロックのため、前のブロックから文字の後続のすべてが含まれている計算にします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-287">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="1aa21-288">入力ストリームの数のセグメントに変換する、アプリケーションがある場合は、使用を検討して、<xref:System.Text.Encoder.Convert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-288">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Encoder.Convert%2A> method.</span></span> <span data-ttu-id="1aa21-289"><xref:System.Text.Encoder.GetBytes%2A> 出力バッファーが十分でない場合、例外がスローされますが、<xref:System.Text.Encoder.Convert%2A>は、できるだけ多くの領域を入力し、読み取りと書き込みバイト数の文字を返します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-289"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="1aa21-290">参照してください、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>詳細コメントのトピックです。</span><span class="sxs-lookup"><span data-stu-id="1aa21-290">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1aa21-291">次の例では、文字配列から要素の範囲をエンコードおよびバイト配列の要素の範囲内でエンコードされたバイトを格納する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1aa21-291">The following example demonstrates how to encode a range of elements from a character array and store the encoded bytes in a range of elements in a byte array.</span></span> <span data-ttu-id="1aa21-292"><xref:System.Text.Encoder.GetByteCount%2A>メソッドを使用して必要な配列のサイズを決定を<xref:System.Text.Encoder.GetBytes%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-292">The <xref:System.Text.Encoder.GetByteCount%2A> method is used to determine the size of the array required by <xref:System.Text.Encoder.GetBytes%2A>.</span></span>  
  
 [!code-cpp[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1aa21-293">
            <paramref name="chars" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-293">
              <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="1aa21-294">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-294">-or-</span>
          </span>
          <span data-ttu-id="1aa21-295">
            <paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-295">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1aa21-296">
            <paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-296">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="1aa21-297">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-297">-or-</span>
          </span>
          <span data-ttu-id="1aa21-298">
            <paramref name="charIndex" /> および <paramref name="charCount" /> は <paramref name="chars" /> において有効な範囲を表していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-298">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="1aa21-299">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-299">-or-</span>
          </span>
          <span data-ttu-id="1aa21-300">
            <paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-300">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1aa21-301">
            <paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-301">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="1aa21-302">フォールバックが発生しました (詳細な説明は、「[.NET Framework における文字エンコーディング](~/docs/standard/base-types/character-encoding.md)」をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-302">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span>
          </span>
          <span data-ttu-id="1aa21-303">および</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-303">-and-</span>
          </span>
          <span data-ttu-id="1aa21-304">
            <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-304">
              <see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1aa21-305">派生クラスでオーバーライドされた場合、エンコーダーを初期状態に戻します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1aa21-305">When overridden in a derived class, sets the encoder back to its initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aa21-306">このメソッドの内部状態をクリアする、<xref:System.Text.Encoder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1aa21-306">This method clears the internal state of the <xref:System.Text.Encoder> object.</span></span> <span data-ttu-id="1aa21-307">メソッドを前回呼び出したときから保存された任意の状態情報をクリアする<xref:System.Text.Encoder.GetBytes%2A>または<xref:System.Text.Decoder.Convert%2A>など、後続の上位サロゲートなど、前のデータ ブロックの最後の文字です。</span><span class="sxs-lookup"><span data-stu-id="1aa21-307">The method clears any state information preserved from a previous call to <xref:System.Text.Encoder.GetBytes%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing characters at the end of the previous data block, such as an unmatched high surrogate.</span></span>  
  
 <span data-ttu-id="1aa21-308">アプリケーションを呼び出す必要があります、`Reset`メソッドによって例外がスローされた後でも同じエンコーダーを再利用する必要がある場合<xref:System.Text.Encoder.GetBytes%2A>または<xref:System.Text.Encoder.GetByteCount%2A>アプリケーションは、ストリームを切り替えた場合またはします。</span><span class="sxs-lookup"><span data-stu-id="1aa21-308">Your application should call the `Reset` method if it wants to reuse the same encoder even after an exception is thrown by <xref:System.Text.Encoder.GetBytes%2A> or <xref:System.Text.Encoder.GetByteCount%2A>, or if the application switches streams.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>