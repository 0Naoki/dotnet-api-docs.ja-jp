<Type Name="StringBuilder+ChunkEnumerator" FullName="System.Text.StringBuilder+ChunkEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e9b3ebab266ab975dc5a868912e7a6a8bed58be6" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68542451" /></Metadata><TypeSignature Language="C#" Value="public struct StringBuilder.ChunkEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit StringBuilder/ChunkEnumerator extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.StringBuilder.ChunkEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure StringBuilder.ChunkEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class StringBuilder::ChunkEnumerator" />
  <TypeSignature Language="F#" Value="type StringBuilder.ChunkEnumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="729b0-101"><see cref="T:System.Text.StringBuilder" /> インスタンスのチャンクに単純な反復処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="729b0-101">Supports simple iteration over the chunks of a <see cref="T:System.Text.StringBuilder" /> instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="729b0-102">は、 <xref:System.Text.StringBuilder.GetChunks%2A?displayProperty=nameWithType>メソッドによって返されます。 `ChunkEnumerator`</span><span class="sxs-lookup"><span data-stu-id="729b0-102">A `ChunkEnumerator` is returned by the <xref:System.Text.StringBuilder.GetChunks%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="729b0-103"><xref:System.Collections.IEnumerable>との両方のパターン<xref:System.Collections.IEnumerator>をサポートしているの`foreach`でC# 、または`For Each` Visual Basic でチャンクを列挙できます。</span><span class="sxs-lookup"><span data-stu-id="729b0-103">It supports both the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> patterns so that the chunks can be enumerated with `foreach` in C# or `For Each` in Visual Basic.</span></span>

<span data-ttu-id="729b0-104">`ChunkEnumerator`は、言語コンパイラがそれを使用してステートメントを`foreach`作成できるようにするパブリック構造体です。</span><span class="sxs-lookup"><span data-stu-id="729b0-104">`ChunkEnumerator` is a public structure so that language compilers can use it to build a `foreach` statement.</span></span> <span data-ttu-id="729b0-105">ただし、開発者は通常、明示的には使用しません (入れ子にされた型である理由です)。</span><span class="sxs-lookup"><span data-stu-id="729b0-105">However, developers typically don't use it explicitly (which is why it is a nested type).</span></span>

    ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;char&gt; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;char&gt; Current" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.ChunkEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ReadOnlyMemory(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;char&gt; Current { ReadOnlyMemory&lt;char&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : ReadOnlyMemory&lt;char&gt;" Usage="System.Text.StringBuilder.ChunkEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="729b0-106">チャンクと、コレクションの現在の位置を取得します。</span><span class="sxs-lookup"><span data-stu-id="729b0-106">Gets the chunk and the current position of the collection.</span></span></summary>
        <value><span data-ttu-id="729b0-107">コレクションの現在位置にあるチャンク。</span><span class="sxs-lookup"><span data-stu-id="729b0-107">The chunk at the current position of the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder.ChunkEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.StringBuilder/ChunkEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ChunkEnumerator.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As StringBuilder.ChunkEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder::ChunkEnumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Text.StringBuilder.ChunkEnumerator" Usage="chunkEnumerator.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder+ChunkEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="729b0-108"><see cref="T:System.Collections.IEnumerator" /> として <see langword="this" /> を返す <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="729b0-108">Provides an <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> implementation that returns <see langword="this" /> as the <see cref="T:System.Collections.IEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="729b0-109">チャンクの反復処理に使用できる列挙子オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="729b0-109">An enumerator object that can be used to iterate through the chunks.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ChunkEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="chunkEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="729b0-110">列挙子をコレクション内の次のチャンクに進めます。</span><span class="sxs-lookup"><span data-stu-id="729b0-110">Advances the enumerator to the next chunk in the collection.</span></span></summary>
        <returns><span data-ttu-id="729b0-111">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="729b0-111"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>