<Type Name="PrintDocument" FullName="System.Drawing.Printing.PrintDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b29699c8cfcb0f83cbc1d5ef9566e5e45e6da9a8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39992658" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintDocument : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDocument extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrintDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDocument&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDocument : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type PrintDocument = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultEvent("PrintPage")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows フォーム アプリケーションからの印刷時にプリンターに出力を送信する再利用可能なオブジェクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンスを作成する、通常、<xref:System.Drawing.Printing.PrintDocument>クラス、プロパティを設定、<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>と<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>を呼び出すと、<xref:System.Drawing.Printing.PrintDocument.Print%2A>印刷プロセスを開始する方法。 処理、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントを使用して、印刷出力を指定する、 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> <xref:System.Drawing.Graphics>のプロパティ、<xref:System.Drawing.Printing.PrintPageEventArgs>します。  
  
 Windows フォーム アプリケーションから印刷の詳細については、次を参照してください。、 [Windows フォームにおける印刷のサポート](~/docs/framework/winforms/advanced/windows-forms-print-support.md)します。 Windows Presentation Foundation アプリケーションから印刷する場合を参照してください、<xref:System.Printing>名前空間。  
  
   
  
## Examples  
 次のコード例では、既定のプリンターで C:\My Documents\MyFile.txt をという名前のファイルを印刷します。 例を実行するには、新しい Windows フォーム プロジェクトを作成し、ファイルの内容を置き換える、フォームにコード例を貼り付けます。 C# の場合は、Form1.Designer.cs ファイルを削除する必要があります。 また、印刷するファイル パスを変更します。  
  
> [!NOTE]
>  この例では、各行が、ページの幅内に収まることが必要です。  
  
 使用して、 <xref:System.ComponentModel>、 <xref:System.Windows.Forms>、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Printing.PageSettings" />
    <altmember cref="T:System.Drawing.Printing.PrintController" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PrintDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコンス トラクターでは、既定のプリンターに基づくすべてのフィールドを初期化します。 新たに作成した後は、通常、<xref:System.Drawing.Printing.PrintDocument>からの出力に影響するプリンターとページの設定を設定する、<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>と<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>プロパティでは、それぞれします。  
  
   
  
## Examples  
 次のコード例は、ランドス ケープにドキュメントのページの向きを設定し、文書を印刷します。  
  
 使用して、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler BeginPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler BeginPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ BeginPrint;" />
      <MemberSignature Language="F#" Value="member this.BeginPrint : System.Drawing.Printing.PrintEventHandler " Usage="member this.BeginPrint : System.Drawing.Printing.PrintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> メソッドが呼び出されたとき (ドキュメントの最初のページが印刷される前) に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、処理、<xref:System.Drawing.Printing.PrintDocument.BeginPrint>フォント、ファイル ストリーム、および印刷処理中に使用されるその他のリソースを初期化するためにイベント。  
  
 インスタンスを追加、イベント ハンドラーでイベントを関連付けるには、<xref:System.Drawing.Printing.PrintEventHandler>イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントの処理についての詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); void set(System::Drawing::Printing::PageSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPageSettings : System.Drawing.Printing.PageSettings with get, set" Usage="System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷するすべてのページの既定値として使用されるページ設定を取得または設定します。</summary>
        <value>ドキュメントの既定のページ設定を指定する <see cref="T:System.Drawing.Printing.PageSettings" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のページ設定をいくつかを指定することができます、<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>プロパティ。 たとえば、<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType>プロパティは、ページの色で印刷するかどうかを指定します、<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType>プロパティが横または縦の向きを指定します、<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType>プロパティ ページの余白を指定します。  
  
 ページの単位で設定を指定するには、処理、<xref:System.Drawing.Printing.PrintDocument.PrintPage>または<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベントを変更し、<xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A>引数に含まれる、<xref:System.Drawing.Printing.PrintPageEventArgs>または<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>、それぞれします。  
  
> [!NOTE]
>  印刷が開始した後でページ設定の変更、<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A>プロパティ ページを印刷するには影響しません。  
  
   
  
## Examples  
 次のコード例は、ランドス ケープにドキュメントのページの向きを設定し、文書を印刷します。 例は次の 3 つの前提条件: という名前の変数を`filePath`; を印刷するファイルのパスに設定されていますという名前のメソッドを`pd_PrintPage`、処理する、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントが定義されている; とという名前の変数`printer`されましたプリンターの名前に設定します。  
  
 使用して、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="DocumentName">
      <MemberSignature Language="C#" Value="public string DocumentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentName : string with get, set" Usage="System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("document")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントの印刷中に、印刷ステータス ダイアログ ボックスやプリンター キューなどで表示するドキュメントの名前を取得または設定します。</summary>
        <value>ドキュメントの印刷中に表示するドキュメント名。 既定値は "document" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>プロパティが印刷するファイルを指定していません。 代わりに、処理を印刷出力を指定する、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント。 例については、次を参照してください。、<xref:System.Drawing.Printing.PrintDocument>クラスの概要。  
  
   
  
## Examples  
 次のコード例は最初のページの色で文書を印刷するプリンターは、これをサポートし、設定した場合、<xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>のわかりやすい名前にします。 この例では、する必要があります、<xref:System.Drawing.Printing.PrintDocument>という名前の変数`printDoc`が作成されたらと<xref:System.Drawing.Printing.PrintDocument.PrintPage>と<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベントが処理されます。  
  
 使用して、<xref:System.Drawing>と<xref:System.Drawing.Printing>この例の名前空間。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="EndPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler EndPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler EndPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.EndPrint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndPrint As PrintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintEventHandler ^ EndPrint;" />
      <MemberSignature Language="F#" Value="member this.EndPrint : System.Drawing.Printing.PrintEventHandler " Usage="member this.EndPrint : System.Drawing.Printing.PrintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントの最後のページが印刷されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、処理、<xref:System.Drawing.Printing.PrintDocument.EndPrint>などのフォントのフォント、ファイル ストリーム、および印刷の処理中に使用されるその他のリソースを解放するイベントです。  
  
 設定して印刷するページはありませんがあることを示します、<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType>プロパティを`false`で、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント。 <xref:System.Drawing.Printing.PrintDocument.EndPrint>イベントは、印刷プロセスが取り消されたか、印刷プロセス中に例外が発生した場合にも発生します。  
  
 インスタンスを追加、イベント ハンドラーでイベントを関連付けるには、<xref:System.Drawing.Printing.PrintEventHandler>イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントの処理についての詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OnBeginPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit&#xA;override this.OnBeginPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit" Usage="printDocument.OnBeginPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> イベントを発生させます。 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> メソッドが呼び出された後、ドキュメントの最初のページが印刷される前に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A>メソッドにより、派生クラスでデリゲートをアタッチすることがなくイベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 派生クラスを呼び出すと、<xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A>メソッドを生成、<xref:System.Drawing.Printing.PrintDocument.BeginPrint>デリゲートにより、イベント ハンドラーを呼び出すことによってイベント。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。このメソッドは、初期化のことをお勧めします。</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEndPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndPrint (e As PrintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndPrint(System::Drawing::Printing::PrintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit&#xA;override this.OnEndPrint : System.Drawing.Printing.PrintEventArgs -&gt; unit" Usage="printDocument.OnEndPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> イベントを発生させます。 ドキュメントの最後のページが印刷されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A>メソッドにより、派生クラスでデリゲートをアタッチすることがなくイベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A>印刷プロセスをキャンセルするか、印刷プロセス中に例外が発生した場合、メソッドが呼び出されます。  
  
 派生クラスを呼び出すと、<xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A>メソッドを生成、<xref:System.Drawing.Printing.PrintDocument.EndPrint>デリゲートにより、イベント ハンドラーを呼び出すことによってイベント。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。このメソッドは、初期化解除のことをお勧めします。</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPrintPage">
      <MemberSignature Language="C#" Value="protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrintPage(class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrintPage (e As PrintPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrintPage(System::Drawing::Printing::PrintPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrintPage : System.Drawing.Printing.PrintPageEventArgs -&gt; unit&#xA;override this.OnPrintPage : System.Drawing.Printing.PrintPageEventArgs -&gt; unit" Usage="printDocument.OnPrintPage e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントを発生させます。 ページの印刷前に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A>メソッドにより、派生クラスでデリゲートをアタッチすることがなくイベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 派生クラスを呼び出すと、<xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A>メソッドを生成、<xref:System.Drawing.Printing.PrintDocument.PrintPage>デリゲートにより、イベント ハンドラーを呼び出すことによってイベント。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryPageSettings">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryPageSettings(class System.Drawing.Printing.QueryPageSettingsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryPageSettings (e As QueryPageSettingsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryPageSettings(System::Drawing::Printing::QueryPageSettingsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventArgs -&gt; unit&#xA;override this.OnQueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventArgs -&gt; unit" Usage="printDocument.OnQueryPageSettings e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.QueryPageSettingsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> イベントを発生させます。 各 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントの直前に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 派生クラスを呼び出すと、<xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A>メソッドを生成、<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>デリゲートにより、イベント ハンドラーを呼び出すことによってイベント。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OriginAtMargins">
      <MemberSignature Language="C#" Value="public bool OriginAtMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OriginAtMargins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginAtMargins As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OriginAtMargins { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OriginAtMargins : bool with get, set" Usage="System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページに関連付けられているグラフィック オブジェクトの位置が、ユーザー指定の余白の内側にあるか、ページの印刷可能領域の左上隅にあるかを示す値を取得または設定します。</summary>
        <value>グラフィックの原点がページの余白から始まっている場合は <see langword="true" />、グラフィックの原点が印刷可能ページの左上隅にある場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 印刷可能な領域を計算するには、物理、ページの余白、用紙のサイズとの場所を知る必要があります、<xref:System.Drawing.Graphics>配信元のオブジェクトします。 ときに<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A>は`true`、<xref:System.Drawing.Graphics>オブジェクトの場所では考慮、<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType>プロパティの値と、ページの印刷可能領域です。 ときに<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A>は`false`の場所を特定のページの印刷可能領域のみが使用される、 <xref:System.Drawing.Graphics> 、元のオブジェクト、<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType>値は無視されます。  
  
 たとえば場合、<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A>は`true`と<xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=nameWithType>それぞれの側では、1 インチに設定されて、<xref:System.Drawing.Graphics>に含まれるオブジェクト、<xref:System.Drawing.Printing.PrintPageEventArgs>左右のページの上部から 1 インチが配置されています。 ページの印刷可能領域の両側インチの.25 場合と<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A>は`false`、<xref:System.Drawing.Graphics>オブジェクトは、ページの上部と左側からインチの.25 が配置されています。  
  
> [!NOTE]
>  ページの印刷可能な領域は、プリンターによって異なります、対称であるとは限りません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="printDocument.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ドキュメントの印刷プロセスを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理を印刷出力の指定、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントを使用して、<xref:System.Drawing.Graphics>に含まれる、<xref:System.Drawing.Printing.PrintPageEventArgs>します。  
  
 使用して、<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType>プロパティを指定するプリンターは、ドキュメントを印刷する必要があります。  
  
 <xref:System.Drawing.Printing.PrintDocument.Print%2A>メソッドは、印刷ダイアログ ボックスを使用せず、ドキュメントを印刷します。 使用して、<xref:System.Windows.Forms.PrintDialog>印刷設定を選択する機能をユーザーに提供したい場合。  
  
> [!NOTE]
>  場合によって処理されない例外、<xref:System.Drawing.Printing.PrintDocument.Print%2A>メソッドは、印刷時にスローされると、ドキュメントの印刷を中止します。  
  
   
  
## Examples  
 次のコード例では、既定のプリンターにコマンドラインで指定されたファイルを印刷します。  
  
> [!NOTE]
>  この例では、各行が、ページの幅内に収まることが必要です。  
  
 使用して、 <xref:System.ComponentModel>、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、 <xref:System.IO>、および<xref:System.Windows.Forms>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintPage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">制限されたダイアログ ボックスから安全な印刷します。 関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintController">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintController PrintController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintController PrintController" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintController As PrintController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintController ^ PrintController { System::Drawing::Printing::PrintController ^ get(); void set(System::Drawing::Printing::PrintController ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintController : System.Drawing.Printing.PrintController with get, set" Usage="System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷プロセスを制御するプリント コントローラーを取得または設定します。</summary>
        <value>印刷プロセスを制御する <see cref="T:System.Drawing.Printing.PrintController" />。 既定値は、<see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> クラスの新しいインスタンスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プリント コント ローラーは、いくつかの方法での印刷プロセスをガイドします。 たとえば、ドキュメントを印刷する必要がありますに変換する<xref:System.Drawing.Graphics>オブジェクト。 A<xref:System.Drawing.Printing.PrintController>イメージまたは実際には、ドキュメントの印刷をプリンターで印刷プレビューでグラフィックを描画する場所を指定します。 プリント コント ローラーは、すぐにドキュメントを印刷または指定した時間だけ待機するかどうかも指定できます。  
  
   
  
## Examples  
 次のコード例では、インスタンスを作成することが必要です、<xref:System.Drawing.Printing.PrintDocument>というクラス`myPrintDocument`します。 例では、新しいインスタンスを作成する、<xref:System.Drawing.Printing.PrintController>クラスに割り当てます、<xref:System.Drawing.Printing.PrintDocument.PrintController%2A>のプロパティ`myPrintDocument`、し、文書を印刷します。  
  
 使用して、<xref:System.Drawing.Printing>と<xref:System.Windows.Forms>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintController Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintController Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">制限されたダイアログ ボックスから安全な印刷します。 関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="T:System.Drawing.Printing.PreviewPrintController" />
        <altmember cref="T:System.Drawing.Printing.PrintController" />
        <altmember cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
        <altmember cref="T:System.Drawing.Printing.StandardPrintController" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterSettings : System.Drawing.Printing.PrinterSettings with get, set" Usage="System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントを印刷するプリンターを取得または設定します。</summary>
        <value>ドキュメントを印刷する場所と方法を指定する <see cref="T:System.Drawing.Printing.PrinterSettings" />。 既定値は、プロパティが既定値に設定されている <see cref="T:System.Drawing.Printing.PrinterSettings" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数のプリンター設定を指定することができます、<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>プロパティ。 などを使用して、<xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=nameWithType>プロパティを印刷する部数を指定する、<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=nameWithType>プロパティを使用するには、プリンターを指定して、<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=nameWithType>プロパティを印刷するページの範囲を指定します。  
  
   
  
## Examples  
 次のコード例では、指定されたプリンターにドキュメントを印刷します。 例は次の 3 つの前提条件: する変数名`filePath`; を印刷するファイルのパスに設定されていますという名前のメソッドを`pd_PrintPage`、処理する、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントが定義されている; とという名前の変数`printer`されましたプリンターの名前に設定します。  
  
 使用して、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="PrintPage">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintPageEventHandler PrintPage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintPageEventHandler PrintPage" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PrintPage As PrintPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::PrintPageEventHandler ^ PrintPage;" />
      <MemberSignature Language="F#" Value="member this.PrintPage : System.Drawing.Printing.PrintPageEventHandler " Usage="member this.PrintPage : System.Drawing.Printing.PrintPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページに印刷する出力が必要なときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 印刷出力を指定するには、使用、<xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A>のプロパティ、<xref:System.Drawing.Printing.PrintPageEventArgs>します。 たとえば、印刷するテキストの行を指定する描画を使用して、テキスト、<xref:System.Drawing.Graphics.DrawString%2A?displayProperty=nameWithType>メソッド。  
  
 出力を指定するだけでなく追加のページを設定して印刷するかを指定できます、<xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=nameWithType>プロパティを`true`します。 既定値は`false`、印刷するページはありませんがあることを示します。 個々 のページ設定を変更することも、<xref:System.Drawing.Printing.PageSettings>を設定して印刷ジョブを取り消すことができます、<xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=nameWithType>プロパティを`true`します。 別のページ設定を使用してドキュメントの各ページを印刷するには、処理、<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベント。  
  
 インスタンスを追加、イベント ハンドラーでイベントを関連付けるには、<xref:System.Drawing.Printing.PrintPageEventHandler>イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントの処理についての詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、処理を示しています、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント。  
  
 別の例では、次を参照してください。[方法: Windows フォームで複数ページのテキスト ファイルを印刷](~/docs/framework/winforms/advanced/how-to-print-a-multi-page-text-file-in-windows-forms.md)します。  
  
 使用して、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintPageEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="QueryPageSettings">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryPageSettings As QueryPageSettingsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Drawing::Printing::QueryPageSettingsEventHandler ^ QueryPageSettings;" />
      <MemberSignature Language="F#" Value="member this.QueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventHandler " Usage="member this.QueryPageSettings : System.Drawing.Printing.QueryPageSettingsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.QueryPageSettingsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントの直前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 別のページ設定を使用してドキュメントの各ページを印刷することになります。 個々 のプロパティを変更してページ設定を設定する、<xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=nameWithType>プロパティまたはプロパティを設定して、<xref:System.Drawing.Printing.PageSettings>します。 加えられた変更、<xref:System.Drawing.Printing.PageSettings>に影響するのみ、現在のページ、ドキュメントの既定のページ設定されません。 印刷ジョブを設定して取り消すこともできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`の<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>します。  
  
 インスタンスを追加、イベント ハンドラーでイベントを関連付けるには、<xref:System.Drawing.Printing.QueryPageSettingsEventHandler>イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントの処理についての詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
使用する場合、<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>のパフォーマンスのプリンターの設定を変更するイベント、<xref:System.Windows.Forms.PrintPreviewDialog>最適化の構成スイッチが設定されている場合でも、コントロールは改善されません。 詳細については、次を参照してください。 [PrintPreviewDialog コントロールの概要](~/docs/framework/winforms/controls/printpreviewdialog-control-overview-windows-forms.md)します。   
  
## Examples  
 次のコード例は最初のページの色で文書を印刷するプリンターがサポートされている場合。 この例では、する必要があります、<xref:System.Drawing.Printing.PrintDocument>という名前の変数`printDoc`が作成されたらと<xref:System.Drawing.Printing.PrintDocument.PrintPage>と<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベントが処理されます。 `currentPageNumber`ですべてのページが印刷後に変数が増加、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベント。 には表示されません。  
  
 使用して、<xref:System.Drawing>と<xref:System.Drawing.Printing>この例の名前空間。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="printDocument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>印刷ドキュメントに関する情報を文字列形式で提供します。</summary>
        <returns>文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>