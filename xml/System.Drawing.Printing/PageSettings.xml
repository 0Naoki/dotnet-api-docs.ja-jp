<Type Name="PageSettings" FullName="System.Drawing.Printing.PageSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98debdacf4401ea78326662c8b22f0c909ad2b0a" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56771791" /></Metadata><TypeSignature Language="C#" Value="public class PageSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PageSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PageSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class PageSettings&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageSettings : ICloneable" />
  <TypeSignature Language="F#" Value="type PageSettings = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>単一の印刷ページに適用する設定を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PageSettings>ページを印刷する方法を変更する設定を指定するクラスを使用します。 通常、すべてのページを印刷する、既定の設定を設定、<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType>プロパティ。 ページの単位で設定を指定するには、処理、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType>または<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings?displayProperty=nameWithType>イベントを変更し、<xref:System.Drawing.Printing.PageSettings>引数に含まれる、<xref:System.Drawing.Printing.PrintPageEventArgs>または<xref:System.Drawing.Printing.QueryPageSettingsEventArgs>、それぞれします。  
  
 処理の詳細については<xref:System.Drawing.Printing.PrintDocument>イベントを参照してください、<xref:System.Drawing.Printing.PrintDocument>クラスの概要。 印刷の詳細については、次を参照してください。、<xref:System.Drawing.Printing>名前空間の概要。  
  
   
  
## Examples  
 次の例では、処理を示しています、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントとチェック、<xref:System.Drawing.Printing.PageSettings>の引数<xref:System.Drawing.Printing.PrintPageEventArgs>します。 このコードを使用するには追加、<xref:System.Drawing.Printing.PrintDocument>という名前のコンポーネント`PrintDocument1`Windows フォームと関連付けをその<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントを`printDocument1_PrintPage`メソッドの例。  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Printing.PrintDocument" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Drawing.Printing.PageSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定のプリンターを使用して、<see cref="T:System.Drawing.Printing.PageSettings" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコンス トラクターでは、すべてのフィールドを既定値を初期化します。  
  
 通常のインスタンス作成しない<xref:System.Drawing.Printing.PageSettings>ではなく、<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType>すべてのページ設定を設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings (System.Drawing.Printing.PrinterSettings printerSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Printing.PrinterSettings printerSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageSettings(System::Drawing::Printing::PrinterSettings ^ printerSettings);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Printing.PageSettings : System.Drawing.Printing.PrinterSettings -&gt; System.Drawing.Printing.PageSettings" Usage="new System.Drawing.Printing.PageSettings printerSettings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printerSettings" Type="System.Drawing.Printing.PrinterSettings" />
      </Parameters>
      <Docs>
        <param name="printerSettings">使用するプリンターを記述する <see cref="T:System.Drawing.Printing.PrinterSettings" />。</param>
        <summary>プリンターを指定して、<see cref="T:System.Drawing.Printing.PageSettings" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PageSettings.%23ctor%2A>コンス トラクターはの新しいインスタンスを初期化中に似ています<xref:System.Drawing.Printing.PageSettings>と設定、<xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Drawing.Printing.PageSettings.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> プロパティで指定した用紙方向が考慮された、ページのサイズを取得します。</summary>
        <value>ページの長さと幅 (1/100 インチ単位) を表す <see cref="T:System.Drawing.Rectangle" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Drawing.Printing.PageSettings.Bounds%2A>プロパティと共に、<xref:System.Drawing.Printing.PageSettings.Margins%2A>プロパティ ページの印刷領域を計算します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Margins" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="pageSettings.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Printing.PageSettings" /> のコピーを作成します。</summary>
        <returns>オブジェクトのコピー。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public bool Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Color { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Color : bool with get, set" Usage="System.Drawing.Printing.PageSettings.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページを色付きで印刷するかどうかを示す値を取得または設定します。</summary>
        <value>ページを色付きで印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値はプリンターによって決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Drawing.Printing.PrinterSettings.SupportsColor%2A?displayProperty=nameWithType>プリンターがカラー印刷をサポートしているかを決定するプロパティ。 プリンターがカラーをサポートしますの設定、カラーで印刷したくない場合、<xref:System.Drawing.Printing.PageSettings.Color%2A>プロパティを`false`します。 既定となり`true`します。  
  
   
  
## Examples  
 次のコード例は最初のページの色で文書を印刷するプリンターがサポートされている場合。 この例では、する必要があります、<xref:System.Drawing.Printing.PrintDocument>という名前の変数`printDoc`が作成されたらと<xref:System.Drawing.Printing.PrintDocument.PrintPage>と<xref:System.Drawing.Printing.PrintDocument.QueryPageSettings>イベントが処理されます。  
  
 使用して、<xref:System.Drawing>と<xref:System.Drawing.Printing>この例の名前空間。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="CopyToHdevmode">
      <MemberSignature Language="C#" Value="public void CopyToHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyToHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyToHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyToHdevmode(IntPtr hdevmode);" />
      <MemberSignature Language="F#" Value="member this.CopyToHdevmode : nativeint -&gt; unit" Usage="pageSettings.CopyToHdevmode hdevmode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 <see langword="DEVMODE" /> 構造体を識別するハンドル。</param>
        <summary>関連情報を <see cref="T:System.Drawing.Printing.PageSettings" /> から指定した <see langword="DEVMODE" /> 構造体にコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A>に関連する情報をコピーする方法、`DEVMODE`から構造体、<xref:System.Drawing.Printing.PageSettings>します。 このメソッドを必要とするアンマネージ Win32 呼び出しを実行する場合に便利です、`DEVMODE`します。  
  
 情報のコピーを`DEVMODE`構造体を<xref:System.Drawing.Printing.PageSettings>、呼び出す<xref:System.Drawing.Printing.PageSettings.SetHdevmode%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">印刷およびネットワーク上のすべてのプリンターへのアクセス用です。 関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="HardMarginX">
      <MemberSignature Language="C#" Value="public float HardMarginX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardMarginX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HardMarginX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.HardMarginX : single" Usage="System.Drawing.Printing.PageSettings.HardMarginX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの左側のハード マージンの x 座標 (1/100 インチ単位) を取得します。</summary>
        <value>左側のハード マージンの x 座標 (1/100 インチ単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハード マージンは、プリンターによって設定される物理的な余白を表します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 列挙に関連:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">すべてのプリンターに対してフル アクセス。 関連する列挙。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HardMarginY">
      <MemberSignature Language="C#" Value="public float HardMarginY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardMarginY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HardMarginY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.HardMarginY : single" Usage="System.Drawing.Printing.PageSettings.HardMarginY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの上部のハード マージンの y 座標 (1/100 インチ単位) を取得します。</summary>
        <value>ページの上部のハード マージンの y 座標 (1/100 インチ単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハード マージンは、プリンターによって設定される物理的な余白を表します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 列挙に関連:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">すべてのプリンターに対してフル アクセス。 関連する列挙。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Landscape">
      <MemberSignature Language="C#" Value="public bool Landscape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Landscape" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Landscape" />
      <MemberSignature Language="VB.NET" Value="Public Property Landscape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Landscape { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Landscape : bool with get, set" Usage="System.Drawing.Printing.PageSettings.Landscape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの印刷時に用紙を横向きにするか縦向きにするかを示す値を取得または設定します。</summary>
        <value>ページを横向きで印刷する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値はプリンターによって決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Drawing.Printing.PrinterSettings.LandscapeAngle%2A?displayProperty=nameWithType>角度 (°)、縦向きの用紙を回転して横向きにすることを確認するプロパティ。  
  
   
  
## Examples  
 次のコード例を横向きにドキュメントの既定のページの向きを設定する、<xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=nameWithType>プロパティ、およびドキュメントを印刷します。 例は、次の 3 つの前提条件です。  
  
-   という名前の変数`filePath`を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド`pd_PrintPage`、処理する、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントが定義されています。  
  
-   という名前の変数`printer`プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PageSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      </Docs>
    </Member>
    <Member MemberName="Margins">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Margins Margins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.Margins Margins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Margins" />
      <MemberSignature Language="VB.NET" Value="Public Property Margins As Margins" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::Margins ^ Margins { System::Drawing::Printing::Margins ^ get(); void set(System::Drawing::Printing::Margins ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Margins : System.Drawing.Printing.Margins with get, set" Usage="System.Drawing.Printing.PageSettings.Margins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Margins</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このページの余白を取得または設定します。</summary>
        <value>ページの余白 (1/100 インチ単位) を表す <see cref="T:System.Drawing.Printing.Margins" />。 既定値は、左右上下とも、余白 1 インチです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理するときに、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType>イベントと共に、このプロパティを使用することができます、<xref:System.Drawing.Printing.PageSettings.Bounds%2A>プロパティ ページの印刷領域を計算します。  
  
   
  
## Examples  
 次のコード例の既定ページ設定をドキュメントの 1 インチの余白をそれぞれの側。 例は、次の 3 つの前提条件です。  
  
-   という名前の変数`filePath`を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド`pd_PrintPage`、処理する、<xref:System.Drawing.Printing.PrintDocument.PrintPage>イベントが定義されています。  
  
-   という名前の変数`printer`プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>、 <xref:System.Drawing.Printing>、および<xref:System.IO>この例の名前空間。  
  
 [!code-cpp[Classic PageSettings.Margins Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings.Margins Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings.Margins Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings.Margins Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しません。</exception>
        <altmember cref="T:System.Drawing.Printing.Margins" />
      </Docs>
    </Member>
    <Member MemberName="PaperSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSize PaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSize PaperSize" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSize As PaperSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PaperSize ^ PaperSize { System::Drawing::Printing::PaperSize ^ get(); void set(System::Drawing::Printing::PaperSize ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PaperSize : System.Drawing.Printing.PaperSize with get, set" Usage="System.Drawing.Printing.PageSettings.PaperSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの用紙サイズを取得または設定します。</summary>
        <value>用紙のサイズを表す <see cref="T:System.Drawing.Printing.PaperSize" />。 既定値は、プリンターの既定の用紙サイズです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Drawing.Printing.PaperSize>に用紙のサイズを表す、<xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=nameWithType>プロパティの 1 つを含む、<xref:System.Drawing.Printing.PaperKind>値。  
  
 設定、<xref:System.Drawing.Printing.PageSettings.PaperSize%2A>プロパティを有効なページの<xref:System.Drawing.Printing.PaperSize>で利用可能、<xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A?displayProperty=nameWithType>コレクション。  
  
 カスタム用紙サイズを指定する方法については、次を参照してください。、<xref:System.Drawing.Printing.PaperSize.%23ctor%2A>コンス トラクター。  
  
   
  
## Examples  
 次のコード例で指定されたサイズに基づいて用紙サイズなど、ドキュメントの既定のページの 3 つのプロパティの設定、`comboPaperSize`コンボ ボックス、しを使用してドキュメントを印刷、<xref:System.Drawing.Printing.PrintDocument.Print%2A>メソッド。 この例では、する必要があります、<xref:System.Drawing.Printing.PrintDocument>という名前の変数`printDoc`が存在して、特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Height" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Kind" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Width" />
      </Docs>
    </Member>
    <Member MemberName="PaperSource">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSource PaperSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSource PaperSource" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSource" />
      <MemberSignature Language="VB.NET" Value="Public Property PaperSource As PaperSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PaperSource ^ PaperSource { System::Drawing::Printing::PaperSource ^ get(); void set(System::Drawing::Printing::PaperSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PaperSource : System.Drawing.Printing.PaperSource with get, set" Usage="System.Drawing.Printing.PageSettings.PaperSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの給紙方法を取得または設定します (たとえば、プリンターの上段トレイ)。</summary>
        <value>プリンターの給紙方法を指定する <see cref="T:System.Drawing.Printing.PaperSource" />。 既定値は、プリンターの既定の給紙方法です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Drawing.Printing.PaperSource>に用紙のソースを表す、<xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=nameWithType>プロパティの 1 つを含む、<xref:System.Drawing.Printing.PaperSourceKind>値。  
  
 設定、<xref:System.Drawing.Printing.PageSettings.PaperSource%2A>プロパティを有効なページの<xref:System.Drawing.Printing.PaperSource>で利用可能、<xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A?displayProperty=nameWithType>コレクション。  
  
   
  
## Examples  
 次のコード例で選択されたソースに基づいて給紙方法を含め、ドキュメントの既定のページの 3 つのプロパティの設定、`comboPaperSource`コンボ ボックス、しを使用してドキュメントを印刷、<xref:System.Drawing.Printing.PrintDocument.Print%2A>メソッド。 この例では、する必要があります、<xref:System.Drawing.Printing.PrintDocument>という名前の変数`printDoc`が存在して、特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="P:System.Drawing.Printing.PaperSource.Kind" />
        <altmember cref="T:System.Drawing.Printing.PaperSourceKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintableArea">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF PrintableArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF PrintableArea" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrintableArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableArea As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF PrintableArea { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintableArea : System.Drawing.RectangleF" Usage="System.Drawing.Printing.PageSettings.PrintableArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターのページの印刷可能領域の範囲を取得します。</summary>
        <value>プリンターが印刷できる領域の長さと幅 (1/100 インチ単位) を表す <see cref="T:System.Drawing.RectangleF" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PageSettings.PrintableArea%2A>プロパティは、ページの向きが横または縦かどうかに、正しい値を返します。  
  
 このプロパティを使用して、余白、ページが印刷可能領域内に印刷することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrinterResolution">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterResolution PrinterResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterResolution PrinterResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterResolution As PrinterResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterResolution ^ PrinterResolution { System::Drawing::Printing::PrinterResolution ^ get(); void set(System::Drawing::Printing::PrinterResolution ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterResolution : System.Drawing.Printing.PrinterResolution with get, set" Usage="System.Drawing.Printing.PageSettings.PrinterResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページのプリンター解像度を取得または設定します。</summary>
        <value>ページのプリンター解像度を指定する <see cref="T:System.Drawing.Printing.PrinterResolution" />。 既定値は、プリンターの既定の解像度です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Drawing.Printing.PrinterResolution>経由のプリンター解像度を表す、<xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=nameWithType>プロパティの 1 つを含む、<xref:System.Drawing.Printing.PrinterResolutionKind>値。  
  
 設定、<xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A>プロパティを有効なページの<xref:System.Drawing.Printing.PrinterResolution>で利用可能、<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A?displayProperty=nameWithType>コレクション。  
  
   
  
## Examples  
 次のコード例で選択されている解像度に基づく、プリンターの解像度を含むドキュメントの既定のページの 3 つのプロパティの設定、`comboPrintResolution`コンボ ボックス、しを使用してドキュメントを印刷、<xref:System.Drawing.Printing.PrintDocument.Print%2A>メソッド。 この例では、する必要があります、<xref:System.Drawing.Printing.PrintDocument>という名前の変数`printDoc`が存在して、特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="P:System.Drawing.Printing.PrinterResolution.Kind" />
        <altmember cref="T:System.Drawing.Printing.PrinterResolutionKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterSettings As PrinterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings ^ PrinterSettings { System::Drawing::Printing::PrinterSettings ^ get(); void set(System::Drawing::Printing::PrinterSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterSettings : System.Drawing.Printing.PrinterSettings with get, set" Usage="System.Drawing.Printing.PageSettings.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページに関連するプリンター設定を取得または設定します。</summary>
        <value>ページに関連付けられたプリンター設定を表す <see cref="T:System.Drawing.Printing.PrinterSettings" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プリンターの設定を使用すると、設定されていないページのプロパティの既定値を検索します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevmode(IntPtr hdevmode);" />
      <MemberSignature Language="F#" Value="member this.SetHdevmode : nativeint -&gt; unit" Usage="pageSettings.SetHdevmode hdevmode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 <see langword="DEVMODE" /> 構造体を識別するハンドル。</param>
        <summary>関連情報を、指定した <see langword="DEVMODE" /> 構造体から <see cref="T:System.Drawing.Printing.PageSettings" /> にコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドに関連する情報のコピーを使用して、`DEVMODE`構造体を<xref:System.Drawing.Printing.PageSettings>します。  
  
 情報をコピーする、<xref:System.Drawing.Printing.PageSettings>を`DEVMODE`、呼び出す<xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プリンター ハンドルが無効です。</exception>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティで指定されたプリンターが存在しないか、既定のプリンターがインストールされていません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">印刷およびネットワーク上のすべてのプリンターへのアクセス用です。 関連付けられた列挙体。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pageSettings.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Printing.PageSettings" /> を文字列形式に変換します。</summary>
        <returns><see cref="T:System.Drawing.Printing.PageSettings" /> の各種プロパティ設定を示す文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>