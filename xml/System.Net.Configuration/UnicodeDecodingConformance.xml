<Type Name="UnicodeDecodingConformance" FullName="System.Net.Configuration.UnicodeDecodingConformance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e92041a28863de61f9f0c3189167906310c8907c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51894169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum UnicodeDecodingConformance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnicodeDecodingConformance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.UnicodeDecodingConformance" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnicodeDecodingConformance" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnicodeDecodingConformance" />
  <TypeSignature Language="F#" Value="type UnicodeDecodingConformance = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Unicode 文字が <see cref="Overload:System.Net.WebUtility.HtmlDecode" /> メソッドによってどのように解釈されるかを制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unicode 文字を想定する方法の詳細については HTML でエンコードすることを参照してください[マークアップと CSS でのエスケープ文字を使用して](https://go.microsoft.com/fwlink/?LinkId=256607)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Net.WebUtility.HtmlDecode" />
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Net.Configuration.UnicodeDecodingConformance.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>自動動作を使用します。 デコードの動作は、現在のアプリケーションのターゲット フレームワークに特定されます。 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 以降では、Unicode エンコードの復号化は厳密になります。</summary>
      </Docs>
    </Member>
    <Member MemberName="Compat">
      <MemberSignature Language="C#" Value="Compat" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Compat = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberSignature Language="VB.NET" Value="Compat" />
      <MemberSignature Language="C++ CLI" Value="Compat" />
      <MemberSignature Language="F#" Value="Compat = 2" Usage="System.Net.Configuration.UnicodeDecodingConformance.Compat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>互換性のある動作を使用します。 受信データをデコードする前に有効性をチェックしないことを指定します。 たとえば、入力文字列 "&amp;amp;#xD84C;" は U+D84C とデコードされ、これはペアになっていないサロゲートです。 さらに、デコーダーは HTML エンコードされたサロゲートとして表されていない SMP のコード ポイントを認識しないので、入力文字列 "&amp;#144308;" は出力文字列 "&amp;#144308;" になります。</summary>
      </Docs>
    </Member>
    <Member MemberName="Loose">
      <MemberSignature Language="C#" Value="Loose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Loose = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberSignature Language="VB.NET" Value="Loose" />
      <MemberSignature Language="C++ CLI" Value="Loose" />
      <MemberSignature Language="F#" Value="Loose = 3" Usage="System.Net.Configuration.UnicodeDecodingConformance.Loose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>柔軟な動作を使用します。 <see cref="F:System.Net.Configuration.UnicodeDecodingConformance.Compat" /> と同様、デコーダー alsounderstands のコード ポイント以外に有効性の検証がありません。 入力文字列 "&amp;#144308;" は、文字 U+233B4 に正しくデコードされます。 このスイッチは、エンコードされた文字列の生成にプロバイダーが使用した形式をデコーダーが認識できないときに、最大の相互運用性を提供することを意図しています。</summary>
      </Docs>
    </Member>
    <Member MemberName="Strict">
      <MemberSignature Language="C#" Value="Strict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Configuration.UnicodeDecodingConformance Strict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberSignature Language="VB.NET" Value="Strict" />
      <MemberSignature Language="C++ CLI" Value="Strict" />
      <MemberSignature Language="F#" Value="Strict = 1" Usage="System.Net.Configuration.UnicodeDecodingConformance.Strict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Configuration.UnicodeDecodingConformance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>厳密な動作を使用します。 エンコードされた受信データをデコードする前に、有効性をチェックすることを指定します。 たとえば、入力文字列 "&amp;#144308;" は U+233B4 とデコードされますが、入力文字列 "&amp;#xD84C;&amp;#xDFB4;" は正しくデコードされません。 文字列の中にある既にデコードされたデータでは、有効性のチェックは実行されません。 たとえば、"\ud800" という入力文字列からは "\ud800" という出力文字列が生じます。既に復号化されたサロゲートは、たとえ対になっていない場合でも、復号化の際にスキップされるからです。</summary>
      </Docs>
    </Member>
  </Members>
</Type>