<Type Name="DataSourceDesigner" FullName="System.Web.UI.Design.DataSourceDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fcaacde91ce8d0ed58eb864f3b454e8367782fab" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70559823" /></Metadata><TypeSignature Language="C#" Value="public class DataSourceDesigner : System.Web.UI.Design.ControlDesigner, System.Web.UI.Design.IDataSourceDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceDesigner extends System.Web.UI.Design.ControlDesigner implements class System.Web.UI.Design.IDataSourceDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceDesigner&#xA;Inherits ControlDesigner&#xA;Implements IDataSourceDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceDesigner : System::Web::UI::Design::ControlDesigner, System::Web::UI::Design::IDataSourceDesigner" />
  <TypeSignature Language="F#" Value="type DataSourceDesigner = class&#xA;    inherit ControlDesigner&#xA;    interface IDataSourceDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Web.UI.DataSourceControl" /> クラスを、デザイン ホストでデザイン時に使用できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスは<xref:System.Web.UI.Design.WebControls.SqlDataSourceDesigner>、 、 <xref:System.Web.UI.Design.WebControls.AccessDataSourceDesigner> 、および <xref:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner> クラスなど、データソースデザイナーの基本クラスです。 <xref:System.Web.UI.Design.DataSourceDesigner> 新しいデータソースコントロールを作成する場合は、コントロールのカスタムコントロールデザイナーを作成し、 <xref:System.Web.UI.Design.DataSourceDesigner>クラスから派生させることもできます。  
  
 クラス<xref:System.Web.UI.Design.DataSourceDesigner>には、メソッド<xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A>とメソッドと<xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A>いう2つのイベントメソッドがあります。 これらのイベントはどちらも、 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A>プロパティを設定するメソッドを使用して一時的に無効にすることができます。 イベントメソッドは、 <xref:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents%2A>メソッドを使用して再度有効にすることができます。  
  
 クラスのインスタンスを作成せずに、スキーマまたはビューの等価性を評価するには、次の2つの静的メソッドを使用できます。  
  
-   メソッド<xref:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent%2A>は、2つのスキーマを比較します。  
  
-   メソッド<xref:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent%2A>は、2つのビューのスキーマを比較します。  
  
   
  
## Examples  
 次の表に示すように、いくつかの小さなカスタムクラスでカスタムデータソースコントロールを使用する方法を次のコード例に示します。  
  
|カスタムクラス|派生元|  
|------------------|------------------|  
|`CustomDataSource`|<xref:System.Web.UI.WebControls.ObjectDataSource>|  
|`CustomDataSourceDesigner`|<xref:System.Web.UI.Design.DataSourceDesigner>|  
|`CustomDataSourceView`|<xref:System.Web.UI.WebControls.ObjectDataSourceView>|  
|`CustomDesignDataSourceView`|<xref:System.Web.UI.Design.DesignerDataSourceView>|  
|`BookListViewSchema`|<xref:System.Web.UI.Design.IDataSourceViewSchema>|  
|`CustomIDFieldSchema`|<xref:System.Web.UI.Design.IDataSourceFieldSchema>|  
|`CustomTitleFieldSchema`|<xref:System.Web.UI.Design.IDataSourceFieldSchema>|  
|`BookItem`(2 フィールドのデータ構造体)。||  
  
 コード例をコンパイルした後、デザインビューで .aspx ページを開き、 `DataSourceID`プロパティをカスタムデータソースコントロールの ID に設定します。  
  
 [!code-csharp[DataSourceDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceDesignerSample/CS/DataSourceDesignerSample.cs#1)]
 [!code-vb[DataSourceDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceDesignerSample/VB/DataSourceDesignerSample.vb#1)]  
[!code-aspx-csharp[DataSourceDesignerSample#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceDesignerSample/CS/DataSourceDesignerSample.aspx#6)]
[!code-aspx-vb[DataSourceDesignerSample#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceDesignerSample/VB/DataSourceDesignerSample.aspx#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>派生クラスでデザイン時にアクションリストメニューのコマンドを指定するには、 <see cref="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" />プロパティをオーバーライドして、 <see cref="T:System.ComponentModel.Design.DesignerActionList" />オブジェクトから<see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />派生したカスタム項目を持つカスタムオブジェクトを返す必要があります。</para></block>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.DataSourceDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.%23ctor%2A>コンストラクターはデザイン時にデザインホストによって呼び出されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.DataSourceDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイン時にアクション リスト メニューを作成するために使用される項目のリストを取得します。</summary>
        <value>コントロール デザイナーのアクション リスト項目を格納している <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は<xref:System.Web.UI.WebControls.Label> 、コントロール<xref:System.Web.UI.WebControls.TextBox>とコントロールを含む単純な複合コントロールを作成する方法と、両方の内部コントロール`Text`にプロパティを設定するためのプロパティと、 <xref:System.Web.UI.WebControls.WebControl.Width%2A>およびを使用する方法を示しています。コントロールの <xref:System.Web.UI.WebControls.TextBox> プロパティ。 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 関連付けられたコントロールデザイナークラス<xref:System.ComponentModel.Design.DesignerActionMethodItem>は、3つのコマンドを作成します。各コマンドは、コントロールに2つのプロパティを設定し、デザインホストの元に戻す機能を使用して設定をロールバックすることができます。 このコード例はカスタム<xref:System.Web.UI.DataSourceControl>オブジェクトを使用しませんが、 <xref:System.Web.UI.Design.DataSourceDesigner.ActionLists%2A>プロパティをオーバーライドする方法を示しています。  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Design.DataSourceDesigner" />クラスから派生したカスタムクラスを作成する場合は、 <see cref="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" />プロパティをオーバーライドする必要があります。 オーバーライドメソッドで、最初に基本クラスを呼び出して既定<see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />のオブジェクトを作成し、クラスに固有のアクションのカスタムリストを追加します。</para></block>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="CanConfigure">
      <MemberSignature Language="C#" Value="public virtual bool CanConfigure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConfigure" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanConfigure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanConfigure { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanConfigure : bool" Usage="System.Web.UI.Design.DataSourceDesigner.CanConfigure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> メソッドを呼び出すことができるかどうかを示す値を取得します。</summary>
        <value><see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> を呼び出すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムクラスのプロパティを使用して、特定のデータソースのデザイン時構成を有効または無効にします。 <xref:System.Web.UI.Design.DataSourceDesigner.CanConfigure%2A>  
  
 などのデザインホストで[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]は、 <xref:System.Web.UI.Design.DataSourceDesigner.CanConfigure%2A>プロパティを使用して、データソースを構成するコマンドがデザイン時に [アクションリスト] メニューに表示されるかどうかを判断します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="CanRefreshSchema">
      <MemberSignature Language="C#" Value="public virtual bool CanRefreshSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRefreshSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRefreshSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRefreshSchema { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRefreshSchema : bool" Usage="System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> メソッドを呼び出すことができるかどうかを示す値を取得します。</summary>
        <value><see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> を呼び出すことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生クラスのプロパティを使用して、デザイン時に特定のデータソースのスキーマを更新する機能を有効または無効にします。 <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> アプリケーションにインバリアントデータ構造が必要で、スキーマが変更<xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A>されない場合は、プロパティを返す`false`必要があります。  
  
 などのデザインホストで[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]は、 <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A>プロパティを使用して、スキーマを更新するコマンドがデザイン時にアクションリストメニューに表示されるかどうかを判断します。  
  
 などのデザインホスト[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]では、次の手順を実行して、プロパティが<xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A>動作していることを確認できます。  
  
1.  ページで、 <xref:System.Web.UI.WebControls.AccessDataSource>コントロールまたは<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを配置します。  
  
2.  デザインビューの 操作 ボックスの一覧で、**構成** をクリックします。  
  
3.  データソースからいくつかのフィールドを削除します。  
  
4.  アクション ボックスの一覧の **スキーマの更新** をクリックします。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public virtual void Configure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.Configure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Configure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Configure();" />
      <MemberSignature Language="F#" Value="abstract member Configure : unit -&gt; unit&#xA;override this.Configure : unit -&gt; unit" Usage="dataSourceDesigner.Configure " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.Configure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン ホストのデータ ソース構成ユーティリティを起動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは<xref:System.Web.UI.Design.DataSourceDesigner>クラスではサポートされていませんが、 <xref:System.Web.UI.Design.DataSourceDesigner>クラスを継承するカスタムデータソースデザイナーでオーバーライドできます。 <xref:System.Web.UI.Design.DataSourceDesigner.Configure%2A>  
  
 などのデザインホスト[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]では、次のプロセスを完了することで、メソッドの<xref:System.Web.UI.Design.DataSourceDesigner.Configure%2A>動作を確認できます。  
  
1.  コントロールまたはコントロールを<xref:System.Web.UI.WebControls.SqlDataSource>ページに配置します。 <xref:System.Web.UI.WebControls.AccessDataSource>  
  
2.  デザインビューの アクション 一覧で、**構成** をクリックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">基本クラスでこのメソッドを呼び出そうとしました。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたデータ ソースのプロパティが変更された場合に発生します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : unit -&gt; string" Usage="dataSourceDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン時に、関連付けられたデータ ソース コントロールを表示するための HTML マークアップを取得します。</summary>
        <returns>デザイン時表示のマークアップ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml%2A>メソッドの既定の実装では、基本<xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A?displayProperty=nameWithType>メソッドから結果が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerDataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.DesignerDataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetView (viewName As String) As DesignerDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::DesignerDataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView&#xA;override this.GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView" Usage="dataSourceDesigner.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">ビューの名前。</param>
        <summary>ビュー名で識別される <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> オブジェクトを取得します。</summary>
        <returns>この実装は常に <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生クラスでが存在`viewName`しない場合、メソッド<xref:System.Web.UI.Design.DataSourceDesigner.GetView%2A>はを返す`null`必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerDataSourceView" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetViewNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; string[]&#xA;override this.GetViewNames : unit -&gt; string[]" Usage="dataSourceDesigner.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このデータ ソースで使用できるビュー名の配列を返します。</summary>
        <returns>ビュー名の配列。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataSourceDesigner.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">呼び出し元のオブジェクトによって渡された <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 値が <see langword="false" /> の場合、データ ソースのプロパティが変更されたときに <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A>は、関連付けられたデータソースにバインドされている各コントロールのコントロールデザイナーに対して、デザインホストでコントロールを更新するように通知します。 メソッドを<xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A>使用するか、引数`false`を指定してメソッドを呼び出すことによって、メソッドを抑制できます。 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="OnSchemaRefreshed">
      <MemberSignature Language="C#" Value="protected virtual void OnSchemaRefreshed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSchemaRefreshed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSchemaRefreshed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSchemaRefreshed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSchemaRefreshed : EventArgs -&gt; unit&#xA;override this.OnSchemaRefreshed : EventArgs -&gt; unit" Usage="dataSourceDesigner.OnSchemaRefreshed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 値が <see langword="false" /> の場合、データ ソースのスキーマが変更されたときに <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A>は、スキーマ内のフィールドが変更された、関連付けられたデータソースにバインドされている各コントロールをコントロールデザイナーに通知します。 メソッドを<xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> `false`使用するか、引数を指定してプロパティを呼び出すことによって、メソッドを抑制できます。 <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A>  <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema (bool preferSilent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema(bool preferSilent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema (preferSilent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema(bool preferSilent);" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : bool -&gt; unit&#xA;override this.RefreshSchema : bool -&gt; unit" Usage="dataSourceDesigner.RefreshSchema preferSilent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferSilent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="preferSilent">スキーマの更新時にイベントを使用できるようにする場合は <see langword="true" />。スキーマの更新時に <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> イベントと <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> イベントを使用できないようにする場合は <see langword="false" />。</param>
        <summary>イベントを中止するかどうかをオプションで指定して、データ ソースのスキーマを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> メソッドは、<xref:System.Web.UI.Design.DataSourceDesigner> クラスではサポートされません。 ただし、 <xref:System.Web.UI.Design.WebControls.XmlDataSourceDesigner>クラスなどの派生クラスではサポートされています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">基本クラスでこのメソッドを呼び出そうとしました。</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="ResumeDataSourceEvents">
      <MemberSignature Language="C#" Value="public virtual void ResumeDataSourceEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeDataSourceEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResumeDataSourceEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResumeDataSourceEvents();" />
      <MemberSignature Language="F#" Value="abstract member ResumeDataSourceEvents : unit -&gt; unit&#xA;override this.ResumeDataSourceEvents : unit -&gt; unit" Usage="dataSourceDesigner.ResumeDataSourceEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>発生を抑えていたデータ ソース イベントを再開します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データソースイベントを抑制するには、 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A>プロパティを`false`に設定するか<xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> 、の`true`引数を指定してメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">基本クラスでこのメソッドを呼び出そうとしました。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="SchemaRefreshed">
      <MemberSignature Language="C#" Value="public event EventHandler SchemaRefreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SchemaRefreshed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SchemaRefreshed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ SchemaRefreshed;" />
      <MemberSignature Language="F#" Value="member this.SchemaRefreshed : EventHandler " Usage="member this.SchemaRefreshed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スキーマが更新された後に発生します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="SchemasEquivalent">
      <MemberSignature Language="C#" Value="public static bool SchemasEquivalent (System.Web.UI.Design.IDataSourceSchema schema1, System.Web.UI.Design.IDataSourceSchema schema2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SchemasEquivalent(class System.Web.UI.Design.IDataSourceSchema schema1, class System.Web.UI.Design.IDataSourceSchema schema2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SchemasEquivalent (schema1 As IDataSourceSchema, schema2 As IDataSourceSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SchemasEquivalent(System::Web::UI::Design::IDataSourceSchema ^ schema1, System::Web::UI::Design::IDataSourceSchema ^ schema2);" />
      <MemberSignature Language="F#" Value="static member SchemasEquivalent : System.Web.UI.Design.IDataSourceSchema * System.Web.UI.Design.IDataSourceSchema -&gt; bool" Usage="System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent (schema1, schema2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema1" Type="System.Web.UI.Design.IDataSourceSchema" />
        <Parameter Name="schema2" Type="System.Web.UI.Design.IDataSourceSchema" />
      </Parameters>
      <Docs>
        <param name="schema1">比較対象の第 1 スキーマ (<see cref="T:System.Web.UI.Design.IDataSourceSchema" /> から派生)。</param>
        <param name="schema2">比較対象の第 2 スキーマ。</param>
        <summary>2 つのスキーマが等しいかどうかを示す値を返します。</summary>
        <returns>2 つのスキーマが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 2つのスキーマの比較は、ビューに含まれているフィールドの名前と種類に基づいています。 メソッド<xref:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent%2A>は、 <xref:System.Web.UI.Design.DataSourceDesigner>クラスのインスタンスなしで使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="SuppressDataSourceEvents">
      <MemberSignature Language="C#" Value="public virtual void SuppressDataSourceEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuppressDataSourceEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SuppressDataSourceEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SuppressDataSourceEvents();" />
      <MemberSignature Language="F#" Value="abstract member SuppressDataSourceEvents : unit -&gt; unit&#xA;override this.SuppressDataSourceEvents : unit -&gt; unit" Usage="dataSourceDesigner.SuppressDataSourceEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> メソッドが呼び出されるまで、すべてのデータ ソース イベントを延期します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="SuppressingDataSourceEvents">
      <MemberSignature Language="C#" Value="protected bool SuppressingDataSourceEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressingDataSourceEvents" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressingDataSourceEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool SuppressingDataSourceEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressingDataSourceEvents : bool" Usage="System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> イベントまたは <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> メソッドが発生するかどうかを示す値を取得します。</summary>
        <value>イベントの発生を抑える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、引数<xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> を指定 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> してメソッドまたはメソッドを呼び出すことによって設定できます。 `true` <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
    <Member MemberName="ViewSchemasEquivalent">
      <MemberSignature Language="C#" Value="public static bool ViewSchemasEquivalent (System.Web.UI.Design.IDataSourceViewSchema viewSchema1, System.Web.UI.Design.IDataSourceViewSchema viewSchema2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ViewSchemasEquivalent(class System.Web.UI.Design.IDataSourceViewSchema viewSchema1, class System.Web.UI.Design.IDataSourceViewSchema viewSchema2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewSchemasEquivalent (viewSchema1 As IDataSourceViewSchema, viewSchema2 As IDataSourceViewSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ViewSchemasEquivalent(System::Web::UI::Design::IDataSourceViewSchema ^ viewSchema1, System::Web::UI::Design::IDataSourceViewSchema ^ viewSchema2);" />
      <MemberSignature Language="F#" Value="static member ViewSchemasEquivalent : System.Web.UI.Design.IDataSourceViewSchema * System.Web.UI.Design.IDataSourceViewSchema -&gt; bool" Usage="System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent (viewSchema1, viewSchema2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewSchema1" Type="System.Web.UI.Design.IDataSourceViewSchema" />
        <Parameter Name="viewSchema2" Type="System.Web.UI.Design.IDataSourceViewSchema" />
      </Parameters>
      <Docs>
        <param name="viewSchema1">比較対象の第 1 ビュー (<see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> から派生)。</param>
        <param name="viewSchema2">比較対象の第 2 ビュー。</param>
        <summary>2 つのスキーマ ビューが等しいかどうかを示す値を返します。</summary>
        <returns>2 つのビューが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent%2A>は、 <xref:System.Web.UI.Design.DataSourceDesigner>クラスのインスタンスなしで使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceViewSchema" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">デザイン時サポートの拡張</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">方法 : デザイン モードでコントロールの外観と動作を拡張する</related>
      </Docs>
    </Member>
  </Members>
</Type>
