<Type Name="XsdSchemaFileEditor" FullName="System.Web.UI.Design.XsdSchemaFileEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b34b7e695d661ae154d2b92b74a1b2f313d3919" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30556106" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsdSchemaFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdSchemaFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XsdSchemaFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdSchemaFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdSchemaFileEditor : System::Web::UI::Design::UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML スキーマ定義ファイルを選択するためのデザイン時ユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XsdSchemaFileEditor>を選択し、XML スキーマ定義ファイル (.xsd) の URL を編集して、URL をコントロールのプロパティに割り当てるにはデザイン時にオブジェクトを使用します。  
  
 使用して、<xref:System.ComponentModel.EditorAttribute>属性に関連付けるには、<xref:System.Web.UI.Design.XsdSchemaFileEditor>プロパティを設定します。 デザイン サーフェイスに関連付けられたプロパティを編集すると、デザイナー ホスト呼び出し、<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>メソッドです。 <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>メソッドを使用、<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>メソッドは、さらに、URL を選択するためのユーザー インターフェイスを表示し、ユーザーが選択されている URL を返します。 <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A>メソッドは、ユーザー インターフェイスの表示スタイルを示します。  
  
 クラスを派生、<xref:System.Web.UI.Design.XsdSchemaFileEditor>を XML スキーマの URL プロパティのカスタム エディターを定義します。 たとえば、派生クラスをオーバーライドできます、<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>メソッド、および、呼び出し、<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>メソッドをカスタム<xref:System.Web.UI.Design.XsdSchemaFileEditor.Filter%2A>または<xref:System.Web.UI.Design.XsdSchemaFileEditor.Caption%2A>値。  
  
   
  
## Examples  
 次のコード例は、のインスタンスに関連付ける方法を示します、<xref:System.Web.UI.Design.XsdSchemaFileEditor>カスタム コントロール内に含まれるプロパティを持つクラス。 デザイン サーフェイスにコントロールのプロパティを編集する際に、<xref:System.Web.UI.Design.XsdSchemaFileEditor>クラスを選択し、プロパティ値の XML スキーマ定義ファイルの名前を編集するユーザー インターフェイスを提供します。  
  
 [!code-csharp[WebDesigner.XsdSchemaFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XsdSchemaFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XsdSchemaFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XsdSchemaFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdSchemaFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdSchemaFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択ダイアログ ボックスに表示するキャプションを取得します。</summary>
        <value>選択ダイアログ ボックスに表示するキャプション テキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XsdSchemaFileEditor.Caption%2A>プロパティを使って、<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>メソッドを呼び出すときに、<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>メソッドで、デザイン時にユーザーに、URL の選択 ダイアログ ボックスが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URL 選択ダイアログ ボックスに表示されるアイテムにフィルターをかけるための、エディターの URL フィルター オプションを取得します。</summary>
        <value>ダイアログ ボックスの 1 つ以上の URL フィルター オプションを表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XsdSchemaFileEditor.Filter%2A>プロパティを使って、<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>メソッドを呼び出すときに、<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>メソッドで、デザイン時にユーザーに、URL の選択 ダイアログ ボックスが表示されます。  
  
 <xref:System.Web.UI.Design.XsdSchemaFileEditor.Filter%2A>プロパティの既定値は、ダイアログ ボックスの 2 つの URL のフィルターを示します: XML スキーマ定義ファイル (*.xsd) およびすべてのファイル用に別の 1 つずつ (\*.\*)。  
  
 カスタム フィルター文字列を指定する派生クラスを<xref:System.Web.UI.Design.XsdSchemaFileEditor>クラス、およびオーバーライドして、<xref:System.Web.UI.Design.XsdSchemaFileEditor.Filter%2A>プロパティをカスタム フィルター文字列を返します。  
  
 フィルター文字列には、1 つまたは複数のフィルター オプションが含まれています。 各フィルター オプションには、縦棒で後に、フィルターの説明が含まれています (&#124;) およびフィルター パターン。 異なるフィルター オプションの文字列は、縦棒で区切られます。  
  
 2 つのフィルター オプションを含むフィルター文字列の例を次に示します。  
  
 "`XML Schema Files (*.xsd)|*.xsd|All Files (*.*)|*.*`".  
  
 フィルタ パターンをセミコロンで区切りますフィルター オプションで複数のフィルター パターンを指定できます。 最初のフィルター オプションが 2 つのフィルター パターンを指定するフィルター文字列の例を次に示します。  
  
 "`Custom Schema Files (*.xs1; *.xs2)|*.xs1;*.xs2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>