<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpressionEditorSheet.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac500a92c41d6071763aeacc5cf80675a148295e317.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00a92c41d6071763aeacc5cf80675a148295e317</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Represents a design-time editor sheet for a custom expression.</source>
          <target state="translated">カスタム式のデザイン時エディター シートを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>This class must be inherited.</source>
          <target state="translated">このクラスは継承する必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</source>
          <target state="translated">カスタム式エディターのシートには、デザイン時にカスタム式のプロパティを設定、開発者ことができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</source>
          <target state="translated">コントロール プロパティの値は、式文字列を使用して設定できます。式の文字列は、式エディターして式ビルダーによって実行時およびデザイン時に評価されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you browse the <ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</source>
          <target state="translated">参照すると、<ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph>デザイン時のプロパティ グリッド内のコントロールのプロパティは、ビジュアル デザイナーがコントロールのプロパティの値を指定する式を設定するダイアログ ボックスを表示します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>You can select the expression type based on a list of expression prefixes.</source>
          <target state="translated">式のプレフィックスのリストに基づく式の型を選択することができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you select an expression prefix from the list, the visual designer uses the associated <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> objects to evaluate and convert the expression string based on the syntax for that type of expression.</source>
          <target state="translated">ビジュアル デザイナーを使用して、関連付けられている、一覧から式のプレフィックスを選択すると<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>を評価し、式の文字列に変換するオブジェクトがその型の式の構文に基づいています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</source>
          <target state="translated">ビジュアル デザイナーでは、式エディターのシートのプロパティを使用して、カスタム式の文字列に結合する 1 つ以上の文字列の入力を求めます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> implementations.</source>
          <target state="translated">通常、新しい式の型を指定すると、デザイン時に固有の式のプレフィックスを定義し、提供するカスタム、<ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Optionally, you can provide a custom <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> implementation that defines properties that are used to form the expression.</source>
          <target state="translated">必要に応じて、カスタムを指定できます<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>条件式に使用されるプロパティを定義する実装。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>To associate an expression prefix with an expression builder and an expression editor, apply the <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph> attribute and an <ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph> attribute to the custom <ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> class, and then configure the expression prefix for an expression builder in the <ph id="ph4">`expressionBuilders`</ph> element in the Web configuration file.</source>
          <target state="translated">式ビルダーと式エディターには、式のプレフィックスを関連付ける、適用、<ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph>属性および<ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph>をカスタム属性<ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph>クラス、し、式ビルダーでの式のプレフィックスを構成、 <ph id="ph4">`expressionBuilders`</ph> Web 構成ファイル内の要素。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a basic editor sheet, which uses a single input string to form the expression.</source>
          <target state="translated">既定の実装、<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>メソッドを 1 つの入力文字列を使用して式を作成する基本的なエディター シートを返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Custom expression editors that are derived from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> can override the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
          <target state="translated">派生したカスタム式エディター、<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>をオーバーライドできます、<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>シートの実装のカスタム エディターを返します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</source>
          <target state="translated">通常、カスタム エディターのシートには、式の文字列の構築に使用される複数のプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns the resulting expression string based on the current expression properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph>メソッドは、現在の式のプロパティに基づく結果として得られる式の文字列を返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph>クラスから派生します<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph>クラスおよび評価して、デザイン時にコントロール プロパティを持つリソース文字列の参照を関連付けることの実装を提供します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph> class is associated with the expression prefix <ph id="ph2">`Resources`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph>クラスは、式のプレフィックスに関連付けられた<ph id="ph2">`Resources`</ph>と<ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>, which defines the individual properties that form a resource reference expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>リソースの参照式が形成する個々 のプロパティを定義します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>When you inherit from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class, you must override the following members:</source>
          <target state="translated">継承する場合、<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>クラスでは、次のメンバーをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph>シートの実装のカスタム エディターを返します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph>式エディター シートを実装するためのカスタムの初期化のアクションを実装するコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Derive a custom expression editor sheet from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</source>
          <target state="translated">カスタム式エディター シートからの派生、<ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph>コントロール プロパティの値の式の新しい型を定義して、式の文字列をビルドする場合は、クラスが複数の式のプロパティ値に基づきます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A derived class implementation should contain the following:</source>
          <target state="translated">派生クラスの実装を次に含める必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>A public property for each distinct value in the expression string that can be set at design time.</source>
          <target state="translated">デザイン時に設定できる式の文字列で個別の値のパブリック プロパティです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>An implementation of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method that forms the custom expression string from the editor sheet property values.</source>
          <target state="translated">実装、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>エディター シートのプロパティ値からカスタム式の文字列を形成するメソッド。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</source>
          <target state="translated">必要に応じて、するコンス トラクターの実装シートのプロパティ エディターの初期値を設定します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The associated custom expression editor class creates an instance of the derived editor sheet in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer.</source>
          <target state="translated">関連付けられているカスタム式エディターのクラスが派生エディター内のシート インスタンスを作成、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph>メソッド、コントロール プロパティの現在の式の文字列でそのインスタンスを初期化し、ビジュアル デザイナーにインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.Design.ExpressionEditorSheet">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method to form the expression string from the input expression sheet property values.</source>
          <target state="translated">ビジュアル デザイナーがシートのプロパティ式を設定することができを呼び出して、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>入力式のシートのプロパティ値から式の文字列を形成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>A service provider implementation supplied by the designer host, used to obtain additional design-time services.</source>
          <target state="translated">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class is abstract, you cannot create an instance of an <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> directly using the <ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>クラスは抽象クラスのインスタンスを作成することはできません、<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph>を使用して直接、<ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>When deriving from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, override the <ph id="ph2">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
          <target state="translated">派生している場合、<ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph>クラス、オーバーライド、<ph id="ph2">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph>式エディター シートを実装するためのカスタムの初期化のアクションを実装するコンス トラクターです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph> constructor.</source>
          <target state="translated">たとえば、追加の式のプロパティを実装するカスタム式エディター シート クラスが式のプロパティの既定値を定義できます、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
          <source>A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</source>
          <target state="translated">カスタム式エディターのシート クラスには、式のプロパティの初期値を設定する入力パラメーターの値を使用する追加のパブリック コンス トラクターのオーバー ロードを定義できます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</source>
          <target state="translated">派生クラスでオーバーライドされると、式エディター シートのプロパティ値によって作成される式文字列を返します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The custom expression string for the current property values.</source>
          <target state="translated">現在のプロパティ値のカスタム式文字列。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</source>
          <target state="translated">カスタム式エディターのシートには、デザイン時の式の文字列を結合する、複数の式プロパティの設定が含まれています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</source>
          <target state="translated">コントロール プロパティの値は、式文字列を使用して設定できます。式の文字列は、式ビルダーによって実行時に評価されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns an expression string that is built from the current expression properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph>メソッドは、現在の式のプロパティから組み込まれている式の文字列を返します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method to get the expression string and set the control property value.</source>
          <target state="translated">ビジュアル デザイナーがシートのプロパティ式を設定することができを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph>式の文字列を取得し、コントロールのプロパティ値を設定するメソッド。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Derive a custom expression editor sheet from the <ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</source>
          <target state="translated">カスタム式エディター シートからの派生、<ph id="ph1">&lt;see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /&gt;</ph>コントロール プロパティの値の式の新しい型を定義して、式の文字列をビルドする場合は、クラスが複数の式のプロパティ値に基づきます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A derived class implementation should contain the following:</source>
          <target state="translated">派生クラスの実装を次に含める必要があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>A public property for each distinct value in the expression string that can be set at design time.</source>
          <target state="translated">デザイン時に設定できる式の文字列で個別の値のパブリック プロパティです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>An implementation of the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method that forms the custom expression string from the editor sheet property values.</source>
          <target state="translated">実装、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>エディター シートのプロパティ値からカスタム式の文字列を形成するメソッド。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</source>
          <target state="translated">必要に応じて、するコンス トラクターの実装シートのプロパティ エディターの初期値を設定します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The associated custom expression editor class creates an instance of the derived editor sheet in the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer.</source>
          <target state="translated">関連付けられているカスタム式エディターのクラスが派生エディター内のシート インスタンスを作成、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /&gt;</ph>メソッド、コントロール プロパティの現在の式の文字列でそのインスタンスを初期化し、ビジュアルにはインスタンスを返しますデザイナー。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph> method to form the expression string from the input expression sheet property values.</source>
          <target state="translated">ビジュアル デザイナーがシートのプロパティ式を設定することができを呼び出して、<ph id="ph1">&lt;see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /&gt;</ph>入力式のシートのプロパティ値から式の文字列を形成します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source>Gets a value that indicates whether the expression string is valid.</source>
          <target state="translated">式文字列が有効かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the expression string is valid; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">式文字列が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
          <source>This base implementation always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">この基本実装は常に <ph id="ph1">`true`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>Gets the service provider implementation that is used by the expression editor sheet.</source>
          <target state="translated">式エディター シートによって使用されるサービス プロバイダー実装を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>, typically provided by the design host, that can be used to obtain additional design-time services.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>。通常はデザイン ホストから提供され、追加のデザイン時サービスを取得するために使用されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to set the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> implementation for a custom expression editor sheet.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph>を設定するコンス トラクター、<ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph>カスタム式エディターのシートの実装です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> property can be used to access services that are provided by the designer host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph>デザイナー ホストによって提供されるサービスにアクセスするプロパティを使用できます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
          <source>For example, call the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph> interface to access project items, documents, or configuration file details that are provided through the visual designer.</source>
          <target state="translated">たとえば、呼び出し、<ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph>メソッドを<ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph>プロジェクト項目にアクセスする、ドキュメント、または、ビジュアルなデザイナーによって提供される構成ファイルの詳細へのインターフェイスです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>