<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a88ee7d30ddcfee7e41a91a055b01c9d43e498b2" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48598566" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>カスタム式のデザイン時エディター シートを表します。 このクラスは継承する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタム式エディター シートでは、開発者がデザイン時にカスタム式のプロパティを設定できます。 式文字列を使用して、コントロール プロパティの値を設定することができます。式の文字列は、式エディターで式ビルダーによって実行時に、デザイン時に評価されます。  
  
 参照すると、<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>デザイン時のプロパティ グリッド内のコントロールのプロパティは、ビジュアル デザイナー、コントロール プロパティの値を提供する式を設定する ダイアログ ボックスが表示されます。 式のプリフィックスのリストに基づく式の型を選択することができます。 ビジュアル デザイナーを使用して、関連付けられている、一覧から式プレフィックスを選択すると<xref:System.Web.UI.Design.ExpressionEditor>と<xref:System.Web.UI.Design.ExpressionEditorSheet>その式の構文に基づいてオブジェクトを評価し、式の文字列を変換します。 ビジュアル デザイナーでは、式エディター シートのプロパティを使用して、カスタム式の文字列に結合する 1 つまたは複数の文字列の入力を求めます。  
  
 通常をデザイン時に新しい式の型を指定する式の一意のプレフィックスを定義し、ユーザー設定を提供<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>実装します。 必要に応じて、カスタムを行うことができます<xref:System.Web.UI.Design.ExpressionEditorSheet>条件式に使用されるプロパティを定義する実装。 式ビルダーと式エディターに式プレフィックスを関連付けるには、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>属性および<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Configuration.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成`expressionBuilders` Web 構成ファイル内の要素。  
  
 既定の実装、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドは、式に 1 つの入力文字列を使用する基本的なエディター シートを返します。 派生したカスタム式エディター、<xref:System.Web.UI.Design.ExpressionEditor>をオーバーライドできます、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>をカスタム エディター シートの実装を返すメソッド。 通常、カスタム エディター シートには、式の文字列の構築に使用される複数のプロパティが含まれています。 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>メソッドは現在の式のプロパティに基づいて結果として得られる式の文字列を返します。  
  
 たとえば、<xref:System.Web.UI.Design.ResourceExpressionEditor>クラスから派生、<xref:System.Web.UI.Design.ExpressionEditor>クラスし、評価し、デザイン時にコントロール プロパティを持つリソース文字列の参照を関連付けることの実装を提供します。 <xref:System.Web.Compilation.ResourceExpressionBuilder>クラスは、式のプレフィックスに関連付けられて`Resources`、<xref:System.Web.UI.Design.ResourceExpressionEditor>実装します。 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>メソッドを返します。 を<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>、リソースの参照式を形成する個々 のプロパティを定義します。  
  
 継承する場合、<xref:System.Web.UI.Design.ExpressionEditorSheet>クラスでは、次のメンバーをオーバーライドする必要があります。  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>をカスタム エディター シートの実装を返すメソッド。  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>式エディター シートの実装のカスタムの初期化アクションを実装するコンス トラクター。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>カスタム式エディター シートからの派生、<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />クラス、コントロール プロパティの値の新しい式の型を定義して、式の文字列をビルドする場合は、複数の expression プロパティの値に基づいています。 派生クラスの実装には、次が含まれます。 
デザイン時に設定できる式の文字列の個々 の値のパブリック プロパティ。  
  
-の実装、<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />カスタム式エディター シートのプロパティの値から文字列を形成するメソッド。  
  
-必要に応じて、コンス トラクター実装シートのプロパティ エディターの初期値を設定します。  
  
関連付けられているカスタム式エディターのクラスの派生のエディター シートのインスタンスを作成する、<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />メソッド、現在の式文字列がコントロールのプロパティの設定をそのインスタンスを初期化し、ビジュアル デザイナーにインスタンスを返します。 ビジュアル デザイナーは、式のシートのプロパティを設定することができ、呼び出して、<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />入力式のシートのプロパティ値から式の文字列を形成するメソッド。</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary><see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ExpressionEditorSheet>クラスが抽象クラスのインスタンスを作成することはできません、<xref:System.Web.UI.Design.ExpressionEditorSheet>を使用して直接、<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>コンス トラクター。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生する場合、<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />クラスでオーバーライド、<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />式エディター シートの実装のカスタムの初期化アクションを実装するコンス トラクター。  
  
その他の式のプロパティを実装するカスタム式エディター シートのクラスが式のプロパティの既定値を定義するなど、<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />コンス トラクター。 カスタム式エディター シート クラスには、式のプロパティの初期値を設定する入力パラメーターの値を使用する追加のパブリック コンス トラクターのオーバー ロードを定義できます。</para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、式エディター シートのプロパティ値によって作成される式文字列を返します。</summary>
        <returns>現在のプロパティ値のカスタム式文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタム式エディター シートには、式の文字列が組み合わされた複数の式プロパティのデザイン時の設定が含まれています。 式文字列を使用して、コントロール プロパティの値を設定することができます。式の文字列は、式ビルダーによって、実行時に評価されます。  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>メソッドは、現在の式のプロパティから組み込まれている式の文字列を返します。 ビジュアル デザイナーは、式のシートのプロパティを設定することができ、呼び出して、<xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>メソッドを式の文字列を取得およびコントロールのプロパティ値を設定します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>カスタム式エディター シートからの派生、<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />クラス、コントロール プロパティの値の新しい式の型を定義して、式の文字列をビルドする場合は、複数の expression プロパティの値に基づいています。 派生クラスの実装には、次が含まれます。 
デザイン時に設定できる式の文字列の個々 の値のパブリック プロパティ。  
  
-の実装、<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />カスタム式エディター シートのプロパティの値から文字列を形成するメソッド。  
  
-必要に応じて、コンス トラクター実装シートのプロパティ エディターの初期値を設定します。  
  
関連付けられているカスタム式エディターのクラスの派生のエディター シートのインスタンスを作成する、<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />メソッド、現在の式文字列がコントロールのプロパティの設定をそのインスタンスを初期化しますおよびビジュアルに、インスタンスを返しますデザイナー。 ビジュアル デザイナーは、式のシートのプロパティを設定することができ、呼び出して、<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />入力式のシートのプロパティ値から式の文字列を形成するメソッド。</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式文字列が有効かどうかを示す値を取得します。</summary>
        <value>式文字列が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この基本実装は常に `true` を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター シートによって使用されるサービス プロバイダー実装を取得します。</summary>
        <value><see cref="T:System.IServiceProvider" />。通常はデザイン ホストから提供され、追加のデザイン時サービスを取得するために使用されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>を設定するコンス トラクター、<xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A>カスタム式エディター シートを実装します。  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A>デザイナー ホストによって提供されるサービスにアクセスするプロパティを使用できます。 たとえば、呼び出し、<xref:System.IServiceProvider.GetService%2A>メソッドを<xref:System.Web.UI.Design.IWebApplication>プロジェクト項目にアクセスする、ドキュメント、またはビジュアル デザイナーによって提供される構成ファイルの詳細情報へのインターフェイス。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>