<Type Name="DataSourceConverter" FullName="System.Web.UI.Design.DataSourceConverter">
  <TypeSignature Language="C#" Value="public class DataSourceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a41cc-101">現在のコンポーネントにアクセスできるデータ ソースのリストを取得できる型コンバーターを提供します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-101">Provides a type converter that can retrieve a list of data sources accessible to the current component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41cc-102"><xref:System.Web.UI.Design.DataSourceConverter> 現在のデザイン時コンポーネントにアクセスできるデータ ソースの一覧の取得に使用できるメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-102"><xref:System.Web.UI.Design.DataSourceConverter> provides methods that can be used to retrieve a list of data sources accessible to the current design-time component.</span></span>  
  
 <span data-ttu-id="a41cc-103">この型コンバーターを使用して[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]でソース データの一覧に表示される値を指定する、**プロパティ**ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="a41cc-103">This type converter is used by [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] to provide the values that appear in the list of data sources in the **Properties** window.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a41cc-104">実行する型コンバーターに直接アクセスする必要がありますしません。</span><span class="sxs-lookup"><span data-stu-id="a41cc-104">You should never access a type converter directly.</span></span> <span data-ttu-id="a41cc-105">代わりに、適切なコンバーターを使用して<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="a41cc-105">Instead, call the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="a41cc-106">詳細については、例を参照してください、<xref:System.ComponentModel.TypeConverter>基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="a41cc-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 <span data-ttu-id="a41cc-107">型コンバーターの詳細については、次を参照してください。、<xref:System.ComponentModel.TypeConverter>基底クラスと[する方法: 実行する型コンバーターを実装する](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)です。</span><span class="sxs-lookup"><span data-stu-id="a41cc-107">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
   
  
## Examples  
 [!code-cpp[DataSourceTypeConverterExamples#4](~/samples/snippets/cpp/VS_Snippets_WebNet/DataSourceTypeConverterExamples/CPP/datasourcetypeconverterexamples.cpp#4)]
 [!code-csharp[DataSourceTypeConverterExamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceTypeConverterExamples/CS/datasourcetypeconverterexamples.cs#4)]
 [!code-vb[DataSourceTypeConverterExamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceTypeConverterExamples/VB/datasourcetypeconverterexamples.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41cc-108"><see cref="T:System.Web.UI.Design.DataSourceConverter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-108">Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a41cc-109">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span></span></param>
        <param name="sourceType"><span data-ttu-id="a41cc-110">変換前の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-110">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="a41cc-111">コンバーターが、指定した型のオブジェクトをコンバーターのネイティブ型に変換できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-111">Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</span></span></summary>
        <returns>
          <span data-ttu-id="a41cc-112">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-112"><see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="a41cc-113">このクラスに実装されると、このメソッドは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-113">As implemented in this class, this method always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a41cc-114">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="a41cc-114">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="a41cc-115"><paramref name="context" />からこのコンバーターが呼び出されている環境に関する追加情報を抽出するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="a41cc-115">The <paramref name="context" /> can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="a41cc-116">この値は <see langword="null" /> になる場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="a41cc-116">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="a41cc-117">また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="a41cc-117">Also, properties on the context object may also return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a41cc-118">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-118">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span></span></param>
        <param name="culture"><span data-ttu-id="a41cc-119">ローカリゼーション機能をサポートするために使用できる <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-119">The <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features.</span></span></param>
        <param name="value"><span data-ttu-id="a41cc-120">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-120">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="a41cc-121">指定したオブジェクトをコンバーターのネイティブな型に変換します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-121">Converts the specified object to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="a41cc-122">変換後の指定されたオブジェクトを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-122">An <see cref="T:System.Object" /> that represents the specified object after conversion.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a41cc-123">変換できませんでした。</span><span class="sxs-lookup"><span data-stu-id="a41cc-123">The conversion could not be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a41cc-124">独自の変換要件を満たすには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="a41cc-124">Override this method to meet your own conversion requirements.</span></span>  
  
 <span data-ttu-id="a41cc-125"><paramref name="context" />コンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a41cc-125">The <paramref name="context" /> parameter can be used to extract additional information about the environment the converter is being invoked from.</span></span> <span data-ttu-id="a41cc-126">あります<see langword="null" />ので、常に確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a41cc-126">It might be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="a41cc-127">また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a41cc-127">Also, properties of the context object may also return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a41cc-128">値を取得する対象のコンポーネントまたはコントロールを示す <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indicating the component or control to get values for.</span></span></param>
        <summary><span data-ttu-id="a41cc-129">コントロールにアクセスできる標準データ ソースを取得します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-129">Gets the standard data sources accessible to the control.</span></span></summary>
        <returns><span data-ttu-id="a41cc-130">アクセスできる標準データ ソースを保持している <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-130">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41cc-131">コンポーネントにアクセスできるデータ ソースは、デザイナーの各コンポーネントでのテストからコンポーネントの一覧を取得することによって決定されます、<xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A>メソッド、および有効なデータ ソースにあるコンポーネントを取得します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-131">The data sources that are accessible to the component are determined by retrieving a list of components from the designer, testing each component with the <xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A> method, and then returning the components that are valid data sources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a41cc-132">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-132">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span></span></param>
        <summary><span data-ttu-id="a41cc-133"><see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが、有効な値をすべて含むリストかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-133">Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</span></span></summary>
        <returns>
          <span data-ttu-id="a41cc-134"><see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> から返された <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> が、使用できるすべての値の除外リストの場合は <see langword="true" />。他の値を使用できる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-134"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values; <see langword="false" /> if other values are possible.</span></span>  
  
 <span data-ttu-id="a41cc-135">このクラスに実装されると、このメソッドは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-135">As implemented in this class, this method always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41cc-136">列挙型の値リストのように、リストが排他的な場合は、他の値は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="a41cc-136">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="a41cc-137">リストが排他的なかどうかは、さらに、標準の一覧の値を他の有効な値がある<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>を提供します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-137">If the list is not exclusive, then there are other valid values besides the list of standard values that <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> provides.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a41cc-138">変換する型は、標準の値をサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="a41cc-138">Override this method if the type you want to convert supports standard values.</span></span>  
  
 <span data-ttu-id="a41cc-139"><paramref name="context" /> パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="a41cc-139">The <paramref name="context" /> parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="a41cc-140">あります<see langword="null" />ので、常に確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a41cc-140">It might be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="a41cc-141">また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a41cc-141">Also, properties of the context object may also return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a41cc-142">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span></span></param>
        <summary><span data-ttu-id="a41cc-143">リストから選択できる標準値セットをコンバーターがサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-143">Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns>
          <span data-ttu-id="a41cc-144">オブジェクトがサポートしている標準値セットを見つけるために <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-144"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a41cc-145">この実装は常に <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-145">This implementation always returns <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValidDataSource (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsValidDataSource(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a41cc-146">有効なデータ ソースとしてチェックする対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="a41cc-146">The component to check as a valid data source.</span></span></param>
        <summary><span data-ttu-id="a41cc-147">指定したコンポーネントがこのコンバーターに対して有効なデータ ソースかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a41cc-147">Indicates whether the specified component is a valid data source for this converter.</span></span></summary>
        <returns>
          <span data-ttu-id="a41cc-148"><paramref name="component" /> が <see cref="T:System.Collections.IEnumerable" /> または <see cref="T:System.ComponentModel.IListSource" /> を実装する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a41cc-148"><see langword="true" /> if <paramref name="component" /> implements <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41cc-149"><xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A>メソッドを使用、<xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A>標準アクセスできるデータ ソースとして利用可能なコンポーネントを決定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="a41cc-149">The <xref:System.Web.UI.Design.DataSourceConverter.GetStandardValues%2A> method uses the <xref:System.Web.UI.Design.DataSourceConverter.IsValidDataSource%2A> method to determine the components that are available as standard accessible data sources.</span></span> <span data-ttu-id="a41cc-150"><xref:System.Web.UI.Design.DataSourceConverter>クラス、有効なデータ ソースを実装するコンポーネント、<xref:System.Collections.IEnumerable>または<xref:System.ComponentModel.IListSource>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="a41cc-150">For the <xref:System.Web.UI.Design.DataSourceConverter> class, a valid data source is a component that implements the <xref:System.Collections.IEnumerable> or <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a41cc-151">カスタム データ ソースのコンバーターがから派生できます、<see cref="T:System.Web.UI.Design.DataSourceConverter" />クラス、し、上書き、<see cref="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" />メソッドは、データ ソースとして、コンポーネントを使用するために必要なインターフェイスの実装をテストします。</span><span class="sxs-lookup"><span data-stu-id="a41cc-151">Custom data source converters can derive from the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class, and override the <see cref="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> method, to test for the interface implementations that are required to use a component as a data source.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>