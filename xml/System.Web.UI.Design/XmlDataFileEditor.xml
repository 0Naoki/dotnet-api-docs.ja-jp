<Type Name="XmlDataFileEditor" FullName="System.Web.UI.Design.XmlDataFileEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bf995aea0776fc4e9c08630d2fbebe44e7fc072" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70489888" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataFileEditor : System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataFileEditor extends System.Web.UI.Design.UrlEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.XmlDataFileEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataFileEditor&#xA;Inherits UrlEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataFileEditor : System::Web::UI::Design::UrlEditor" />
  <TypeSignature Language="F#" Value="type XmlDataFileEditor = class&#xA;    inherit UrlEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.UrlEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML データ ファイルを選択するためのデザイン時ユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.XmlDataFileEditor>オブジェクトは、xml データファイル (.xml) の url を選択および編集して、その url をコントロールプロパティに割り当てるために、デザイン時に使用されます。 たとえば、コントロールは<xref:System.Web.UI.WebControls.XmlDataSource>デザイン時に<xref:System.Web.UI.Design.XmlDataFileEditor>クラスを使用して、 <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>プロパティの値を設定します。  
  
 属性を使用して、 <xref:System.Web.UI.Design.XmlDataFileEditor>をプロパティに関連付けます。 <xref:System.ComponentModel.EditorAttribute> 関連付けられているプロパティがデザインサーフェイスで編集されると、デザイナー <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>ホストはメソッドを呼び出します。 メソッドは、 <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>メソッドを使用します。このメソッドは、url を選択するためのユーザーインターフェイスを表示し、ユーザーが選択した url を返します。 <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> メソッド<xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A>は、ユーザーインターフェイスの表示スタイルを示します。  
  
 XML データプロパティのカスタム<xref:System.Web.UI.Design.XmlDataFileEditor>エディターを定義するには、からクラスを派生させます。 たとえば、派生<xref:System.Web.UI.Design.UrlEditor.EditValue%2A>クラスでメソッドをオーバーライドし、カスタム<xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A>または<xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A>値を<xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>指定してメソッドを呼び出すことができます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.Design.XmlDataFileEditor>クラスのインスタンスをカスタムコントロールに含まれるプロパティに関連付ける方法を示しています。 コントロールプロパティがデザインサーフェイスで編集されると、クラス<xref:System.Web.UI.Design.XmlDataFileEditor>は、プロパティ値の XML ファイル名を選択および編集するためのユーザーインターフェイスを提供します。  
  
 [!code-csharp[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/cs/simplecontrolwithfilename.cs#1)]
 [!code-vb[WebDesigner.XmlDataFileEditor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebDesigner.XmlDataFileEditor/vb/simplecontrolwithfilename.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.UrlEditor" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataFileEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.XmlDataFileEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataFileEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="protected override string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="System.Web.UI.Design.XmlDataFileEditor.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択ダイアログ ボックスに表示するキャプションを取得します。</summary>
        <value>選択ダイアログ ボックスに表示するキャプション テキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、メソッドを呼び出す<xref:System.Web.UI.Design.UrlEditor.EditValue%2A> <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>ときにメソッドによって使用されます。これにより、デザイン時にユーザーに URL 選択ダイアログボックスが表示されます。 <xref:System.Web.UI.Design.XmlDataFileEditor.Caption%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="protected override string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Web.UI.Design.XmlDataFileEditor.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URL 選択ダイアログ ボックスに表示されるアイテムにフィルターをかけるための、エディターの URL フィルター オプションを取得します。</summary>
        <value>ダイアログ ボックスの 1 つ以上の URL フィルター オプションを表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、メソッドを呼び出す<xref:System.Web.UI.Design.UrlEditor.EditValue%2A> <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>ときにメソッドによって使用されます。これにより、デザイン時にユーザーに URL 選択ダイアログボックスが表示されます。 <xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A>  
  
 プロパティ<xref:System.Web.UI.Design.XmlDataFileEditor.Filter%2A>の既定値は、ダイアログボックスの2つの URL フィルターを示します。1つは xml データファイル (* .xml) で\*、\*もう1つはすべてのファイル (.) です。  
  
 フィルター文字列には、1つまたは複数のフィルターオプションが含まれています。 各フィルターオプションには、フィルターの説明と、その後に縦棒 (&#124;) とフィルターパターンが含まれています。 異なるフィルターオプションの文字列は、縦棒で区切られます。  
  
 2つのフィルターオプションを含むフィルター文字列の例を次に示します。  
  
 "`XML Files (*.xml)|*.xml|All Files (*.*)|*.*`".  
  
 フィルターパターンをセミコロンで区切ることによって、フィルターオプションでいくつかのフィルターパターンを指定できます。 最初のフィルターオプションで2つのフィルターパターンを指定するフィルター文字列の例を次に示します。  
  
 "`Custom XML Files (*.xd1; *.xd2)|*.xd1;*.xd2|All Files (*.*)|*.*`".  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.UrlEditor.Filter" />
        <altmember cref="Overload:System.Web.UI.Design.UrlBuilder.BuildUrl" />
      </Docs>
    </Member>
  </Members>
</Type>
