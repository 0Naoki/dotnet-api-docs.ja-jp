<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="885db21a903eb6006c9ad67f607236ee55d91a08" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37747505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="67aa4-101">デザイン時にコントロール プロパティに関連付けられた式を評価したり、式エディター ダイアログ ボックスで使用する式エディター シートをビジュアル デザイン ホストに提供したりするための一連のプロパティとメソッドを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="67aa4-101">Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box.</span>
      </span>
      <span data-ttu-id="67aa4-102">このクラスは抽象クラスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="67aa4-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-103">ビジュアル デザイナー ホストなど[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]を使用して、<xref:System.Web.UI.Design.ExpressionEditor>クラスにカスタム式エディター シートをユーザーにし、デザイン時レンダリングの選択した式を評価します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-103">A visual designer host, such as [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], uses the <xref:System.Web.UI.Design.ExpressionEditor> class to present custom expression editor sheets to the user, and then evaluate the selected expression for design-time rendering.</span></span>  
  
 <span data-ttu-id="67aa4-104">参照すると、<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>デザイン時のプロパティ グリッド内のコントロールのプロパティは、ビジュアル デザイナー、コントロール プロパティの式を設定する ダイアログ ボックスが表示されます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-104">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time Properties grid, the visual designer displays a dialog box to set expressions for a control property.</span></span> <span data-ttu-id="67aa4-105">式のプリフィックスのリストに基づく式の型を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-105">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="67aa4-106">ビジュアル デザイナーを使用して、関連付けられている、一覧から式プレフィックスを選択すると<xref:System.Web.UI.Design.ExpressionEditor>と<xref:System.Web.UI.Design.ExpressionEditorSheet>オブジェクトを設定するには、評価、およびその種類の式の構文に基づく式の文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-106">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to set, evaluate, and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="67aa4-107">ビジュアル デザイナーは、関連付けられているコントロールは、プロパティの式を設定し、評価された式の結果を使用して、コントロールがデザイン サーフェイスに表示されるプロパティの値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-107">The visual designer sets the expression for the associated control property, and then uses the evaluated expression result to assign control property values that are rendered on the design surface.</span></span>  
  
 <span data-ttu-id="67aa4-108">静的な<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、特定の式のプレフィックスまたは式ビルダーに関連付けられている式エディターを取得します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-108">The static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> methods get the expression editor that is associated with a particular expression prefix or expression builder.</span></span> <span data-ttu-id="67aa4-109"><xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>プロパティを<xref:System.Web.UI.Design.ExpressionEditor>オブジェクトが構成されている式のプレフィックスを返します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-109">The <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property for an <xref:System.Web.UI.Design.ExpressionEditor> object returns the configured expression prefix.</span></span> <span data-ttu-id="67aa4-110"><xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>メソッドは、入力式の文字列を評価します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-110">The <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method evaluates an input expression string.</span></span> <span data-ttu-id="67aa4-111"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドが返す、<xref:System.Web.UI.Design.ExpressionEditorSheet>式 ダイアログ ボックスでカスタム式のプロパティの表示に使用する実装。</span><span class="sxs-lookup"><span data-stu-id="67aa4-111">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to prompt for the custom expression properties in the expressions dialog box.</span></span>  
  
 <span data-ttu-id="67aa4-112">通常、デザイン時に新しい式の型をサポートするために一意な式のプレフィックスを定義し、ユーザー設定を提供<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>実装します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-112">Typically, to support a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="67aa4-113">必要に応じて、カスタムを行うことができます<xref:System.Web.UI.Design.ExpressionEditorSheet>式 ダイアログ ボックスで式の形成に使用されるプロパティを定義する実装。</span><span class="sxs-lookup"><span data-stu-id="67aa4-113">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression in the expressions dialog box.</span></span>  
  
 <span data-ttu-id="67aa4-114">式のプレフィックスは、カスタム式の種類を識別し、式ビルダーと式エディターに式を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-114">The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor.</span></span> <span data-ttu-id="67aa4-115">関連付けられているインスタンスを作成する式プレフィックスが使用されるページでは、カスタム式が解析、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス。</span><span class="sxs-lookup"><span data-stu-id="67aa4-115">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span> <span data-ttu-id="67aa4-116">式プレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders`Web 構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="67aa4-116">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span> <span data-ttu-id="67aa4-117">プレフィックスは必須ではありませんが、強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="67aa4-117">The prefix is not required, but highly recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67aa4-118">派生させる方法を次のコード例に示します、<xref:System.Web.UI.Design.ExpressionEditor>カスタム式エディターを定義するクラス。</span><span class="sxs-lookup"><span data-stu-id="67aa4-118">The following code example demonstrates how to derive from the <xref:System.Web.UI.Design.ExpressionEditor> class to define a custom expression editor.</span></span>  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="67aa4-119">
        <para>カスタムを派生することで、次の手順が必要な<see cref="T:System.Web.UI.Design.ExpressionEditor" />クラス:-オーバーライド、<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />デザイン時にカスタム式の型を評価するメソッド。 -必要に応じて、上書き、<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />を結合して、カスタム式プロパティを定義するカスタム クラスを返すメソッド。 適用、<see cref="T:System.Web.Compilation.ExpressionEditorAttribute" />属性を<see cref="T:System.Web.Compilation.ExpressionBuilder" />クラス宣言に派生した式エディターのクラスを使用して、カスタム式ビルダーを関連付けます。たとえば、<see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />クラスから派生、<see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスし、評価し、デザイン時にコントロール プロパティを持つリソース文字列の参照を関連付けることの実装を提供します。<see cref="T:System.Web.Compilation.ResourceExpressionBuilder" />クラスは、式のプレフィックスに関連付けられて<see langword="Resources" />、<see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />実装します。<see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />メソッドを返します。 を<see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />、リソースの参照式を形成する個々 のプロパティを定義します。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="67aa4-119">
          <para>The following steps are required in deriving a custom <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class:  -   Override the <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> method to evaluate the custom expression type at design time.  -   Optionally, override the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method to return a custom class that defines properties that are combined to form the custom expression.  -   Apply the <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> attribute on the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class declaration to associate the custom expression builder with the derived expression editor class.  For example, the <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> class derives from the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time. The <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> class is associated with the expression prefix <see langword="Resources" /> and the <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> implementation. The <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method returns a <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, which defines the individual properties that form a resource reference expression.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="67aa4-120">
            <see cref="T:System.Web.UI.Design.ExpressionEditor" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-120">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-121"><xref:System.Web.UI.Design.ExpressionEditor>クラスが抽象クラスのインスタンスを作成することはできません、<xref:System.Web.UI.Design.ExpressionEditor>クラスを使用して直接、<xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="67aa4-121">Because the <xref:System.Web.UI.Design.ExpressionEditor> class is abstract, you cannot create an instance of the  <xref:System.Web.UI.Design.ExpressionEditor> class directly using the <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="67aa4-122">
            <para>派生する場合、<see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスでオーバーライド、<see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" />式エディターの実装のカスタムの初期化アクションを実装するコンス トラクター。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-122">
              <para>When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> constructor to implement custom initialization actions for your expression editor implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="67aa4-123">評価する式文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-123">An expression string to evaluate.</span>
          </span>
          <span data-ttu-id="67aa4-124">式に式プレフィックスが含まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-124">The expression does not include the expression prefix.</span>
          </span>
        </param>
        <param name="parseTimeData">
          <span data-ttu-id="67aa4-125">
            <c>expression</c> を評価するための追加の解析情報を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-125">An object containing additional parsing information for evaluating <c>expression</c>.</span>
          </span>
          <span data-ttu-id="67aa4-126">これは通常、式ビルダーによって提供されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-126">This typically is provided by the expression builder.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="67aa4-127">
            <c>expression</c> がバインドされるコントロール プロパティの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-127">The type of the control property to which <c>expression</c> is bound.</span>
          </span>
        </param>
        <param name="serviceProvider">
          <span data-ttu-id="67aa4-128">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-128">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67aa4-129">式文字列を評価し、コントロール プロパティのデザイン時の値を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-129">Evaluates an expression string and provides the design-time value for a control property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67aa4-130">式の評価が成功した場合は、評価された式文字列によって参照されるオブジェクト。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-130">The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-131">ビジュアル デザイナー ホストを使用して、<xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>メソッドに式を評価し、関連するコントロール プロパティのデザイン時の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-131">The visual designer host uses the <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method to evaluate an expression and provide the design-time value for an associated control property.</span></span>  
  
 <span data-ttu-id="67aa4-132">ビジュアル デザイナーを使用して、 <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> 、デザイン時と呼び出しの後に、式の文字列を解析するメソッド、<xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>解析された式のデータを持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="67aa4-132">The visual designer uses the <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> method to parse the expression string at design time, and then calls the <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> method with the parsed expression data.</span></span> <span data-ttu-id="67aa4-133">ビジュアル デザイナーでは、評価された式の結果を使用して、コントロールがデザイン サーフェイスに表示されるプロパティの値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-133">The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="67aa4-134">
            <para>派生したクラス、<see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスをオーバーライドする必要があります、<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />デザイン時にカスタム式の型を評価するメソッド。少なくとも、<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />実装は、次の手順を使用する必要があります: 1。式の文字列を評価し、式によって参照されるオブジェクトを決定します。2.返す<see langword="null" />式の文字列を評価することはできません。3.使用して、<see cref="M:System.Type.IsAssignableFrom(System.Type)" />メソッド<paramref name="propertyType" />を決定するかどうか、参照先オブジェクト割り当てることができます、コントロール プロパティの型に直接し、結果に応じて、次の操作のいずれか: - 参照されているオブジェクトを割り当てることができる場合コントロールのプロパティに直接、式の参照先オブジェクトを返します。 -参照先オブジェクトが、単純型の場合は、文字列など、参照先オブジェクトを返します。 場合は、参照先オブジェクトに割り当てられているまたはプロパティの型に変換できるかどうかを決定します。4.使用して、<see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" />メソッドを<see cref="T:System.ComponentModel.TypeConverter" />オブジェクト<paramref name="propertyType" />を決定するかどうか、参照先オブジェクトを変換できるコントロール プロパティの種類にし、結果に応じて、次の操作のいずれか: - 場合は、オブジェクトを指定できます変換されたオブジェクトを使用して、コントロール プロパティの型に変換すると、返す、<see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />メソッド。 -参照先オブジェクトの割り当てまたはに変換できない場合<paramref name="propertyType" />、参照先のオブジェクトを返します。必要に応じて、<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />実装を使用できます、<paramref name="parseTimeData" />オブジェクトによって提供される、<see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />を最適化するか、入力式文字列の評価に役立つを実装します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-134">
              <para>Classes deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class must override the <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> method to evaluate the custom expression type at design time.  At a minimum, an <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> implementation must use the following steps:  1.  Evaluate the expression string and determine the object that is referenced by the expression.  2.  Return <see langword="null" />, if the expression string cannot be evaluated.  3.  Use the <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> method on <paramref name="propertyType" /> to determine whether the referenced object can be assigned directly to the control property type, and then, depending on the result, complete one of the following actions:  -   If the referenced object can be assigned directly to the control property, return the referenced object for the expression.  -   If the referenced object is a simple type, such as a string, return the referenced object.  -   Otherwise, determine whether the referenced object can be assigned to or converted to the property type.  4.  Use the <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> method on the <see cref="T:System.ComponentModel.TypeConverter" /> object for <paramref name="propertyType" /> to determine whether the referenced object can be converted to the control property type, and then, depending on the result, complete one of the following actions:  -   If the object can be converted to the control property type, return the converted object using the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> method.  -   If the referenced object cannot be assigned or converted to <paramref name="propertyType" />, return the referenced object.  Optionally, the <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> implementation can use the <paramref name="parseTimeData" /> object that is supplied by the <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> implementation to optimize or help in the evaluation of the input expression string.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="67aa4-135">式エディター実装でサポートされる式文字列を識別する式プレフィックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-135">Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="67aa4-136">
            <see cref="T:System.Web.UI.Design.ExpressionEditor" /> から派生したクラスでサポートされる式のプレフィックスを表す文字列。式エディターに式プレフィックスが関連付けられていない場合は、空の文字列 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-136">A string representing the prefix for expressions supported by the class derived from the <see cref="T:System.Web.UI.Design.ExpressionEditor" />; otherwise, an empty string (""), if the expression editor does not have an associated expression prefix.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-137">式のプレフィックスは、カスタム式の種類を識別し、式ビルダーと式エディターに式を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-137">The expression prefix identifies the custom expression type and associates an expression with the expression builder and expression editor.</span></span> <span data-ttu-id="67aa4-138">関連付けられているインスタンスを作成する式プレフィックスが使用されるページでは、カスタム式が解析、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス。</span><span class="sxs-lookup"><span data-stu-id="67aa4-138">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span> <span data-ttu-id="67aa4-139">式プレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders`Web 構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="67aa4-139">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="67aa4-140">通常、派生クラスをオーバーライドしない、<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="67aa4-140">Typically, derived classes do not override the <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property.</span></span> <span data-ttu-id="67aa4-141">基本<xref:System.Web.UI.Design.ExpressionEditor>クラスのセット、<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>値に基づいて、<xref:System.Web.Compilation.ExpressionPrefixAttribute>属性が関連付けられている<xref:System.Web.Compilation.ExpressionBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="67aa4-141">The base <xref:System.Web.UI.Design.ExpressionEditor> class sets the <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> value based on the <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute for the associated <xref:System.Web.Compilation.ExpressionBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="67aa4-142">式プレフィックスまたは式ビルダーに関連付けられている <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-142">Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with an expression prefix or expression builder.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">
          <span data-ttu-id="67aa4-143">関連付けられている式エディターを検出するために使用する式プレフィックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-143">The expression prefix used to find the associated expression editor.</span>
          </span>
        </param>
        <param name="serviceProvider">
          <span data-ttu-id="67aa4-144">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-144">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67aa4-145">指定した式プレフィックスに関連付けられている <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-145">Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression prefix.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67aa4-146">
            <paramref name="expressionPrefix" /> に関連付けられた <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装。<paramref name="expressionPrefix" /> が定義されていないか <see cref="T:System.Web.UI.Design.ExpressionEditor" /> に関連付けられていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-146">An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionPrefix" />; otherwise, <see langword="null" />, if <paramref name="expressionPrefix" /> is not defined or is not associated with an <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-147">使用して、静的な<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>を検索するメソッドのオーバー ロード、<xref:System.Web.UI.Design.ExpressionEditor>特定式プレフィックスまたは式ビルダーの型に関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="67aa4-147">Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.</span></span>  
  
 <span data-ttu-id="67aa4-148">カスタム式の種類ごとに、式のプレフィックスは、関連付けられている式ビルダーと式エディターを識別します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-148">For each custom expression type, an expression prefix identifies the associated expression builder and expression editor.</span></span> <span data-ttu-id="67aa4-149">関連付けられているインスタンスを作成する式プレフィックスが使用されるページでは、カスタム式が解析、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス。</span><span class="sxs-lookup"><span data-stu-id="67aa4-149">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span>  
  
 <span data-ttu-id="67aa4-150">式プレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders`Web 構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="67aa4-150">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="67aa4-151">式プレフィックスに関連付けられている式エディターを検索する、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、使用可能な列挙<xref:System.Web.Compilation.ExpressionBuilder>一致するプレフィックスを実装します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-151">To find the associated expression editor for an expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations for a matching prefix.</span></span> <span data-ttu-id="67aa4-152"><xref:System.Web.Compilation.ExpressionBuilder>の実装を構成することができます、 `expressionBuilders` Web 構成ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="67aa4-152">The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file.</span></span> <span data-ttu-id="67aa4-153">場合、使用可能な<xref:System.Web.Compilation.ExpressionBuilder>実装では、その式のプレフィックスを定義、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドで指定されている型を返します、<xref:System.Web.Compilation.ExpressionEditorAttribute>の属性、<xref:System.Web.Compilation.ExpressionBuilder>メタデータ。</span><span class="sxs-lookup"><span data-stu-id="67aa4-153">If an available <xref:System.Web.Compilation.ExpressionBuilder> implementation defines the expression prefix, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67aa4-154">
            <paramref name="serviceProvider" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-154">
              <paramref name="serviceProvider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">
          <span data-ttu-id="67aa4-155">派生式ビルダー クラスの型。関連付けられている式エディターを検出するために使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-155">The type of the derived expression builder class, used to locate the associated expression editor.</span>
          </span>
        </param>
        <param name="serviceProvider">
          <span data-ttu-id="67aa4-156">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-156">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67aa4-157">指定した式ビルダーの型に関連付けられている <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-157">Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression builder type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67aa4-158">
            <paramref name="expressionBuilderType" /> に関連付けられた <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装。<paramref name="expressionBuilderType" /> が見つからないか <see cref="T:System.Web.UI.Design.ExpressionEditor" /> に関連付けられていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-158">An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionBuilderType" />; otherwise, <see langword="null" />, if <paramref name="expressionBuilderType" /> cannot be located or has no associated <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-159">使用して、静的な<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>を検索するオーバー ロード、<xref:System.Web.UI.Design.ExpressionEditor>特定式プレフィックスまたは式ビルダーの型に関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="67aa4-159">Use the static <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> overloads to find the <xref:System.Web.UI.Design.ExpressionEditor> object that is associated with a particular expression prefix or expression builder type.</span></span>  
  
 <span data-ttu-id="67aa4-160">カスタム式の種類ごとに、式のプレフィックスは、関連付けられている式ビルダーと式エディターを識別します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-160">For each custom expression type, an expression prefix identifies the associated expression builder and expression editor.</span></span> <span data-ttu-id="67aa4-161">関連付けられているインスタンスを作成する式プレフィックスが使用されるページでは、カスタム式が解析、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス。</span><span class="sxs-lookup"><span data-stu-id="67aa4-161">When custom expressions are parsed in a page, the expression prefix is used to create instances of the associated <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> classes.</span></span>  
  
 <span data-ttu-id="67aa4-162">式プレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders`Web 構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="67aa4-162">To associate an expression prefix with an expression builder and expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> and <xref:System.Web.Compilation.ExpressionPrefixAttribute> attributes to the custom <xref:System.Web.Compilation.ExpressionBuilder> class and configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="67aa4-163"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、使用可能な列挙<xref:System.Web.Compilation.ExpressionBuilder>を検索する実装`expressionBuilderType`します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-163">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method enumerates the available <xref:System.Web.Compilation.ExpressionBuilder> implementations to locate `expressionBuilderType`.</span></span> <span data-ttu-id="67aa4-164"><xref:System.Web.Compilation.ExpressionBuilder>の実装を構成することができます、 `expressionBuilders` Web 構成ファイルのセクション。</span><span class="sxs-lookup"><span data-stu-id="67aa4-164">The <xref:System.Web.Compilation.ExpressionBuilder> implementations can be configured in the `expressionBuilders` section of the Web configuration file.</span></span> <span data-ttu-id="67aa4-165">場合`expressionBuilderType`が使用可能な一連の見つかった<xref:System.Web.Compilation.ExpressionBuilder>、実装、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドで指定されている型を返します、<xref:System.Web.Compilation.ExpressionEditorAttribute>の属性、<xref:System.Web.Compilation.ExpressionBuilder>メタデータ。</span><span class="sxs-lookup"><span data-stu-id="67aa4-165">If `expressionBuilderType` is found in the set of available <xref:System.Web.Compilation.ExpressionBuilder> implementations, the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> method returns the type that is specified in the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute of the <xref:System.Web.Compilation.ExpressionBuilder> metadata.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67aa4-166">
            <paramref name="expressionBuilderType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-166">
              <paramref name="expressionBuilderType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="67aa4-167">\- または -  <paramref name="serviceProvider" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-167">\- or -  <paramref name="serviceProvider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="67aa4-168">式エディター シートを初期化するために使用する、コントロール プロパティに設定される式文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-168">The expression string set for a control property, used to initialize the expression editor sheet.</span>
          </span>
        </param>
        <param name="serviceProvider">
          <span data-ttu-id="67aa4-169">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-169">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="67aa4-170">現在の式エディターに関連付けられている式エディター シートを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-170">Returns an expression editor sheet that is associated with the current expression editor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="67aa4-171">カスタム式のプロパティを定義する <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-171">An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> that defines the custom expression properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67aa4-172"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドが返す、<xref:System.Web.UI.Design.ExpressionEditorSheet>結合して、カスタム式文字列を定義する実装。</span><span class="sxs-lookup"><span data-stu-id="67aa4-172">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns an <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines the strings that are combined to form a custom expression.</span></span> <span data-ttu-id="67aa4-173">ビジュアル デザイナーは、カスタム式を組み合わせて 1 つまたは複数の文字列を要求する式エディター シートを使用します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-173">The visual designer uses an expression editor sheet to prompt for one or more strings that combine into a custom expression.</span></span> <span data-ttu-id="67aa4-174">基底クラスのメソッドは、条件式を 1 つの入力文字列を使用して、既定の式のエディター シートを返します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-174">The base class method returns a default expression editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="67aa4-175">式エディター シートは、式のプロパティ グリッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-175">The expression editor sheet defines the property grid for the expression.</span></span> <span data-ttu-id="67aa4-176">そのため、プロパティ式エディターを公開するには、ダイアログ ボックスでその式に対して定義できるプロパティになります。</span><span class="sxs-lookup"><span data-stu-id="67aa4-176">Therefore, the properties that the expression editor exposes become properties that can be defined for the expression in the dialog box.</span></span>  
  
 <span data-ttu-id="67aa4-177">派生したクラス、<xref:System.Web.UI.Design.ExpressionEditor>クラスでオーバーライド オプションで、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>カスタム式エディター シートを提供するメソッド。</span><span class="sxs-lookup"><span data-stu-id="67aa4-177">Classes deriving from the <xref:System.Web.UI.Design.ExpressionEditor> class optionally can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to provide a custom expression editor sheet.</span></span> <span data-ttu-id="67aa4-178">カスタム式エディター シートには、フォーム、式の文字列に結合させると、複数のプロパティのデザイン時の入力を許可できます。</span><span class="sxs-lookup"><span data-stu-id="67aa4-178">A custom expression editor sheet can allow design-time input for multiple properties, which are combined together to form the expression string.</span></span>  
  
 <span data-ttu-id="67aa4-179">たとえば、<xref:System.Web.UI.Design.ResourceExpressionEditor>クラスから派生、<xref:System.Web.UI.Design.ExpressionEditor>クラスし、評価し、デザイン時にコントロール プロパティを持つリソース文字列の参照を関連付けることの実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-179">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="67aa4-180"><xref:System.Web.Compilation.ResourceExpressionBuilder>クラスは、式のプレフィックスに関連付けられて`Resources`、<xref:System.Web.UI.Design.ResourceExpressionEditor>実装します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-180">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="67aa4-181"><xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType>メソッドを返します。 を<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>、リソースの参照式を形成する個々 のプロパティを定義します。</span><span class="sxs-lookup"><span data-stu-id="67aa4-181">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="67aa4-182">
            <para>通常をデザイン時に新しい式の型を指定する式の一意のプレフィックスを定義し、ユーザー設定を提供<see cref="T:System.Web.Compilation.ExpressionBuilder" />と<see cref="T:System.Web.UI.Design.ExpressionEditor" />実装します。必要に応じて、カスタムを行うことができます<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />条件式に使用されるプロパティを定義する実装。適用されますが、構成ファイルでは、プレフィックスを定義、場合でも、<see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />オブジェクトおよび<see cref="T:System.Web.Compilation.ExpressionEditorAttribute" />オブジェクト。上書き、<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />カスタム式で複数のプロパティのデザイン時の入力を定義する式エディター シートを返します。ビジュアル デザイナーが呼び出しコントロール プロパティと式エディターの型を選択すると、<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />メソッド、および、装置の現在の式である文字列コントロール プロパティに設定します。使用<paramref name="expression" />式のプロパティの初期値を設定します。使用<paramref name="serviceProvider" />カスタム式シート コンス トラクターを初期化し、デザイナー ホストによって提供されるサービスにアクセスします。呼び出す場合など、<see cref="M:System.IServiceProvider.GetService(System.Type)" />メソッドを<see cref="T:System.Web.UI.Design.IWebApplication" />するプロジェクト項目にアクセスする、ドキュメント、またはビジュアル デザイナーによって提供される構成ファイルの詳細情報の種類。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="67aa4-182">
              <para>Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <see cref="T:System.Web.Compilation.ExpressionBuilder" /> and <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementations. Optionally, you can provide a custom <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementation that defines properties that are used to form the expression. Even though the configuration file defines the prefix, you should also apply an <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> object and an <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> object.  Override the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method to return an expression editor sheet that defines design-time input for multiple properties in a custom expression. When you select a control property and the expression editor type, the visual designer calls the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, and then supplies the current expression string that is set for the control property. Use <paramref name="expression" /> to set the initial values for the expression properties. Use <paramref name="serviceProvider" /> to initialize a custom expression sheet constructor and to access services that are provided by the designer host. For example, call the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method with the <see cref="T:System.Web.UI.Design.IWebApplication" /> type to access project items, documents, or configuration file details that are provided through the visual designer.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>