<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48fedb086caeaf341300f29853c3c3cb0649a9e8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69044337" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>デザイン時にコントロール プロパティに関連付けられた式を評価したり、式エディター ダイアログ ボックスで使用する式エディター シートをビジュアル デザイン ホストに提供したりするための一連のプロパティとメソッドを定義します。 このクラスは抽象クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 などのビジュアルデザイナーホスト[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]は、 <xref:System.Web.UI.Design.ExpressionEditor>クラスを使用してユーザーにカスタム式エディターシートを表示し、選択された式をデザイン時のレンダリング用に評価します。  
  
 [デザイン時の<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>プロパティ] グリッドでコントロールのプロパティを参照すると、ビジュアルデザイナーにダイアログボックスが表示され、コントロールプロパティの式を設定できます。 式のプレフィックスの一覧に基づいて、式の種類を選択できます。 一覧から式のプレフィックスを選択すると、ビジュアルデザイナーは、関連付け<xref:System.Web.UI.Design.ExpressionEditor>ら<xref:System.Web.UI.Design.ExpressionEditorSheet>れたオブジェクトとオブジェクトを使用して、式の型の構文に基づいて、式の文字列を設定、評価、および変換します。 ビジュアルデザイナーは、関連付けられたコントロールプロパティの式を設定し、評価された式の結果を使用して、デザインサーフェイスに表示されるコントロールプロパティ値を割り当てます。  
  
 静的<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、特定の式プレフィックスまたは式ビルダーに関連付けられている式エディターを取得します。 オブジェクトのプロパティは<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> 、構成されている式のプレフィックスを返します。 <xref:System.Web.UI.Design.ExpressionEditor> メソッド<xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>は、入力式文字列を評価します。 メソッド<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>は、[ <xref:System.Web.UI.Design.ExpressionEditorSheet>式] ダイアログボックスでカスタム式のプロパティを確認するために使用されるの実装を返します。  
  
 通常、デザイン時に新しい式の型をサポートするには、一意の式プレフィックスを定義<xref:System.Web.Compilation.ExpressionBuilder>し<xref:System.Web.UI.Design.ExpressionEditor> 、カスタムおよび実装を提供します。 必要に応じて、[式<xref:System.Web.UI.Design.ExpressionEditorSheet> ] ダイアログボックスで式を形成するために使用されるプロパティを定義するカスタム実装を提供できます。  
  
 式のプレフィックスによってカスタム式の型が識別され、式が式ビルダーと式エディターに関連付けられます。 ページでカスタム式が解析されると、式のプレフィックスを使用して、関連<xref:System.Web.Compilation.ExpressionBuilder>するクラスおよび<xref:System.Web.UI.Design.ExpressionEditor>クラスのインスタンスが作成されます。 式のプレフィックスを式ビルダーと式エディターに関連付けるには、カスタム<xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder>クラス<xref:System.Web.Compilation.ExpressionPrefixAttribute>におよび属性を適用し、式ビルダー `expressionBuilders`の式プレフィックスをWeb 構成ファイル内の要素。 プレフィックスは必須ではありませんが、強くお勧めします。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.Design.ExpressionEditor>クラスから派生させてカスタム式エディターを定義する方法を示しています。  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>カスタム<see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスを派生させるには、次の手順を実行する必要があります。 
-デザイン時<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />にカスタム式の型を評価するには、メソッドをオーバーライドします。  
  
-必要に応じて<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 、メソッドをオーバーライドして、カスタム式を形成するために結合されるプロパティを定義するカスタムクラスを返します。  
  
- <see cref="T:System.Web.Compilation.ExpressionBuilder" />クラス宣言<see cref="T:System.Web.Compilation.ExpressionEditorAttribute" />に属性を適用して、カスタム式ビルダーを派生式エディタークラスに関連付けます。  
  
たとえば、クラスは<see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> <see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスから派生し、リソース文字列参照を評価し、デザイン時にコントロールプロパティと関連付けるための実装を提供します。 クラスは、式のプレフィックス<see langword="Resources" />と<see cref="T:System.Web.UI.Design.ResourceExpressionEditor" />実装に関連付けられています。 <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> メソッド<see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />は、リソース<see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />参照式を形成する個々のプロパティを定義するを返します。</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.ExpressionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスは抽象クラスであるため、 <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A>コンストラクターを使用して<xref:System.Web.UI.Design.ExpressionEditor>クラスのインスタンスを直接作成することはできません。 <xref:System.Web.UI.Design.ExpressionEditor>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスから派生する場合は、 <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" />コンストラクターをオーバーライドして、式エディターの実装のカスタム初期化アクションを実装します。</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">評価する式文字列。 式に式プレフィックスが含まれていません。</param>
        <param name="parseTimeData"><paramref name="expression" /> を評価するための追加の解析情報を格納しているオブジェクト。 これは通常、式ビルダーによって提供されます。</param>
        <param name="propertyType"><paramref name="expression" /> がバインドされるコントロール プロパティの型。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary>式文字列を評価し、コントロール プロパティのデザイン時の値を提供します。</summary>
        <returns>式の評価が成功した場合は、評価された式文字列によって参照されるオブジェクト。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビジュアルデザイナーホストは、 <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>メソッドを使用して式を評価し、関連付けられたコントロールプロパティのデザイン時の値を提供します。  
  
 ビジュアルデザイナーは、 <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType>メソッドを使用してデザイン時に式文字列を解析し、解析された式データを使用して<xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>メソッドを呼び出します。 ビジュアルデザイナーは、評価された式の結果を使用して、デザインサーフェイスに表示されるコントロールプロパティ値を割り当てます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.Design.ExpressionEditor" />クラスから派生するクラスは、デザイン<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />時にカスタム式の型を評価するためにメソッドをオーバーライドする必要があります。  
  
<see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />実装では、少なくとも次の手順を実行する必要があります。 
1.  式文字列を評価し、式によって参照されているオブジェクトを確認します。  
  
2.  式<see langword="null" />の文字列を評価できない場合は、を返します。  
  
3.  <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> で<paramref name="propertyType" />メソッドを使用して、参照先のオブジェクトをコントロールプロパティ型に直接割り当てることができるかどうかを判断し、結果に応じて次のいずれかのアクションを実行します。 
-参照されるオブジェクトをコントロールプロパティに直接割り当てることができる場合は、式の参照先オブジェクトを返します。  
  
-参照されたオブジェクトが文字列などの単純型である場合は、参照先のオブジェクトを返します。  
  
-それ以外の場合は、参照先のオブジェクトをプロパティの型に割り当てたり、プロパティの型に変換したりできるかどうかを判断します。  
  
4.  <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" />の<see cref="T:System.ComponentModel.TypeConverter" />オブジェクトに対してメソッドを使用して、参照先のオブジェクトをコントロールプロパティ型に変換できるかどうかを判断し、結果に応じて次のいずれかのアクションを実行します。 <paramref name="propertyType" /> 
-オブジェクトをコントロールプロパティ型に変換できる場合は、 <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />メソッドを使用して、変換されたオブジェクトを返します。  
  
-参照されるオブジェクトをに<paramref name="propertyType" />割り当てたり変換したりできない場合は、参照先のオブジェクトを返します。  
  
必要に応じて、実装は<paramref name="parseTimeData" /> 、 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />実装によって提供されるオブジェクトを使用して、入力式文字列の評価を最適化または支援します。 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /></para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>式エディター実装でサポートされる式文字列を識別する式プレフィックスを取得します。</summary>
        <value><see cref="T:System.Web.UI.Design.ExpressionEditor" /> から派生したクラスでサポートされる式のプレフィックスを表す文字列。式エディターに式プレフィックスが関連付けられていない場合は、空の文字列 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 式のプレフィックスによってカスタム式の型が識別され、式が式ビルダーと式エディターに関連付けられます。 ページでカスタム式が解析されると、式のプレフィックスを使用して、関連<xref:System.Web.Compilation.ExpressionBuilder>するクラスおよび<xref:System.Web.UI.Design.ExpressionEditor>クラスのインスタンスが作成されます。 式のプレフィックスを式ビルダーと式エディターに関連付けるには、カスタム<xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder>クラス<xref:System.Web.Compilation.ExpressionPrefixAttribute>におよび属性を適用し、式ビルダー `expressionBuilders`の式プレフィックスをWeb 構成ファイル内の要素。  
  
 通常、派生クラスは<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>プロパティをオーバーライドしません。 基底<xref:System.Web.UI.Design.ExpressionEditor>クラスは、関連<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>付けられて<xref:System.Web.Compilation.ExpressionPrefixAttribute>いる<xref:System.Web.Compilation.ExpressionBuilder>オブジェクトの属性に基づいて値を設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>式プレフィックスまたは式ビルダーに関連付けられている <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装を返します。</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">関連付けられている式エディターを検出するために使用する式プレフィックス。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary>指定した式プレフィックスに関連付けられている <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装を返します。</summary>
        <returns><paramref name="expressionPrefix" /> に関連付けられた <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装。<paramref name="expressionPrefix" /> が定義されていないか <see cref="T:System.Web.UI.Design.ExpressionEditor" /> に関連付けられていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドオーバーロードを使用して、 <xref:System.Web.UI.Design.ExpressionEditor>特定の式プレフィックスまたは式ビルダー型に関連付けられているオブジェクトを検索します。  
  
 カスタム式の型ごとに、式のプレフィックスによって、関連付けられている式ビルダーと式エディターが識別されます。 ページでカスタム式が解析されると、式のプレフィックスを使用して、関連<xref:System.Web.Compilation.ExpressionBuilder>するクラスおよび<xref:System.Web.UI.Design.ExpressionEditor>クラスのインスタンスが作成されます。  
  
 式のプレフィックスを式ビルダーと式エディターに関連付けるには、カスタム<xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder>クラス<xref:System.Web.Compilation.ExpressionPrefixAttribute>におよび属性を適用し、式ビルダー `expressionBuilders`の式プレフィックスをWeb 構成ファイル内の要素。  
  
 式のプレフィックスに関連付けられている式エディター <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>を検索するため<xref:System.Web.Compilation.ExpressionBuilder>に、メソッドは、一致するプレフィックスの使用可能な実装を列挙します。 実装<xref:System.Web.Compilation.ExpressionBuilder>は、Web 構成ファイルの`expressionBuilders`セクションで構成できます。 使用可能な<xref:System.Web.Compilation.ExpressionBuilder>実装が式のプレフィックスを定義<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>する場合、メソッドは<xref:System.Web.Compilation.ExpressionBuilder>メタデータの<xref:System.Web.Compilation.ExpressionEditorAttribute>属性で指定された型を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider" /> が <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">派生式ビルダー クラスの型。関連付けられている式エディターを検出するために使用します。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary>指定した式ビルダーの型に関連付けられている <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装を返します。</summary>
        <returns><paramref name="expressionBuilderType" /> に関連付けられた <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 実装。<paramref name="expressionBuilderType" /> が見つからないか <see cref="T:System.Web.UI.Design.ExpressionEditor" /> に関連付けられていない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 静的<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>なオーバーロードを使用し<xref:System.Web.UI.Design.ExpressionEditor>て、特定の式プレフィックスまたは式ビルダー型に関連付けられているオブジェクトを検索します。  
  
 カスタム式の型ごとに、式のプレフィックスによって、関連付けられている式ビルダーと式エディターが識別されます。 ページでカスタム式が解析されると、式のプレフィックスを使用して、関連<xref:System.Web.Compilation.ExpressionBuilder>するクラスおよび<xref:System.Web.UI.Design.ExpressionEditor>クラスのインスタンスが作成されます。  
  
 式のプレフィックスを式ビルダーと式エディターに関連付けるには、カスタム<xref:System.Web.Compilation.ExpressionEditorAttribute> <xref:System.Web.Compilation.ExpressionBuilder>クラス<xref:System.Web.Compilation.ExpressionPrefixAttribute>におよび属性を適用し、式ビルダー `expressionBuilders`の式プレフィックスをWeb 構成ファイル内の要素。  
  
 メソッド<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>は、検索`expressionBuilderType`する<xref:System.Web.Compilation.ExpressionBuilder>使用可能な実装を列挙します。 実装<xref:System.Web.Compilation.ExpressionBuilder>は、Web 構成ファイルの`expressionBuilders`セクションで構成できます。 使用`expressionBuilderType`可能な<xref:System.Web.Compilation.ExpressionBuilder>実装のセットにが存在<xref:System.Web.Compilation.ExpressionBuilder>する場合<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 、メソッドは、メタデータの<xref:System.Web.Compilation.ExpressionEditorAttribute>属性で指定された型を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="expressionBuilderType" /> が <see langword="null" /> です。  
  
- または - 
 <paramref name="serviceProvider" /> は <see langword="null" />です。</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">式エディター シートを初期化するために使用する、コントロール プロパティに設定される式文字列。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary>現在の式エディターに関連付けられている式エディター シートを返します。</summary>
        <returns>カスタム式のプロパティを定義する <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>は、カスタム<xref:System.Web.UI.Design.ExpressionEditorSheet>式を形成するために結合される文字列を定義する実装を返します。 ビジュアルデザイナーでは、式エディターシートを使用して、カスタム式に結合される1つ以上の文字列を入力するように求められます。 基本クラスのメソッドは、1つの入力文字列を使用して式を形成する、既定の式エディターシートを返します。 式エディターシートは、式のプロパティグリッドを定義します。 このため、式エディターによって公開されるプロパティは、ダイアログボックスの式に対して定義できるプロパティになります。  
  
 <xref:System.Web.UI.Design.ExpressionEditor>クラスから派生するクラスは、必要に<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>応じて、メソッドをオーバーライドしてカスタム式エディターシートを提供できます。 カスタム式エディターシートを使用すると、複数のプロパティに対してデザイン時の入力を行うことができ、それらを組み合わせて式文字列を作成できます。  
  
 たとえば、クラスは<xref:System.Web.UI.Design.ResourceExpressionEditor> <xref:System.Web.UI.Design.ExpressionEditor>クラスから派生し、リソース文字列参照を評価し、デザイン時にコントロールプロパティと関連付けるための実装を提供します。 クラスは、式のプレフィックス`Resources`と<xref:System.Web.UI.Design.ResourceExpressionEditor>実装に関連付けられています。 <xref:System.Web.Compilation.ResourceExpressionBuilder> メソッド<xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType>は、リソース<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>参照式を形成する個々のプロパティを定義するを返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>通常、デザイン時に新しい式の型を指定するには、一意の式プレフィックスを定義<see cref="T:System.Web.Compilation.ExpressionBuilder" />し<see cref="T:System.Web.UI.Design.ExpressionEditor" /> 、カスタムおよび実装を指定します。 必要に応じて、式の<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />作成に使用されるプロパティを定義するカスタム実装を提供できます。 構成ファイルでプレフィックスが定義されている場合でも、 <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />オブジェクト<see cref="T:System.Web.Compilation.ExpressionEditorAttribute" />とオブジェクトを適用する必要があります。  
  
メソッドを<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />オーバーライドして、カスタム式の複数のプロパティに対するデザイン時の入力を定義する式エディターシートを返します。 コントロールプロパティと式エディターの種類を選択すると、ビジュアルデザイナーによって<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />メソッドが呼び出され、コントロールプロパティに設定されている現在の式文字列が提供されます。 式<paramref name="expression" />のプロパティの初期値を設定するには、を使用します。 カスタム<paramref name="serviceProvider" />式シートコンストラクターを初期化し、デザイナーホストによって提供されるサービスにアクセスするには、を使用します。 たとえば、ビジュアルデザイナーで<see cref="M:System.IServiceProvider.GetService(System.Type)" />提供される<see cref="T:System.Web.UI.Design.IWebApplication" />プロジェクト項目、ドキュメント、または構成ファイルの詳細にアクセスするには、型を指定してメソッドを呼び出します。</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
