<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3f88cd4a35d98f239679fa969616c0ddfce0785" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70579383" /></Metadata><TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>デザイン時にリソース式の評価と編集を行うためのプロパティとメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.Design.ResourceExpressionEditor>は、 <xref:System.Web.UI.Design.ExpressionEditor>クラスから派生し、リソース参照を評価し、デザイン時にコントロールプロパティと関連付けるための実装を提供します。 たとえば、コントロールプロパティの値をリソース式`Resources:submitText`にバインドできます。これは、コントロールプロパティの値が、という名前`submitText`のリソースを使用して設定されていることを示します。  
  
 などのビジュアルデザイナーホスト[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]は、 <xref:System.Web.UI.Design.ResourceExpressionEditor>クラスを使用して、リソース式のリソースクラス、キー、およびデザイナーの既定値を指定し、選択されたリソース式をデザイン時のレンダリング用に評価します。  
  
 [デザイン時の<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>プロパティ] グリッドでコントロールのプロパティを参照すると、ビジュアルデザイナーにダイアログボックスが表示され、コントロールプロパティの実行時の値を指定する式を設定できます。 式のプレフィックスの一覧に基づいて、式の種類を選択できます。 一覧で**リソース**式のプレフィックスを選択すると、ビジュアルデザイナーは<xref:System.Web.UI.Design.ResourceExpressionEditor>メソッドを使用して、リソース式の構文に基づいて式を設定、評価、および変換します。 ビジュアルデザイナーは、評価された式の結果を使用して、デザインサーフェイスに表示されるコントロールプロパティ値を割り当てます。  
  
 の基本<xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType>プロパティは、文字列`Resources`を返します。 <xref:System.Web.Compilation.ResourceExpressionBuilder> クラスは、式のプレフィックス`Resources`と<xref:System.Web.UI.Design.ResourceExpressionEditor>実装に関連付けられています。 <xref:System.Web.Compilation.ResourceExpressionBuilder>  
  
 メソッド<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>は、入力リソース式を評価します。 メソッド<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>は、リソース<xref:System.Web.UI.Design.ExpressionEditorSheet>名、クラス、およびデザイナーの既定値を選択し、選択されたリソース値からリソース式を形成するために使用される実装を返します。  
  
   
  
## Examples  
 クラスを使用して<xref:System.Web.UI.WebControls.HyperLink.Text%2A> <xref:System.Web.UI.WebControls.HyperLink> 、コントロールのプロパティをリソース式にバインドする方法を次のコード例に示します。 <xref:System.Web.UI.Design.ResourceExpressionEditor>  
  
1.  Web フォームプロジェクトで、App_LocalResources ディレクトリに、文字列 .resx という名前の新しいリソースファイルを追加します。  
  
2.  MyLinkText という名前の文字列を文字列の .resx リソースファイルに追加し、値を<xref:System.Web.UI.WebControls.HyperLink>コントロールのテキストに設定します。  
  
     たとえば、 `myLinkText`文字列値をに`This is a good link`設定します。  
  
3.  Web フォームページで、コントロールを<xref:System.Web.UI.WebControls.HyperLink>追加します。  
  
4.  コントロールの プロパティ で **式** をクリックし、省略記号ボタン (.**..**) をクリックします。 `Hyperlink`  
  
     [ `<Hyperlinkname>`**式**] ダイアログボックスが表示されます。  
  
5.  **[バインド]** 可能なプロパティ の **[テキスト]** をクリックし、**[式の種類]** ボックスの一覧に「 **Resources**」と入力します。  
  
     <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>クラスで定義されているリソース式のプロパティが表示されます。  
  
6.  **[式のプロパティ]** で、 **ClassName**を**string に設定**します。これは、コンパイル済みの文字列 .resx リソースファイルのクラス名です。また、 **ResourceKey**を**myLinkText**に設定します。これは、文字列 .resx の文字列名です。  
  
 ビジュアルデザイナーは、 <xref:System.Web.UI.Design.ResourceExpressionEditor>を使用して、 `Text`プロパティのリソース式を割り当てます。 次の .aspx ソースは、リソース式を使用して設定されるプロパティ値の例を示しています。  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトは、基本クラスによって、に`Resources`設定<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>されたプロパティと共に構成されます。 <xref:System.Web.UI.Design.ResourceExpressionEditor>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="resourceExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">評価するリソース式。 <paramref name="expression" />は <see langword="Resources" /> 式のプレフィックスを含みません。</param>
        <param name="parseTimeData"><see cref="T:System.Web.Compilation.ResourceExpressionFields" /> 値の形式で追加の解析データを提供するオブジェクト。</param>
        <param name="propertyType">コントロール プロパティの型。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary>リソース式を評価し、コントロール プロパティのデザイン時の値を提供します。</summary>
        <returns>式の評価が成功した場合は、評価された式文字列によって参照されるオブジェクト。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>は、によって`expression`指定されたリソースを検索し、リソースを返します。  
  
 ビジュアルデザイナーは、 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>メソッドを使用して、リソース式を評価し、関連付けられたコントロールプロパティのデザイン時の値を提供します。 実行時に、ページパーサーは対応<xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder>する実装<xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A>のメソッドとメソッドを使用して、式を評価し、関連付けられたコントロールプロパティの実行時の値を提供します。  
  
 ビジュアルデザイナーは、 <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>メソッドを使用してデザイン時に式文字列を解析し、解析された式データを使用して<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="resourceExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">リソース式。式エディター シートを初期化するために使用します。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。式エディター シートを初期化するために使用します。</param>
        <summary>入力式文字列とサービス プロバイダー実装で初期化されたリソース式エディター シートを返します。</summary>
        <returns>リソース式のプロパティを定義する <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>は、リソース式の式エディターシートの実装を返します。 ビジュアルデザイナーホストは、式ダイアログボックスの式エディターシートを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>
