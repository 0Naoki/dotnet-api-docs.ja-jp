<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d69c070d19dc7b93d0fcd5eff90a622d29d8db38" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37540464" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionEditor&#xA;Inherits ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionEditor : System::Web::UI::Design::ExpressionEditor" />
  <TypeSignature Language="F#" Value="type ResourceExpressionEditor = class&#xA;    inherit ExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>デザイン時にリソース式の評価と編集を行うためのプロパティとメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor>クラスから派生、<xref:System.Web.UI.Design.ExpressionEditor>クラスし、評価し、デザイン時にコントロール プロパティを持つリソースの参照を関連付けることの実装を提供します。 リソース式にコントロール プロパティの値をバインドするなど、 `Resources:submitText`、という名前のリソースを使用してコントロールのプロパティ値を設定することを示します`submitText`します。  
  
 ビジュアル デザイナー ホストなど[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]を使用して、<xref:System.Web.UI.Design.ResourceExpressionEditor>クラスのリソース クラス、キー、およびリソース式のデザイナーの既定値を指定して、デザイン時レンダリングの選択されたリソース式を評価します。  
  
 参照すると、<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>デザイン時のプロパティ グリッド内のコントロールのプロパティは、ビジュアル デザイナーで、コントロール プロパティの実行時の値を提供するセット式にダイアログ ボックスが表示されます。 式のプリフィックスのリストに基づく式の型を選択することができます。 選択すると、**リソース**式プレフィックス一覧で、ビジュアル デザイナーは、<xref:System.Web.UI.Design.ResourceExpressionEditor>メソッドを設定するには、評価、およびリソース式の構文に基づく式を変換します。 ビジュアル デザイナーでは、評価された式の結果を使用して、コントロールがデザイン サーフェイスに表示されるプロパティの値を割り当てます。  
  
 基本<xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=nameWithType>プロパティを<xref:System.Web.Compilation.ResourceExpressionBuilder>文字列を返します`Resources`します。 <xref:System.Web.Compilation.ResourceExpressionBuilder>クラスは、式のプレフィックスに関連付けられて`Resources`、<xref:System.Web.UI.Design.ResourceExpressionEditor>実装します。  
  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>メソッドは入力リソース式を評価します。 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドが返す、<xref:System.Web.UI.Design.ExpressionEditorSheet>リソース名、クラス、およびデザイナーの既定の値を選択して、選択したリソースの値からのリソース式に使用される実装です。  
  
   
  
## Examples  
 次のコード例は、バインドする方法を示します、<xref:System.Web.UI.WebControls.HyperLink.Text%2A>のプロパティを<xref:System.Web.UI.WebControls.HyperLink>コントロールを使用してリソース式を<xref:System.Web.UI.Design.ResourceExpressionEditor>クラス。  
  
1.  Web フォーム プロジェクトでは、App_LocalResources ディレクトリを Strings.resx という名前の新しいリソース ファイルを追加します。  
  
2.  MyLinkText Strings.resx のリソース ファイルをという名前の文字列を追加し、この後のテキストに値を設定、<xref:System.Web.UI.WebControls.HyperLink>コントロール。  
  
     たとえば、設定、`myLinkText`する文字列値`This is a good link`します。  
  
3.  Web フォーム ページで追加、<xref:System.Web.UI.WebControls.HyperLink>コントロール。  
  
4.  `Hyperlink`コントロールのプロパティ で、をクリックして**式**、省略記号ボタンをクリックし、(**.**).  
  
     `<Hyperlinkname>`**式** ダイアログ ボックスが表示されます。  
  
5.  [**バインド可能なプロパティ**、] をクリックして**テキスト**、し、**式の型**一覧で、入力**リソース**します。  
  
     リソース式のプロパティで定義されている、<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>クラスが表示されます。  
  
6.  **式のプロパティ**設定**ClassName**に**文字列**、コンパイル済みの Strings.resx リソース ファイルとセットのクラス名である**ResourceKey**に**myLinkText**Strings.resx で文字列の名前です。  
  
 ビジュアル デザイナーを使用して、<xref:System.Web.UI.Design.ResourceExpressionEditor>のリソース式を割り当てる、`Text`プロパティ。 次の .aspx ソースは、リソース式を使用して設定されているプロパティ値の例を示します。  
  
 [!code-aspx-csharp[ControlsUsingExpressions#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-aspx-vb[ControlsUsingExpressions#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.Design.ResourceExpressionEditor>と共に基底クラスによってオブジェクトが構成されている、<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>プロパティに設定`Resources`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="resourceExpressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">評価するリソース式。 <c>expression</c> に <see langword="Resources" /> 式プレフィックスが含まれていません。</param>
        <param name="parseTimeData">
          <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> 値の形式で追加の解析データを提供するオブジェクト。</param>
        <param name="propertyType">コントロール プロパティの型。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。追加のデザイン時サービスを取得するときに使用されます。</param>
        <summary>リソース式を評価し、コントロール プロパティのデザイン時の値を提供します。</summary>
        <returns>式の評価が成功した場合は、評価された式文字列によって参照されるオブジェクト。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>メソッドで指定されているリソースを検索`expression`、し、リソースを返します。  
  
 ビジュアル デザイナーを使用して、<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>リソース式を評価し、関連するコントロール プロパティのデザイン時の値を指定するメソッド。 ページ パーサーを使用して、実行時に、<xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>と<xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A>メソッドの対応する<xref:System.Web.Compilation.ResourceExpressionBuilder>式を評価し、関連するコントロール プロパティの実行時の値を提供する実装。  
  
 ビジュアル デザイナーを使用して、 <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> 、デザイン時と呼び出しの後に、式の文字列を解析するメソッド、<xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>解析された式のデータを持つメソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="resourceExpressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">リソース式。式エディター シートを初期化するために使用します。</param>
        <param name="serviceProvider">デザイナー ホストによって提供されるサービス プロバイダーの実装。式エディター シートを初期化するために使用します。</param>
        <summary>入力式文字列とサービス プロバイダー実装で初期化されたリソース式エディター シートを返します。</summary>
        <returns>リソース式のプロパティを定義する <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>メソッドは、式エディター シート リソース式の実装を返します。 ビジュアル デザイナー ホストでは、その式 ダイアログ ボックスで式エディター シートを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>