<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6de27827791cea20e30674c532978803b353dd1" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70355983" /></Metadata><TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey"><see cref="T:System.Linq.IGrouping`2" /> のキーの型。</typeparam>
    <typeparam name="TElement"><see cref="T:System.Linq.IGrouping`2" /> 内の値の型。</typeparam>
    <summary>共通のキーを持つオブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IGrouping%602> は、さらに<xref:System.Collections.Generic.IEnumerable%601>キーを持つです。 キーは、の<xref:System.Linq.IGrouping%602>各値に共通する属性を表します。  
  
 の値<xref:System.Linq.IGrouping%602>は、 <xref:System.Collections.Generic.IEnumerable%601>の要素にアクセスすることによってアクセスされます。 値を使用してアクセスするなど、 `foreach` Visual C# でまたは`For Each`を反復処理するループを Visual Basic で、<xref:System.Linq.IGrouping%602>オブジェクト。 例のセクションには、 <xref:System.Linq.IGrouping%602>オブジェクトのキーと値の両方にアクセスする方法を示すコード例が含まれています。  
  
 型は、 <xref:System.Linq.Enumerable.GroupBy%2A>標準クエリ演算子メソッドによって使用されます。このメソッドは、 <xref:System.Linq.IGrouping%602>型の要素のシーケンスを返します。 <xref:System.Linq.IGrouping%602>  
  
   
  
## Examples  
 <xref:System.Linq.IGrouping%602>オブジェクトを操作する方法を次の例に示します。  
  
 この例では<xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> 、は、によって<xref:System.Reflection.MemberInfo> <xref:System.Type.GetMembers%2A>返されるオブジェクトの配列に対してを呼び出します。 <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29><xref:System.Reflection.MemberInfo.MemberType%2A>プロパティの値に基づいてオブジェクトをグループ化します。 <xref:System.Reflection.MemberInfo.MemberType%2A>オブジェクトの<xref:System.Linq.IGrouping%602> <xref:System.Reflection.MemberInfo> <xref:System.Linq.IGrouping%602>配列内ののそれぞれの一意の値は、新しいオブジェクトのキーになり、そのキーを持つオブジェクトは、オブジェクトの値のシーケンスを形成します。 <xref:System.Reflection.MemberInfo>  
  
 最後に、 <xref:System.Linq.Enumerable.First%2A>オブジェクトの<xref:System.Linq.IGrouping%602>シーケンスに対してメソッドを呼び出して、最初<xref:System.Linq.IGrouping%602>のオブジェクトだけを取得します。  
  
 この例では、オブジェクトの<xref:System.Linq.IGrouping%602>キー <xref:System.Reflection.MemberInfo.Name%2A>と、 <xref:System.Linq.IGrouping%602>オブジェクトの値のシーケンス内の各値のプロパティを出力します。 <xref:System.Linq.IGrouping%602>オブジェクトの値のシーケンスにアクセスするには、単に<xref:System.Linq.IGrouping%602>変数自体を使用します。  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" FrameworkAlternate="netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Linq.IGrouping`2" /> のキーを取得します。</summary>
        <value><see cref="T:System.Linq.IGrouping`2" /> のキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 の<xref:System.Linq.IGrouping%602>キーは、 <xref:System.Linq.IGrouping%602>の各値に共通の属性を表します。  
  
   
  
## Examples  
 次の例は、 <xref:System.Linq.IGrouping%602.Key%2A>プロパティを使用して、オブジェクトの<xref:System.Linq.IGrouping%602>シーケンス内の各<xref:System.Linq.IGrouping%602>オブジェクトにラベルを付ける方法を示しています。 メソッド<xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>は、オブジェクトの<xref:System.Linq.IGrouping%602>シーケンスを取得するために使用されます。 `foreach` Visual C# または`For Each`Visual Basic でループを反復処理して各<xref:System.Linq.IGrouping%602>オブジェクト、そのキーとが含まれている値の数を出力します。  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
