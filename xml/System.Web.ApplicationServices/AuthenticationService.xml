<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="626081eaa78769a91a0ce33451058119ffd27176" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51881910" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceBehavior</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サービスを通じて ASP.NET フォーム認証にアクセスできるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService>オブジェクトでは、Windows Communication Foundation (WCF) サービスを使用してユーザーを認証することができます。 WCF 認証サービスを使用するときに、ユーザーの資格情報を格納する Web アプリケーションの外部アプリケーションからの ASP.NET メンバーシップを通じてユーザーを認証する必要があります。 アプリケーションは、送信および SOAP 形式でメッセージを処理できる必要があります。 を通じて、<xref:System.Web.ApplicationServices.AuthenticationService>クラスと、ユーザーにログインできる、ログ ユーザー out、資格情報の検証、認証の状態確認、認証をカスタマイズおよび認証 cookie を設定します。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>クラスには、WCF サービスを介してのみアクセスする必要がある 4 つのメソッドが含まれています。 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>、 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>、 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>、および<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>メソッド。 これらのメソッドを呼び出すには、Web サーバーの認証サービスを有効にして、Web サービスに WCF と互換性のあるクライアント アプリケーションに接続します。 認証サービスを構成する方法については、次を参照してください。[方法: WCF 認証サービスを有効にする](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44)します。  
  
 ユーザーのログオンにユーザーの資格情報を渡す、<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>メソッド。 資格情報が、有効な場合、<xref:System.Web.ApplicationServices.AuthenticationService>クラスは、認証 cookie を作成します。 認証クッキーの期限が切れていない場合は、認証済みユーザーの資格情報であり、もう一度資格情報を検証する必要はありませんを把握します。 (Cookie なしの認証はを通じて使用できません、<xref:System.Web.ApplicationServices.AuthenticationService>クラスです)。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService> 2 つのイベントを発生させることができます:<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>と<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>します。 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>イベントは、ユーザーの資格情報の検証時に発生します。 イベント ハンドラーを作成、<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>ユーザーの資格情報を検証する方法をカスタマイズするイベントです。 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントは、ユーザーの資格情報が検証された後、認証 cookie が設定されるときに発生します。 イベント ハンドラーを作成、<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>認証クッキーをカスタマイズするイベントです。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>メソッドが、認証のためのユーザーの資格情報を確認しますが、認証チケットを返すことはできません。 使用<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>と、ユーザーがログイン前に、新しいアプリケーションのセッションの開始時の資格情報がまだ有効なことを確認する必要があります。  
  
 コンソール アプリケーションから WCF 認証サービスを使用しての例は、次を参照してください。[チュートリアル: ASP.NET アプリケーション サービスを使用する](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)します。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.ApplicationServices.AuthenticationService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの資格情報の妥当性が確認されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>ユーザーの資格情報の検証時にイベントが発生します。 イベント ハンドラーを作成、<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>ユーザーの資格情報を検証する方法をカスタマイズするイベントです。  
  
   
  
## Examples  
 次の例のイベント ハンドラーをバインドする方法を示しています、<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>内のイベント、 `Application_Start` Global.asax ファイルのメソッド。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 次の例は、イベント ハンドラーを<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>Global.asax ファイル内のイベント。 イベント ハンドラーから 2 つの認証値を読み取り、<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>プロパティをという名前にユーザー名とパスワードを独自の認証クラスと共に渡します`StudentAuthentication`します。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証クッキーが設定されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>ユーザーの資格情報が検証された後、認証 cookie が設定されるときにイベントが発生します。 イベント ハンドラーを作成、<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>認証クッキーをカスタマイズするイベントです。  
  
   
  
## Examples  
 次の例では、イベント ハンドラーをバインドする方法を示しています、<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>内のイベント、 `Application_Start` Global.asax ファイルのメソッド。  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 次の例は、イベント ハンドラーを<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>Global.asax ファイル内のイベント。 イベント ハンドラーに値を追加して、認証 cookie をカスタマイズする、<xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A>プロパティを<xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>プロパティ。 ストア、<xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A>プロパティ内のデータは区別されないことがわかっている場合にのみ、クッキー内のプロパティ。 悪意のあるユーザーは、cookie の値にアクセスできます。  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のユーザーが認証されているかどうかを判断します。</summary>
        <returns>ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>メソッドをチェックして、現在のユーザーが認証されたかどうかを確認、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property します。  
  
> [!NOTE]
>  呼び出すのではない、 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Web サーバーで実行されているコードからメソッド。 呼び出す、<xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>メソッドは、WCF サービスの一部としてのみです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">妥当性を確認するユーザー名。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="customCredential">
          <c>userName</c> と <c>password</c> 以外にも妥当性を確認する値があればその値。</param>
        <param name="isPersistent">認証チケットを現在のセッションの終了後も有効のまま残すかどうかを示す値。</param>
        <summary>ユーザーの資格情報をチェックし、資格情報が有効な場合に認証チケット (クッキー) を作成します。</summary>
        <returns>ユーザーの資格情報が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>メソッドがメンバーシップ プロバイダーからユーザー資格情報を検証します。 既定のメンバーシップ プロバイダーを使用したり、実行時にカスタム メンバーシップ プロバイダーを指定することができます。 <xref:System.Web.ApplicationServices.AuthenticationService>クラス パス`userName`と`password`をメンバーシップ プロバイダーの<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>メソッドが渡されない`customCredential`します。 場合<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>返します`true`、 <xref:System.Web.ApplicationServices.AuthenticationService> cookie として認証チケットを作成します。 設定、`isPersistent`パラメーターを`true`を現在のセッションの終了後も続く認証チケットを作成します。  
  
> [!NOTE]
>  常に secure socket layer (SSL を HTTPS を使用して) と共に認証サービスを使用して、機密データを保護します。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>メソッド発生させ、<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>イベントと<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベント。 イベント ハンドラーを作成<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>の値の確認などの認証をカスタマイズする`customCredential`または既定以外のメンバーシップ プロバイダーを使用して資格情報を検証します。 内の値`customCredential`既定のメンバーシップ プロバイダーによっては検証されません。 認証 cookie をカスタマイズするためのイベント ハンドラーを作成<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>です。  
  
> [!NOTE]
>  呼び出すのではない、 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Web サーバーで実行されているコードからメソッド。 呼び出す、<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>メソッドは、WCF サービスの一部としてのみです。 詳細については、次を参照してください。 [ASP.NET 認証](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userName" /> または <paramref name="password" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ブラウザーで認証チケット (クッキー) を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>メソッドは、ブラウザーのクッキー コレクションから認証 cookie を消去します。 ユーザーは、認証にもう一度ログインする必要があります。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>クラスについて、認証チケットがクリアされているサーバーの情報は保存されません。  
  
> [!NOTE]
>  呼び出すのではない、 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> Web サーバーで実行されているコードからメソッド。 呼び出す、<xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>メソッドは、WCF サービスの一部としてのみです。 詳細については、次を参照してください。 [ASP.NET 認証](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">妥当性を確認するユーザー名。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="customCredential">
          <c>userName</c> と <c>password</c> 以外にも妥当性を確認する値があればその値。</param>
        <summary>ユーザーの資格情報を認証しますが、認証チケットは作成しません。</summary>
        <returns>資格情報が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>メソッドは、ユーザーの資格情報を認証しますが、認証 cookie を設定しません。 認証 cookie なし、ユーザーは記録されません場合でも、資格情報が無効です。  
  
 使用して、<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>メソッドと、認証 cookie を受けることがなく、ユーザーの資格情報が有効かどうかを確認する必要があります。 たとえば、可能性がありますこれを行う場合は、認証 cookie がクライアント アプリケーションに既に格納されているが、新しいセッションの開始時にユーザーの資格情報がまだ有効であることを確認します。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>メソッドが発生、<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>イベントは発生しませんが、<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベント。  
  
> [!NOTE]
>  呼び出すのではない、 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Web サーバーで実行されているコードからメソッド。 呼び出す、<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>メソッドは、WCF サービスの一部としてのみです。 詳細については、次を参照してください。 [ASP.NET 認証](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userName" /> または <paramref name="password" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>