<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a07c1c53ba3d12c43769cdd3d2a13e02761ddb8a" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70362343" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サービスを通じて ASP.NET フォーム認証にアクセスできるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService>オブジェクトを使用すると、Windows Communication Foundation (WCF) サービスを使用してユーザーを認証できます。 ユーザーの資格情報を格納する Web アプリケーションの外部にあるアプリケーションの ASP.NET メンバーシップを通じてユーザーを認証する必要がある場合は、WCF 認証サービスを使用します。 アプリケーションは、SOAP 形式でメッセージを送信して使用できる必要があります。 <xref:System.Web.ApplicationServices.AuthenticationService>クラスを使用して、ユーザーのログイン、ユーザーのログアウト、資格情報の検証、認証状態の確認、認証のカスタマイズ、および認証 cookie の設定を行うことができます。  
  
 クラス<xref:System.Web.ApplicationServices.AuthenticationService>には、WCF サービスを介してのみアクセスする必要がある、 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>、、、および<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>の4つのメソッドが含まれています。 これらのメソッドを呼び出すには、Web サーバーで認証サービスを有効にし、WCF 互換クライアントアプリケーションを Web サービスに接続します。 認証サービスを構成する方法の詳細について[は、「」を参照してください。WCF 認証サービス](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44)を有効にします。  
  
 ユーザーをログオンさせるには、ユーザーの資格情報<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>をメソッドに渡します。 資格情報が有効な場合、 <xref:System.Web.ApplicationServices.AuthenticationService>クラスは認証 cookie を作成します。 認証クッキーの有効期限が切れていない場合は、ユーザーの資格情報が認証されていることがわかっているため、資格情報を再検証する必要はありません。 (クッキーレス認証は、 <xref:System.Web.ApplicationServices.AuthenticationService>クラスでは使用できません)。  
  
 は<xref:System.Web.ApplicationServices.AuthenticationService> 、 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>との2つのイベントを発生させることができます。<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> イベント<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>は、ユーザーの資格情報が検証されるときに発生します。 イベントのイベントハンドラーを作成<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>して、ユーザーの資格情報の検証方法をカスタマイズします。 イベント<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>は、ユーザーの資格情報が検証された後に認証クッキーが設定されるときに発生します。 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントのイベントハンドラーを作成して、認証 cookie をカスタマイズします。  
  
 メソッド<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>は、認証のためにユーザー資格情報を確認しますが、認証チケットは返しません。 ユーザー <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>が既にログインしていて、新しいアプリケーションセッションの開始時に資格情報が有効であることを確認する必要がある場合は、を使用します。  
  
 コンソールアプリケーションから WCF 認証サービスを使用する例については、 [「チュートリアル:ASP.NET アプリケーションサービス](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)を使用します。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ApplicationServices.AuthenticationService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの資格情報の妥当性が確認されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>は、ユーザーの資格情報が検証されるときに発生します。 イベントのイベントハンドラーを作成<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>して、ユーザーの資格情報の検証方法をカスタマイズします。  
  
   
  
## Examples  
 次の例は、global.asax ファイルの<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> `Application_Start`メソッドでイベントのイベントハンドラーをバインドする方法を示しています。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 次の例は、global.asax ファイルの<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>イベントのイベントハンドラーを示しています。 イベントハンドラーは、 <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>プロパティから2つの認証値を読み取り、それらをユーザー名とパスワードと共に、という名前`StudentAuthentication`のカスタム認証クラスに渡します。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証クッキーが設定されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントは、ユーザーの資格情報が検証された後に認証クッキーが設定されると発生します。 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントのイベントハンドラーを作成して、認証 cookie をカスタマイズします。  
  
   
  
## Examples  
 次の例は、global.asax ファイルの<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> `Application_Start`メソッドでイベントにイベントハンドラーをバインドする方法を示しています。  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 次の例は、global.asax ファイルの<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントのイベントハンドラーを示しています。 イベントハンドラーは、プロパティの値<xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A>を<xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>プロパティに追加することによって、認証 cookie をカスタマイズします。 プロパティのデータが機微でないことがわかっている場合にのみ、プロパティをクッキーに格納します。<xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> 悪意のあるユーザーは、cookie 内の値にアクセスできます。  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のユーザーが認証されているかどうかを判断します。</summary>
        <returns>ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>プロパティをチェックして、現在のユーザーが認証されているかどうかを確認します。 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>  
  
> [!NOTE]
>  Web サーバーで実行<xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>されているコードからメソッドを呼び出さないでください。 メソッドは、 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> WCF サービスの一部としてのみ呼び出すことができます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">妥当性を確認するユーザー名。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="customCredential"><paramref name="username" /> と <paramref name="password" /> 以外にも妥当性を確認する値があればその値。</param>
        <param name="isPersistent">認証チケットを現在のセッションの終了後も有効のまま残すかどうかを示す値。</param>
        <summary>ユーザーの資格情報をチェックし、資格情報が有効な場合に認証チケット (クッキー) を作成します。</summary>
        <returns>ユーザーの資格情報が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>は、メンバーシッププロバイダーを使用してユーザーの資格情報を検証します。 既定のメンバーシッププロバイダーを使用することも、実行時にカスタムメンバーシッププロバイダーを指定することもできます。 クラス<xref:System.Web.ApplicationServices.AuthenticationService>は、 `userName`メンバーシップ`password`プロバイダーの<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>メソッドにとを渡しますが、に`customCredential`は合格しません。 が<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>を`true`返す<xref:System.Web.ApplicationServices.AuthenticationService>場合、は認証チケットをクッキーとして作成します。 パラメーターをに`true`設定して、現在のセッションを超える認証チケットを作成します。 `isPersistent`  
  
> [!NOTE]
>  機密データを保護するには、常に、secure sockets layer (HTTPS を使用した SSL) で認証サービスを使用します。  
  
 メソッド<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>は、 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>イベントと<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントを発生させます。 のイベントハンドラーを作成<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>して、認証をカスタマイズします。たとえば`customCredential` 、の値を確認したり、既定以外のメンバーシッププロバイダーを使用して資格情報を検証したりすることができます。 の`customCredential`値は、既定のメンバーシッププロバイダーによって検証されません。 認証 cookie をカスタマイズするには、の<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>イベントハンドラーを作成します。  
  
> [!NOTE]
>  Web サーバーで実行<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>されているコードからメソッドを呼び出さないでください。 メソッドは、 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> WCF サービスの一部としてのみ呼び出すことができます。 詳細については、「 [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> または <paramref name="password" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ブラウザーで認証チケット (クッキー) を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>は、ブラウザーの cookie コレクションから認証 cookie をクリアします。 ユーザーは、認証のためにもう一度ログインする必要があります。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>クラスには、認証チケットがクリアされたサーバー上の情報は格納されません。  
  
> [!NOTE]
>  Web サーバーで実行<xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>されているコードからメソッドを呼び出さないでください。 メソッドは、 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> WCF サービスの一部としてのみ呼び出すことができます。 詳細については、「 [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">妥当性を確認するユーザー名。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="customCredential"><paramref name="username" /> と <paramref name="password" /> 以外にも妥当性を確認する値があればその値。</param>
        <summary>ユーザーの資格情報を認証しますが、認証チケットは作成しません。</summary>
        <returns>資格情報が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>は、ユーザーの資格情報を認証しますが、認証 cookie を設定しません。 認証 cookie を使用しない場合、資格情報が有効であっても、ユーザーはログインしません。  
  
 認証 cookie <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>を受信せずにユーザーの資格情報が有効かどうかを確認する必要がある場合は、メソッドを使用します。 たとえば、認証 cookie がクライアントアプリケーションに既に格納されていても、新しいセッションが開始されたときにユーザーの資格情報が有効であることを確認する場合に、このような操作を行うことができます。  
  
 メソッド<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>は<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>イベントを発生させますが、イベント<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>は発生しません。  
  
> [!NOTE]
>  Web サーバーで実行<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>されているコードからメソッドを呼び出さないでください。 メソッドは、 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> WCF サービスの一部としてのみ呼び出すことができます。 詳細については、「 [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> または <paramref name="password" /> が <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 認証サービスの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
