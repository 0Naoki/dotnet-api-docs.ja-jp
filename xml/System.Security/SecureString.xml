<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe25203598008b380f581e3ca68f53880bebef3f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56346214" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2acad-101">不要になったときにコンピューターのメモリから削除するなどして機密を保持する必要があるテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="2acad-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span></span> <span data-ttu-id="2acad-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="2acad-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="2acad-103">使用することをお勧めしません、`SecureString`クラスの新しい開発します。</span><span class="sxs-lookup"><span data-stu-id="2acad-103">We don't recommend that you use the `SecureString` class for new development.</span></span> <span data-ttu-id="2acad-104">詳細については、次を参照してください。 [SecureString を使用してはならない](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md)GitHub でします。</span><span class="sxs-lookup"><span data-stu-id="2acad-104">For more information, see [SecureString shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) on GitHub.</span></span>

 <span data-ttu-id="2acad-105"><xref:System.Security.SecureString> セキュリティ対策を提供する文字列型です。</span><span class="sxs-lookup"><span data-stu-id="2acad-105"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="2acad-106">可能性のある機密性の高い文字列をプレーン テキストとしてプロセス メモリに格納しないようにしようとします。</span><span class="sxs-lookup"><span data-stu-id="2acad-106">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="2acad-107">(ただし、参照制限については、 [SecureString はどのくらい安全でしょうか](#HowSecure)セクションです。)。インスタンスの値<xref:System.Security.SecureString>インスタンスが初期化されるときに、または値が変更されたときに、基になるプラットフォームでサポートされているメカニズムを使用して自動的に保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-107">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="2acad-108">アプリケーションがインスタンスを変更できないレンダリングし、呼び出すことによってさらに変更を防ぐため、<xref:System.Security.SecureString.MakeReadOnly%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-108">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="2acad-109">最大長を<xref:System.Security.SecureString>インスタンスが 65,536 文字。</span><span class="sxs-lookup"><span data-stu-id="2acad-109">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2acad-110">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="2acad-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2acad-111">型のインスタンスを使用してが完了したら、直接的または間接的にそれを破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2acad-111">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2acad-112">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2acad-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="2acad-113">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="2acad-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2acad-114">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2acad-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2acad-115"><xref:System.Security.SecureString>クラスとそのメンバーが COM に表示されません。</span><span class="sxs-lookup"><span data-stu-id="2acad-115">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="2acad-116">詳細については、「<xref:System.Runtime.InteropServices.ComVisibleAttribute>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2acad-116">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="2acad-117">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="2acad-117">In this section:</span></span>  
  
 <span data-ttu-id="2acad-118">[Vs の文字列を指定します。SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="2acad-118">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="2acad-119">[SecureString 操作](#Ops) </span><span class="sxs-lookup"><span data-stu-id="2acad-119">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="2acad-120">[SecureString と相互運用機能](#interop) </span><span class="sxs-lookup"><span data-stu-id="2acad-120">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="2acad-121">SecureString はどのようにセキュリティで保護されたのですか。</span><span class="sxs-lookup"><span data-stu-id="2acad-121">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="2acad-122">SecureString と文字列</span><span class="sxs-lookup"><span data-stu-id="2acad-122">String versus SecureString</span></span>  
 <span data-ttu-id="2acad-123">インスタンス、<xref:System.String?displayProperty=nameWithType>クラスは、両方の変更できないと、不要になったときにガベージ コレクションのプログラムでスケジュールできませんつまり、インスタンスは読み取り専用が作成されると、インスタンスがになりますを予測することはできません。コンピューターのメモリから削除されます。</span><span class="sxs-lookup"><span data-stu-id="2acad-123">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="2acad-124"><xref:System.String?displayProperty=nameWithType>インスタンスが変更可能な既存のインスタンスを変更する表示される操作が実際に操作のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="2acad-124">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="2acad-125">そのため場合、<xref:System.String>オブジェクトには、パスワード、クレジット_カード番号、または個人データなどの機密情報が含まれています、アプリケーションは、コンピューターのメモリから、データを削除できないため、使用後、情報が盗まれるリスクがあります。</span><span class="sxs-lookup"><span data-stu-id="2acad-125">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="2acad-126">A<xref:System.Security.SecureString>オブジェクトと似ています、<xref:System.String>オブジェクトのテキスト値を持つことにします。</span><span class="sxs-lookup"><span data-stu-id="2acad-126">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="2acad-127">ただしの値を<xref:System.Security.SecureString>オブジェクトがメモリに固定されている、アプリケーションが読み取り専用としてマークされるまで、基になるオペレーティング システムによって提供される、暗号化を変更できるよう保護機構を使用する可能性があります、コンピューターのメモリから削除できますいずれか、アプリケーションを呼び出すことによって、<xref:System.Security.SecureString.Dispose%2A>メソッドまたは .NET Framework のガベージ コレクターによって。</span><span class="sxs-lookup"><span data-stu-id="2acad-127">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="2acad-128">制限事項の詳細については、<xref:System.Security.SecureString>クラスを参照してください、 [SecureString はどのくらい安全でしょうか。](#HowSecure)セクション。</span><span class="sxs-lookup"><span data-stu-id="2acad-128">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="2acad-129">ページのトップへ</span><span class="sxs-lookup"><span data-stu-id="2acad-129">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="2acad-130">SecureString 操作</span><span class="sxs-lookup"><span data-stu-id="2acad-130">SecureString operations</span></span>  
 <span data-ttu-id="2acad-131"><xref:System.Security.SecureString>クラスには、次を実行するためのメンバーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2acad-131">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="2acad-132">インスタンスを作成、<xref:System.Security.SecureString>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="2acad-132">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="2acad-133">インスタンス化する、<xref:System.Security.SecureString>パラメーターなしのコンス トラクターを呼び出すことによってオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-133">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="2acad-134">文字を追加、<xref:System.Security.SecureString>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="2acad-134">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="2acad-135">一度に 1 つの文字を追加することができます、<xref:System.Security.SecureString>オブジェクトを呼び出すことによってその<xref:System.Security.SecureString.AppendChar%2A>または<xref:System.Security.SecureString.InsertAt%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-135">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2acad-136">A<xref:System.Security.SecureString>からオブジェクトを構築しない必要があります、<xref:System.String>機微なデータが変更できないのメモリの永続化の結果の対象が既にあるため、<xref:System.String>クラス。</span><span class="sxs-lookup"><span data-stu-id="2acad-136">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="2acad-137">構築する最善の方法、<xref:System.Security.SecureString>などは、時間での文字の管理されていないソースからオブジェクト、<xref:System.Console.ReadKey%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-137">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2acad-138">文字を削除、<xref:System.Security.SecureString>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="2acad-138">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="2acad-139">呼び出すことによって、個々 の文字を置き換えることができます、<xref:System.Security.SecureString.SetAt%2A>メソッドを呼び出すことによって、個々 の文字を削除、<xref:System.Security.SecureString.RemoveAt%2A>メソッド、またはすべての文字から削除、<xref:System.Security.SecureString>インスタンスを呼び出すことによって、<xref:System.Security.SecureString.Clear%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-139">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="2acad-140">ように、<xref:System.Security.SecureString>読み取り専用オブジェクト</span><span class="sxs-lookup"><span data-stu-id="2acad-140">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="2acad-141">定義すると、文字列を<xref:System.Security.SecureString>オブジェクトを表し、呼び出すことがその<xref:System.Security.SecureString.MakeReadOnly%2A>読み取り専用文字列を作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-141">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="2acad-142">に関する情報を取得、<xref:System.Security.SecureString>オブジェクト</span><span class="sxs-lookup"><span data-stu-id="2acad-142">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="2acad-143"><xref:System.Security.SecureString>クラスには、文字列についての情報を提供する 2 つだけのメンバー: その<xref:System.Security.SecureString.Length%2A>文字列で UTF16 でエンコードされたコード ユニットの数を示すプロパティと<xref:System.Security.SecureString.IsReadOnly%2A>メソッドは、インスタンスがかどうかを示します読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-143">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="2acad-144">割り当てられたメモリの解放、<xref:System.Security.SecureString>インスタンス</span><span class="sxs-lookup"><span data-stu-id="2acad-144">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="2acad-145"><xref:System.Security.SecureString>実装、<xref:System.IDisposable>インターフェイスを呼び出すことによって、メモリを解放する、<xref:System.Security.SecureString.Dispose%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-145">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="2acad-146"><xref:System.Security.SecureString>クラスが検査、比較、またはの値を変換するメンバーを持たない、<xref:System.Security.SecureString>します。</span><span class="sxs-lookup"><span data-stu-id="2acad-146">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="2acad-147">このようなメンバーがない場合は、誤ってまたは悪意のある露出からのインスタンスの値を保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-147">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="2acad-148">適切なメンバーを使用して、<xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType>クラスなど、<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A>の値を操作するメソッド、<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-148">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="2acad-149">よく使われる、.NET Framework クラス ライブラリ<xref:System.Security.SecureString>次の方法でインスタンス。</span><span class="sxs-lookup"><span data-stu-id="2acad-149">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="2acad-150">使用して、プロセスにパスワード情報を提供する、<xref:System.Diagnostics.ProcessStartInfo>構造体またはのオーバー ロードを呼び出すことによって、<xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType>メソッド型のパラメーターを持つ<xref:System.Security.SecureString>します。</span><span class="sxs-lookup"><span data-stu-id="2acad-150">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="2acad-151">呼び出すことによってネットワーク パスワードの情報を提供する、<xref:System.Net.NetworkCredential>型のパラメーターを持つクラスのコンス トラクター<xref:System.Security.SecureString>またはを使用して、<xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2acad-151">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2acad-152">呼び出すことによって、SQL Server 認証のパスワードの情報を提供する、<xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType>コンス トラクターまたはの値を取得、<xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="2acad-152">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2acad-153">アンマネージ コードに文字列を渡す。</span><span class="sxs-lookup"><span data-stu-id="2acad-153">To pass a string to unmanaged code.</span></span> <span data-ttu-id="2acad-154">詳細については、次を参照してください。、 [SecureString と相互運用機能](#interop)セクション。</span><span class="sxs-lookup"><span data-stu-id="2acad-154">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="2acad-155">ページのトップへ</span><span class="sxs-lookup"><span data-stu-id="2acad-155">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="2acad-156">SecureString と相互運用機能</span><span class="sxs-lookup"><span data-stu-id="2acad-156">SecureString and interop</span></span>  
 <span data-ttu-id="2acad-157">オペレーティング システムは直接サポートされていません<xref:System.Security.SecureString>の値を変換する必要があります、<xref:System.Security.SecureString>ネイティブ メソッドを文字列を渡す前に必要な文字列型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-157">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="2acad-158"><xref:System.Runtime.InteropServices.Marshal>クラスがこれを実行する 5 つのメソッドには。</span><span class="sxs-lookup"><span data-stu-id="2acad-158">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="2acad-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>、に変換する、<xref:System.Security.SecureString>バイナリ文字列 (BSTR) の COM で認識する文字列値</span><span class="sxs-lookup"><span data-stu-id="2acad-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="2acad-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>、コピー、<xref:System.Security.SecureString>文字列をアンマネージ メモリ内の ANSI 文字列値。</span><span class="sxs-lookup"><span data-stu-id="2acad-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="2acad-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>、コピー、<xref:System.Security.SecureString>文字列をアンマネージ メモリ内の Unicode 文字列値。</span><span class="sxs-lookup"><span data-stu-id="2acad-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="2acad-162">これらの各メソッドは、アンマネージ メモリ内、クリア テキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="2acad-162">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="2acad-163">ゼロにして、不要になったとすぐにそのメモリを解放する開発者の役目です。</span><span class="sxs-lookup"><span data-stu-id="2acad-163">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="2acad-164">各文字列変換とメモリの割り当て方法、対応するメソッドをゼロにし、割り当てられたメモリを解放するには。</span><span class="sxs-lookup"><span data-stu-id="2acad-164">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="2acad-165">割り当てと変換メソッド</span><span class="sxs-lookup"><span data-stu-id="2acad-165">Allocation and conversion method</span></span>|<span data-ttu-id="2acad-166">0 と free メソッド</span><span class="sxs-lookup"><span data-stu-id="2acad-166">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="2acad-167">ページのトップへ</span><span class="sxs-lookup"><span data-stu-id="2acad-167">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="2acad-168">SecureString はどのようにセキュリティで保護されたのですか。</span><span class="sxs-lookup"><span data-stu-id="2acad-168">How secure is SecureString?</span></span>  
 <span data-ttu-id="2acad-169">正常に作成されたときに、<xref:System.Security.SecureString>インスタンスよりも多くのデータ保護を提供する、<xref:System.String>します。</span><span class="sxs-lookup"><span data-stu-id="2acad-169">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="2acad-170">時間での文字のソースから文字列を作成するときに<xref:System.String>、メモリ内で複数の中間を作成できませんでは<xref:System.Security.SecureString>1 つのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="2acad-170">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="2acad-171">ガベージ コレクションの<xref:System.String>オブジェクトは非確定的です。</span><span class="sxs-lookup"><span data-stu-id="2acad-171">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="2acad-172">さらに、そのメモリが固定されていないため、ガベージ コレクターは追加のコピーを作成<xref:System.String>値の移動とメモリを圧縮します。</span><span class="sxs-lookup"><span data-stu-id="2acad-172">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="2acad-173">これに対しに割り当てられた、メモリ、<xref:System.Security.SecureString>オブジェクトが固定されているし、そのメモリを呼び出すことによって解放できる、<xref:System.Security.SecureString.Dispose%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-173">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="2acad-174">格納されているデータが、<xref:System.Security.SecureString>インスタンスが格納されているデータよりも安全、<xref:System.String>インスタンスのセキュリティで保護する方法の大きな制限がある、<xref:System.Security.SecureString>インスタンスがします。</span><span class="sxs-lookup"><span data-stu-id="2acad-174">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="2acad-175">次の設定があります。</span><span class="sxs-lookup"><span data-stu-id="2acad-175">These include:</span></span>  
  
 <span data-ttu-id="2acad-176">プラットフォーム</span><span class="sxs-lookup"><span data-stu-id="2acad-176">Platform</span></span>  
 <span data-ttu-id="2acad-177">Windows オペレーティング システムでの内容を<xref:System.Security.SecureString>インスタンスの内部文字配列が暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="2acad-177">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="2acad-178">ただし、Api またはキー管理の問題がない、ためかどうかの暗号化は使用できませんのすべてのプラットフォームです。</span><span class="sxs-lookup"><span data-stu-id="2acad-178">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="2acad-179">このプラットフォームの依存関係のため<xref:System.Security.SecureString>非 Windows プラットフォーム上の内部記憶域では暗号化されません。</span><span class="sxs-lookup"><span data-stu-id="2acad-179">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="2acad-180">その他の手法は、追加の保護を提供するこれらのプラットフォームで使用されます。</span><span class="sxs-lookup"><span data-stu-id="2acad-180">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="2acad-181">存続期間</span><span class="sxs-lookup"><span data-stu-id="2acad-181">Duration</span></span>  
 <span data-ttu-id="2acad-182">場合でも、<xref:System.Security.SecureString>実装が暗号化を活用するためにプレーン テキストが割り当てられている、<xref:System.Security.SecureString>インスタンスは、さまざまなタイミングで公開する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2acad-182">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="2acad-183">Windows がオペレーティング システム レベルでセキュリティで保護された文字列の実装を提供していませんので、.NET Framework はまだをプレーン テキスト形式が使用するには、セキュリティで保護された文字列値を変換します。</span><span class="sxs-lookup"><span data-stu-id="2acad-183">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="2acad-184">たびにセキュリティで保護された文字列の値は、メソッドによって変更など<xref:System.Security.SecureString.AppendChar%2A>または<xref:System.Security.SecureString.RemoveAt%2A>、その必要がありますの暗号化を解除 (つまり、変換されるプレーン テキストに戻す)、変更され、再度暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="2acad-184">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (that is, converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="2acad-185">相互運用機能の呼び出しで、セキュリティで保護された文字列を使用する場合は、ANSI 文字列、Unicode 文字列、またはバイナリ文字列 (BSTR) に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2acad-185">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="2acad-186">詳細については、次を参照してください。、 [SecureString と相互運用機能](#interop)セクション。</span><span class="sxs-lookup"><span data-stu-id="2acad-186">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="2acad-187">対象の時間間隔、<xref:System.Security.SecureString>インスタンスの値が公開されている比較する短縮だけで、<xref:System.String>クラス。</span><span class="sxs-lookup"><span data-stu-id="2acad-187">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="2acad-188">ストレージ使用量と</span><span class="sxs-lookup"><span data-stu-id="2acad-188">Storage versus usage</span></span>  
 <span data-ttu-id="2acad-189">一般的に、<xref:System.Security.SecureString>クラスは、保護されているまたは機密性を保持する文字列値を格納するメカニズムを定義します。</span><span class="sxs-lookup"><span data-stu-id="2acad-189">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="2acad-190">ただし、.NET Framework 自体の外部で使用状況のメカニズムをサポートする<xref:System.Security.SecureString>します。</span><span class="sxs-lookup"><span data-stu-id="2acad-190">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="2acad-191">つまり、セキュリティで保護された文字列をそのターゲットが認識できる使用可能な形式 (通常はクリア テキスト形式) に変換する必要があります、復号化し、変換は、ユーザー領域で発生する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2acad-191">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="2acad-192">全体として、<xref:System.Security.SecureString>よりも安全<xref:System.String>機密性の高い文字列データの露出を制限するためです。</span><span class="sxs-lookup"><span data-stu-id="2acad-192">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="2acad-193">ただし、これらの文字列であり、まだしたプロセスまたはホスト コンピューター、プロセスのダンプ、またはユーザー表示可能なスワップ ファイルで実行されている悪意のあるプロセスなどの生のメモリにアクセスできる操作に公開する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2acad-193">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="2acad-194">使用する代わりに<xref:System.Security.SecureString>パスワード保護のため、推奨される代替手段は、プロセスの外部で格納されている資格情報を非透過ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="2acad-194">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="2acad-195">ページのトップへ</span><span class="sxs-lookup"><span data-stu-id="2acad-195">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="2acad-196">次の例では、使用する方法、<xref:System.Security.SecureString>新しいプロセスを開始する資格情報として使用するためのユーザーのパスワードをセキュリティで保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-196">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user's password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2acad-197"><see cref="T:System.Security.SecureString" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2acad-197">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2acad-198"><see cref="T:System.Security.SecureString" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2acad-198">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2acad-199">次のコードの例では、既定値 (またはパラメーターなし)、新しいインスタンスを作成するコンス トラクター<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-199">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="2acad-200">呼び出して、<xref:System.Security.SecureString.AppendChar%2A>文字の配列を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-200">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="2acad-201">次の例では、作成、<xref:System.Security.SecureString>オブジェクトの値から、<xref:System.String>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-201">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-202">このインスタンスの値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-202">An error occurred while protecting or unprotecting the value of this instance.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2acad-203">この操作は、このプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2acad-203">This operation is not supported on this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2acad-204">
  <see cref="T:System.Char" /> オブジェクトの配列へのポインター。</span><span class="sxs-lookup"><span data-stu-id="2acad-204">A pointer to an array of <see cref="T:System.Char" /> objects.</span></span></param>
        <param name="length"><span data-ttu-id="2acad-205">新しいインスタンスに含める <paramref name="value" /> の要素の数。</span><span class="sxs-lookup"><span data-stu-id="2acad-205">The number of elements of <paramref name="value" /> to include in the new instance.</span></span></param>
        <summary><span data-ttu-id="2acad-206"><see cref="T:System.Char" /> オブジェクトのサブ配列から <see cref="T:System.Security.SecureString" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2acad-206">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span></span>  
  
<span data-ttu-id="2acad-207">このコンストラクターは、CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="2acad-207">This constructor is not CLS-compliant.</span></span> <span data-ttu-id="2acad-208">CLS 準拠の代わりとして <see cref="M:System.Security.SecureString.#ctor" /> を使用できます。</span><span class="sxs-lookup"><span data-stu-id="2acad-208">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-209">このコンス トラクターが新しいを初期化します<xref:System.Security.SecureString>オブジェクト内の文字の数を`value`で指定された`length`; のインスタンスの値が暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="2acad-209">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="2acad-210">C# では、このコンス トラクターは、アンセーフ コードのコンテキストでのみ定義されます。</span><span class="sxs-lookup"><span data-stu-id="2acad-210">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-211">次の例では、新しいインスタンスを作成<xref:System.Security.SecureString>文字配列へのポインターをコンス トラクターに渡して、オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-211">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2acad-212"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="2acad-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2acad-213"><paramref name="length" /> が 0 未満か、65,536 を超えています。</span><span class="sxs-lookup"><span data-stu-id="2acad-213"><paramref name="length" /> is less than zero or greater than 65,536.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-214">このセキュリティ文字列の値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-214">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2acad-215">この操作は、このプラットフォームではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="2acad-215">This operation is not supported on this platform.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2acad-216">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="2acad-216">requires full trust for the immediate caller.</span></span> <span data-ttu-id="2acad-217">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="2acad-217">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="2acad-218">このセキュリティ文字列に追加される文字。</span><span class="sxs-lookup"><span data-stu-id="2acad-218">A character to append to this secure string.</span></span></param>
        <summary><span data-ttu-id="2acad-219">現在のセキュリティ文字列の末尾に、文字を 1 つ追加します。</span><span class="sxs-lookup"><span data-stu-id="2acad-219">Appends a character to the end of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-220">あれば、このセキュリティ文字列の値が保護されている; は、実装、暗号化などの保護メカニズムを使用している場合`c`が追加されます。 セキュリティで保護された文字列の新しい値は再保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-220">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-221">例を次に示しますが、どのように<xref:System.Security.SecureString.AppendChar%2A>、 <xref:System.Security.SecureString.InsertAt%2A>、 <xref:System.Security.SecureString.RemoveAt%2A>、<xref:System.Security.SecureString.SetAt%2A>と<xref:System.Security.SecureString.Clear%2A>メソッドの値に影響を<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-221">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="2acad-222">次の例で、<xref:System.Security.SecureString.AppendChar%2A>と<xref:System.Security.SecureString.RemoveAt%2A>メソッドは、パスワードの文字を収集するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="2acad-222">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-223">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-223">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2acad-224">このセキュリティ文字列は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-224">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2acad-225">この操作を実行すると、このセキュリティ文字列の長さが 65,536 文字を超えます。</span><span class="sxs-lookup"><span data-stu-id="2acad-225">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-226">このセキュリティ文字列の値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-226">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2acad-227">現在のセキュリティ文字列の値を削除します。</span><span class="sxs-lookup"><span data-stu-id="2acad-227">Deletes the value of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-228">このセキュリティ文字列の値を含むコンピューターのメモリをゼロに設定し、このセキュリティ文字列の値の長さが 0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="2acad-228">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-229">例を次に示しますが、どのように<xref:System.Security.SecureString.AppendChar%2A>、 <xref:System.Security.SecureString.InsertAt%2A>、 <xref:System.Security.SecureString.RemoveAt%2A>、<xref:System.Security.SecureString.SetAt%2A>と<xref:System.Security.SecureString.Clear%2A>メソッドの値に影響を<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-229">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-230">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-230">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2acad-231">このセキュリティ文字列は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-231">This secure string is read-only.</span></span></exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2acad-232">現在のセキュリティ文字列のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="2acad-232">Creates a copy of the current secure string.</span></span></summary>
        <returns><span data-ttu-id="2acad-233">このセキュリティ文字列の複製。</span><span class="sxs-lookup"><span data-stu-id="2acad-233">A duplicate of this secure string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-234">インスタンスの場合、<xref:System.Security.SecureString>は読み取り専用にマークされると、そのインスタンスのコピーができない読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-234">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-235">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-235">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-236">このセキュリティ文字列の値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-236">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2acad-237">現在の <see cref="T:System.Security.SecureString" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="2acad-237">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-238"><xref:System.Security.SecureString.Dispose%2A>メソッドのこの値を含む割り当てられたメモリへのバイナリのゼロが書き込まれる<xref:System.Security.SecureString>オブジェクト、し、割り当てられたメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="2acad-238">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="2acad-239">詳細については、次を参照してください。[ガベージ コレクション](~/docs/standard/garbage-collection/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="2acad-239">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2acad-240">パラメーター <paramref name="c" /> が挿入されるインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="2acad-240">The index position where parameter <paramref name="c" /> is inserted.</span></span></param>
        <param name="c"><span data-ttu-id="2acad-241">挿入する文字。</span><span class="sxs-lookup"><span data-stu-id="2acad-241">The character to insert.</span></span></param>
        <summary><span data-ttu-id="2acad-242">このセキュリティ文字列の指定したインデックス位置に文字を挿入します。</span><span class="sxs-lookup"><span data-stu-id="2acad-242">Inserts a character in this secure string at the specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-243">インデックスが 0 から始まります。このセキュリティ文字列の最初の文字は、インデックス位置 0 です。</span><span class="sxs-lookup"><span data-stu-id="2acad-243">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="2acad-244">存在する場合は、セキュリティで保護された文字列の値が保護されている; は、実装、暗号化などの保護メカニズムを使用している場合`c`は、指定したインデックス位置に挿入し、新しい値を再保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-244">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="2acad-245"><xref:System.Security.SecureString.InsertAt%2A>メソッドと同じ結果を生成する、<xref:System.Security.SecureString.AppendChar%2A>場合は、セキュリティ保護された文字列の末尾に文字を挿入するメソッド、`index`パラメーターの<xref:System.Security.SecureString.InsertAt%2A>がこのインスタンスの長さに設定します。</span><span class="sxs-lookup"><span data-stu-id="2acad-245">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-246">例を次に示しますが、どのように<xref:System.Security.SecureString.AppendChar%2A>、 <xref:System.Security.SecureString.InsertAt%2A>、 <xref:System.Security.SecureString.RemoveAt%2A>、<xref:System.Security.SecureString.SetAt%2A>と<xref:System.Security.SecureString.Clear%2A>メソッドの値に影響を<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-246">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-247">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-247">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2acad-248">このセキュリティ文字列は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-248">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2acad-249"><paramref name="index" /> が、0 未満か、このセキュリティ文字列の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="2acad-249"><paramref name="index" /> is less than zero, or greater than the length of this secure string.</span></span>  
  
<span data-ttu-id="2acad-250">または</span><span class="sxs-lookup"><span data-stu-id="2acad-250">-or-</span></span> 
<span data-ttu-id="2acad-251">この操作を実行すると、このセキュリティ文字列の長さが 65,536 文字を超えます。</span><span class="sxs-lookup"><span data-stu-id="2acad-251">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-252">このセキュリティ文字列の値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-252">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2acad-253">このセキュリティ文字列が読み取り専用としてマークされているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="2acad-253">Indicates whether this secure string is marked read-only.</span></span></summary>
        <returns><span data-ttu-id="2acad-254">このセキュリティ文字列が読み取り専用にマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2acad-254"><see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-255">インスタンスの後<xref:System.Security.SecureString>で読み取り専用にマーク、<xref:System.Security.SecureString.MakeReadOnly%2A>メソッドを呼び出そうとするインスタンスがスローされますの値を変更する、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="2acad-255">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2acad-256">使用して、<xref:System.Security.SecureString.IsReadOnly%2A>メソッドをテストするかどうかを<xref:System.Security.SecureString>はそれを変更する前に読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-256">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-257">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-257">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2acad-258">現在のセキュリティ文字列内の文字数を取得します。</span><span class="sxs-lookup"><span data-stu-id="2acad-258">Gets the number of characters in the current secure string.</span></span></summary>
        <value><span data-ttu-id="2acad-259">このセキュリティ文字列に含まれる <see cref="T:System.Char" /> オブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="2acad-259">The number of <see cref="T:System.Char" /> objects in this secure string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-260"><xref:System.Security.SecureString.Length%2A>プロパティの数を返します<xref:System.Char>このインスタンス内のオブジェクト、Unicode 文字数ではありません。</span><span class="sxs-lookup"><span data-stu-id="2acad-260">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="2acad-261">1 つ以上の Unicode 文字を表す場合があります<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-261">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="2acad-262">最大長を<xref:System.Security.SecureString>インスタンスが 65,536 文字。</span><span class="sxs-lookup"><span data-stu-id="2acad-262">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-263">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-263">This secure string has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2acad-264">このセキュリティ文字列のテキスト値を読み取り専用にします。</span><span class="sxs-lookup"><span data-stu-id="2acad-264">Makes the text value of this secure string read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-265">インスタンスのテキスト値を初期化、<xref:System.Security.SecureString>クラス、<xref:System.Security.SecureString.%23ctor%2A>コンス トラクターで値を変更し、 <xref:System.Security.SecureString.Clear%2A>、 <xref:System.Security.SecureString.RemoveAt%2A>、 <xref:System.Security.SecureString.SetAt%2A>、<xref:System.Security.SecureString.InsertAt%2A>と<xref:System.Security.SecureString.AppendChar%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="2acad-265">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="2acad-266">使用して、最終的な変更を行った後、<xref:System.Security.SecureString.MakeReadOnly%2A>インスタンスの値を変更できないようにするメソッド (読み取り専用)。</span><span class="sxs-lookup"><span data-stu-id="2acad-266">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="2acad-267">読み取り専用とマークされる値と、さらにしようとする変更がスローされます、<xref:System.InvalidOperationException>します。</span><span class="sxs-lookup"><span data-stu-id="2acad-267">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2acad-268">呼び出しの効果<xref:System.Security.SecureString.MakeReadOnly%2A>は永続的なので、<xref:System.Security.SecureString>を再度変更可能にするには、セキュリティで保護された文字列クラスの手段がありません。</span><span class="sxs-lookup"><span data-stu-id="2acad-268">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="2acad-269">使用して、<xref:System.Security.SecureString.IsReadOnly%2A>メソッドのインスタンスかどうかをテストする<xref:System.Security.SecureString>は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-269">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-270">次の例で、<xref:System.Security.SecureString.AppendChar%2A>と<xref:System.Security.SecureString.RemoveAt%2A>メソッドは、パスワードの文字を収集するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="2acad-270">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="2acad-271">パスワードが収集されると、読み取り専用にされます。</span><span class="sxs-lookup"><span data-stu-id="2acad-271">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-272">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-272">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2acad-273">このセキュリティ文字列に含まれる文字のインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="2acad-273">The index position of a character in this secure string.</span></span></param>
        <summary><span data-ttu-id="2acad-274">このセキュリティ文字列の指定されたインデックス位置にある文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="2acad-274">Removes the character at the specified index position from this secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-275">インデックスが 0 から始まります。このインスタンスの最初の文字は、インデックス位置 0 です。</span><span class="sxs-lookup"><span data-stu-id="2acad-275">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="2acad-276">あれば、このセキュリティ文字列の値が保護されている; は、実装、暗号化などの保護メカニズムを使用している場合指定したインデックス位置にある文字が削除されます。新しい値を再保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-276">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-277">例を次に示しますが、どのように<xref:System.Security.SecureString.AppendChar%2A>、 <xref:System.Security.SecureString.InsertAt%2A>、 <xref:System.Security.SecureString.RemoveAt%2A>、<xref:System.Security.SecureString.SetAt%2A>と<xref:System.Security.SecureString.Clear%2A>メソッドの値に影響を<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-277">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="2acad-278">次の例で、<xref:System.Security.SecureString.AppendChar%2A>と<xref:System.Security.SecureString.RemoveAt%2A>メソッドは、パスワードの文字を収集するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="2acad-278">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-279">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-279">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2acad-280">このセキュリティ文字列は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-280">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2acad-281"><paramref name="index" /> が、0 未満か、このセキュリティ文字列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="2acad-281"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-282">このセキュリティ文字列の値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-282">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2acad-283">このセキュリティ文字列に含まれる既存の文字のインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="2acad-283">The index position of an existing character in this secure string</span></span></param>
        <param name="c"><span data-ttu-id="2acad-284">既存の文字を置換する文字。</span><span class="sxs-lookup"><span data-stu-id="2acad-284">A character that replaces the existing character.</span></span></param>
        <summary><span data-ttu-id="2acad-285">指定されたインデックス位置にある既存の文字を別の文字に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="2acad-285">Replaces the existing character at the specified index position with another character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2acad-286">インデックスが 0 から始まります。このインスタンスの最初の文字は、インデックス位置 0 です。</span><span class="sxs-lookup"><span data-stu-id="2acad-286">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="2acad-287">存在する場合は、セキュリティで保護された文字列の値が保護されている; は、実装、暗号化などの保護メカニズムを使用している場合`c` ; 指定したインデックス位置に割り当てられている新しい値は再保護します。</span><span class="sxs-lookup"><span data-stu-id="2acad-287">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2acad-288">例を次に示しますが、どのように<xref:System.Security.SecureString.AppendChar%2A>、 <xref:System.Security.SecureString.InsertAt%2A>、 <xref:System.Security.SecureString.RemoveAt%2A>、<xref:System.Security.SecureString.SetAt%2A>と<xref:System.Security.SecureString.Clear%2A>メソッドの値に影響を<xref:System.Security.SecureString>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2acad-288">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2acad-289">このセキュリティ文字列は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="2acad-289">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2acad-290">このセキュリティ文字列は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2acad-290">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2acad-291"><paramref name="index" /> が、0 未満か、このセキュリティ文字列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="2acad-291"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="2acad-292">このセキュリティ文字列の値を暗号化または復号化するときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="2acad-292">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>