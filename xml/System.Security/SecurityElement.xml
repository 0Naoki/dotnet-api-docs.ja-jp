<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="818d504196f12b9c0fb2d709edba0ae29cba89d4" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911104" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fff8a-101">セキュリティ オブジェクトのエンコーディングの XML オブジェクト モデルを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fff8a-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="fff8a-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fff8a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-103">このクラスは、汎用 XML オブジェクト モデルとして使用するのではなく、セキュリティ システムで使用するための単純な XML オブジェクト モデルの軽量な実装を目的としています。</span><span class="sxs-lookup"><span data-stu-id="fff8a-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="fff8a-104">このドキュメントは、XML の基本的な知識を前提とします。</span><span class="sxs-lookup"><span data-stu-id="fff8a-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="fff8a-105">要素の単純な XML オブジェクト モデルは、次の部分で構成されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="fff8a-106">タグは、要素名です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="fff8a-107">属性は、要素の 0 個以上の名前と値の属性ペアです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="fff8a-108">0 は、子はまたは以上の要素が入れ子`<tag>`と`</tag>`です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="fff8a-109">属性ベースの XML 表現を使用して、セキュリティ要素、およびその値を表現することを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fff8a-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="fff8a-110">つまり、要素のプロパティが属性として表され、プロパティの値は属性値として表されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="fff8a-111">タグ内のテキストは入れ子にしないでください。</span><span class="sxs-lookup"><span data-stu-id="fff8a-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="fff8a-112">いずれかの`<tag>text</tag>`表現型の表現を`<tag value="text"/>`入手可能です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="fff8a-113">この属性ベースの XML 表現を使用して、読みやすくなり、結果の XML シリアル化の簡単な WMI の移植性をします。</span><span class="sxs-lookup"><span data-stu-id="fff8a-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="fff8a-114">属性名は 1 文字以上にする必要がありすることはできません`null`です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="fff8a-115">要素に基づく値表現を使用する場合、テキストを持つ要素を示す文字列`null`で表される、`<tag/>`フォームです。 それ以外の場合、テキストは、で区切られた、`<tag>`と`</tag>`トークンです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="fff8a-116">両方の形式を示されている属性と組み合わせて存在する場合。</span><span class="sxs-lookup"><span data-stu-id="fff8a-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="fff8a-117">タグ、属性、および要素のテキスト、存在する場合は常に大文字小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="fff8a-118">XML フォーム引用符が含まれています、エスケープ文字が必要です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="fff8a-119">XML を使用するために無効な文字を含む文字列値でその結果、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="fff8a-120">これらの規則は、すべてのプロパティとメソッドに適用されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fff8a-121">パフォーマンス上の理由から、要素が、プロパティまたはメソッドのすべてのセットではなく、XML テキスト形式にエンコードされている場合のみ、文字の有効性がチェックされます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="fff8a-122">静的メソッドは、明示的に必要な場所を確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fff8a-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-123">次の例では、メンバーの使用、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-124">
            <see cref="T:System.Security.SecurityElement" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="fff8a-125">XML 要素のタグ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-126">タグを指定して、<see cref="T:System.Security.SecurityElement" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-127">`tag`パラメーターが有効な XML タグ名ので構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff8a-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="fff8a-128">使用して<xref:System.Security.SecurityElement.Escape%2A>文字列から無効な文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-129">次のコードの使用を示しています、<xref:System.Security.SecurityElement.%23ctor%2A>を新規作成するコンス トラクター<xref:System.Security.SecurityElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fff8a-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="fff8a-130">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-131">
            <paramref name="tag" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-132">
            <paramref name="tag" /> パラメーターが XML で無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="fff8a-133">XML 要素のタグ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="fff8a-134">要素内のテキストの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-135">
            <see cref="T:System.Security.SecurityElement" /> クラスの新しいインスタンスを、指定したタグとテキストを使用して初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-136">場合、`text`パラメーターは`null`このコンス トラクターは、既定のコンス トラクターと同じ要素を生成します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-137">
            <paramref name="tag" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-138">
            <paramref name="tag" /> パラメーターまたは <paramref name="text" /> パラメーターが、XML で無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fff8a-139">属性の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fff8a-140">属性の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-141">XML 要素に名前/値属性を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-142">属性の名前と値では、有効な XML 属性の文字のみを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff8a-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="fff8a-143">XML 属性の名前は一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff8a-143">XML attribute names must be unique.</span></span> <span data-ttu-id="fff8a-144">使用して<xref:System.Security.SecurityElement.Escape%2A>文字列から無効な文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="fff8a-145">名前/値ペアの文字列には、引用符は含めることはできませんので、またはその他の文字を引用符で囲む必要とする、引用符で囲まれた文字列は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fff8a-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-146">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.AddAttribute%2A> XML 要素を名前/値の属性を追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="fff8a-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="fff8a-147">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-148">
            <paramref name="name" /> パラメーターまたは <paramref name="value" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-149">
            <paramref name="name" /> パラメーターまたは <paramref name="value" /> パラメーターが、XML で無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="fff8a-150">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-150">-or-</span>
          </span>
          <span data-ttu-id="fff8a-151">
            <paramref name="name" /> パラメーターで指定した名前の属性が既に存在しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="fff8a-152">追加する子要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-152">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-153">XML 要素に子要素を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-153">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-154">子要素には、次の以前の既存の子要素が追加されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-155">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.AddChild%2A> XML 要素に子要素を追加します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="fff8a-156">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-157">
            <paramref name="child" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-157">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fff8a-158">検索する属性の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-158">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-159">XML 要素で、名前を指定して属性を検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-159">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-160">名前付き属性と関連付けられた値。または <paramref name="name" /> の属性が存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-161">次に、XML で`Attribute("B")`は「456」を返します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-162">次のコードの使用を示しています、<xref:System.Security.SecurityElement.Attribute%2A>名前によって属性を検索するメソッド。</span><span class="sxs-lookup"><span data-stu-id="fff8a-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="fff8a-163">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-164">
            <paramref name="name" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-164">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-165">名前/値ペアとして、XML 要素の属性を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-165">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fff8a-166">XML 要素の属性値の <see cref="T:System.Collections.Hashtable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-167">各属性は、<xref:System.Collections.Hashtable>名前/値のペアとして。</span><span class="sxs-lookup"><span data-stu-id="fff8a-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="fff8a-168">属性の名前と値は、有効な XML 属性文字のみを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff8a-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="fff8a-169">使用して<xref:System.Security.SecurityElement.Escape%2A>文字列から無効な文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="fff8a-170">名前/値ペアの文字列には、引用符は含めることはできませんので、またはその他の文字を引用符で囲む必要とする、引用符で囲まれた文字列は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fff8a-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-171">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.Attributes%2A> XML 要素の属性を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="fff8a-172">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fff8a-173">
            <see cref="T:System.Collections.Hashtable" /> オブジェクトの名前または値が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-174">名前は有効な XML 属性名ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-174">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-175">XML 要素の子要素の配列を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-175">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fff8a-176">セキュリティ要素としての XML 要素の順序付けられた子要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-176">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-177">場合、<xref:System.Security.SecurityElement>両方を含む<xref:System.Security.SecurityElement.Text%2A>と<xref:System.Security.SecurityElement.Children%2A>、<xref:System.Security.SecurityElement.Text%2A>先頭に表示されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-178">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.Children%2A> XML 要素の子要素の配列を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="fff8a-179">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-180">XML 親ノードの子が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-180">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-181">現在の <see cref="T:System.Security.SecurityElement" /> オブジェクトのコピーを作成して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-182">現在の <see cref="T:System.Security.SecurityElement" /> オブジェクトのコピー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-183">両方のコピーが含まれる、<xref:System.Security.SecurityElement.Children%2A>と<xref:System.Security.SecurityElement.Attributes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="fff8a-184">現在の XML 要素オブジェクトと比較する XML 要素オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-184">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-185">2 つの XML 要素オブジェクトが等しいかどうかを比較します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-185">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-186">現在の XML 要素のタグ、属性の名前と値、子要素、およびテキスト フィールドが <paramref name="other" /> パラメーターの対応する項目と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-186">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-187">子要素がある場合は、比較を再帰的です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="fff8a-188">同じ文字の別の XML 表現を比較するためのサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fff8a-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-189">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.Equal%2A> 2 つの XML 要素を比較するメソッド。</span><span class="sxs-lookup"><span data-stu-id="fff8a-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="fff8a-190">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="fff8a-191">エスケープする無効な文字を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-191">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-192">文字列内の無効な XML 文字を等価の有効な XML に置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-193">置き換えられた無効な文字を含む入力文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-193">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-194">このメソッド内の文字列を使用する前に、文字列に無効な文字を置換を使用して、<xref:System.Security.SecurityElement>です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="fff8a-195">無効な文字が使用されている場合、<xref:System.Security.SecurityElement>エスケープされることがなく、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="fff8a-196">次の表は、無効な XML 文字とエスケープされた同等を示します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="fff8a-197">無効な XML 文字</span><span class="sxs-lookup"><span data-stu-id="fff8a-197">Invalid XML character</span></span> | <span data-ttu-id="fff8a-198">置き換えられます</span><span class="sxs-lookup"><span data-stu-id="fff8a-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="fff8a-199">次のコードの使用を示しています、<xref:System.Security.SecurityElement.Escape%2A>メソッドに無効な XML を置き換える文字列の文字を有効な XML それに対応します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="fff8a-200">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="fff8a-201">セキュリティ要素を作成するための XML でエンコードされた文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-201">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-202">XML でエンコードされた文字列からセキュリティ要素を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-202">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-203">XML から作成する <see cref="T:System.Security.SecurityElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-204">XML 文字列に単一引用符を使用しません。代わりに、使用するには、二重引用符がエスケープされます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="fff8a-205">たとえばの代わりに"`<value name='Company'>Microsoft</value>"`を使用して"`<value name=\"Company\">Microsoft</value>"`です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="fff8a-206">単一引用符を使用すると、いずれか、例外がスローまたは場合によっては、文字列内のテキストとして処理される、単一引用符が発生ことができます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="fff8a-207">
            <paramref name="xml" /> には、1 つ以上の単一引用符文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-207">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-208">
            <paramref name="xml" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-208">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fff8a-209">有効性をテストする属性名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-209">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-210">文字列が有効な属性名かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-210">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-211">
            <paramref name="name" /> パラメーターが有効な XML 属性名の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-211">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-212">このメソッドは、セキュリティ要素を追加する前に属性をテストに使用できます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-213">次のコードの使用を示しています、<xref:System.Security.SecurityElement.IsValidAttributeName%2A>メソッド (string) が有効な属性名であるかどうかを判別します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="fff8a-214">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="fff8a-215">有効性をテストする属性値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-215">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-216">文字列が有効な属性値かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-216">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-217">
            <paramref name="value" /> パラメーターが有効な XML 属性値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-217">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-218">このメソッドは、セキュリティ要素を追加する前に属性をテストに使用できます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-219">次のコードの使用を示しています、<xref:System.Security.SecurityElement.IsValidAttributeValue%2A>メソッド (string) が有効な属性値であるかどうかを判別します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="fff8a-220">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="fff8a-221">有効性をテストするタグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-221">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-222">文字列が有効なタグかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-222">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-223">
            <paramref name="tag" /> パラメーターが有効な XML タグの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-223">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-224">これは、テストに使用できる、<xref:System.Security.SecurityElement.Tag%2A>設定する前にします。</span><span class="sxs-lookup"><span data-stu-id="fff8a-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-225">次のコードの使用を示しています、<xref:System.Security.SecurityElement.IsValidTag%2A>メソッド (string) が有効な属性タグであるかどうかを判別します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="fff8a-226">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="fff8a-227">有効性をテストするテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-227">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-228">文字列が XML 要素内のテキストとして有効かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-228">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-229">
            <paramref name="text" /> パラメーターが有効な XML テキスト要素の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-229">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-230">このメソッドを使用してテストできます<xref:System.Security.SecurityElement.Text%2A>設定する前にします。</span><span class="sxs-lookup"><span data-stu-id="fff8a-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-231">次のコードの使用を示しています、<xref:System.Security.SecurityElement.IsValidText%2A>文字列は XML 要素のテキストとして有効かどうかを調べます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="fff8a-232">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="fff8a-233">子要素で検索するタグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-233">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-234">タグ名を指定して子要素を検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-234">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-235">指定したタグ値を持つ最初の XML 子要素。または <paramref name="tag" /> を持つ子要素が存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-236">次に、XML で`SearchForChildByTag("second")`は子要素を返します`<second>`です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-237">次のコードの使用を示しています、<xref:System.Security.SecurityElement.SearchForChildByTag%2A>タグ名で子を検索するメソッド。</span><span class="sxs-lookup"><span data-stu-id="fff8a-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="fff8a-238">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-239">
            <paramref name="tag" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="fff8a-240">子要素で検索するタグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-240">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fff8a-241">タグ名を指定して子要素を検索し、格納されているテキストを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-241">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-242">指定したタグ値を持つ最初の子要素のテキストの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-242">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-243">このメソッドは、次のと同じです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="fff8a-244">次に、XML で`SearchForTextOfTag("second")`"text2"を返します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-245">次のコードの使用を示しています、<xref:System.Security.SecurityElement.SearchForTextOfTag%2A>をタグ名で子を検索し、含まれているテキストを返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="fff8a-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="fff8a-246">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-247">
            <paramref name="tag" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-247">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-248">XML 要素のタグ名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-248">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fff8a-249">XML 要素のタグ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-249">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-250">XML では、下に表示されている、スクリプトでは、タグが表示されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="fff8a-251">この要素に子要素がある場合は、子が置き換わります`text`です。</span><span class="sxs-lookup"><span data-stu-id="fff8a-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="fff8a-252">このプロパティに有効な XML タグ文字列のみを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="fff8a-253">使用して<xref:System.Security.SecurityElement.Escape%2A>文字列から無効な文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-254">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.Tag%2A> XML 要素のタグ名を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="fff8a-255">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fff8a-256">タグが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-256">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-257">タグが XML で有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-257">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-258">XML 要素内のテキストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-258">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fff8a-259">XML 要素内のテキストの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-259">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-260">テキストは、XML の特殊文字を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="fff8a-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="fff8a-261">使用して<xref:System.Security.SecurityElement.Escape%2A>文字列から無効な文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="fff8a-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="fff8a-262">場合、<xref:System.Security.SecurityElement>両方を含む<xref:System.Security.SecurityElement.Text%2A>と<xref:System.Security.SecurityElement.Children%2A>、<xref:System.Security.SecurityElement.Text%2A>先頭に表示されます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff8a-263">次のコードの使用を示しています、 <xref:System.Security.SecurityElement.Text%2A> XML 要素のテキストを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="fff8a-264">このコード例に示されている例の一部である、<xref:System.Security.SecurityElement>クラスです。</span><span class="sxs-lookup"><span data-stu-id="fff8a-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fff8a-265">テキストが XML で有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-265">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fff8a-266">XML 要素、その構成属性、子要素、およびテキストの文字列形式を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fff8a-267">XML 要素とその内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff8a-267">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff8a-268">このメソッドは、要素の XML 表現を表示するデバッグに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="fff8a-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>