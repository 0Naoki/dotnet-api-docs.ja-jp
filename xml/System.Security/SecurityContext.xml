<Type Name="SecurityContext" FullName="System.Security.SecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e70214df05df947f2483972d2b320b6552d5421" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56787209" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="59658-101">複数のスレッド間で転送される実行コンテキストのすべてのセキュリティ関連データをカプセル化し、反映します。</span><span class="sxs-lookup"><span data-stu-id="59658-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span></span> <span data-ttu-id="59658-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="59658-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-103">A<xref:System.Security.SecurityContext>オブジェクトに含まれる情報を含む、論理スレッドのすべてのセキュリティ関連情報のキャプチャ、<xref:System.Security.Principal.WindowsIdentity>と<xref:System.Threading.CompressedStack>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="59658-103">A <xref:System.Security.SecurityContext> object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.</span></span>  <span data-ttu-id="59658-104">この構成により、伝達するときに自動的にスタック上の Windows id とセキュリティ要素、<xref:System.Security.SecurityContext>がコピーされ、非同期スレッド間で転送します。</span><span class="sxs-lookup"><span data-stu-id="59658-104">This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <xref:System.Security.SecurityContext> is copied and transferred across asynchronous threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59658-105">共通言語ランタイム (CLR) は、プラットフォームを通じてなど、マネージ コードの外部で実行する権限借用のではありませんのマネージ コードを使用して実行される操作は、アンマネージ コードに、または Win32 関数への直接の呼び出しを呼び出す権限借用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="59658-105">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="59658-106">マネージのみ<xref:System.Security.Principal.WindowsIdentity>しない限り、非同期ポイント間でオブジェクトが流れることができる、`alwaysFlowImpersonationPolicy`要素に設定されている`true`(`<alwaysFlowImpersonationPolicy enabled="true"/>`)。</span><span class="sxs-lookup"><span data-stu-id="59658-106">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="59658-107">設定、`alwaysFlowImpersonationPolicy`要素`true`Windows id が偽装の実行方法に関係なく、非同期ポイント間で常にフローを指定します。</span><span class="sxs-lookup"><span data-stu-id="59658-107">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="59658-108">詳細について、流れる情報では、権限借用をアンマネージ非同期ポイント間を参照してください[ &lt;alwaysFlowImpersonationPolicy&gt;要素](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)します。</span><span class="sxs-lookup"><span data-stu-id="59658-108">For more information about flowing unmanaged impersonation across asynchronous points, see [&lt;alwaysFlowImpersonationPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 <span data-ttu-id="59658-109"><xref:System.Security.SecurityContext>うち、大きい方の一部である<xref:System.Threading.ExecutionContext>フローや、移行時に、<xref:System.Threading.ExecutionContext>フローまたは移行します。</span><span class="sxs-lookup"><span data-stu-id="59658-109">The <xref:System.Security.SecurityContext> is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="59658-110">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="59658-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="59658-111">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="59658-111">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="59658-112">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="59658-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="59658-113">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="59658-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="59658-114">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="59658-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityContext ^ Capture();" />
      <MemberSignature Language="F#" Value="static member Capture : unit -&gt; System.Security.SecurityContext" Usage="System.Security.SecurityContext.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-115">現在のスレッドのセキュリティ コンテキストをキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="59658-115">Captures the security context for the current thread.</span></span></summary>
        <returns><span data-ttu-id="59658-116">現在のスレッドのセキュリティ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59658-116">The security context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-117">キャプチャされたセキュリティ コンテキストは、別のスレッドに適用できます。</span><span class="sxs-lookup"><span data-stu-id="59658-117">The captured security context can be applied to another thread.</span></span> <span data-ttu-id="59658-118"><xref:System.Security.SecurityContext>から成る、 <xref:System.Threading.CompressedStack> 、<xref:System.Security.Principal.WindowsIdentity>実行中のスレッドにします。</span><span class="sxs-lookup"><span data-stu-id="59658-118">The <xref:System.Security.SecurityContext> consists of the <xref:System.Threading.CompressedStack> and the <xref:System.Security.Principal.WindowsIdentity> for the executing thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="member this.CreateCopy : unit -&gt; System.Security.SecurityContext" Usage="securityContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-119">現在のセキュリティ コンテキストのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="59658-119">Creates a copy of the current security context.</span></span></summary>
        <returns><span data-ttu-id="59658-120">現在のスレッドのセキュリティ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59658-120">The security context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-121">現在のコンテキストには、キャプチャまたはコピー操作を通じて取得したがする必要があります。</span><span class="sxs-lookup"><span data-stu-id="59658-121">The current context must have been acquired through a capture or a copy operation.</span></span> <span data-ttu-id="59658-122">このメソッドは、キャプチャされたを適用するために役立ちます<xref:System.Security.SecurityContext>複数のスレッドにします。</span><span class="sxs-lookup"><span data-stu-id="59658-122">This method is useful for applying a captured <xref:System.Security.SecurityContext> to multiple threads.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59658-123">現在のセキュリティ コンテキストが以前にも使用されたことがあるか、複数のアプリケーション ドメイン間でマーシャリングされたか、<see cref="M:System.Security.SecurityContext.Capture" /> メソッドを使用して取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="59658-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-124"><see cref="T:System.Security.SecurityContext" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="59658-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-125"><xref:System.Security.SecurityContext> を使い終わったら、`Dispose`を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="59658-125">Call `Dispose` when you are finished using the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="59658-126">`Dispose`メソッドによって、<xref:System.Security.SecurityContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="59658-126">The `Dispose` method leaves the <xref:System.Security.SecurityContext> in an unusable state.</span></span> <span data-ttu-id="59658-127">`Dispose`呼び出し後は、<xref:System.Security.SecurityContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Security.SecurityContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="59658-127">After calling `Dispose`, you must release all references to the <xref:System.Security.SecurityContext> so the garbage collector can reclaim the memory that the <xref:System.Security.SecurityContext> was occupying.</span></span>  
  
 <span data-ttu-id="59658-128">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="59658-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59658-129"><xref:System.Security.SecurityContext>への最後の参照を解放する前に、必ず`Dispose`を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="59658-129">Always call `Dispose` before you release your last reference to the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="59658-130">そうしないと、ガベージ コレクターが <xref:System.Security.SecurityContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="59658-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.SecurityContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-131">セキュリティ コンテキストのフローが中止されたかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="59658-131">Determines whether the flow of the security context has been suppressed.</span></span></summary>
        <returns><span data-ttu-id="59658-132">フローが中止された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59658-132"><see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-133"><xref:System.Security.SecurityContext.IsFlowSuppressed%2A>メソッドは、転送するかどうかを判断するインフラストラクチャ コンポーネントによって使用されます、<xref:System.Security.SecurityContext>非同期操作中に情報。</span><span class="sxs-lookup"><span data-stu-id="59658-133">The <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Security.SecurityContext> information during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowsIdentityFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsWindowsIdentityFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindowsIdentityFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindowsIdentityFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWindowsIdentityFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsWindowsIdentityFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-134">現在のセキュリティ コンテキストの Windows ID 部分のフローが中止されたかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="59658-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span></span></summary>
        <returns><span data-ttu-id="59658-135">フローが中止された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59658-135"><see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-136"><xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A>メソッドは、Windows id の情報を転送するかどうかを判断するインフラストラクチャ コンポーネントによって使用時に、<xref:System.Security.SecurityContext>は非同期操作中に移行します。</span><span class="sxs-lookup"><span data-stu-id="59658-136">The <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <xref:System.Security.SecurityContext> migrates during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberSignature Language="F#" Value="static member RestoreFlow : unit -&gt; unit" Usage="System.Security.SecurityContext.RestoreFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-137">複数の非同期スレッド間におけるセキュリティ コンテキストのフローを復元します。</span><span class="sxs-lookup"><span data-stu-id="59658-137">Restores the flow of the security context across asynchronous threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-138"><xref:System.Security.SecurityContext.RestoreFlow%2A>メソッドを呼び出して、<xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType>メソッドを前の効果を反転<xref:System.Security.SecurityContext.SuppressFlow%2A>メソッドの呼び出し。</span><span class="sxs-lookup"><span data-stu-id="59658-138">The <xref:System.Security.SecurityContext.RestoreFlow%2A> method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> method to reverse the effect of a prior <xref:System.Security.SecurityContext.SuppressFlow%2A> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59658-139">セキュリティ コンテキストが <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="59658-139">The security context is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Security.SecurityContext securityContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Security::SecurityContext ^ securityContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member Run : System.Security.SecurityContext * System.Threading.ContextCallback * obj -&gt; unit" Usage="System.Security.SecurityContext.Run (securityContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContext" Type="System.Security.SecurityContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="securityContext"><span data-ttu-id="59658-140">設定するセキュリティ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="59658-140">The security context to set.</span></span></param>
        <param name="callback"><span data-ttu-id="59658-141">指定されたセキュリティ コンテキストで実行するメソッドを表すデリゲート。</span><span class="sxs-lookup"><span data-stu-id="59658-141">The delegate that represents the method to run in the specified security context.</span></span></param>
        <param name="state"><span data-ttu-id="59658-142">コールバック メソッドに渡すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="59658-142">The object to pass to the callback method.</span></span></param>
        <summary><span data-ttu-id="59658-143">現在のスレッドの指定されたセキュリティ コンテキストで、指定されたメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="59658-143">Runs the specified method in the specified security context on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-144">メソッドの呼び出しが完了すると、以前の状態を現在のスレッドのセキュリティ コンテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="59658-144">The security context for the current thread is returned to its previous state when the method call is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59658-145">次のコード例を使用する方法を示しています、<xref:System.Security.SecurityContext.Run%2A>メソッドを指定したセキュリティ コンテキストで実行するメソッド。</span><span class="sxs-lookup"><span data-stu-id="59658-145">The following code example shows how to use the <xref:System.Security.SecurityContext.Run%2A> method to execute a method in a specified security context.</span></span>  
  
 [!code-csharp[System.Security.SecurityContext.Run#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/CS/form1.cs#1)]
 [!code-vb[System.Security.SecurityContext.Run#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59658-146"><paramref name="securityContext" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="59658-146"><paramref name="securityContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="59658-147">または</span><span class="sxs-lookup"><span data-stu-id="59658-147">-or-</span></span> 
 <span data-ttu-id="59658-148">キャプチャ操作で <paramref name="securityContext" /> が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="59658-148"><paramref name="securityContext" /> was not acquired through a capture operation.</span></span>  
  
<span data-ttu-id="59658-149">または</span><span class="sxs-lookup"><span data-stu-id="59658-149">-or-</span></span> 
 <span data-ttu-id="59658-150"><paramref name="securityContext" /> は、<see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> メソッド呼び出しの引数として既に使用されています。</span><span class="sxs-lookup"><span data-stu-id="59658-150"><paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="59658-151">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="59658-151">requires full trust for the immediate caller.</span></span> <span data-ttu-id="59658-152">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="59658-152">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberSignature Language="F#" Value="static member SuppressFlow : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-153">複数の非同期スレッド間におけるセキュリティ コンテキストのフローを中止します。</span><span class="sxs-lookup"><span data-stu-id="59658-153">Suppresses the flow of the security context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="59658-154">フローを復元するための <see cref="T:System.Threading.AsyncFlowControl" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="59658-154">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-155">このメソッドを使用してのフローを抑制<xref:System.Security.SecurityContext>については、現在のスレッドの非同期操作。</span><span class="sxs-lookup"><span data-stu-id="59658-155">Use this method to suppress the flow of <xref:System.Security.SecurityContext> information on the current thread for asynchronous operations.</span></span>  
  
 <span data-ttu-id="59658-156">共通言語ランタイム (CLR) では、マネージ コードを使用して実行された偽装操作の認識のみです。</span><span class="sxs-lookup"><span data-stu-id="59658-156">The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</span></span> <span data-ttu-id="59658-157">プラットフォーム呼び出しは、権限の借用、アンマネージ コードにまたは Win32 関数への呼び出しなど、CLR はマネージ コードの外部で実行する権限借用の知識がありません。</span><span class="sxs-lookup"><span data-stu-id="59658-157">The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</span></span> <span data-ttu-id="59658-158">フローの id、管理を使用する必要があります、非同期ポイント間に<xref:System.Security.Principal.WindowsIdentity>と<xref:System.Security.Principal.WindowsImpersonationContext>メソッド。</span><span class="sxs-lookup"><span data-stu-id="59658-158">To flow identity across asynchronous points you must use the managed <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Security.Principal.WindowsImpersonationContext> methods.</span></span>  
  
 <span data-ttu-id="59658-159">使用して、<xref:System.Threading.AsyncFlowControl.Undo%2A>メソッドで返された<xref:System.Threading.AsyncFlowControl>構造体を返す、<xref:System.Security.SecurityContext>を以前の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="59658-159">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
 <span data-ttu-id="59658-160">このメソッドがで保護されている、<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>の<xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType>権限。</span><span class="sxs-lookup"><span data-stu-id="59658-160">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="59658-161">完全に信頼されたコンポーネントのフローを抑制するには、このメソッドを呼び出すことができます、<xref:System.Security.SecurityContext>非同期呼び出し中に情報。</span><span class="sxs-lookup"><span data-stu-id="59658-161">A fully trusted component can call this method to suppress the flow of the <xref:System.Security.SecurityContext> information during asynchronous calls.</span></span> <span data-ttu-id="59658-162">フローが抑制されている場合、<xref:System.Security.SecurityContext.Capture%2A>メソッドを返します。`null`します。</span><span class="sxs-lookup"><span data-stu-id="59658-162">When the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="59658-163">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="59658-163">requires full trust for the immediate caller.</span></span> <span data-ttu-id="59658-164">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="59658-164">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlowWindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlowWindowsIdentity () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlowWindowsIdentity();" />
      <MemberSignature Language="F#" Value="static member SuppressFlowWindowsIdentity : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlowWindowsIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59658-165">複数の非同期スレッドにおける現在のセキュリティ コンテキストの Windows ID 部分のフローを中止します。</span><span class="sxs-lookup"><span data-stu-id="59658-165">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="59658-166">フローを復元するための構造体。</span><span class="sxs-lookup"><span data-stu-id="59658-166">A structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59658-167">このメソッドを使用して、Windows id のフローを抑制する場合、<xref:System.Security.SecurityContext>非同期スレッド間で移行されます。</span><span class="sxs-lookup"><span data-stu-id="59658-167">Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.</span></span>  
  
 <span data-ttu-id="59658-168">使用して、<xref:System.Threading.AsyncFlowControl.Undo%2A>メソッドで返された<xref:System.Threading.AsyncFlowControl>構造体を返す、<xref:System.Security.SecurityContext>を以前の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="59658-168">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59658-169">共通言語ランタイム (CLR) は、プラットフォームを通じてなど、マネージ コードの外部で実行する権限借用のではありませんのマネージ コードを使用して実行される操作は、アンマネージ コードに、または Win32 関数への直接の呼び出しを呼び出す権限借用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="59658-169">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="59658-170">マネージのみ<xref:System.Security.Principal.WindowsIdentity>しない限り、非同期ポイント間でオブジェクトが流れることができる、`alwaysFlowImpersonationPolicy`要素に設定されている`true`(`<alwaysFlowImpersonationPolicy enabled="true"/>`)。</span><span class="sxs-lookup"><span data-stu-id="59658-170">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="59658-171">設定、`alwaysFlowImpersonationPolicy`要素`true`Windows id が偽装の実行方法に関係なく、非同期ポイント間で常にフローを指定します。</span><span class="sxs-lookup"><span data-stu-id="59658-171">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="59658-172">詳細について、流れる情報では、権限借用をアンマネージ非同期ポイント間を参照してください[ \<alwaysFlowImpersonationPolicy > 要素](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)します。</span><span class="sxs-lookup"><span data-stu-id="59658-172">For more information about flowing unmanaged impersonation across asynchronous points, see [\<alwaysFlowImpersonationPolicy> Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="59658-173">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="59658-173">requires full trust for the immediate caller.</span></span> <span data-ttu-id="59658-174">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="59658-174">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>