<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata><Meta Name="ms.openlocfilehash" Value="483fd0c19eb94202f890b134abe0af6b4d2336e7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69161705" /></Metadata><TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <TypeSignature Language="F#" Value="type IStackWalk = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コール スタック内のすべての呼び出し元に、保護されているリソースへのアクセスに必要なアクセス許可が与えられているかどうかを判断するスタック ウォークを管理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 部分的に信頼されたコードは、常にセキュリティ上のリスクをもたらします。 リソースにアクセスするためのアクセス許可がない悪意のあるコードに代わってアクションを実行することがあります。 このようにして、悪意のあるコードが許可されるよりも高いセキュリティアクセスを実現できます。  
  
 共通言語ランタイムは、すべての呼び出しでスタックウォークを実行することで、これらの攻撃からマネージコードを保護するのに役立ちます。 スタックウォークでは、呼び出し履歴のすべてのコードが、保護されたリソースにアクセスするためのアクセス許可を持っている必要があります。 攻撃を試みるコードは常に呼び出し履歴内のどこかにあるため、独自のセキュリティアクセス許可を超えることはできません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit" Usage="iStackWalk.Assert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>スタック内の上位にある呼び出し元に、現在のアクセス許可オブジェクトによって識別されているリソースへのアクセス許可がない場合でも、呼び出しコードがそのリソースにアクセスできるようにアサートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 を<xref:System.Security.IStackWalk.Assert%2A>呼び出すと、呼び出し履歴の上位にある呼び出し元に対するアクセス許可チェックが停止されます。 そのため、これらの呼び出し元に必要なアクセス許可がない場合でも、リソースにアクセスできます。 アサーションは、を呼び出す<xref:System.Security.IStackWalk.Assert%2A>コードが、アサートされているアクセス許可のセキュリティチェックに合格した場合にのみ有効になります。  
  
 の呼び出し<xref:System.Security.IStackWalk.Assert%2A>は、呼び出し元のコードが呼び出し元に戻るまで、またはの後続<xref:System.Security.IStackWalk.Assert%2A>の呼び出しが直前のアサーションを無効にするまで有効になります。 また<xref:System.Security.CodeAccessPermission.RevertAssert%2A> <xref:System.Security.IStackWalk.Assert%2A>、保留中のを削除します。 <xref:System.Security.CodeAccessPermission.RevertAll%2A>  
  
 <xref:System.Security.IStackWalk.Assert%2A>は、許可されていないアクセス許可の要求が成功しないため、このアクセス許可は無視されます。 ただし、呼び出し履歴上のコードがそのアクセス<xref:System.Security.IStackWalk.Demand%2A>許可を呼び出すと<xref:System.Security.SecurityException> 、スタックウォークがを呼び出そう<xref:System.Security.IStackWalk.Assert%2A>としたコードに到達すると、がスローされます。 これは、を呼び出し<xref:System.Security.IStackWalk.Assert%2A>たコードにアクセス許可が付与されていないために<xref:System.Security.IStackWalk.Assert%2A>発生します。  
  
> [!CAUTION]
>  を呼び<xref:System.Security.IStackWalk.Assert%2A>出すと、指定したリソースにアクセスするためのアクセス許可が呼び出しチェーン内のすべてのコードに付与されている必要があるという要件がなくなるため、誤って、または不適切に使用した場合、セキュリティの脆弱性を開くことができます そのため、十分な注意を払って使用する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しコードに <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" /> が指定されていません。</exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md">Assert メソッドの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iStackWalk.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コール スタック内のすべての呼び出し元に、現在のアクセス許可オブジェクトによって指定されているアクセス許可が与えられているかどうかを実行時に判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、通常、呼び出し元にリソースへのアクセス許可があることを保証するために、安全なライブラリによって使用されます。 たとえば、セキュリティで保護されたクラスライブラリ内の<xref:System.Security.IStackWalk.Demand%2A>ファイルクラスは<xref:System.Security.Permissions.FileIOPermission> 、呼び出し元によって要求されたファイル操作を実行する前に、必要なを呼び出します。  
  
 このメソッドを呼び出すコードのアクセス許可は検証されません。このチェックは、そのコードの直前の呼び出し元から開始され、スタックを進めます。 <xref:System.Security.IStackWalk.Demand%2A><xref:System.Security.SecurityException>が発生しなかった場合にのみ成功します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">コール スタック内の上位にある呼び出し元に、現在のアクセス許可オブジェクトによって指定されているアクセス許可がありません。  
  
または 
コール スタック内の呼び出し元が、現在のアクセス許可オブジェクトに対して <see cref="M:System.Security.IStackWalk.Deny" /> を呼び出しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit" Usage="iStackWalk.Deny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出しコードを通過する現在のオブジェクトに対するすべての <see cref="M:System.Security.IStackWalk.Demand" /> を失敗させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、呼び出し履歴の上位にある呼び出し元が、このメソッドを呼び出すコードを通じて保護されたリソースにアクセスできないようにします。呼び出し元にアクセス許可が付与されている場合でも同様です。 呼び出し履歴は、通常、コールスタックの上位にあるメソッドが呼び出し履歴の下位にあるメソッドを呼び出すように、拡張ダウンとして表されます。  
  
 <xref:System.Security.IStackWalk.Deny%2A>では、拒否されたアクセス許可によって保護されているリソースにアクセスする<xref:System.Security.IStackWalk.Deny%2A>ためにを呼び出すメソッドが使用されないようにするため、プログラマの責任を制限したり、誤ったセキュリティの脆弱性を防ぐことができます。 メソッドがアクセス許可<xref:System.Security.IStackWalk.Deny%2A>に対してを呼び出し、その<xref:System.Security.IStackWalk.Demand%2A>アクセス許可のが呼び出し履歴の下位にある呼び出し元によって呼び出された場合、そのセキュリティチェック<xref:System.Security.IStackWalk.Deny%2A>はに到達すると失敗します。  
  
 <xref:System.Security.IStackWalk.Deny%2A>は、許可されていないアクセス許可の要求が成功しないため、このアクセス許可は無視されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドすることはできません。</para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit" Usage="iStackWalk.PermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コール スタック内の上位にあるコードに、他のリソースへのアクセス許可が与えられている場合でも、現在のオブジェクトを除き、呼び出しコードを通過するすべてのオブジェクトに対するすべての <see cref="M:System.Security.IStackWalk.Demand" /> を失敗させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IStackWalk.PermitOnly%2A>はと似<xref:System.Security.IStackWalk.Deny%2A>ていますが、それ以外の場合は成功した場合にスタックウォークが失敗します。 違いは、が<xref:System.Security.IStackWalk.Deny%2A>スタックウォークを失敗させるアクセス許可を指定すること<xref:System.Security.IStackWalk.PermitOnly%2A>ですが、スタックウォークが失敗することのない唯一のアクセス許可を指定することです。 コードを使用して、指定したリソースにのみアクセスできるようにするには、このメソッドを呼び出します。  
  
 <xref:System.Security.IStackWalk.PermitOnly%2A>は、許可されていないアクセス許可の要求が成功しないため、このアクセス許可は無視されます。 ただし、後で呼び出し履歴のコードがそのアクセス<xref:System.Security.IStackWalk.Demand%2A>許可を呼び出すと<xref:System.Security.SecurityException> 、スタックウォークがを呼び出そう<xref:System.Security.IStackWalk.PermitOnly%2A>としたコードに到達すると、がスローされます。 これは、呼び出さ<xref:System.Security.IStackWalk.PermitOnly%2A>れたコードに、そのアクセス許可に対してが呼び出さ<xref:System.Security.IStackWalk.PermitOnly%2A>れていてもアクセス許可が付与されていないためです。 呼び出し履歴は、通常、コールスタックの上位にあるメソッドが呼び出し履歴の下位にあるメソッドを呼び出すように、拡張ダウンとして表されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
