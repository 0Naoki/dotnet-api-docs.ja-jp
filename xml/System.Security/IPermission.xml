<Type Name="IPermission" FullName="System.Security.IPermission">
  <TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dcb98-101">アクセス許可の種類によって実装されるメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-101">Defines methods implemented by permission types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb98-102">共通言語ランタイムでのアクセス許可は、指定したリソースのセキュリティを設定できる操作のセットを記述するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="dcb98-103">権限オブジェクトには、操作またはセキュリティ制御の対象となるアクセスについて説明します。アクセスまたは操作を実行する権限は表しません。</span><span class="sxs-lookup"><span data-stu-id="dcb98-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="dcb98-104">アクセス許可は、次のようにアプリケーション コードと .NET Framework セキュリティ システムの両方で使用されます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="dcb98-105">コードでは、実行するために必要なアクセス許可を要求します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="dcb98-106">システムのセキュリティ ポリシーは、コードを実行するために権限を付与します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="dcb98-107">コードでは、コードの呼び出しのアクセス許可があることを要求します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="dcb98-108">コードでは、アサート/拒否/許可のみを使用して、セキュリティのスタックをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="dcb98-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dcb98-109">新しいアクセス許可を記述する場合は、クラス内でこのインターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcb98-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dcb98-110">アクセス許可は、複数のスレッドによってアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="dcb98-111">このインターフェイスを実装するときを保証する必要があります、 <xref:System.Security.IPermission.IsSubsetOf%2A>、 <xref:System.Security.IPermission.Intersect%2A>、 <xref:System.Security.IPermission.Union%2A>、および<xref:System.Security.IPermission.Copy%2A>メソッドの実装は、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb98-112">この例では、コード アクセス セキュリティを使用するためのアクセス許可クラスを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="dcb98-113">すべての必要なアクセス許可のインターフェイスが実装されます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb98-114">現在のアクセス許可の同一のコピーを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-114">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="dcb98-115">現在のアクセス許可のコピー。</span><span class="sxs-lookup"><span data-stu-id="dcb98-115">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb98-116">アクセス許可のコピーは、元のアクセス許可としてリソースに対して同じアクセス権を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb98-117">次のコード例では、実装することを示しています、<xref:System.Security.IPermission.Copy%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="dcb98-118">このコード例に示されている例の一部である、<xref:System.Security.IPermission>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcb98-119">セキュリティ要件が満たされない場合、実行時に <see cref="T:System.Security.SecurityException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="dcb98-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb98-120">このメソッドは呼び出し元がリソースにアクセスする権限を持っていることを確認する、セキュリティで保護されたライブラリで通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="dcb98-121">たとえば、安全なクラス ライブラリ内のファイル クラスを呼び出します<xref:System.Security.CodeAccessPermission.Demand%2A>、必要なの<xref:System.Security.Permissions.FileIOPermission>呼び出し元によって要求されたファイルの操作を実行する前にします。</span><span class="sxs-lookup"><span data-stu-id="dcb98-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="dcb98-122">このインターフェイス メソッドを実装するクラスのほとんどは、完全なスタック ウォークを実行することによってセキュリティ基準を満たす、スタック ウォークは必ずしも行われません。</span><span class="sxs-lookup"><span data-stu-id="dcb98-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="dcb98-123">スタック ウォークを実行しない実装の例は<xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dcb98-124">スタック ウォークが実行されると、このメソッドを呼び出すコードのアクセス許可はチェックされません。チェックは、そのコードの直前の呼び出し元から開始され、スタックの上位に進みます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="dcb98-125">通常、呼び出し履歴はコール スタックに呼び出し履歴の上位にあるメソッドが下位にあるメソッドを呼び出すようにダウン、成長として表されます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="dcb98-126"><xref:System.Security.CodeAccessPermission.Demand%2A> 場合にのみ成功ありません<xref:System.Security.SecurityException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="dcb98-127">現在のアクセス許可との共通部分のあるアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="dcb98-127">A permission to intersect with the current permission.</span></span> <span data-ttu-id="dcb98-128">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="dcb98-129">現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="dcb98-130">現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="dcb98-130">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="dcb98-131">積集合が空の場合、この新しいアクセス許可オブジェクトは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-131">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb98-132">2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="dcb98-133">元の両方の権限を通過する要求だけでは、積集合を渡されます。</span><span class="sxs-lookup"><span data-stu-id="dcb98-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="dcb98-134">次のステートメントが true のすべての実装に必要な<xref:System.Security.IPermission.Intersect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="dcb98-135">`X` および`Y`表す<xref:System.Security.IPermission>れていないオブジェクト参照`null`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="dcb98-136">`X`.Intersect (`X`) と等しい値を返します`X`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="dcb98-137">`X`.Intersect (`Y`) と同じ値を返します`Y`です。Intersect (`X`)。</span><span class="sxs-lookup"><span data-stu-id="dcb98-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="dcb98-138">`X`.Intersect(`null`) returns `null`.</span><span class="sxs-lookup"><span data-stu-id="dcb98-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb98-139">次のコード例では、実装することを示しています、<xref:System.Security.IPermission.Intersect%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="dcb98-140">このコード例に示されている例の一部である、<xref:System.Security.IPermission>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dcb98-141"><paramref name="target" /> パラメーターが <see langword="null" /> ではなく、現在のアクセス許可と同じクラスのインスタンスでもありません。</span><span class="sxs-lookup"><span data-stu-id="dcb98-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="dcb98-142">サブセット リレーションシップをテストするアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="dcb98-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="dcb98-143">このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="dcb98-144">現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-144">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns>
          <span data-ttu-id="dcb98-145">現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcb98-145"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb98-146">現在のアクセス許可は、現在のアクセス許可を指定した権限によって完全に含まれる一連の操作を指定する場合、指定したアクセス許可のサブセットです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="dcb98-147">たとえば、C:\example.txt へのアクセスを表すアクセス許可は、c: へのアクセスを表すためのアクセス許可のサブセット\\です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="dcb98-148">このメソッドが戻る場合`true`、現在のアクセス許可は、アクセスは保護されたリソースには、指定した権限を表します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="dcb98-149">次のステートメントが true のすべての実装に必要な<xref:System.Security.IPermission.IsSubsetOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="dcb98-150">`X`、 `Y`、および`Z`表す<xref:System.Security.IPermission>れていないオブジェクト`null`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="dcb98-151">`X`.IsSubsetOf (`X`) を返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="dcb98-152">`X`.IsSubsetOf (`Y`) と同じ値を返します`Y`です。IsSubsetOf (`X`) 場合にのみ`X`と`Y`権限のセットは変わりません。</span><span class="sxs-lookup"><span data-stu-id="dcb98-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="dcb98-153">If `X`.IsSubsetOf (`Y`) および`Y`です。IsSubsetOf (`Z`) 両方を返す`true`、`X`です。IsSubsetOf (`Z`) を返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="dcb98-154">場合`X`、空を表す<xref:System.Security.IPermission>のアクセス許可の状態を持つオブジェクト<xref:System.Security.Permissions.PermissionState.None>と`Y`を表す、<xref:System.Security.IPermission>オブジェクトを`null`、`X`です。IsSubsetOf (`Y`) を返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="dcb98-155">場合`Z`は空のアクセス許可、複合設定操作でも`X`します。Union(Z) です。IsSubsetOf(Y) も返します`true`2 つの空のアクセス許可の和集合が空のアクセス許可であるためです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb98-156">次のコード例では、実装することを示しています、<xref:System.Security.IPermission.IsSubsetOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="dcb98-157">このコード例に示されている例の一部である、<xref:System.Security.IPermission>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dcb98-158"><paramref name="target" /> パラメーターが <see langword="null" /> ではなく、現在のアクセス許可と同じ型でもありません。</span><span class="sxs-lookup"><span data-stu-id="dcb98-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="dcb98-159">現在のアクセス許可と結合するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="dcb98-159">A permission to combine with the current permission.</span></span> <span data-ttu-id="dcb98-160">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-160">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="dcb98-161">現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-161">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="dcb98-162">現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="dcb98-162">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcb98-163">呼び出しの結果<xref:System.Security.IPermission.Union%2A>は、現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表す権限。</span><span class="sxs-lookup"><span data-stu-id="dcb98-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="dcb98-164">いずれかのアクセス許可に適合する要求は、その共用体を渡します。</span><span class="sxs-lookup"><span data-stu-id="dcb98-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="dcb98-165">次のステートメントが true のすべての実装に必要な<xref:System.Security.IPermission.Union%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="dcb98-166">`X` および`Y`表す<xref:System.Security.IPermission>れていないオブジェクト`null`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="dcb98-167">`X`.共用体 (`X`) と同じ値を持つオブジェクトを返します`X`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="dcb98-168">`X`.共用体 (`Y`) によって返されるオブジェクトと同じ値を持つオブジェクトを返します`Y`です。共用体 (`X`)。</span><span class="sxs-lookup"><span data-stu-id="dcb98-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="dcb98-169">`X`.共用体 (`null`) と同じ値を持つオブジェクトを返します`X`です。</span><span class="sxs-lookup"><span data-stu-id="dcb98-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcb98-170">次のコード例では、実装することを示しています、<xref:System.Security.IPermission.Union%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="dcb98-171">このコード例に示されている例の一部である、<xref:System.Security.IPermission>クラスです。</span><span class="sxs-lookup"><span data-stu-id="dcb98-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]  
  
-  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dcb98-172"><paramref name="target" /> パラメーターが <see langword="null" /> ではなく、現在のアクセス許可と同じ型でもありません。</span><span class="sxs-lookup"><span data-stu-id="dcb98-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>