<Type Name="SyndicationFeed" FullName="System.ServiceModel.Syndication.SyndicationFeed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe635a15eb1d7f7a82bb7e0c502c3fe3586cc900" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationFeed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationFeed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationFeed" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationFeed" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationFeed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6fa45-101">トップレベルのフィード オブジェクトである、Atom 1.0 の &lt;<see langword="feed" />&gt; と RSS 2.0 の &lt;<see langword="rss" />&gt; を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fa45-101">Represents a top-level feed object, &lt;<see langword="feed" />&gt; in Atom 1.0 and &lt;<see langword="rss" />&gt; in RSS 2.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-102">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed>に書き込まれるインスタンス、<`feed`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-102">When serialized to Atom 1.0, a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is written to a <`feed`> element.</span></span> <span data-ttu-id="6fa45-103">次の表は、<xref:System.ServiceModel.Syndication.SyndicationFeed> に定義されている各プロパティが Atom 1.0 にシリアル化される方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-103">The following table shows how each property defined in the <xref:System.ServiceModel.Syndication.SyndicationFeed> class is serialized to Atom 1.0.</span></span>  
  
|<span data-ttu-id="6fa45-104">SyndicationFeed プロパティ</span><span class="sxs-lookup"><span data-stu-id="6fa45-104">SyndicationFeed property</span></span>|<span data-ttu-id="6fa45-105">シリアル化された形式</span><span class="sxs-lookup"><span data-stu-id="6fa45-105">Serialized form</span></span>|  
|------------------------------|---------------------|  
|`AttributeExtensions`|<span data-ttu-id="6fa45-106">内の属性、<`feed`> コレクション内の各属性の要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-106">An attribute in the <`feed`> element for each attribute in the collection.</span></span>|  
|`Authors`|<span data-ttu-id="6fa45-107"><`author`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationPerson>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-107">An <`author`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Categories`|<span data-ttu-id="6fa45-108">A <`category`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationCategory>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-108">A <`category`> element for each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection.</span></span>|  
|`Contributors`|<span data-ttu-id="6fa45-109">A <`contributor`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationPerson>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-109">A <`contributor`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Copyright`|<span data-ttu-id="6fa45-110">A <`rights`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-110">A <`rights`> element.</span></span>|  
|`Description`|<span data-ttu-id="6fa45-111">A <`subtitle`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-111">A <`subtitle`> element.</span></span>|  
|`ElementExtensions`|<span data-ttu-id="6fa45-112">コレクション内の各要素内に書き込まれます、<`feed`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-112">Each element in the collection is written within the <`feed`> element.</span></span>|  
|`Generator`|<span data-ttu-id="6fa45-113">A <`generator`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-113">A <`generator`> element.</span></span>|  
|`Id`|<span data-ttu-id="6fa45-114"><`id`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-114">An <`id`>element.</span></span>|  
|`ImageUri`|<span data-ttu-id="6fa45-115">A <`logo`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-115">A <`logo`> element.</span></span>|  
|`Items`|<span data-ttu-id="6fa45-116"><`entry`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationItem>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-116">An <`entry`> element for each <xref:System.ServiceModel.Syndication.SyndicationItem> in the collection.</span></span>|  
|`Language`|<span data-ttu-id="6fa45-117">シリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="6fa45-117">Not serialized.</span></span>|  
|`LastUpdatedTime`|<span data-ttu-id="6fa45-118"><`updated`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-118">An <`updated`> element.</span></span>|  
|`Links`|<span data-ttu-id="6fa45-119">A <`link`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationLink>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-119">A <`link`> element for each <xref:System.ServiceModel.Syndication.SyndicationLink> in the collection.</span></span>|  
|`Title`|<span data-ttu-id="6fa45-120">A <`title`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-120">A <`title`> element.</span></span>|  
  
 <span data-ttu-id="6fa45-121">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed>に書き込まれるインスタンス、<`rss`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-121">When serialized to RSS 2.0, a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is written to an <`rss`> element.</span></span> <span data-ttu-id="6fa45-122">次の表は、<xref:System.ServiceModel.Syndication.SyndicationFeed> に定義されている各プロパティが RSS 2.0 にシリアル化される方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-122">The following table shows how each property defined in the <xref:System.ServiceModel.Syndication.SyndicationFeed> class is serialized to RSS 2.0.</span></span>  
  
|<span data-ttu-id="6fa45-123">SyndicationFeed プロパティ</span><span class="sxs-lookup"><span data-stu-id="6fa45-123">SyndicationFeed property</span></span>|<span data-ttu-id="6fa45-124">シリアル化された形式</span><span class="sxs-lookup"><span data-stu-id="6fa45-124">Serialized form</span></span>|  
|------------------------------|---------------------|  
|`AttributeExtensions`|<span data-ttu-id="6fa45-125">内の属性、<`channel`> コレクション内の各属性の要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-125">An attribute in the <`channel`> element for each attribute in the collection.</span></span>|  
|`Authors`|<span data-ttu-id="6fa45-126">A <`managingEditor`> 1 つだけの場合は、要素<xref:System.ServiceModel.Syndication.SyndicationPerson>コレクションには、それ以外の場合、<`a10:author`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationPerson>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-126">A <`managingEditor`> element if only one <xref:System.ServiceModel.Syndication.SyndicationPerson> is in the collection; otherwise, an <`a10:author`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Categories`|<span data-ttu-id="6fa45-127">A <`category`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationCategory>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-127">A <`category`> element for each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection.</span></span>|  
|`Contributors`|<span data-ttu-id="6fa45-128"><`a10:contributor`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationPerson>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-128">An <`a10:contributor`> element for each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection.</span></span>|  
|`Copyright`|<span data-ttu-id="6fa45-129">A <`copyright`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-129">A <`copyright`> element.</span></span>|  
|`Description`|<span data-ttu-id="6fa45-130">A <`description`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-130">A <`description`> element.</span></span>|  
|`ElementExtensions`|<span data-ttu-id="6fa45-131">コレクション内の各要素内に書き込まれます、<`channel`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-131">Each element in the collection is written within the <`channel`> element.</span></span>|  
|`Generator`|<span data-ttu-id="6fa45-132">A <`generator`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-132">A <`generator`> element.</span></span>|  
|`Id`|<span data-ttu-id="6fa45-133"><`a10:id`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-133">An <`a10:id`> element.</span></span>|  
|`ImageUri`|<span data-ttu-id="6fa45-134"><`image`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-134">An <`image`> element.</span></span>|  
|`Items`|<span data-ttu-id="6fa45-135"><`item`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationItem>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-135">An <`item`> element for each <xref:System.ServiceModel.Syndication.SyndicationItem> in the collection.</span></span>|  
|`Language`|<span data-ttu-id="6fa45-136">A <`language`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-136">A <`language`> element.</span></span>|  
|`LastUpdatedTime`|<span data-ttu-id="6fa45-137">A <`lastBuildDate`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-137">A <`lastBuildDate`> element.</span></span>|  
|`Links`|<span data-ttu-id="6fa45-138"><`a10:link`> 要素ごと<xref:System.ServiceModel.Syndication.SyndicationLink>コレクション内で。</span><span class="sxs-lookup"><span data-stu-id="6fa45-138">An <`a10:link`> element for each <xref:System.ServiceModel.Syndication.SyndicationLink> in the collection.</span></span>|  
|`Title`|<span data-ttu-id="6fa45-139">A <`title`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-139">A <`title`> element.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-140"><xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスを作成し、Atom 1.0 と RSS 2.0 の両方にシリアル化する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-140">The following code shows how to create a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance and serialize it to both Atom 1.0 and RSS 2.0.</span></span>  
  
 [!code-csharp[SyndicationFeed#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#0)]
 [!code-vb[SyndicationFeed#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#0)]  
  
 <span data-ttu-id="6fa45-141"><xref:System.ServiceModel.Syndication.SyndicationFeed> を Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-141">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationFeed> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#1)]  
  
 <span data-ttu-id="6fa45-142"><xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-142">The following XML shows how a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#2](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-143">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-143">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-144">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-144">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="6fa45-145">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-145">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-146">指定した <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> オブジェクトのコレクションを使用して、<see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-146">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-147">コンストラクターに渡された <xref:System.ServiceModel.Syndication.SyndicationItem> オブジェクトのコレクションはバッファーされます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-147">The collection of <xref:System.ServiceModel.Syndication.SyndicationItem> objects passed into this constructor is buffered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-148">このコンストラクターの呼び出し方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-148">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#3)]
 [!code-vb[SyndicationFeed#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationFeed (System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationFeed source, bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationFeed, cloneItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationFeed(System::ServiceModel::Syndication::SyndicationFeed ^ source, bool cloneItems);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationFeed" />
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6fa45-149">新しいインスタンスを初期化するために使用する <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-149">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> used to initialize the new instance.</span>
          </span>
        </param>
        <param name="cloneItems">
          <span data-ttu-id="6fa45-150">ソース インスタンスのアイテムを複製するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-150">A value that specifies whether to clone the items in the source instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-151">指定したフィードを使用して、<see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-151">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified feed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-152">`cloneItems` パラメーターが `true` の場合、ソース <xref:System.ServiceModel.Syndication.SyndicationItem> インスタンス内のすべての <xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスが複製され、新しい <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> インスタンスの <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-152">If the `cloneItems` parameter is `true`, all <xref:System.ServiceModel.Syndication.SyndicationItem> instances in the source <xref:System.ServiceModel.Syndication.SyndicationFeed> instance are cloned and added to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span> <span data-ttu-id="6fa45-153">`cloneItems` パラメーターが `false` の場合、新しい <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> インスタンスの <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションに既存の <xref:System.ServiceModel.Syndication.SyndicationItem> インスタンスへの参照が格納されます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-153">If the `cloneItems` parameter is `false`, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance contains references to the existing <xref:System.ServiceModel.Syndication.SyndicationItem> instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="6fa45-154">フィードのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-154">The title of the feed.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="6fa45-155">フィードの説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-155">The description of the feed.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="6fa45-156">フィードの URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-156">The URI for the feed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-157">指定したタイトル、説明、および URI (Uniform Resource Identifier) を使用して、<see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-157">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, and Uniform Resource Identifier (URI).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-158">このコンストラクターの呼び出し方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-158">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#4)]
 [!code-vb[SyndicationFeed#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="6fa45-159">フィードのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-159">The title of the feed.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="6fa45-160">フィードの説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-160">The description of the feed.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="6fa45-161">フィードの URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-161">The URI for the feed.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="6fa45-162">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-162">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-163">指定したタイトル、説明、URI、および <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> オブジェクトのコレクションを使用して、<see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-163">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class with the specified title, description, URI, and collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-164">このコンストラクターの呼び出し方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-164">The following example demonstrates how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#5)]
 [!code-vb[SyndicationFeed#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="6fa45-165">配信フィードのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-165">The syndication feed title.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="6fa45-166">配信フィードの説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-166">The syndication feed description.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="6fa45-167">配信フィードの代替 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-167">The alternate URI for the syndication feed.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6fa45-168">配信フィードの ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-168">The ID of the syndication feed.</span>
          </span>
        </param>
        <param name="lastUpdatedTime">
          <span data-ttu-id="6fa45-169">配信フィードが最後に更新された時刻を含む <see cref="T:System.DateTimeOffset" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-169">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-170">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-170">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-171">このコンストラクターを呼び出す方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-171">The following code shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#49](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#49)]
 [!code-vb[SyndicationFeed#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationFeed (string title, string description, Uri feedAlternateLink, string id, DateTimeOffset lastUpdatedTime, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string title, string description, class System.Uri feedAlternateLink, string id, valuetype System.DateTimeOffset lastUpdatedTime, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (title As String, description As String, feedAlternateLink As Uri, id As String, lastUpdatedTime As DateTimeOffset, items As IEnumerable(Of SyndicationItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationFeed(System::String ^ title, System::String ^ description, Uri ^ feedAlternateLink, System::String ^ id, DateTimeOffset lastUpdatedTime, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ items);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="feedAlternateLink" Type="System.Uri" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTimeOffset" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;" />
      </Parameters>
      <Docs>
        <param name="title">
          <span data-ttu-id="6fa45-172">配信フィードのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-172">The syndication feed title.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="6fa45-173">配信フィードの説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-173">The syndication feed description.</span>
          </span>
        </param>
        <param name="feedAlternateLink">
          <span data-ttu-id="6fa45-174">配信フィードの代替 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-174">The alternate URI for the syndication feed.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6fa45-175">配信フィードの ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-175">The ID of the syndication feed.</span>
          </span>
        </param>
        <param name="lastUpdatedTime">
          <span data-ttu-id="6fa45-176">配信フィードが最後に更新された時刻を含む <see cref="T:System.DateTimeOffset" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-176">The <see cref="T:System.DateTimeOffset" /> that contains the last time the syndication feed was updated.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="6fa45-177">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-177">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-178">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-178">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-179">このコンストラクターを呼び出す方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-179">The following code shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationFeed#50](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#50)]
 [!code-vb[SyndicationFeed#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-180">属性の拡張のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-180">Gets a collection of attribute extensions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-181">属性の拡張のコレクションを含むディクショナリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-181">A dictionary that contains a collection of attribute extensions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-182">属性の拡張は、Atom 1.0 または RSS 2.0 のどちらの仕様でも定義されていない有効な XML 属性です。</span><span class="sxs-lookup"><span data-stu-id="6fa45-182">An attribute extension is a valid XML attribute that is not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6fa45-183">Atom 1.0 にシリアル化する、コレクション内の各カスタム属性書き込みが行われ、<`atom`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-183">When serialized to Atom 1.0, each custom attribute in the collection is written to the <`atom`> element.</span></span> <span data-ttu-id="6fa45-184">各カスタム属性が書き込むことが RSS 2.0 にシリアル化されるとき、<`channel`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-184">When serialized to RSS 2.0, each custom attribute is written to the <`channel`> element.</span></span> <span data-ttu-id="6fa45-185">属性拡張の追加の例は、次を参照してください。、 [Loosely-Typed 拡張](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="6fa45-185">For an example of adding an attribute extension, see the [Loosely-Typed Extensions](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) sample.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-186">次のコードは、属性拡張を配信フィードに書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-186">The following code shows how to add an attribute extension to a syndication feed.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#0](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/program.cs#0)] 
 [!code-vb[LooselyTypedExtensions#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/program.vb#0)]   
  
 <span data-ttu-id="6fa45-187">属性の拡張を Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-187">The following XML shows how an attribute extension is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 <span data-ttu-id="6fa45-188">属性の拡張を RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-188">The following XML shows how an attribute extension is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#15](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Authors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Authors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Authors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Authors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-189">フィードの作成者のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-189">Gets a collection of authors of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-190">フィードの作成者を表す <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-190">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the authors of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-191">Atom 1.0 にシリアル化するときに各<xref:System.ServiceModel.Syndication.SyndicationPerson>にコレクションを記述、<`author`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-191">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to an <`author`> element.</span></span> <span data-ttu-id="6fa45-192">RSS 2.0 にシリアル化する場合は、1 つだけと<xref:System.ServiceModel.Syndication.SyndicationPerson>が存在する、コレクション内に書き込まれる、<`managingEditor`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-192">When serialized to RSS 2.0, if only a single <xref:System.ServiceModel.Syndication.SyndicationPerson> exists in the collection, it is written to a <`managingEditor`> element.</span></span> <span data-ttu-id="6fa45-193">それ以外の場合、各<xref:System.ServiceModel.Syndication.SyndicationPerson>に書き込まれますが、<`a10:author`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-193">Otherwise, each <xref:System.ServiceModel.Syndication.SyndicationPerson> is written to an <`a10:author`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-194"><xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> の <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションに作成者を追加する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-194">The following code shows how to add an author to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#8)]
 [!code-vb[SyndicationFeed#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#8)]  
  
 <span data-ttu-id="6fa45-195"><xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> コレクションを Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-195">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#16](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#16)]  
  
 <span data-ttu-id="6fa45-196"><xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> コレクションを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-196">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#17](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-197">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> インスタンスのベース URI を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-197">Gets and sets the base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-198">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> インスタンスのベース URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-198">The base URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-199"><xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスのベース URI にアクセスする方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-199">The following code shows how to access the base URI of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#48](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#48)]
 [!code-vb[SyndicationFeed#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt; Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationCategory&gt; Categories" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As Collection(Of SyndicationCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ Categories { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationCategory ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-200">フィードに対するカテゴリのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-200">Gets a collection of categories for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-201">フィードのカテゴリを表す <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-201">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> objects that represent the categories for the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-202">Atom 1.0 にシリアル化するときに各<xref:System.ServiceModel.Syndication.SyndicationCategory>にコレクションを記述、<`category`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-202">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection is written to a <`category`> element.</span></span>  
  
 <span data-ttu-id="6fa45-203">RSS 2.0 にシリアル化するときに各<xref:System.ServiceModel.Syndication.SyndicationCategory>にコレクションを記述、<`category`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-203">When serialized to RSS 2.0, each <xref:System.ServiceModel.Syndication.SyndicationCategory> in the collection is written to a <`category`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-204"><xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> の <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションにカテゴリを追加する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-204">The following code shows how to add a category to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#10)]
 [!code-vb[SyndicationFeed#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#10)]  
  
 <span data-ttu-id="6fa45-205"><xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> コレクションを Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#18](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#18)]  
  
 <span data-ttu-id="6fa45-206"><xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> コレクションを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-206">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#19](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationFeed Clone (bool cloneItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationFeed Clone(bool cloneItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone (cloneItems As Boolean) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationFeed ^ Clone(bool cloneItems);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneItems">
          <span data-ttu-id="6fa45-207">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> オブジェクトを複製するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-207">A value that specifies whether the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects are cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-208">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> インスタンスのコピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-208">Creates a copy of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-209">複製した <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-209">A duplicate <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-210">`cloneItems` パラメーターが `true` の場合、<xref:System.ServiceModel.Syndication.SyndicationFeed> オブジェクト内のすべての項目が複製されます。それ以外の場合、新しい <xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスの項目のコレクションに元の <xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスの項目への参照が含まれます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-210">If the `cloneItems` parameter is `true`, all items within the <xref:System.ServiceModel.Syndication.SyndicationFeed> object are cloned; otherwise, the new <xref:System.ServiceModel.Syndication.SyndicationFeed> instance's items collection contain references to the original <xref:System.ServiceModel.Syndication.SyndicationFeed> instance's items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-211">このメソッドを呼び出す方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-211">The following code shows how to call this method.</span></span>  
  
 [!code-csharp[SyndicationFeed#47](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#47)]
 [!code-vb[SyndicationFeed#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contributors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationPerson&gt; Contributors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contributors As Collection(Of SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ Contributors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationPerson ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationPerson&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-212">フィードの投稿者のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-212">Gets a collection of the contributors to the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-213">フィードの投稿者を表す <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-213">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> objects that represents the contributors to the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-214">Atom 1.0 にシリアル化するときに各<xref:System.ServiceModel.Syndication.SyndicationPerson>にコレクションを記述、<`contributor`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-214">When serialized to Atom 1.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to a <`contributor`> element.</span></span>  
  
 <span data-ttu-id="6fa45-215">RSS 2.0 にシリアル化するときに各<xref:System.ServiceModel.Syndication.SyndicationPerson>にコレクションを記述、<`a10:contributor`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-215">When serialized to RSS 2.0, each <xref:System.ServiceModel.Syndication.SyndicationPerson> in the collection is written to an <`a10:contributor`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-216"><xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> の <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションに投稿者を追加する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-216">The following code shows how to add a contributor to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#11)]
 [!code-vb[SyndicationFeed#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#11)]  
  
 <span data-ttu-id="6fa45-217"><xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> コレクションを Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-217">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#20](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#20)]  
  
 <span data-ttu-id="6fa45-218"><xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> コレクションを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-218">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#21](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Copyright { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Copyright" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public Property Copyright As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Copyright { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-219">フィードの著作権情報を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-219">Gets and sets copyright information for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-220">フィードの著作権情報を表す <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-220">A <see cref="T:System.ServiceModel.Syndication.SyndicationContent" /> object that represents copyright information for the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-221">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>に書き込まれますが、<`rights`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-221">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is written to a <`rights`> element.</span></span>  
  
 <span data-ttu-id="6fa45-222">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A>に書き込まれますが、<`copyright`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-222">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is written to a <`copyright`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-223"><xref:System.ServiceModel.Syndication.SyndicationFeed> の著作権情報を設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-223">The following code shows how to set the copyright information for a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#12)]
 [!code-vb[SyndicationFeed#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#12)]  
  
 <span data-ttu-id="6fa45-224"><xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> を Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-224">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#22](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#22)]  
  
```  
<rights type="text">Copyright 2007</rights>  
```  
  
 <span data-ttu-id="6fa45-225"><xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> を RSS 2.0.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-225">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#23](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCategory">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationCategory CreateCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationCategory CreateCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateCategory () As SyndicationCategory" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationCategory ^ CreateCategory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationCategory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-226">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-226">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-227">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-227">A new <see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-228">このメソッドは、<xref:System.ServiceModel.Syndication.SyndicationCategory> オブジェクトを <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> コレクションには追加しません。</span><span class="sxs-lookup"><span data-stu-id="6fa45-228">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationCategory> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationItem CreateItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationItem CreateItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateItem () As SyndicationItem" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationItem ^ CreateItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-229">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-229">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-230">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-230">A new <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-231">このメソッドは、<xref:System.ServiceModel.Syndication.SyndicationItem> オブジェクトを <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> コレクションには追加しません。</span><span class="sxs-lookup"><span data-stu-id="6fa45-231">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationItem> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLink">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationLink CreateLink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink CreateLink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateLink () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ CreateLink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-232">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-232">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-233">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-233">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-234">新しい <xref:System.ServiceModel.Syndication.SyndicationLink> インスタンスは、作成に使用される <xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスに追加されません。</span><span class="sxs-lookup"><span data-stu-id="6fa45-234">The new <xref:System.ServiceModel.Syndication.SyndicationLink> instance is not added to the <xref:System.ServiceModel.Syndication.SyndicationFeed> instance used to create it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePerson">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Syndication.SyndicationPerson CreatePerson ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson CreatePerson() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreatePerson () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ CreatePerson();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-235">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-235">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-236">新しい <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-236">A new <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-237">このメソッドは、<xref:System.ServiceModel.Syndication.SyndicationPerson> オブジェクトを <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> コレクションまたは <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> コレクションには追加しません。</span><span class="sxs-lookup"><span data-stu-id="6fa45-237">This method does not add the <xref:System.ServiceModel.Syndication.SyndicationPerson> object to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> or <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Description { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-238">フィードの説明を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-238">Gets and sets a description of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-239">フィードの説明を表す <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-239">A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> object that represents the description of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-240">Atom 1.0 にシリアル化するときに<xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>に書き込まれますが、<`subtitle`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-240">When serialized to Atom 1.0, <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is written to a <`subtitle`> element.</span></span>  
  
 <span data-ttu-id="6fa45-241">RSS 2.0 にシリアル化するときに<xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A>に書き込まれますが、<`description`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-241">When serialized to RSS 2.0, <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is written to a <`description`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-242"><xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> の <xref:System.ServiceModel.Syndication.SyndicationFeed> を設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-242">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#13)]
 [!code-vb[SyndicationFeed#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#13)]  
  
 <span data-ttu-id="6fa45-243"><xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> を Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-243">The following XML shows how <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#24](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#24)]  
  
 <span data-ttu-id="6fa45-244"><xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> を RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-244">The following XML shows how <xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A> is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#25](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-245">フィードの要素拡張を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-245">Gets the element extensions for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-246">フィードの要素拡張を含む <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-246">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> instance that contains the element extensions in the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-247">要素拡張は、Atom 1.0 または RSS 2.0 のどちらの仕様でも定義されていない XML 要素です。</span><span class="sxs-lookup"><span data-stu-id="6fa45-247">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6fa45-248">有効な XML 要素の名前空間が、外側の名前空間と異なる場合は、その XML 要素を拡張として追加できます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-248">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
 `<mg:MyElement xmlns:mg="http://myserver/elements" />`  
  
 <span data-ttu-id="6fa45-249">要素拡張の追加の例は、次を参照してください。、 [Loosely-Typed 拡張](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="6fa45-249">For an example of adding element extensions, see the [Loosely-Typed Extensions](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md) sample.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-250">要素拡張を <xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスに追加する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-250">The following code shows how to add element extensions to a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#1](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#1)]
 [!code-vb[LooselyTypedExtensions#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generator">
      <MemberSignature Language="C#" Value="public string Generator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Generator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Generator" />
      <MemberSignature Language="VB.NET" Value="Public Property Generator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Generator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-251">フィードのジェネレーターを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-251">Gets and sets the generator of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-252">フィードを生成したツールの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-252">The name of the tool that generated the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-253">Atom 1.0 および RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A>に書き込まれますが、<`generator`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-253">When serialized to Atom 1.0 and RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> is written to a <`generator`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-254"><xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> の <xref:System.ServiceModel.Syndication.SyndicationFeed> を設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-254">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> of a <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 <span data-ttu-id="6fa45-255"><xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> プロパティを Atom 1.0 および RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-255">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A> property is serialized to Atom 1.0 and RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#26](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAtom10Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Atom10FeedFormatter GetAtom10Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAtom10Formatter () As Atom10FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Atom10FeedFormatter ^ GetAtom10Formatter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Atom10FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-256">
            <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-256">Gets an <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-257">
            <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-257">An <see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRss20Formatter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-258">
            <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-258">Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter () As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-259">
            <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-259">Gets an <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-260">
            <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-260">An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRss20Formatter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter (bool serializeExtensionsAsAtom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Syndication.Rss20FeedFormatter GetRss20Formatter(bool serializeExtensionsAsAtom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRss20Formatter (serializeExtensionsAsAtom As Boolean) As Rss20FeedFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Syndication::Rss20FeedFormatter ^ GetRss20Formatter(bool serializeExtensionsAsAtom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.Rss20FeedFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializeExtensionsAsAtom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializeExtensionsAsAtom">
          <span data-ttu-id="6fa45-261">Atom 1.0 名前空間を持つ要素および属性の拡張をシリアル化するかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-261">A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-262">新しい <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-262">Gets a new <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-263">
            <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-263">An <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-264">RSS 2.0 仕様では、仕様に定義されていない要素と属性を名前空間内だけで使用できます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-264">The RSS 2.0 specification allows elements and attributes that are not specified in its specification only if they are within a namespace.</span></span> <span data-ttu-id="6fa45-265">`serializedExtensionsAsAtom` パラメーターが `true` の場合、フォーマッタは自動的にすべての拡張に `a10` 名前空間修飾子を追加します。それ以外の場合、拡張はシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="6fa45-265">When the `serializedExtensionsAsAtom` parameter is `true`, the formatter automatically adds the `a10` namespace qualifier to all extensions; otherwise, the extensions are not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-266">フィードの ID を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-266">Gets and sets the ID of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-267">フィードの ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-267">The ID of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-268">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A>に書き込まれますが、<`id`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-268">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> is written to an <`id`> element.</span></span>  
  
 <span data-ttu-id="6fa45-269">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A>に書き込まれますが、<`a10:id`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-269">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> is written to an <`a10:id`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-270"><xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> インスタンスで <xref:System.ServiceModel.Syndication.SyndicationFeed> プロパティを設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-270">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#40](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#40)]
 [!code-vb[SyndicationFeed#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#40)]  
  
 <span data-ttu-id="6fa45-271">次の XML は、<xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> プロパティを Atom 1.0 にシリアル化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-271">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#27](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#27)]  
  
 <span data-ttu-id="6fa45-272"><xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> プロパティを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-272">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#28](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public Uri ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ImageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-273">フィードのイメージの URL を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-273">Gets and sets the image URL for the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-274">フィードのイメージの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-274">The URL for the image for the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-275">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A>プロパティに書き込まれて、<`logo`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-275">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is written to a <`logo`> element.</span></span>  
  
 <span data-ttu-id="6fa45-276">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A>プロパティに書き込まれて、<`image`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-276">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is written to an <`image`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-277"><xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> インスタンスで <xref:System.ServiceModel.Syndication.SyndicationFeed> を設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-277">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#41](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#41)]
 [!code-vb[SyndicationFeed#41](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#41)]  
  
 <span data-ttu-id="6fa45-278">次の XML は、<xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> プロパティを Atom 1.0 にシリアル化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-278">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#29](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#29)]  
  
 <span data-ttu-id="6fa45-279"><xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> プロパティを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-279">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#30](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt; Items { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Syndication.SyndicationItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Items" />
      <MemberSignature Language="VB.NET" Value="Public Property Items As IEnumerable(Of SyndicationItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Syndication::SyndicationItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Syndication.SyndicationItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-280">このフィードに格納されるフィード項目のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-280">Gets a collection of the feed items contained in the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-281">
            <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-281">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-282">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A>にコレクションが書き込まれます <`entry`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-282">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is written to <`entry`> elements.</span></span>  
  
 <span data-ttu-id="6fa45-283">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A>にコレクションが書き込まれます <`item`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-283">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is written to <`item`> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-284"><xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> インスタンスの <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションを設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-284">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#42](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#42)]
 [!code-vb[SyndicationFeed#42](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#42)]  
  
 <span data-ttu-id="6fa45-285"><xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> コレクションを Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-285">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#31](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#31)]  
  
 <span data-ttu-id="6fa45-286"><xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> コレクションを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-286">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#32](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-287">フィードの言語を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-287">Gets and sets the language of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-288">フィードを記述する言語の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-288">The name of the language the feed is written in.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-289">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A>プロパティに書き込まれて、`lang`属性に、<`feed`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-289">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is written to the `lang` attribute in the <`feed`> element.</span></span>  
  
 <span data-ttu-id="6fa45-290">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A>プロパティに書き込まれて、<`language`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-290">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is written to the <`language`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-291"><xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> インスタンスで <xref:System.ServiceModel.Syndication.SyndicationFeed> プロパティを設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-291">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#43](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#43)]
 [!code-vb[SyndicationFeed#43](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#43)]  
  
 <span data-ttu-id="6fa45-292">次の XML は、<xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> プロパティを Atom 1.0 にシリアル化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-292">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#14](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#14)]  
  
 <span data-ttu-id="6fa45-293"><xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> プロパティを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-293">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#33](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset LastUpdatedTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastUpdatedTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastUpdatedTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset LastUpdatedTime { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-294">フィードが最後に更新された時刻を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-294">Gets and sets the time the feed was last updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-295">フィードが最後に更新された時刻に設定された <see cref="T:System.DateTimeOffset" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-295">A <see cref="T:System.DateTimeOffset" /> instance set to the time the feed was last updated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-296">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A>プロパティに書き込まれて、<`updated`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-296">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is written to an <`updated`>element.</span></span>  
  
 <span data-ttu-id="6fa45-297">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A>プロパティに書き込まれて、<`lastBuildDate`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-297">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is written to a <`lastBuildDate`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-298"><xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> インスタンスで <xref:System.ServiceModel.Syndication.SyndicationFeed> プロパティを設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-298">The following code shows how to se the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property on a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#44](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#44)]
 [!code-vb[SyndicationFeed#44](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#44)]  
  
 <span data-ttu-id="6fa45-299">次の XML は、<xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> プロパティを Atom 1.0 にシリアル化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-299">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#34](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#34)]  
  
 <span data-ttu-id="6fa45-300"><xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> プロパティを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-300">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#35](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Syndication.SyndicationLink&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As Collection(Of SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ Links { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Syndication::SyndicationLink ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Syndication.SyndicationLink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-301">フィードに関連付けられたリンクを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-301">Gets the links associated with the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-302">
            <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-302">A collection of <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-303">Atom 1.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A>コレクションがさまざまなに書き込まれます <`link`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-303">When serialized to Atom 1.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is written to a number of <`link`> elements.</span></span>  
  
 <span data-ttu-id="6fa45-304">RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A>コレクションがさまざまなに書き込まれます <`a10:link`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-304">When serialized to RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is written to a number of <`a10:link`> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-305"><xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> インスタンスの <xref:System.ServiceModel.Syndication.SyndicationFeed> コレクションにリンクを追加する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-305">The following code shows how to add a link to the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#45](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#45)]
 [!code-vb[SyndicationFeed#45](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#45)]  
  
 <span data-ttu-id="6fa45-306"><xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> コレクションを Atom 1.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-306">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 <span data-ttu-id="6fa45-307"><xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> コレクションを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-307">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A> collection is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#36](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationFeed Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationFeed Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationFeed ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="6fa45-308">フィードの読み込み元の <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-308">The <see cref="T:System.Xml.XmlReader" /> to load the feed from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-309">指定した XML リーダーから配信フィードを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-309">Loads a syndication feed from the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-310">読み込まれたコンテンツを格納している <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-310">A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> that contains the loaded contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-311">このメソッドの呼び出し方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-311">The following example demonstrates how to call this method.</span></span>  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load&lt;TSyndicationFeed&gt;">
      <MemberSignature Language="C#" Value="public static TSyndicationFeed Load&lt;TSyndicationFeed&gt; (System.Xml.XmlReader reader) where TSyndicationFeed : System.ServiceModel.Syndication.SyndicationFeednew();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSyndicationFeed Load&lt;.ctor (class System.ServiceModel.Syndication.SyndicationFeed) TSyndicationFeed&gt;(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load(Of TSyndicationFeed As {SyndicationFeedNew}) (reader As XmlReader) As TSyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSyndicationFeed&gt;&#xA; where TSyndicationFeed : System::ServiceModel::Syndication::SyndicationFeedgcnew() static TSyndicationFeed Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSyndicationFeed</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSyndicationFeed">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <BaseTypeName>System.ServiceModel.Syndication.SyndicationFeed</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <typeparam name="TSyndicationFeed">
          <span data-ttu-id="6fa45-312">配信フィードの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-312">The syndication feed type.</span>
          </span>
        </typeparam>
        <param name="reader">
          <span data-ttu-id="6fa45-313">読み取り元の <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-313">The <see cref="T:System.Xml.XmlReader" /> to read from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-314">
            <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> の派生インスタンスを、指定した <see cref="T:System.Xml.XmlReader" /> から読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-314">Loads a <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance from the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-315">フィードを格納している、<see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> の派生インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-315">A <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived instance that contains the feed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-316">このメソッドは、配信項目を <xref:System.ServiceModel.Syndication.SyndicationFeed> から派生したクラスに読み込むときに使用します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-316">Use this method when you are loading a syndication item into a class derived from <xref:System.ServiceModel.Syndication.SyndicationFeed>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-317"><xref:System.Xml.XmlReader> インスタンスから配信フィードを読み込む方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-317">The following code shows how to load a syndication feed from an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#9)]
 [!code-vb[SyndicationFeed#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="6fa45-318">読み取り中に無効な XML が検出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-318">Invalid XML encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAsAtom10">
      <MemberSignature Language="C#" Value="public void SaveAsAtom10 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsAtom10(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsAtom10 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsAtom10(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="6fa45-319">書き込み先の <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-319">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-320">配信フィードを、Atom 1.0 形式の指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-320">Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in Atom 1.0 format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-321"><xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスを書き込む方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-321">The following code shows how to write out a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance in the Atom 1.0 format.</span></span>  
  
 [!code-csharp[SyndicationFeed#52](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#52)]
 [!code-vb[SyndicationFeed#52](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#52)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsRss20">
      <MemberSignature Language="C#" Value="public void SaveAsRss20 (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAsRss20(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsRss20 (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsRss20(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="6fa45-322">書き込み先の <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-322">The <see cref="T:System.Xml.XmlWriter" /> to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-323">配信フィードを、RSS 2.0 形式の指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-323">Write the syndication feed to the specified <see cref="T:System.Xml.XmlWriter" /> in RSS 2.0 format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6fa45-324">RSS 2.0 形式で <xref:System.ServiceModel.Syndication.SyndicationFeed> インスタンスを書き込む方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-324">The following code shows how to write out a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance in the RSS 2.0 format.</span></span>  
  
 [!code-csharp[SyndicationFeed#51](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#51)]
 [!code-vb[SyndicationFeed#51](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.TextSyndicationContent Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.TextSyndicationContent Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationFeed.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As TextSyndicationContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::TextSyndicationContent ^ Title { System::ServiceModel::Syndication::TextSyndicationContent ^ get(); void set(System::ServiceModel::Syndication::TextSyndicationContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.TextSyndicationContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6fa45-325">フィードのタイトルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-325">Gets and sets the title of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6fa45-326">フィードのタイトルを格納している <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-326">A <see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /> instance that contains the title of the feed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-327">Atom 1.0 および RSS 2.0 にシリアル化するときに、<xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A>プロパティに書き込まれて、<`title`> 要素。</span><span class="sxs-lookup"><span data-stu-id="6fa45-327">When serialized to Atom 1.0 and RSS 2.0, the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is written to a <`title`> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fa45-328"><xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> インスタンスの <xref:System.ServiceModel.Syndication.SyndicationFeed> プロパティを設定する方法を次のコードに示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-328">The following code shows how to set the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property of a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance.</span></span>  
  
 [!code-csharp[SyndicationFeed#46](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#46)]
 [!code-vb[SyndicationFeed#46](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#46)]  
  
 <span data-ttu-id="6fa45-329">次の XML は、<xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> プロパティを Atom 1.0 にシリアル化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6fa45-329">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-csharp[SyndicationFeed#39](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationfeed/cs/program.cs#39)]
 [!code-vb[SyndicationFeed#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationfeed/vb/snippets.vb#39)]
 [!code-xml[SyndicationFeed#39](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/atom.xml#39)]  
  
 <span data-ttu-id="6fa45-330"><xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> プロパティを RSS 2.0 にシリアル化する方法を次の XML に示します。</span><span class="sxs-lookup"><span data-stu-id="6fa45-330">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationFeed#38](~/samples/snippets/common/VS_Snippets_CFX/syndicationfeed/common/rss.xml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6fa45-331">要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-331">The name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="6fa45-332">要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-332">The namespace of the element.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6fa45-333">解析する属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-333">The attribute to parse.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="6fa45-334">解析の際に使用する配信バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-334">The syndication version to use when parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-335">属性の拡張の解析を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-335">Attempts to parse an attribute extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-336">属性の拡張が正常に解析されたかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-336">A value that specifies whether the attribute extension was parsed successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-337">属性の拡張は、Atom 1.0 または RSS 2.0 の仕様で定義されていないカスタム属性です。</span><span class="sxs-lookup"><span data-stu-id="6fa45-337">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6fa45-338">属性としてシリアル化は、<`feed`> (の Atom 1.0) または <`rss`> (RSS 1.0 の場合) の要素は、使用される配信バージョンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="6fa45-338">They are serialized as an attribute of the <`feed`> (for Atom 1.0) or <`rss`> (for RSS 1.0) element, which depends upon the syndication version being used.</span></span> <span data-ttu-id="6fa45-339">このメソッドは、カスタム属性の拡張の逆シリアル化を処理できる拡張ポイントです。</span><span class="sxs-lookup"><span data-stu-id="6fa45-339">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="6fa45-340">これを行うには、<xref:System.ServiceModel.Syndication.SyndicationFeed> からクラスを派生させ、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6fa45-340">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="6fa45-341">このメソッドは、すべての認識されない属性の拡張で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-341">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="6fa45-342">読み取り中に無効な XML が検出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-342">Invalid XML Encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="6fa45-343">読み取り元の <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-343">The <see cref="T:System.Xml.XmlReader" /> to read from.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="6fa45-344">解析の際に使用する配信バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-344">The syndication version to use while parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-345">要素拡張の解析を試みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-345">Attempts to parse an element extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6fa45-346">要素拡張が正常に解析されたかどうかを指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-346">A value that specifies whether the element extension was parsed successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-347">要素拡張は、Atom 1.0 または RSS 2.0 のどちらの仕様でも定義されていない XML 要素です。</span><span class="sxs-lookup"><span data-stu-id="6fa45-347">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6fa45-348">有効な XML 要素の名前空間が、外側の名前空間と異なる場合は、その XML 要素を拡張として追加できます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-348">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="6fa45-349">このメソッドは、カスタム要素拡張の逆シリアル化を処理できる拡張ポイントです。</span><span class="sxs-lookup"><span data-stu-id="6fa45-349">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="6fa45-350">これを行うには、<xref:System.ServiceModel.Syndication.SyndicationFeed> からクラスを派生させ、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6fa45-350">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="6fa45-351">このメソッドは、認識されないすべての要素拡張で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-351">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="6fa45-352">読み取り中に無効な XML が検出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-352">Invalid XML encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="6fa45-353">書き込み先の <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-353">The <see cref="T:System.Xml.XmlReader" /> to write to.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="6fa45-354">書き込みの際に使用する配信バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-354">The syndication version to use while writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-355">属性の拡張を、指定された配信バージョンを使用して、指定された <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-355">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-356">属性の拡張は、Atom 1.0 または RSS 2.0 の仕様で定義されていないカスタム属性です。</span><span class="sxs-lookup"><span data-stu-id="6fa45-356">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6fa45-357">属性としてシリアル化は、<`feed`> (の Atom 1.0) または <`rss`> (RSS 1.0 の場合) の要素は、使用される配信バージョンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="6fa45-357">They are serialized as an attribute of the <`feed`> (for Atom 1.0) or <`rss`> (for RSS 1.0) element, which depends upon the syndication version being used.</span></span> <span data-ttu-id="6fa45-358">このメソッドは、カスタム属性の拡張のシリアル化を処理できる拡張ポイントです。</span><span class="sxs-lookup"><span data-stu-id="6fa45-358">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="6fa45-359">これを行うには、<xref:System.ServiceModel.Syndication.SyndicationFeed> からクラスを派生させ、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6fa45-359">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="6fa45-360">このメソッドは、すべての認識されない属性の拡張で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-360">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="6fa45-361">書き込み先の <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-361">The <see cref="T:System.Xml.XmlReader" /> to write to.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="6fa45-362">書き込みの際に使用する配信バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-362">The syndication version to use while writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fa45-363">要素拡張を、指定した配信バージョンを使用して、指定した <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fa45-363">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fa45-364">要素拡張は、Atom 1.0 または RSS 2.0 のどちらの仕様でも定義されていない XML 要素です。</span><span class="sxs-lookup"><span data-stu-id="6fa45-364">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="6fa45-365">有効な XML 要素の名前空間が、外側の名前空間と異なる場合は、その XML 要素を拡張として追加できます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-365">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="6fa45-366">このメソッドは、カスタム要素拡張のシリアル化を処理できる拡張ポイントです。</span><span class="sxs-lookup"><span data-stu-id="6fa45-366">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="6fa45-367">これを行うには、<xref:System.ServiceModel.Syndication.SyndicationFeed> からクラスを派生させ、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6fa45-367">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationFeed> and override this method.</span></span> <span data-ttu-id="6fa45-368">このメソッドは、認識されないすべての要素拡張で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="6fa45-368">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>