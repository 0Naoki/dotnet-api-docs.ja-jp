<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e88490c181178a74c5a57c442693d97eeb118dc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36709361" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type BasicDesignerLoader = class&#xA;    inherit DesignerLoader&#xA;    interface IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0b587-101">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> インターフェイスの実装を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b587-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-102">A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>は何も保存形式に関連するデザイナー ローダーを完全に実装します。</span><span class="sxs-lookup"><span data-stu-id="0b587-102">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> is a complete implementation of a designer loader without anything relating to a persistence format.</span></span> <span data-ttu-id="0b587-103">A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>テキストまたはバイナリの永続化は指定しませんが、次の機能をサポートします。</span><span class="sxs-lookup"><span data-stu-id="0b587-103">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> does not dictate either a text or binary persistence, but it does support the following features:</span></span>  
  
-   <span data-ttu-id="0b587-104">複数の負荷の依存関係。</span><span class="sxs-lookup"><span data-stu-id="0b587-104">Multiple load dependencies.</span></span>  
  
-   <span data-ttu-id="0b587-105">デザイナー内で変更を追跡します。</span><span class="sxs-lookup"><span data-stu-id="0b587-105">Tracking changes within the designer.</span></span>  
  
-   <span data-ttu-id="0b587-106">アイドル時間の再読み込みを延期します。</span><span class="sxs-lookup"><span data-stu-id="0b587-106">Deferred idle-time reloading.</span></span>  
  
 <span data-ttu-id="0b587-107">A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>デザイナー ホストのサービス コンテナーに 2 つの種類のサービスを追加します: 置き換え可能サービスと置き換えることができないサービス。</span><span class="sxs-lookup"><span data-stu-id="0b587-107">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> adds two kinds of services to the designer host’s service container: replaceable services and irreplaceable services.</span></span> <span data-ttu-id="0b587-108">置き換え可能なサービスを置換するには、保護対象の値を変更することによって<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0b587-108">You can replace a replaceable service by changing the value of the protected <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="0b587-109">実装が互いに依存しているために、置き換えることができないサービスを置き換えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0b587-109">You cannot replace irreplaceable services because their implementations depend on each other.</span></span>  
  
 <span data-ttu-id="0b587-110">次の表では、既定で提供されるサービスについて説明します。</span><span class="sxs-lookup"><span data-stu-id="0b587-110">The following table describes the services that are provided by default.</span></span>  
  
|<span data-ttu-id="0b587-111">既定のサービス</span><span class="sxs-lookup"><span data-stu-id="0b587-111">Default Service</span></span>|<span data-ttu-id="0b587-112">説明</span><span class="sxs-lookup"><span data-stu-id="0b587-112">Description</span></span>|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|<span data-ttu-id="0b587-113">要求をデザイナーを再読み込み自体アイドル状態のときにオブジェクトを許可します。</span><span class="sxs-lookup"><span data-stu-id="0b587-113">Allows objects to request that the designer reload itself when it is idle.</span></span> <span data-ttu-id="0b587-114">これは、置き換え可能なサービスです。</span><span class="sxs-lookup"><span data-stu-id="0b587-114">This is a replaceable service.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|<span data-ttu-id="0b587-115">およびオブジェクトを逆シリアル化するために使用します。</span><span class="sxs-lookup"><span data-stu-id="0b587-115">Used to serialize and deserialize objects.</span></span> <span data-ttu-id="0b587-116">シリアル化マネージャーは、シリアル化を実行する必要があるオブジェクトがシリアル化マネージャーに追加された任意のシリアル化プロバイダーを使用できるように、サービスとして追加されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-116">The serialization manager is added as a service so objects that need to perform serialization can utilize any serialization providers that were added to the serialization manager.</span></span> <span data-ttu-id="0b587-117">これは、置き換えることができないサービスです。</span><span class="sxs-lookup"><span data-stu-id="0b587-117">This is an irreplaceable service.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="0b587-118">システム リソースへのフル アクセスできます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b587-118">for full access to system resources.</span>
      </span>
      <span data-ttu-id="0b587-119">値を要求: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />、<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b587-119">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="0b587-120">関連付けられた状態。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b587-120">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-121">
            <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : System.ComponentModel.Design.Serialization.IDesignerLoaderHost -&gt; unit&#xA;override this.BeginLoad : System.ComponentModel.Design.Serialization.IDesignerLoaderHost -&gt; unit" Usage="basicDesignerLoader.BeginLoad host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="0b587-122">読み込むデザイナー ローダー ホスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-122">The designer loader host to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-123">読み込みプロセスを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-123">Starts the loading process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-124">これは、抽象の実装<xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-124">This is an implementation of the abstract <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0b587-125">独自のクラスには、このメソッドをオーバーライドする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0b587-125">You do not need to override this method in your own class.</span></span> <span data-ttu-id="0b587-126"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドは、次の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="0b587-126">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method performs the following actions:</span></span>  
  
-   <span data-ttu-id="0b587-127">これは、デザイン画面は既に読み込まれていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="0b587-127">It verifies that the design surface has not already loaded.</span></span>  
  
-   <span data-ttu-id="0b587-128">最初の呼び出しでは、関連するサービスとの呼び出しが追加されます、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-128">On the first call, it adds relevant services and calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method.</span></span>  
  
-   <span data-ttu-id="0b587-129">呼び出す、 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>、 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>、および<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-129">It calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span>  
  
 <span data-ttu-id="0b587-130">デザイナー ローダー サービスがサービス コンテナーから削除されていない場合<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>と<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッドの代わりに、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>と<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-130">If the designer loader service has not been removed from the service container, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> methods instead of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span> <span data-ttu-id="0b587-131">このような状況では、デザイナー ローダー サービスを呼び出すの責任において、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>と<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0b587-131">In this situation, it is the responsibility of the designer loader service to call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b587-132">
            <paramref name="host" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-132">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-133">デザイナーが既に読み込まれているか、<see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> が別のデザイナー ローダー ホストで呼び出されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-133">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b587-134">
            <paramref name="host" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-134">
              <paramref name="host" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="basicDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-135">
            <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> で使用したリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-135">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-136">呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>メソッドでは、デザイナー ローダーに変更をフラッシュしません。</span><span class="sxs-lookup"><span data-stu-id="0b587-136">Calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method does not flush changes to the designer loader.</span></span> <span data-ttu-id="0b587-137">変更を保存する場合は、呼び出す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>呼び出す前に<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0b587-137">If you want changes to be saved, call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> before calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="0b587-138"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> を使い終わったら <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0b587-138">Call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="0b587-139"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> メソッドによって、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="0b587-139">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="0b587-140">呼び出した後<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="0b587-140">After calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> was occupying.</span></span> <span data-ttu-id="0b587-141">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="0b587-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0b587-142"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="0b587-142">Always call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="0b587-143">そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="0b587-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberSignature Language="F#" Value="abstract member EnableComponentNotification : bool -&gt; bool&#xA;override this.EnableComponentNotification : bool -&gt; bool" Usage="basicDesignerLoader.EnableComponentNotification enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <span data-ttu-id="0b587-144">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を有効にする場合は <see langword="true" />。<see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を無効にする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-144">
              <see langword="true" /> to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; <see langword="false" /> to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-145">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を有効または無効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-145">Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b587-146">コンポーネントの通知がこの呼び出しの前に有効になっていた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-146">
              <see langword="true" /> if the component notification was enabled prior to this call; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="basicDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-147">保留中の変更をデザイナー ローダーにフラッシュします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-147">Flushes pending changes to the designer loader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-148">デザイナー ローダーがまだ読み込まれていないか、変更済みとしてマークされていない場合、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>メソッドをすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="0b587-148">If the designer loader has not been loaded or has not been marked as modified, the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method returns immediately.</span></span> <span data-ttu-id="0b587-149">それ以外の場合、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>シリアル化セッションを作成するシリアル化マネージャーを確認してから呼び出して<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0b587-149">Otherwise, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> asks the serialization manager to create a serialization session and then calls <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="basicDesignerLoader.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="0b587-150">サービスの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-150">The <see cref="T:System.Type" /> of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-151">要求したサービスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-151">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b587-152">要求したサービス。要求したサービスが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-152">The requested service, or <see langword="null" /> if the requested service cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> 派生するクラスを許可するヘルパー メソッドは、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>デザイナー ローダー ホストによって提供されるサービスへのアクセス。</span><span class="sxs-lookup"><span data-stu-id="0b587-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> is a helper method that allows classes deriving from <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> to access services offered by the designer loader host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="basicDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-154">サービスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-154">Initializes services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-155"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>メソッドは、初めて<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-155">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method is called the first time <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is invoked.</span></span> <span data-ttu-id="0b587-156">この時点でデザイナー ローダー ホストに必要なサービスを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="0b587-156">You can add any services necessary to the designer loader host at this time.</span></span> <span data-ttu-id="0b587-157">基底の実装に追加されるサービスは、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>を提供するため、基底の実装を呼び出した後は、既存のサービスを置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="0b587-157">The base implementation adds services that <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> provides, so after calling the base implementation you may replace existing services.</span></span> <span data-ttu-id="0b587-158">オーバーライドすることでは、ここに追加するカスタム サービスを削除する必要があります<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0b587-158">You must remove any custom services you add here by overriding <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-159">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-159">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b587-160">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-160">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="abstract member IsReloadNeeded : unit -&gt; bool&#xA;override this.IsReloadNeeded : unit -&gt; bool" Usage="basicDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-161">デザイナーの再読み込みが必要かどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-161">Indicates whether the designer should be reloaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b587-162">デザイナーの再読み込みが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-162">
              <see langword="true" /> if the designer should be reloaded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0b587-163">既定の実装では、常に <see langword="true" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-163">The default implementation always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-164"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A>メソッドは一部のデザイナー ローダーを再読み込みを最適化するために使用します。</span><span class="sxs-lookup"><span data-stu-id="0b587-164">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> method is used by some designer loaders to optimize reloading.</span></span> <span data-ttu-id="0b587-165">デザイナー ローダーは、インテリジェントな再読み込みをサポートしている場合、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="0b587-165">This method can be overridden if your designer loader supports intelligent reloading.</span></span> <span data-ttu-id="0b587-166">一部のデザイナー ローダーでは、その基になるドキュメントに加えられた変更を検出でき、デザイナーの再読み込みが実際に必要なかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="0b587-166">Some designer loaders can detect changes made to their underlying document and determine if a reload of the designer is actually necessary.</span></span> <span data-ttu-id="0b587-167">返す必要がありますが、場合`false`このメソッドからです。</span><span class="sxs-lookup"><span data-stu-id="0b587-167">If not, they should return `false` from this method.</span></span> <span data-ttu-id="0b587-168">既定の実装を常に返します`true`、すべての呼び出しにことを示す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>は成功します。</span><span class="sxs-lookup"><span data-stu-id="0b587-168">The default implementation always returns `true`, indicating that any call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> will succeed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoaderHost : System.ComponentModel.Design.Serialization.IDesignerLoaderHost" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b587-169">ローダー ホストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-169">Gets the loader host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b587-170">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> メソッドに渡された <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-170">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-171">このメソッドは、このデザイナー ローダーに指定されたローダー ホストを返します。</span><span class="sxs-lookup"><span data-stu-id="0b587-171">This method returns the loader host that was given to this designer loader.</span></span> <span data-ttu-id="0b587-172">これは、`null`場合<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>がまだ呼び出されていないか、このデザイナー ローダーが破棄されている場合。</span><span class="sxs-lookup"><span data-stu-id="0b587-172">This can be `null` if <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> has not been called yet, or if this designer loader has been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-173">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-173">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b587-174">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-174">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b587-175">デザイナー ローダーがデザイン サーフェイスを読み込み中かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-175">Gets a value indicating whether the designer loader is loading the design surface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b587-176">デザイナー ローダーがデザイン サーフェイスを現在読み込み中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-176">
              <see langword="true" /> if the designer loader is currently loading the design surface; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-177"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>クラスを提供、 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>、負荷の依存関係をサポートします。</span><span class="sxs-lookup"><span data-stu-id="0b587-177">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> class provides the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, which supports load dependencies.</span></span> <span data-ttu-id="0b587-178">このプロパティでは、戻り値のアカウントとは、読み込みの依存関係が受け取る`true`保留状態の読み込みの依存関係がある場合。</span><span class="sxs-lookup"><span data-stu-id="0b587-178">This property takes load dependencies into account and will return `true` if there are any outstanding load dependencies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b587-179">デザイナーが変更されているかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-179">Gets or sets a value indicating whether the designer has been modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b587-180">デザイナーが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-180">
              <see langword="true" /> if the designer has been modified; otherwise, <see langword="false" />,</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-181">デザイナー ローダーが、デザイナーが変更されたことを検出したかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0b587-181">Determines if the designer loader has detected that the designer has been modified.</span></span> <span data-ttu-id="0b587-182">場合は、このプロパティは`true`ときに、デザイナー ローダーの<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>メソッドが呼び出されると、デザイナー ローダーが呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-182">If this property is `true` when the designer loader’s <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method is called, the designer loader will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginLoad : unit -&gt; unit&#xA;override this.OnBeginLoad : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-183">これから読み込みを開始することをデザイナー ローダーに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-183">Notifies the designer loader that loading is about to begin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-184"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>読み込みプロセスを開始するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-184">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method is invoked to start the loading process.</span></span> <span data-ttu-id="0b587-185">この時点で、読み込みに必要な初期化を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b587-185">You should perform any necessary initialization for loading at this time.</span></span> <span data-ttu-id="0b587-186">このメソッドは、実際の読み込みを実行するは使用できません。</span><span class="sxs-lookup"><span data-stu-id="0b587-186">This method should not be used to perform the actual load.</span></span> <span data-ttu-id="0b587-187">既定の実装は、変更通知を無効にし、設定、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>読み込みします。</span><span class="sxs-lookup"><span data-stu-id="0b587-187">The default implementation disables change notifications and sets up the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> for loading.</span></span>  
  
 <span data-ttu-id="0b587-188">実装する場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>依存読み込みをサポートするを呼び出す必要があります<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>最初の依存の読み込みが発生したとき。</span><span class="sxs-lookup"><span data-stu-id="0b587-188">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> when the first dependent load occurs.</span></span> <span data-ttu-id="0b587-189">呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドを最後に呼び出した後、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-189">Call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="0b587-190">既定では、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>実装<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>このとします。</span><span class="sxs-lookup"><span data-stu-id="0b587-190">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="0b587-191">場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>場合は使用できません<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出されると、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>は直接呼び出す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0b587-191">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>.</span></span>  
  
 <span data-ttu-id="0b587-192">独自のローダー サービスを提供する場合、またはローダーのサービス提供にしない場合は、ユーザーは、このメソッドを呼び出す担当します。</span><span class="sxs-lookup"><span data-stu-id="0b587-192">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="0b587-193"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドで自動的に呼び出すこのいずれかの呼び出しによって直接は<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>が利用可能なまたは直接されていない場合。</span><span class="sxs-lookup"><span data-stu-id="0b587-193">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginUnload : unit -&gt; unit&#xA;override this.OnBeginUnload : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-194">これからアンロードを開始することをデザイナー ローダーに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-194">Notifies the designer loader that unloading is about to begin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-195"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A>デザイナー ローダーは、ドキュメントをアンロードするときに、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-195">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> method is invoked when the designer loader is about to unload the document.</span></span>  
  
 <span data-ttu-id="0b587-196">ドキュメントを準備するため、再読み込みするためにアンロードされる可能性がありますか、ドキュメントの読み込みに失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0b587-196">The document may be unloaded in preparation for reloading, or if the document failed to load.</span></span> <span data-ttu-id="0b587-197">ドキュメントに固有のサービスを追加した場合は<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>または<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>、ここでそれらを削除します。</span><span class="sxs-lookup"><span data-stu-id="0b587-197">If you added document-specific services in <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> or <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, remove them here.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member OnEndLoad : bool * System.Collections.ICollection -&gt; unit&#xA;override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="0b587-198">読み込みが正常に完了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-198">
              <see langword="true" /> if the load completed successfully; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="errors">
          <span data-ttu-id="0b587-199">エラーとして報告されたオブジェクト (通常は例外) を格納している <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-199">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-200">読み込みが完了したことをデザイナー ローダーに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-200">Notifies the designer loader that loading is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-201"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>読み込みが完了すると、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-201">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method is invoked when loading is finished.</span></span> <span data-ttu-id="0b587-202">常に呼び出されます、場合でも、読み込み中に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0b587-202">It is always called, even if an exception is thrown during loading.</span></span> <span data-ttu-id="0b587-203">値`successful`に設定されます`true`、読み込みが成功した場合または`false`致命的なエラーが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="0b587-203">The value of `successful` will be set to `true` if the load succeeded, or `false` if a fatal error occurred.</span></span> <span data-ttu-id="0b587-204">`errors`コレクションには、エラーとして報告されたオブジェクトにが含まれます。</span><span class="sxs-lookup"><span data-stu-id="0b587-204">The `errors` collection will contain objects that were reported as errors.</span></span> <span data-ttu-id="0b587-205">通常、これらのオブジェクトは例外です。</span><span class="sxs-lookup"><span data-stu-id="0b587-205">Usually, these objects are exceptions.</span></span>  
  
 <span data-ttu-id="0b587-206">実装する場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>依存読み込みをサポートするを呼び出す必要があります、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドを最後に呼び出した後、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-206">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="0b587-207">既定では、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>実装<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>このとします。</span><span class="sxs-lookup"><span data-stu-id="0b587-207">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="0b587-208">場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>場合は使用できません<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出されると、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>は直接呼び出す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>呼び出した後<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0b587-208">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> after calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.</span></span>  
  
 <span data-ttu-id="0b587-209">このメソッドは、依存するすべての読み込みが完了したときに、デザイナー ローダー サービスによって呼び出さ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b587-209">This method should be called by the designer loader service when all dependent loads have been completed.</span></span>  <span data-ttu-id="0b587-210">これによって、読み込みプロセスによって開始された、停止、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-210">This stops the loading process that was initiated by the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method.</span></span> <span data-ttu-id="0b587-211">独自のローダー サービスを提供する場合、またはローダーのサービス提供にしない場合は、ユーザーは、このメソッドを呼び出す担当します。</span><span class="sxs-lookup"><span data-stu-id="0b587-211">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="0b587-212"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドが自動的に呼び出さこれには、いずれかの呼び出しによって直接、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッド場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>が利用可能なまたは直接されていない場合。</span><span class="sxs-lookup"><span data-stu-id="0b587-212">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-213">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-213">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b587-214">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-214">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberSignature Language="F#" Value="abstract member OnModifying : unit -&gt; unit&#xA;override this.OnModifying : unit -&gt; unit" Usage="basicDesignerLoader.OnModifying " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-215">ドキュメントの状態が変更されようとしていることをデザイナー ローダーに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-215">Notifies the designer loader that the state of the document is about to be modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-216"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>メソッドは、コンポーネントの変更に応答を追加する、または変更しようとしていますが、デザイナーにあることを示すイベントを削除します。</span><span class="sxs-lookup"><span data-stu-id="0b587-216">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> method is called in response to a component changing, adding, or removing event which indicates that the designer is about to be modified.</span></span> <span data-ttu-id="0b587-217">ソース コード管理を実装するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="0b587-217">You can implement source code control by overriding this method.</span></span> <span data-ttu-id="0b587-218">呼び出し<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>があることを意味、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>プロパティに後で設定する`true`;、単に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="0b587-218">A call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> does not mean that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> property will later be set to `true`; it merely indicates an intention to do so.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">
          <span data-ttu-id="0b587-219">読み込まれたデザイナーの状態を永続化する際に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-219">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-220">すべての変更をデザイナーにフラッシュします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-220">Flushes all changes to the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-221"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>デザイナー ローダーは、デザイナーに加えられた変更を永続化にフラッシュする必要がある場合、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-221">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method is invoked when the designer loader needs to flush to persistence any changes made to the designers.</span></span> <span data-ttu-id="0b587-222">呼び出しに応答でメソッドが呼び出された、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-222">It is invoked in response to a call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">
          <span data-ttu-id="0b587-223">デザイナーの状態を読み込む際に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-223">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-224">永続化データからデザイナーを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-224">Loads a designer from persistence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-225"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>デザイナー ローダーは、その状態を読み込む必要がある場合、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-225">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> method is invoked when the designer loader needs to load its state.</span></span> <span data-ttu-id="0b587-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 前に呼び出されます、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> is called before the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method.</span></span> <span data-ttu-id="0b587-227">デザイナーの内容を読み込むには、このメソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b587-227">You must implement this method to load the designer contents.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b587-228">ローダーが使用するシリアル化マネージャーのプロパティ プロバイダーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-228">Gets or sets the property provider for the serialization manager being used by the loader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b587-229">シリアル化マネージャーにプロパティを提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-229">An object whose properties are to be provided to the serialization manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-230">シリアル化マネージャーは、提供、`Properties`特定のニーズに合わせて、シリアル化をカスタマイズするシリアライザーが読み取ることができるプライマリ インターフェイスのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0b587-230">The serialization manager provides a `Properties` property on its primary interface that can be read by serializers to customize their serialization to specific needs.</span></span> <span data-ttu-id="0b587-231">シリアライザーによって検査されるプロパティは、使用するシリアライザーの型によって異なります。</span><span class="sxs-lookup"><span data-stu-id="0b587-231">The properties that are examined by the serializers vary depending on the type of serializer used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-232">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-232">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberSignature Language="F#" Value="member this.Reload : System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions -&gt; unit" Usage="basicDesignerLoader.Reload flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags">
          <span data-ttu-id="0b587-233">
            <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-233">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-234">デザイナーの再読み込みをキューに配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-234">Queues a reload of the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-235"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>デザイナーの再読み込みを要求するデザイナー ローダーでメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="0b587-235">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> method can be invoked by the designer loader to request a reload of the designer.</span></span> <span data-ttu-id="0b587-236">再読み込みを実行するためのアイドル時間に、このメソッドは実際に再読み込みされません; デザイナー再読み込みキューだけ格納されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-236">Because reloads are performed at idle time, this method does not actually reload the designer; it just queues the reload.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReloadPending : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b587-237">再読み込みがキューに配置されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-237">Gets a value indicating whether a reload has been queued.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b587-238">
            <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> の呼び出しによって、再読み込み要求がキューに配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-238">
              <see langword="true" />, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member ReportFlushErrors : System.Collections.ICollection -&gt; unit&#xA;override this.ReportFlushErrors : System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.ReportFlushErrors errors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors">
          <span data-ttu-id="0b587-239">エラー オブジェクト (通常は例外) を格納している <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-239">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-240">変更をフラッシュしているときに発生したエラーを報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-240">Reports errors that occurred while flushing changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-241"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>中にメソッドが呼び出された<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>変更のフラッシュ中に 1 つまたは複数のエラーが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="0b587-241">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> method is called during <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> if one or more errors occurred while flushing changes.</span></span> <span data-ttu-id="0b587-242">内の値、`errors`例外やオブジェクトをコレクションでできます<xref:System.Object.ToString%2A>エラーを記述する値。</span><span class="sxs-lookup"><span data-stu-id="0b587-242">The values in the `errors` collection can be exceptions or objects with <xref:System.Object.ToString%2A> values that describe the error.</span></span> <span data-ttu-id="0b587-243">既定の実装<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>コレクション内の最後の例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="0b587-243">The default implementation of <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> raises the last exception in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-244">変更をフラッシュしているときに、1 つ以上のエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-244">One or more errors occurred while flushing changes.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetBaseComponentClassName : string -&gt; unit" Usage="basicDesignerLoader.SetBaseComponentClassName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0b587-245">デザインするコンポーネントの完全名を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-245">A string representing the full name of the component to be designed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-246">基本コンポーネントの完全クラス名を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-246">Sets the full class name of the base component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-247"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A>デザイナーがデザイン コンポーネントの完全な名前を確立するために読み込み中にメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0b587-247">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method should be called during loading to establish the full name of the component a designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b587-248">
            <paramref name="name" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-248">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-249">ph x="1" /&amp;gt; が管理する読み込みプロセスの一部として、外部コンポーネントを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-249">Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-250">呼び出す、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>読み込みプロセスに参加している外部オブジェクトごとに 1 回のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0b587-250">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method once for each external object participating in the load process.</span></span> <span data-ttu-id="0b587-251"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>読み込みプロセスの作業が終わったときに、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-251">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-252">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-252">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="0b587-253">読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-253">
              <see langword="true" /> to load successfully; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="errorCollection">
          <span data-ttu-id="0b587-254">読み込み中に発生したエラーを格納している <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-254">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b587-255">依存読み込みプロセスの 1 つが終了したことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-255">Signals that a dependent load has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-256"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>依存読み込み操作が完了したことを通知するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0b587-256">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="0b587-257">呼び出す、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>メソッドを呼び出すことによって登録されたすべてのプロセスに対して 1 回、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>メソッドで、既に完了しています。</span><span class="sxs-lookup"><span data-stu-id="0b587-257">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method once for every process that was registered by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method, which has already completed.</span></span>  
  
 <span data-ttu-id="0b587-258">かどうか、依存する読み込みが成功した、呼び出し元のセット、`successful`パラメーターを`true`か空のコレクションを渡すとまたは`null`を`errorCollection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="0b587-258">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="0b587-259">依存の読み込みには、エラーが発生すると、呼び出し元の設定、`successful`パラメーターを`false`理由などへのエラーの理由を示す例外のコレクションを渡すと、`errorCollection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="0b587-259">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b587-260">
            <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> によって読み込み依存関係が追加されていないか、<see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-260">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b587-261">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-261">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b587-262">デザイン ドキュメントを再読み込みします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-262">Reloads the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b587-263">再読み込み要求が受け入れられた場合は <see langword="true" />。ローダーが再読み込みを許可しない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b587-263">
              <see langword="true" /> if the reload request is accepted; <see langword="false" /> if the loader does not allow the reload.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b587-264">任意のオブジェクトを呼び出すことができます、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A>ローダーが、設計ドキュメントを再読み込みを要求するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0b587-264">Any object can call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> method to request that the loader reload the design document.</span></span> <span data-ttu-id="0b587-265">デザイナー ローダーを返すことができるかどうか、ローダー読み込みをサポートして、再読み込みに準拠している`true`です。</span><span class="sxs-lookup"><span data-stu-id="0b587-265">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="0b587-266">返しますそれ以外の場合、`false`の再読み込みが実行されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="0b587-266">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="0b587-267">呼び出し元が直ちに行われている再読み込みに依存できません。デザイナー ローダー、他の時間をスケジュールするか、すぐに、デザイナーを再読み込みを試みることができます。</span><span class="sxs-lookup"><span data-stu-id="0b587-267">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload the designer at once.</span></span>  
  
 <span data-ttu-id="0b587-268">呼び出し元は、デザイナーを再読み込みすることはできない場合、ユーザーにメッセージを表示できます。</span><span class="sxs-lookup"><span data-stu-id="0b587-268">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>