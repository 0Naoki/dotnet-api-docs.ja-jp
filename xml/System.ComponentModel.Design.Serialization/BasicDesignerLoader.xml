<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66ae10a1ca3df9431f8ff38d0cea63068dea5797" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370186" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> インターフェイスの実装を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>は何も保存形式に関連するデザイナー ローダーを完全に実装します。 A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>テキストまたはバイナリの永続化は指定しませんが、次の機能をサポートします。  
  
-   複数の負荷の依存関係。  
  
-   デザイナー内で変更を追跡します。  
  
-   アイドル時間の再読み込みを延期します。  
  
 A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>デザイナー ホストのサービス コンテナーに 2 つの種類のサービスを追加します: 置き換え可能サービスと置き換えることができないサービス。 置き換え可能なサービスを置換するには、保護対象の値を変更することによって<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>プロパティです。 実装が互いに依存しているために、置き換えることができないサービスを置き換えることはできません。  
  
 次の表では、既定で提供されるサービスについて説明します。  
  
|既定のサービス|説明|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|要求をデザイナーを再読み込み自体アイドル状態のときにオブジェクトを許可します。 これは、置き換え可能なサービスです。|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|およびオブジェクトを逆シリアル化するために使用します。 シリアル化マネージャーは、シリアル化を実行する必要があるオブジェクトがシリアル化マネージャーに追加された任意のシリアル化プロバイダーを使用できるように、サービスとして追加されます。 これは、置き換えることができないサービスです。|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">システム リソースへのフル アクセスできます。 値を要求: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />、<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。 関連付けられた状態。</permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host">読み込むデザイナー ローダー ホスト。</param>
        <summary>読み込みプロセスを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、抽象の実装<xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType>メソッドです。 独自のクラスには、このメソッドをオーバーライドする必要はありません。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドは、次の操作を実行します。  
  
-   これは、デザイン画面は既に読み込まれていないことを確認します。  
  
-   最初の呼び出しでは、関連するサービスとの呼び出しが追加されます、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>メソッドです。  
  
-   呼び出す、 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>、 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>、および<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドです。  
  
 デザイナー ローダー サービスがサービス コンテナーから削除されていない場合<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>と<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッドの代わりに、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>と<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドです。 このような状況では、デザイナー ローダー サービスを呼び出すの責任において、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>と<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">デザイナーが既に読み込まれているか、<see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> が別のデザイナー ローダー ホストで呼び出されています。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <paramref name="host" /> は破棄されています。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> で使用したリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>メソッドでは、デザイナー ローダーに変更をフラッシュしません。 変更を保存する場合は、呼び出す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>呼び出す前に<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>です。  
  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> を使い終わったら <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> を呼び出します。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> メソッドによって、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> は使用不可の状態になります。 呼び出した後<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>占有されていた。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。  
  
> [!NOTE]
>  <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を有効にする場合は <see langword="true" />。<see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を無効にする場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> によるコンポーネントの通知を有効または無効にします。</summary>
        <returns>
          コンポーネントの通知がこの呼び出しの前に有効になっていた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保留中の変更をデザイナー ローダーにフラッシュします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 デザイナー ローダーがまだ読み込まれていないか、変更済みとしてマークされていない場合、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>メソッドをすぐに返します。 それ以外の場合、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>シリアル化セッションを作成するシリアル化マネージャーを確認してから呼び出して<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">サービスの <see cref="T:System.Type" />。</param>
        <summary>要求したサービスを取得します。</summary>
        <returns>要求したサービス。要求したサービスが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> 派生するクラスを許可するヘルパー メソッドは、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>デザイナー ローダー ホストによって提供されるサービスへのアクセス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>サービスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>メソッドは、初めて<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出されます。 この時点でデザイナー ローダー ホストに必要なサービスを追加することができます。 基底の実装に追加されるサービスは、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>を提供するため、基底の実装を呼び出した後は、既存のサービスを置き換えることができます。 オーバーライドすることでは、ここに追加するカスタム サービスを削除する必要があります<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイナーの再読み込みが必要かどうかを示します。</summary>
        <returns>
          デザイナーの再読み込みが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定の実装では、常に <see langword="true" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A>メソッドは一部のデザイナー ローダーを再読み込みを最適化するために使用します。 デザイナー ローダーは、インテリジェントな再読み込みをサポートしている場合、このメソッドをオーバーライドできます。 一部のデザイナー ローダーでは、その基になるドキュメントに加えられた変更を検出でき、デザイナーの再読み込みが実際に必要なかどうかを判断することができます。 返す必要がありますが、場合`false`このメソッドからです。 既定の実装を常に返します`true`、すべての呼び出しにことを示す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>は成功します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローダー ホストを取得します。</summary>
        <value>
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> メソッドに渡された <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、このデザイナー ローダーに指定されたローダー ホストを返します。 これは、`null`場合<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>がまだ呼び出されていないか、このデザイナー ローダーが破棄されている場合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナー ローダーがデザイン サーフェイスを読み込み中かどうかを示す値を取得します。</summary>
        <value>
          デザイナー ローダーがデザイン サーフェイスを現在読み込み中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>クラスを提供、 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>、負荷の依存関係をサポートします。 このプロパティでは、戻り値のアカウントとは、読み込みの依存関係が受け取る`true`保留状態の読み込みの依存関係がある場合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイナーが変更されているかどうかを示す値を取得または設定します。</summary>
        <value>
          デザイナーが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 デザイナー ローダーが、デザイナーが変更されたことを検出したかどうかを判断します。 場合は、このプロパティは`true`ときに、デザイナー ローダーの<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>メソッドが呼び出されると、デザイナー ローダーが呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これから読み込みを開始することをデザイナー ローダーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>読み込みプロセスを開始するメソッドが呼び出されます。 この時点で、読み込みに必要な初期化を行う必要があります。 このメソッドは、実際の読み込みを実行するは使用できません。 既定の実装は、変更通知を無効にし、設定、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>読み込みします。  
  
 実装する場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>依存読み込みをサポートするを呼び出す必要があります<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>最初の依存の読み込みが発生したとき。 呼び出す、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドを最後に呼び出した後、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッドです。 既定では、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>実装<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>このとします。 場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>場合は使用できません<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出されると、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>は直接呼び出す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>です。  
  
 独自のローダー サービスを提供する場合、またはローダーのサービス提供にしない場合は、ユーザーは、このメソッドを呼び出す担当します。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドで自動的に呼び出すこのいずれかの呼び出しによって直接は<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>が利用可能なまたは直接されていない場合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これからアンロードを開始することをデザイナー ローダーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A>デザイナー ローダーは、ドキュメントをアンロードするときに、メソッドが呼び出されます。  
  
 ドキュメントを準備するため、再読み込みするためにアンロードされる可能性がありますか、ドキュメントの読み込みに失敗しました。 ドキュメントに固有のサービスを追加した場合は<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>または<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>、ここでそれらを削除します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          読み込みが正常に完了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="errors">エラーとして報告されたオブジェクト (通常は例外) を格納している <see cref="T:System.Collections.ICollection" />。</param>
        <summary>読み込みが完了したことをデザイナー ローダーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>読み込みが完了すると、メソッドが呼び出されます。 常に呼び出されます、場合でも、読み込み中に例外がスローされます。 値`successful`に設定されます`true`、読み込みが成功した場合または`false`致命的なエラーが発生した場合。 `errors`コレクションには、エラーとして報告されたオブジェクトにが含まれます。 通常、これらのオブジェクトは例外です。  
  
 実装する場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>依存読み込みをサポートするを呼び出す必要があります、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>メソッドを最後に呼び出した後、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッドです。 既定では、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>実装<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>このとします。 場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>場合は使用できません<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>が呼び出されると、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>は直接呼び出す<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>呼び出した後<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>です。  
  
 このメソッドは、依存するすべての読み込みが完了したときに、デザイナー ローダー サービスによって呼び出さ必要があります。  これによって、読み込みプロセスによって開始された、停止、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドです。 独自のローダー サービスを提供する場合、またはローダーのサービス提供にしない場合は、ユーザーは、このメソッドを呼び出す担当します。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>メソッドが自動的に呼び出さこれには、いずれかの呼び出しによって直接、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>メソッド場合<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>が利用可能なまたは直接されていない場合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ドキュメントの状態が変更されようとしていることをデザイナー ローダーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>メソッドは、コンポーネントの変更に応答を追加する、または変更しようとしていますが、デザイナーにあることを示すイベントを削除します。 ソース コード管理を実装するには、このメソッドをオーバーライドします。 呼び出し<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>があることを意味、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>プロパティに後で設定する`true`;、単に示すようにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">読み込まれたデザイナーの状態を永続化する際に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <summary>すべての変更をデザイナーにフラッシュします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>デザイナー ローダーは、デザイナーに加えられた変更を永続化にフラッシュする必要がある場合、メソッドが呼び出されます。 呼び出しに応答でメソッドが呼び出された、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">デザイナーの状態を読み込む際に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
        <summary>永続化データからデザイナーを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>デザイナー ローダーは、その状態を読み込む必要がある場合、メソッドが呼び出されます。 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 前に呼び出されます、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>メソッドです。 デザイナーの内容を読み込むには、このメソッドを実装する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローダーが使用するシリアル化マネージャーのプロパティ プロバイダーを取得または設定します。</summary>
        <value>シリアル化マネージャーにプロパティを提供するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シリアル化マネージャーは、提供、`Properties`特定のニーズに合わせて、シリアル化をカスタマイズするシリアライザーが読み取ることができるプライマリ インターフェイスのプロパティです。 シリアライザーによって検査されるプロパティは、使用するシリアライザーの型によって異なります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags">
          <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 値のビットごとの組み合わせ。</param>
        <summary>デザイナーの再読み込みをキューに配置します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>デザイナーの再読み込みを要求するデザイナー ローダーでメソッドを呼び出すことができます。 再読み込みを実行するためのアイドル時間に、このメソッドは実際に再読み込みされません; デザイナー再読み込みキューだけ格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>再読み込みがキューに配置されているかどうかを示す値を取得します。</summary>
        <value>
          <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> の呼び出しによって、再読み込み要求がキューに配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors">エラー オブジェクト (通常は例外) を格納している <see cref="T:System.Collections.ICollection" />。</param>
        <summary>変更をフラッシュしているときに発生したエラーを報告します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>中にメソッドが呼び出された<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>変更のフラッシュ中に 1 つまたは複数のエラーが発生した場合。 内の値、`errors`例外やオブジェクトをコレクションでできます<xref:System.Object.ToString%2A>エラーを記述する値。 既定の実装<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>コレクション内の最後の例外を発生させます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">変更をフラッシュしているときに、1 つ以上のエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">デザインするコンポーネントの完全名を表す文字列。</param>
        <summary>基本コンポーネントの完全クラス名を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A>デザイナーがデザイン コンポーネントの完全な名前を確立するために読み込み中にメソッドを呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> が管理する読み込みプロセスの一部として、外部コンポーネントを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>読み込みプロセスに参加している外部オブジェクトごとに 1 回のメソッドです。 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>読み込みプロセスの作業が終わったときに、メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          読み込みが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="errorCollection">読み込み中に発生したエラーを格納している <see cref="T:System.Collections.ICollection" />。</param>
        <summary>依存読み込みプロセスの 1 つが終了したことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>依存読み込み操作が完了したことを通知するメソッドが呼び出されます。 呼び出す、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>メソッドを呼び出すことによって登録されたすべてのプロセスに対して 1 回、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>メソッドで、既に完了しています。  
  
 かどうか、依存する読み込みが成功した、呼び出し元のセット、`successful`パラメーターを`true`か空のコレクションを渡すとまたは`null`を`errorCollection`パラメーター。 依存の読み込みには、エラーが発生すると、呼び出し元の設定、`successful`パラメーターを`false`理由などへのエラーの理由を示す例外のコレクションを渡すと、`errorCollection`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> によって読み込み依存関係が追加されていないか、<see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン ドキュメントを再読み込みします。</summary>
        <returns>
          再読み込み要求が受け入れられた場合は <see langword="true" />。ローダーが再読み込みを許可しない場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意のオブジェクトを呼び出すことができます、<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A>ローダーが、設計ドキュメントを再読み込みを要求するメソッド。 デザイナー ローダーを返すことができるかどうか、ローダー読み込みをサポートして、再読み込みに準拠している`true`です。 返しますそれ以外の場合、`false`の再読み込みが実行されないことを示します。 呼び出し元が直ちに行われている再読み込みに依存できません。デザイナー ローダー、他の時間をスケジュールするか、すぐに、デザイナーを再読み込みを試みることができます。  
  
 呼び出し元は、デザイナーを再読み込みすることはできない場合、ユーザーにメッセージを表示できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>