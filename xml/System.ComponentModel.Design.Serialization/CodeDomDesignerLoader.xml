<Type Name="CodeDomDesignerLoader" FullName="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23fb88e8437c267e723f3c8166b53ef27ea27cee" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52610070" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader, System.ComponentModel.Design.Serialization.IDesignerSerializationService, System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerSerializationService, class System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomDesignerLoader&#xA;Inherits BasicDesignerLoader&#xA;Implements IDesignerSerializationService, INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader, System::ComponentModel::Design::Serialization::IDesignerSerializationService, System::ComponentModel::Design::Serialization::INameCreationService" />
  <TypeSignature Language="F#" Value="type CodeDomDesignerLoader = class&#xA;    inherit BasicDesignerLoader&#xA;    interface INameCreationService&#xA;    interface IDesignerSerializationService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.INameCreationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15169-101">CodeDOM ベースのデザイナー ローダーを実装するための基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="15169-101">Provides the base class for implementing a CodeDOM-based designer loader.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-102"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> Code Document Object Model (CodeDOM) のベースの完全なデザイナー ローダーを提供する抽象クラス。</span><span class="sxs-lookup"><span data-stu-id="15169-102"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> is an abstract class that provides a full designer loader based on the Code Document Object Model (CodeDOM).</span></span> <span data-ttu-id="15169-103">CodeDOM のパーサーとジェネレーター、および型解決サービスを指定します。</span><span class="sxs-lookup"><span data-stu-id="15169-103">You provide the CodeDOM parser and generator, and a type resolution service.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="15169-104">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="15169-104">for full access to system resources.</span></span> <span data-ttu-id="15169-105">値を要求: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />、<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="15169-105">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="15169-106">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="15169-106">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="N:System.CodeDom" />
    <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="15169-107">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="15169-107">Dynamic Source Code Generation and Compilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-108"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="15169-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15169-109">このデザイナー ローダーが使用する <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="15169-109">Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use.</span></span></summary>
        <value><span data-ttu-id="15169-110">このデザイナー ローダーが使用する <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />。</span><span class="sxs-lookup"><span data-stu-id="15169-110">The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-111">デザイナー ローダーが解析またはから返されたコードを生成していない<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>、プロバイダーを使用して取得するが、<xref:System.CodeDom.Compiler.ICodeGenerator>名前作成サービスの識別子の検証に使用できることです。</span><span class="sxs-lookup"><span data-stu-id="15169-111">The designer loader does not parse or generate code from the returned <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, but it does use the provider to obtain an <xref:System.CodeDom.Compiler.ICodeGenerator> that it can use to validate identifiers in the name-creation service.</span></span> <span data-ttu-id="15169-112">デザイナー ローダーもチェック、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>実装されているかを確認する、<xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="15169-112">The designer loader will also check the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> to see if it implements the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interface.</span></span> <span data-ttu-id="15169-113">解析やコードの生成の詳細については、次を参照してください。、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>と<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="15169-113">For more information on parsing or generating code, see the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> and <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="codeDomDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-114"><see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> クラスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="15169-114">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-115"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>メソッドはサービスによって追加、削除、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="15169-115">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> method removes services added by the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="15169-116"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> を使い終わったら、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="15169-116">Call <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>.</span></span> <span data-ttu-id="15169-117"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>メソッドによって、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="15169-117">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="15169-118"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>呼び出し後は、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="15169-118">After calling <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> was occupying.</span></span> <span data-ttu-id="15169-119">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="15169-119">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="15169-120"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>への最後の参照を解放する前に、必ず<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="15169-120">Always call <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>.</span></span> <span data-ttu-id="15169-121">そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="15169-121">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="codeDomDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-122">サービスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="15169-122">Initializes services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-123">次の表に、説明、置き換え可能なサービスを<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>サービス コンテナーに追加します。</span><span class="sxs-lookup"><span data-stu-id="15169-123">The following table describes the replaceable services that the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> adds to the service container.</span></span>  
  
|<span data-ttu-id="15169-124">用語</span><span class="sxs-lookup"><span data-stu-id="15169-124">Term</span></span>|<span data-ttu-id="15169-125">定義</span><span class="sxs-lookup"><span data-stu-id="15169-125">Definition</span></span>|  
|----------|----------------|  
|<xref:System.ComponentModel.Design.Serialization.INameCreationService>|<span data-ttu-id="15169-126">オブジェクトの名前を作成するためのセマンティクスを提供します。</span><span class="sxs-lookup"><span data-stu-id="15169-126">Provides semantics for creating names of objects.</span></span> <span data-ttu-id="15169-127">サービスの使用、CodeDOM プロバイダーの<xref:System.CodeDom.Compiler.ICodeGenerator>有効な識別子、言語の名前を作成するインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="15169-127">The service uses the CodeDOM provider's <xref:System.CodeDom.Compiler.ICodeGenerator> interface to create names that are valid identifiers for the language.</span></span> <span data-ttu-id="15169-128">さらに、名前作成サービスは、空の名前をサポートします。</span><span class="sxs-lookup"><span data-stu-id="15169-128">In addition, the name creation service supports empty names.</span></span> <span data-ttu-id="15169-129">空の名前は、シリアル化中に一時的なローカル変数として解釈する必要があります。</span><span class="sxs-lookup"><span data-stu-id="15169-129">Empty names should be interpreted as temporary local variables during serialization.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>|<span data-ttu-id="15169-130">バイナリ オブジェクトにコンポーネントのグループをシリアル化するには、その他のオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="15169-130">Allows other objects to serialize a group of components into a binary object.</span></span> <span data-ttu-id="15169-131">このサービスは、コピーと貼り付けまたは取り消しとやり直しなどの機能で最もよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="15169-131">This service is most often used by features such as copy and paste or undo and redo.</span></span> <span data-ttu-id="15169-132"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>クラスには、オブジェクトの CodeDOM ツリーの作成に基づいているデザイナーのシリアル化サービスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="15169-132">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> class provides a designer serialization service that is based on creating CodeDOM trees for objects.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|<span data-ttu-id="15169-133">このサービスが置き換えられます<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>コンポーネント バイナリ オブジェクトをシリアル化するための手段として。</span><span class="sxs-lookup"><span data-stu-id="15169-133">This service replaces <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> as a means to serialize components to a binary object.</span></span>|  
  
 <span data-ttu-id="15169-134">置き換え可能およびが交換可能なサービスの詳細については、「<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>します。</span><span class="sxs-lookup"><span data-stu-id="15169-134">For details on replaceable and non-replaceable services, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15169-135"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> が初期化されていないか、デザイナー ローダーが CodeDom シリアル化に必要な型の解決サービスを提供していません。</span><span class="sxs-lookup"><span data-stu-id="15169-135">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.</span></span></exception>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="15169-136">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="15169-136">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected override bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="override this.IsReloadNeeded : unit -&gt; bool" Usage="codeDomDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-137">再読み込みが必要かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="15169-137">Returns a value indicating whether a reload is required.</span></span></summary>
        <returns><span data-ttu-id="15169-138"><see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> によって再読み込みが必要であると判断された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15169-138"><see langword="true" /> if the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decides a reload is required; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-139"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A>メソッドの存在をチェック、<xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>インターフェイスを<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>します。</span><span class="sxs-lookup"><span data-stu-id="15169-139">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> method checks for the presence of the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interface on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>.</span></span> <span data-ttu-id="15169-140">プロバイダーは、CodeDOM ツリーを再解析し、に解析ツリーを渡す、<xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="15169-140">The provider will reparse the CodeDOM tree and pass the resulting parse tree to the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> method.</span></span> <span data-ttu-id="15169-141">このメソッドが戻る場合`false`デザイナーが再読み込みされません。</span><span class="sxs-lookup"><span data-stu-id="15169-141">If this method returns `false`, the designer will not be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="15169-142">この言語は、このファイルのコード パーサーを提供していません。このファイルの種類は、デザイナーをサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="15169-142">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15169-143">このクラスをデザインすることはできますが、ファイル内の最初のクラスではありません。または、このファイルにはデザインできるクラスがないため、デザイナーを表示できませんでした。</span><span class="sxs-lookup"><span data-stu-id="15169-143">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected override void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="override this.OnBeginLoad : unit -&gt; unit" Usage="codeDomDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-144">これから読み込みを開始することをデザイナー ローダーに通知します。</span><span class="sxs-lookup"><span data-stu-id="15169-144">Notifies the designer loader that loading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-145">詳細については、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A>メソッドを参照してください<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="15169-145">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected override void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="override this.OnBeginUnload : unit -&gt; unit" Usage="codeDomDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-146">これからアンロードを開始することをデザイナー ローダーに通知します。</span><span class="sxs-lookup"><span data-stu-id="15169-146">Notifies the designer loader that unloading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-147">詳細については、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A>メソッドを参照してください<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="15169-147">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentRename">
      <MemberSignature Language="C#" Value="protected virtual void OnComponentRename (object component, string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComponentRename(object component, string oldName, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComponentRename (component As Object, oldName As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComponentRename(System::Object ^ component, System::String ^ oldName, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentRename : obj * string * string -&gt; unit&#xA;override this.OnComponentRename : obj * string * string -&gt; unit" Usage="codeDomDesignerLoader.OnComponentRename (component, oldName, newName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15169-148">名前を変更するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="15169-148">The component to rename.</span></span></param>
        <param name="oldName"><span data-ttu-id="15169-149">コンポーネントの元の名前。</span><span class="sxs-lookup"><span data-stu-id="15169-149">The original name of the component.</span></span></param>
        <param name="newName"><span data-ttu-id="15169-150">コンポーネントの変更後の名前。</span><span class="sxs-lookup"><span data-stu-id="15169-150">The new name of the component.</span></span></param>
        <summary><span data-ttu-id="15169-151"><see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="15169-151">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="codeDomDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="15169-152">読み込みが正常に完了したことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15169-152"><see langword="true" /> to indicate that the load completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="15169-153">エラーとして報告されたオブジェクト (通常は例外) の <see cref="T:System.Collections.ICollection" />。</span><span class="sxs-lookup"><span data-stu-id="15169-153">An <see cref="T:System.Collections.ICollection" /> of objects (usually exceptions) that were reported as errors.</span></span></param>
        <summary><span data-ttu-id="15169-154">読み込みが完了したことをデザイナー ローダーに通知します。</span><span class="sxs-lookup"><span data-stu-id="15169-154">Notifies the designer loader that loading is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-155">詳細については、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A>メソッドを参照してください<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="15169-155">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.CodeCompileUnit Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Parse () As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::CodeDom::CodeCompileUnit ^ Parse();" />
      <MemberSignature Language="F#" Value="abstract member Parse : unit -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomDesignerLoader.Parse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15169-156">テキストまたは他の永続ストレージを解析し、<see cref="T:System.CodeDom.CodeCompileUnit" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="15169-156">Parses the text or other persistent storage and returns a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span></span></summary>
        <returns><span data-ttu-id="15169-157">解析操作の結果である <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="15169-157">A <see cref="T:System.CodeDom.CodeCompileUnit" /> resulting from a parse operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-158"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>メソッドが呼び出されます、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>ソース コードを解析する必要があります。</span><span class="sxs-lookup"><span data-stu-id="15169-158">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> method is called when the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> needs to parse the source code.</span></span> <span data-ttu-id="15169-159">派生クラスでは、ソース コードの場所と形式を指定してください。</span><span class="sxs-lookup"><span data-stu-id="15169-159">The source code location and format must be specified by deriving classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="15169-160">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="15169-160">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="override this.PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="codeDomDesignerLoader.PerformFlush manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="15169-161">シリアライザーの要求元である <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="15169-161">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</span></span></param>
        <summary><span data-ttu-id="15169-162">デザイナーのルート コンポーネントのシリアル化を要求します。</span><span class="sxs-lookup"><span data-stu-id="15169-162">Requests serialization of the root component of the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-163"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A>メソッドは、ルートを取得します。<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>デザイナーのルート コンポーネントのコンポーネントをシリアル化するシリアライザーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="15169-163">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> method obtains the root <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> for the root component of the designer and invokes the serializer to serialize the component.</span></span> <span data-ttu-id="15169-164">この操作の結果がある場合、 <xref:System.CodeDom.CodeTypeDeclaration>、し<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A>統合、<xref:System.CodeDom.CodeTypeDeclaration>で既存の CodeDOM ツリーします。</span><span class="sxs-lookup"><span data-stu-id="15169-164">If the result of this operation is a <xref:System.CodeDom.CodeTypeDeclaration>, then <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> integrates the <xref:System.CodeDom.CodeTypeDeclaration> with the existing CodeDOM tree.</span></span> <span data-ttu-id="15169-165">結果は、メンバーとステートメントの置換が一致する元の CodeDOM ツリーです。</span><span class="sxs-lookup"><span data-stu-id="15169-165">The result is the original CodeDOM tree with matching members and statements replaced.</span></span> <span data-ttu-id="15169-166">最後に、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A>抽象を呼び出す<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A>この CodeDOM ツリーを保存するメソッド。</span><span class="sxs-lookup"><span data-stu-id="15169-166">Finally, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> calls the abstract <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method to save this CodeDOM tree.</span></span>  
  
 <span data-ttu-id="15169-167">ルート デザイナー コンポーネントのシリアル化が発生しないかどうか、 <xref:System.CodeDom.CodeTypeDeclaration>、し<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A>さらに何も行われません。</span><span class="sxs-lookup"><span data-stu-id="15169-167">If the serialization of the root designer component does not result in a <xref:System.CodeDom.CodeTypeDeclaration>, then <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> does nothing further.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15169-168">CodeDOM は、信頼できる発行元によって元のことを確認する呼び出し元の役目です。</span><span class="sxs-lookup"><span data-stu-id="15169-168">It is the responsibility of the caller to ensure that a CodeDOM originates from a trusted source.</span></span> <span data-ttu-id="15169-169">信頼されていないパーティからの CodeDOM オブジェクトを受け入れると、悪意のあるコードを実行するには、そのパーティを許可できます。</span><span class="sxs-lookup"><span data-stu-id="15169-169">Accepting a CodeDOM object from an untrusted party could allow that party to run malicious code.</span></span> <span data-ttu-id="15169-170">ファイルの CodeDOM をフラッシュするには、フレームワークは、CodeDOM オブジェクトと指定されたオブジェクトのシリアル化されたコンテンツで表されるコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="15169-170">When flushing a CodeDOM into a file, the framework will run code represented by the CodeDOM object and the serialized content of the object as provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="15169-171">この言語は、このファイルのコード パーサーを提供していません。このファイルの種類は、デザイナーをサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="15169-171">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15169-172">このクラスをデザインすることはできますが、ファイル内の最初のクラスではありません。または、このファイルにはデザインできるクラスがないため、デザイナーを表示できませんでした。</span><span class="sxs-lookup"><span data-stu-id="15169-172">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="override this.PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="codeDomDesignerLoader.PerformLoad manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="15169-173">シリアライザーの要求元である <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="15169-173">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</span></span></param>
        <summary><span data-ttu-id="15169-174">CodeDOM プロバイダーからコードを解析します。</span><span class="sxs-lookup"><span data-stu-id="15169-174">Parses code from a CodeDOM provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-175"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A>メソッドは、取得、 <xref:System.CodeDom.Compiler.ICodeParser> CodeDOM プロバイダーからし、コードを解析します。</span><span class="sxs-lookup"><span data-stu-id="15169-175">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> method obtains an <xref:System.CodeDom.Compiler.ICodeParser> from the CodeDOM provider and parses the code.</span></span> <span data-ttu-id="15169-176"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> ファイル内の最初のクラスの検索、ルートを取得<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>データ型にしてデータ型を逆シリアル化するシリアライザーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="15169-176"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> locates the first class in the file, obtains a root <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> for the data type, and then invokes the serializer to deserialize the data type.</span></span> <span data-ttu-id="15169-177"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> このプロセスがで必要なすべてのコンポーネントを作成することを前提としています、<xref:System.ComponentModel.IContainer>の<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="15169-177"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> assumes that this process will create all necessary components in the <xref:System.ComponentModel.IContainer> of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="15169-178">最後に、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A>呼び出し、 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> CodeDOM シリアライザーが渡された型の完全修飾名を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="15169-178">Finally, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method with the fully qualified name of the type it passed to the CodeDOM serializer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15169-179">CodeDOM は、信頼できる発行元によって元のことを確認する呼び出し元の役目です。</span><span class="sxs-lookup"><span data-stu-id="15169-179">It is the responsibility of the caller to ensure that a CodeDOM originates from a trusted source.</span></span> <span data-ttu-id="15169-180">信頼されていないパーティからの CodeDOM オブジェクトを受け入れると、悪意のあるコードを実行するには、そのパーティを許可できます。</span><span class="sxs-lookup"><span data-stu-id="15169-180">Accepting a CodeDOM object from an untrusted party could allow that party to run malicious code.</span></span> <span data-ttu-id="15169-181">デザイン画面に CodeDOM を読み込むときに、フレームワークは、CodeDOM オブジェクトと指定されたオブジェクトのシリアル化されたコンテンツで表されるコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="15169-181">When loading a CodeDOM into the design surface, the framework will run code represented by the CodeDOM object and the serialized content of the object as provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="15169-182">この言語は、このファイルのコード パーサーを提供していません。このファイルの種類は、デザイナーをサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="15169-182">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15169-183">このクラスをデザインすることはできますが、ファイル内の最初のクラスではありません。または、このファイルにはデザインできるクラスがないため、デザイナーを表示できませんでした。</span><span class="sxs-lookup"><span data-stu-id="15169-183">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="15169-184">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="15169-184">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDesignerSerializationService.Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationData As Object) As ICollection Implements IDesignerSerializationService.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System::Object ^ serializationData) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Deserialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData"><span data-ttu-id="15169-185">シリアル化されたデータから構成されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="15169-185">An object consisting of serialized data.</span></span></param>
        <summary><span data-ttu-id="15169-186">指定したシリアル化データ オブジェクトを逆シリアル化し、そのデータと等価なオブジェクトのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="15169-186">Deserializes the specified serialization data object and returns a collection of objects represented by that data.</span></span></summary>
        <returns><span data-ttu-id="15169-187"><paramref name="serializationData" /> によって表されるオブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="15169-187">A collection of objects represented by <paramref name="serializationData" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15169-188"><paramref name="serializationData" /> が <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="15169-188"><paramref name="serializationData" /> is not a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize">
      <MemberSignature Language="C#" Value="object IDesignerSerializationService.Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (objects As ICollection) As Object Implements IDesignerSerializationService.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System::Collections::ICollection ^ objects) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Serialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects"><span data-ttu-id="15169-189">シリアル化するオブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="15169-189">A collection of objects to serialize.</span></span></param>
        <summary><span data-ttu-id="15169-190">指定したオブジェクトのコレクションをシリアル化し、シリアル化されたデータをシリアル化データ オブジェクトに格納します。</span><span class="sxs-lookup"><span data-stu-id="15169-190">Serializes the specified collection of objects and stores them in a serialization data object.</span></span></summary>
        <returns><span data-ttu-id="15169-191">指定したオブジェクトのコレクションのシリアル化された状態を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="15169-191">An object that contains the serialized state of the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15169-192"><see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> は見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="15169-192">The <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.CreateName">
      <MemberSignature Language="C#" Value="string INameCreationService.CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function CreateName (container As IContainer, dataType As Type) As String Implements INameCreationService.CreateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType) = System::ComponentModel::Design::Serialization::INameCreationService::CreateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="15169-193">新しいオブジェクトが追加される先のコンテナー。</span><span class="sxs-lookup"><span data-stu-id="15169-193">The container where the new object is added.</span></span></param>
        <param name="dataType"><span data-ttu-id="15169-194">名前を受け取るオブジェクトのデータ型。</span><span class="sxs-lookup"><span data-stu-id="15169-194">The data type of the object that receives the name.</span></span></param>
        <summary><span data-ttu-id="15169-195">指定したコンテナー内でどのコンポーネントとも重複しない新しい名前を作成します。</span><span class="sxs-lookup"><span data-stu-id="15169-195">Creates a new name that is unique to all components in the specified container.</span></span></summary>
        <returns><span data-ttu-id="15169-196">データ型の一意の名前。</span><span class="sxs-lookup"><span data-stu-id="15169-196">A unique name for the data type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15169-197"><paramref name="dataType" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="15169-197"><paramref name="dataType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.IsValidName">
      <MemberSignature Language="C#" Value="bool INameCreationService.IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidName (name As String) As Boolean Implements INameCreationService.IsValidName" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::IsValidName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15169-198">検証対象の名前。</span><span class="sxs-lookup"><span data-stu-id="15169-198">The name to validate.</span></span></param>
        <summary><span data-ttu-id="15169-199">指定した名前が有効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="15169-199">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <returns><span data-ttu-id="15169-200">名前が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="15169-200"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15169-201"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="15169-201"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.ValidateName">
      <MemberSignature Language="C#" Value="void INameCreationService.ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateName (name As String) Implements INameCreationService.ValidateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::ValidateName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15169-202">検証対象の名前。</span><span class="sxs-lookup"><span data-stu-id="15169-202">The name to validate.</span></span></param>
        <summary><span data-ttu-id="15169-203">指定した名前が有効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="15169-203">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15169-204"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="15169-204"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="15169-205"><paramref name="name" /> が有効な識別子ではないか、同じ名前のコンポーネントが既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="15169-205"><paramref name="name" /> is not a valid identifier, or there is already a component with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolutionService">
      <MemberSignature Language="C#" Value="protected abstract System.ComponentModel.Design.ITypeResolutionService TypeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ITypeResolutionService TypeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property TypeResolutionService As ITypeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::ComponentModel::Design::ITypeResolutionService ^ TypeResolutionService { System::ComponentModel::Design::ITypeResolutionService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeResolutionService : System.ComponentModel.Design.ITypeResolutionService" Usage="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ITypeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15169-206">このデザイナー ローダーで使用する型の解決サービスを取得します。</span><span class="sxs-lookup"><span data-stu-id="15169-206">Gets the type resolution service to be used with this designer loader.</span></span></summary>
        <value><span data-ttu-id="15169-207">型を解決するときに CodeDOM シリアライザーが使用する <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />。</span><span class="sxs-lookup"><span data-stu-id="15169-207">An <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> that the CodeDOM serializers will use when resolving types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-208"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>これが自動的に追加<xref:System.ComponentModel.Design.ITypeResolutionService>サービス コンテナーと、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="15169-208">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> automatically adds this <xref:System.ComponentModel.Design.ITypeResolutionService> to the service container when the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> method is invoked.</span></span> <span data-ttu-id="15169-209">型解決サービスは多くのシナリオでは省略可能がコードの解釈に必要なソース コードには、型が含まれているため、名前が、アセンブリ参照がありません。</span><span class="sxs-lookup"><span data-stu-id="15169-209">While the type resolution service is optional in many scenarios, it is required for code interpretation because source code contains type names, but no assembly references.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="15169-210">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="15169-210">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="protected abstract void Write (System.CodeDom.CodeCompileUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Write(class System.CodeDom.CodeCompileUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Write (unit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Write(System::CodeDom::CodeCompileUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeDomDesignerLoader.Write unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="15169-211">永続化する <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="15169-211">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be persisted.</span></span></param>
        <summary><span data-ttu-id="15169-212">コンパイル単位の変更を永続ストレージに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="15169-212">Writes compile-unit changes to persistent storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15169-213"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A>メソッドの保存、<xref:System.CodeDom.CodeCompileUnit>永続的ストレージにします。</span><span class="sxs-lookup"><span data-stu-id="15169-213">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method saves a <xref:System.CodeDom.CodeCompileUnit> to persistent storage.</span></span> <span data-ttu-id="15169-214">派生クラスが呼び出す、<xref:System.CodeDom.Compiler.ICodeGenerator>コードを保存する、適切なテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="15169-214">The deriving class is responsible for invoking the <xref:System.CodeDom.Compiler.ICodeGenerator> on the appropriate text writer to save the code.</span></span> <span data-ttu-id="15169-215"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>に渡される CodeDOM オブジェクトを確実<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A>から取得されたオブジェクトの同じインスタンスである<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>、シリアル化プロセスが、コードを変更しなければ場合は除きます。</span><span class="sxs-lookup"><span data-stu-id="15169-215">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> ensures that the CodeDOM objects that are passed to <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> are the same instances of objects that were retrieved from <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, except in cases where the serialization process had to make changes to the code.</span></span> <span data-ttu-id="15169-216">これにより、追加データを格納する最適化された、デザイナー ローダー、<xref:System.CodeDom.CodeObject.UserData%2A>コード要素のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="15169-216">This allows an optimized designer loader to store additional data in the <xref:System.CodeDom.CodeObject.UserData%2A> property of code elements.</span></span> <span data-ttu-id="15169-217">このデータは、中に利用可能になります、<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A>シリアル化プロセスによって置換されなかったすべての要素のメソッド。</span><span class="sxs-lookup"><span data-stu-id="15169-217">This data will be available during the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method for any elements that were not replaced by the serialization process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="15169-218">動的なソース コードの生成とコンパイル</span><span class="sxs-lookup"><span data-stu-id="15169-218">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>