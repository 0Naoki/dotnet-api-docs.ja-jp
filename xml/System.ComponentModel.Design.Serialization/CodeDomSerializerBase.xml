<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeDomSerializerBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a5093d8d2da21179e8d2e5743958acdaf8678e07.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5093d8d2da21179e8d2e5743958acdaf8678e07</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Provides a base class for <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> の各クラスの基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> class is used as a shared base between the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph>クラス間で共有のベースとして使用される、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph>と<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Public <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph> classes derive from the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> class.</source>
          <target state="translated">パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph>クラスから派生し、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Each public class defines its own public API.</source>
          <target state="translated">各パブリック クラスでは、独自のパブリック API を定義します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph> class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase&gt;</ph>クラスはパブリック API は定義されていませんが、さまざまなシリアル化プロセスを支援するために使用できるユーティリティ メソッドを提供しています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The name of the object that results from the expression.</source>
          <target state="translated">式の結果として作成されるオブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no need to name the object.</source>
          <target state="translated">オブジェクトに名前を付ける必要がない場合は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> でもかまいません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> to interpret.</source>
          <target state="translated">解釈する <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Deserializes the given expression into an in-memory object.</source>
          <target state="translated">指定した式をメモリ内オブジェクトに逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An object resulting from interpretation of <ph id="ph1">&lt;paramref name="expression" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="expression" /&gt;</ph> の解釈の結果として作成されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>This is a helper method that derived classes can call to deserialize an expression.</source>
          <target state="translated">これは、ヘルパー クラスを派生メソッドは、式を逆シリアル化に呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>It deserializes the statement by interpreting and executing the CodeDOM expression specified by the <ph id="ph1">`expression`</ph> parameter, and then returns the results.</source>
          <target state="translated">解釈およびによって指定された CodeDOM 式を実行して、ステートメントを逆シリアル化、<ph id="ph1">`expression`</ph>パラメーター、し、結果を返します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>If an object needs to be created as a result of this expression, it will be given the name specified by the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">によって指定された名前を指定、オブジェクトは、この式の結果として作成する必要がある場合、<ph id="ph1">`name`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The name can be <ph id="ph1">`null`</ph> if there is no need to name the object.</source>
          <target state="translated">名前を指定できます<ph id="ph1">`null`</ph>場合は、オブジェクトの名前を付ける必要はありません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The following table describes how specific expressions are handled.</source>
          <target state="translated">次の表に、特定の式が処理されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Expression</source>
          <target state="translated">正規表現</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Behavior</source>
          <target state="translated">動作</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>This expression represents <ph id="ph1">`this`</ph> or <ph id="ph2">`Me`</ph>.</source>
          <target state="translated">この式を表す<ph id="ph1">`this`</ph>または<ph id="ph2">`Me`</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>To locate the object that is associated with this expression, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> method will look in the context stack for a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>.</source>
          <target state="translated">この式に関連付けられているオブジェクトを検索する、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph>のコンテキスト スタックのメソッドは検索、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>This object contains the root object of the graph and the expression that represents it.</source>
          <target state="translated">このオブジェクトには、グラフとそれを表す式のルート オブジェクトが含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>If the object is present and the expression matches, the root object will be returned.</source>
          <target state="translated">オブジェクトが存在し、式が一致する場合は、ルート オブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An error is reported if an instance cannot be located.</source>
          <target state="translated">インスタンスが見つからない場合は、エラーが報告されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>If the target of the field reference evaluates to the root object, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> method of the manager parameter will be used to retrieve the object instance based on name.</source>
          <target state="translated">ルート オブジェクトに、このフィールド参照のターゲットが評価された場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph>マネージャーのパラメーターのメソッドを使用して名前に基づいてオブジェクトのインスタンスの取得されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>Otherwise, standard reflection is used against the target object to locate the requested field.</source>
          <target state="translated">それ以外の場合、標準のリフレクションは対象のオブジェクトに対して要求されたフィールドの検索に使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An error is reported if the field cannot be located.</source>
          <target state="translated">フィールドが見つからない場合は、エラーが報告されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> method of the <ph id="ph2">`manager`</ph> parameter is used to locate the instance representing the given variable name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph>のメソッド、<ph id="ph2">`manager`</ph>パラメーターが指定された変数名を表すインスタンスの検索に使用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>An error is reported if an instance cannot be located.</source>
          <target state="translated">インスタンスが見つからない場合は、エラーが報告されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> オブジェクトを完全に解決されるまで、または式を簡略化できますされなくなるまで、式を解釈し続けます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>In this case, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph> will return a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> that contains the most simplified expression.</source>
          <target state="translated">この場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A&gt;</ph>が返されます、<ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>最も簡略化された式を格納しています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
          <source>The following expressions are not supported:</source>
          <target state="translated">次の式はサポートされていません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the instance to return.</source>
          <target state="translated">返されるインスタンスの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The parameters to pass to the constructor for <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> のコンストラクターに渡すパラメーター。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The name of the deserialized object.</source>
          <target state="translated">逆シリアル化されたオブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to add this object to the design container; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このオブジェクトをデザイン コンテナーに追加する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The object must implement <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> for this to have any effect.</source>
          <target state="translated">この値を有効にするには、オブジェクトが <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> を実装していることが必要です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>Returns an instance of the given type.</source>
          <target state="translated">指定した型のインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A&gt;</ph> method is invoked during deserialization to obtain an instance of an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A&gt;</ph>オブジェクトのインスタンスを取得するには、逆シリアル化中にメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>When this is called, an instance of the requested type should be returned.</source>
          <target state="translated">呼び出されると、要求された型のインスタンスが返されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph> method of the <ph id="ph2">`manager`</ph> parameter.</source>
          <target state="translated">既定の実装を呼び出す、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph>のメソッド、<ph id="ph2">`manager`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="type" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The object from which the properties are to be deserialized.</source>
          <target state="translated">プロパティを逆シリアル化する対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which properties will be deserialized.</source>
          <target state="translated">逆シリアル化するプロパティをフィルター処理する <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>Deserializes properties on the given object from the invariant culture’s resource bundle.</source>
          <target state="translated">インバリアント カルチャのリソース バンドルから、指定したオブジェクトのプロパティを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph>メソッドは派生クラスのヘルパー メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>It looks for properties on the given object and attempts to load their values out of the invariant culture’s resource bundle.</source>
          <target state="translated">指定したオブジェクトのプロパティを検索し、インバリアント カルチャのリソース バンドルからその値の読み込みを試みます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This is generally used to handle design-time properties that are not emitted into source code.</source>
          <target state="translated">これは通常、ソース コードに出力されていないデザイン時のプロパティの処理に使用されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>It should not be used for localized properties because it only operates on the invariant culture.</source>
          <target state="translated">適していないローカライズされたプロパティに、インバリアント カルチャでのみ動作するためです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This method inspects all of the properties of the <ph id="ph1">`value`</ph> parameter that match the attributes specified by the <ph id="ph2">`filter`</ph> parameter, and then checks for those properties in a resource binary object.</source>
          <target state="translated">このメソッドは、すべてのプロパティの検査、<ph id="ph1">`value`</ph>で指定された属性に一致するパラメーター、<ph id="ph2">`filter`</ph>パラメーター、および、リソースのバイナリ オブジェクトでこれらのプロパティをチェックします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</source>
          <target state="translated">これは、逆シリアル化のプロパティをデザイン時のプロパティなどのコードでは表現できないに役立ちます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>This method requires that a designer loader offers an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to read resources.</source>
          <target state="translated">このメソッドは、デザイナー ローダーが用意されている必要があります、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph>リソースを読み取る。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> provides a <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> for the invariant culture, then <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph> will read resources from the XML resource (.resx) file’s metadata section, which is not included in final compiled code.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph>提供、 <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> 、インバリアント カルチャ<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A&gt;</ph>最終的なコンパイル済みコードに含まれていない、XML リソース (.resx) ファイルのメタデータ」セクションからリソースを読み取る。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>If this service is not available, no resources will be read.</source>
          <target state="translated">このサービスが利用できない場合は、リソースは読み取られません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> to deserialize.</source>
          <target state="translated">逆シリアル化を行う対象の <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>Deserializes a statement by interpreting and executing a CodeDOM statement.</source>
          <target state="translated">CodeDOM ステートメントを解釈して実行することにより、ステートメントを逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A&gt;</ph>メソッドは派生クラスのヘルパー メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>It interprets the <ph id="ph1">`statement`</ph> parameter.</source>
          <target state="translated">これは、解釈、<ph id="ph1">`statement`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeStatement&gt;</ph> being deserialized will be pushed on the context stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeStatement&gt;</ph>逆シリアル化は、コンテキスト スタックにプッシュされます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The serialization manager.</source>
          <target state="translated">シリアル化マネージャー。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The target type.</source>
          <target state="translated">対象の型。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>A collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The serialization manager.</source>
          <target state="translated">シリアル化マネージャー。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>An object of the target type.</source>
          <target state="translated">対象の型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A collection of attributes as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The serialization manager.</source>
          <target state="translated">シリアル化マネージャー。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An object of the target type.</source>
          <target state="translated">対象の型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An array of attributes to pass to the target version of the .NET Framework.</source>
          <target state="translated">ターゲット バージョンの .NET Framework に渡す属性の配列。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>Gets a collection of events as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>A collection of events as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクション。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object for which to get an expression.</source>
          <target state="translated">式の取得対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Returns an expression for the given object.</source>
          <target state="translated">指定したオブジェクトの式を返します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> representing <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no existing expression for <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> を表す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>。<ph id="ph4">&lt;paramref name="value" /&gt;</ph> の既存の式が存在しない場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method returns an expression representing the given object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドは、指定したオブジェクトを表す式を返します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It can return <ph id="ph1">`null`</ph>, indicating that no expression has been set that describes the object.</source>
          <target state="translated">返すことが<ph id="ph1">`null`</ph>ことを示すオブジェクト式が設定されていないことを説明します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Expressions are acquired in one of three ways:</source>
          <target state="translated">式は、3 つの方法のいずれかで取得されます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The expression could be the result of a prior call to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method.</source>
          <target state="translated">前回の呼び出しの結果である場合、式、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The expression could have been found in the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>.</source>
          <target state="translated">式に検出されましたが、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The expression could be derived through <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>.</source>
          <target state="translated">式はを通じて派生でした<ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>To derive expressions through <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method queries the reference service for a name for the given object.</source>
          <target state="translated">式を派生させる<ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドが指定されたオブジェクトの名前の参照サービスを照会します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the expression service returns a valid name, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method checks to see if there is a "." in the name.</source>
          <target state="translated">式のサービスが有効な名前を返す場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.IReferenceService&gt;</ph>、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドがあるかどうかを確認、"です。"名にします。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>This indicates that the expression service found this object as the return value of a read-only property on another object.</source>
          <target state="translated">これは、式サービスが、別のオブジェクトの読み取り専用プロパティの戻り値としてこのオブジェクトをすることを示します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If there is a ".", <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> will split the reference into parts.</source>
          <target state="translated">ある場合、"です。"、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>部分に参照を分割します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The leftmost part is a name that will be evaluated with the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph> method.</source>
          <target state="translated">左端の部分が名前に評価される、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>For each subsequent part, a property reference expression will be built.</source>
          <target state="translated">後続の各パートのプロパティの参照式がビルドされます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The final expression will then be returned.</source>
          <target state="translated">最終的な式は、返されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the object did not have an expression set, or if the object was not found in the reference service, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> will return <ph id="ph2">`null`</ph>, indicating there is no existing expression for the object.</source>
          <target state="translated">オブジェクトで設定すると、式が付いていない場合、または参照サービスにオブジェクトが見つからなかった場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>戻ります<ph id="ph2">`null`</ph>オブジェクトの既存の式がないことを示すです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>The serialization manager.</source>
          <target state="translated">シリアル化マネージャー。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An object of the target type.</source>
          <target state="translated">対象の型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>An array of attributes to pass to the target version of the .NET Framework.</source>
          <target state="translated">ターゲット バージョンの .NET Framework に渡す属性の配列。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>Gets a collection of properties as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
          <source>A collection of properties as defined in the project's target version of the .NET Framework.</source>
          <target state="translated">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクション。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The serialization manager.</source>
          <target state="translated">シリアル化マネージャー。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The type to use metadata from.</source>
          <target state="translated">使用するメタデータを持つ型。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>Gets a reflection type generated from type metadata.</source>
          <target state="translated">型のメタデータから生成されたリフレクション型を取得します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>A reflection type generated from the metadata of <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> のメタデータから生成されたリフレクション型。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The return value will not be equal to <ph id="ph1">`type`</ph> and should not be used for comparison with non-reflection types.</source>
          <target state="translated">戻り値は等しいできない<ph id="ph1">`type`</ph>非リフレクション型との比較には使用できません。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The serialization manager.</source>
          <target state="translated">シリアル化マネージャー。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to use metadata from.</source>
          <target state="translated">使用するメタデータを持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Gets a reflection type generated from object metadata.</source>
          <target state="translated">オブジェクトのメタデータから生成されたリフレクション型を取得します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A reflection type generated from the metadata of <ph id="ph1">&lt;paramref name="object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="object" /&gt;</ph> のメタデータから生成されたリフレクション型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</source>
          <target state="translated">戻り値がオブジェクトの型と同じになり非リフレクション型との比較には使用できません。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Locates a serializer for the given object value or type.</source>
          <target state="translated">指定したオブジェクト値または型のシリアライザーを検索します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object specifying the serializer to retrieve.</source>
          <target state="translated">取得するシリアライザーを指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Locates a serializer for the given object value.</source>
          <target state="translated">指定したオブジェクト値のシリアライザーを検索します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> that is appropriate for <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> に適合する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> method is an extension to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph>メソッドは拡張機能では、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method takes an object type, rather than an object value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>メソッドは、オブジェクトの値ではなく、オブジェクトの種類を受け取ります。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If an external party had overridden metadata for a specific object through <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, that metadata override would not be seen by the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method, which only takes a type.</source>
          <target state="translated">外部パーティにを介して特定のオブジェクトのメタデータがオーバーライドされた場合<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>でそのメタデータのオーバーライドは表示されません、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>メソッドの型はわずかです。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> method checks the metadata of the value and the value’s type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph>メソッドは、値と値の型のメタデータをチェックします。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the two differ, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> will look to see if there is a custom designer serializer attribute on the value.</source>
          <target state="translated">2 つが異なる場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph>値のカスタム デザイナー シリアライザー属性がないかどうかになります。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If so, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> will attempt to use it.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph>使用を試みます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Otherwise, it will defer to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">それ以外の場合に任せることが<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="value" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> specifying the serializer to retrieve.</source>
          <target state="translated">取得するシリアライザーを指定する <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>Locates a serializer for the given type.</source>
          <target state="translated">指定した型のシリアライザーを検索します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph> that is appropriate for <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="valueType" /&gt;</ph> に適合する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph> method is an extension to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A&gt;</ph>メソッドは拡張機能では、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph> method takes an object type, rather than an object value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType&gt;</ph>メソッドは、オブジェクトの値ではなく、オブジェクトの種類を受け取ります。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="valueType" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>The type description provider service.</source>
          <target state="translated">型説明のプロバイダー サービス。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>An object from which the type description provider service can be derived, if <bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>provider<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合に、型説明のプロバイダー サービスの派生元にすることができるオブジェクト。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> that is aware of the target version of the .NET Framework, for use in type filtering.</source>
          <target state="translated">型のフィルター処理に使用できる、ターゲット バージョンの .NET Framework を認識する <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptionProvider" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
          <source>A .NET Framework-aware type description provider.</source>
          <target state="translated">.NET Framework を認識する型説明のプロバイダー。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object for which the name will be retrieved.</source>
          <target state="translated">名前の取得対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Returns a unique name for the given object.</source>
          <target state="translated">指定したオブジェクトの一意の名前を返します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A unique name for <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の一意の名前。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> メソッドは <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If this method does not return a name, then <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph> to fabricate a valid name for the object.</source>
          <target state="translated">かどうかはこのメソッドは返しません、名前、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.INameCreationService&gt;</ph>オブジェクトの有効な名前を生成します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the service is not available, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph> will fabricate a name based on the short type name combined with an index number to make it unique.</source>
          <target state="translated">サービスが使用できない場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A&gt;</ph>一意にするインデックス番号を組み合わせた short 型名に基づく名前を作成します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The resulting name is associated with the serialization manager by calling the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</ph> method before the new name is returned.</source>
          <target state="translated">呼び出して、結果名はシリアル化マネージャーに関連付けられて、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</ph>メソッドから、新しい名前が返されます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="value" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Returns a value indicating whether the given object has been serialized.</source>
          <target state="translated">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to test for previous serialization.</source>
          <target state="translated">以前のシリアル化のテスト対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Returns a value indicating whether the given object has been serialized.</source>
          <target state="translated">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> がシリアル化されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>For the <ph id="ph1">`value`</ph> parameter to be considered serialized, the <ph id="ph2">`manager`</ph> parameter or another serializer must have called the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method to create a relationship between <ph id="ph4">`value`</ph> and a referring expression.</source>
          <target state="translated"><ph id="ph1">`value`</ph>と見なされるにパラメーターをシリアル化では、<ph id="ph2">`manager`</ph>パラメーターまたは別のシリアライザーを呼び出す必要がありますが、<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>間のリレーションシップを作成するメソッド<ph id="ph4">`value`</ph>と参照元の式。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="value" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The object to test for previous serialization.</source>
          <target state="translated">以前のシリアル化のテスト対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include preset expressions; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">あらかじめ設定された式を含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</source>
          <target state="translated">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。オプションで、あらかじめ設定された式を考慮することもできます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> がシリアル化されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>For the <ph id="ph1">`value`</ph> parameter to be considered serialized, the <ph id="ph2">`manager`</ph> parameter or another serializer must have called the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method to create a relationship between <ph id="ph4">`value`</ph> and a referring expression.</source>
          <target state="translated"><ph id="ph1">`value`</ph>と見なされるにパラメーターをシリアル化では、<ph id="ph2">`manager`</ph>パラメーターまたは別のシリアライザーを呼び出す必要がありますが、<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>間のリレーションシップを作成するメソッド<ph id="ph4">`value`</ph>と参照元の式。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="value" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> was fully serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> が完全にシリアル化されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>Returns an expression representing the creation of the given object.</source>
          <target state="translated">指定したオブジェクトの作成を表す式を返します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>An expression representing the creation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> の作成を表す式。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A&gt;</ph> method can be used to serialize an expression that represents the creation of the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A&gt;</ph>の作成を表す式をシリアル化するメソッドを使用することができます、<ph id="ph2">`value`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>It is aware of instance descriptors.</source>
          <target state="translated">これは、インスタンス記述子認識します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source>The <ph id="ph1">`isComplete`</ph> parameter is set to <ph id="ph2">`true`</ph> if the expression represents a fully configured object, or <ph id="ph3">`false`</ph> if further serialization must be done on the object’s properties.</source>
          <target state="translated"><ph id="ph1">`isComplete`</ph>にパラメーターが設定されている<ph id="ph2">`true`</ph>式は、完全に構成されたオブジェクトを表す場合、または<ph id="ph3">`false`</ph>場合はさらに、オブジェクトのプロパティをシリアル化を行う必要があります。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> または <ph id="ph2">&lt;paramref name="value" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the event will be serialized.</source>
          <target state="translated">イベントをシリアル化した結果を格納する <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The object to which <bpt id="p1">&lt;c&gt;</bpt>descriptor<ept id="p1">&lt;/c&gt;</ept> is bound.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>descriptor<ept id="p1">&lt;/c&gt;</ept> のバインド先となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> specifying the event to serialize.</source>
          <target state="translated">シリアル化するイベントを指定する <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>Serializes the given event into the given statement collection.</source>
          <target state="translated">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> method is a helper method that derived classes can call to serialize a single event into the given <ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph>メソッドに 1 つのイベントをシリアル化するクラスを派生するヘルパー メソッドを呼び出すことができます、指定された<ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> queries the serialization manager for a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> for the given event, and then asks the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> to serialize it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> シリアル化マネージャーに照会、 <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> 、指定したイベントの要求、<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph>でシリアル化します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> places the <ph id="ph2">`statements`</ph> and <ph id="ph3">`descriptor`</ph> parameters on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> 配置、<ph id="ph2">`statements`</ph>と<ph id="ph3">`descriptor`</ph>上のパラメーター、<ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IEventBindingService&gt;</ph> to discover event bindings to methods that are not compiled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> 必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Design.IEventBindingService&gt;</ph>がコンパイルされていないメソッドをイベント バインドを検出します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>If this service is not present, event bindings to non-compiled methods will not be written.</source>
          <target state="translated">このサービスが存在しない場合は、非コンパイルされたメソッドをイベント バインドは書き込まれません。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source>Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</source>
          <target state="translated">コンパイル済みメソッドをイベント バインドは、イベントがバインドされているオブジェクトは、式に変換できる場合にもシリアル化されます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, <ph id="ph3">&lt;paramref name="statements" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="descriptor" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>、<ph id="ph2">&lt;paramref name="value" /&gt;</ph>、<ph id="ph3">&lt;paramref name="statements" /&gt;</ph>、または <ph id="ph4">&lt;paramref name="descriptor" /&gt;</ph> が <ph id="ph5">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
          <source><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IEventBindingService" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IEventBindingService" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the event will be serialized.</source>
          <target state="translated">イベントをシリアル化した結果を格納する <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The object on which events will be serialized.</source>
          <target state="translated">イベントをシリアル化する対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which events will be serialized.</source>
          <target state="translated">シリアル化するイベントをフィルター処理する <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Serializes the specified events into the given statement collection.</source>
          <target state="translated">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph>メソッドは派生クラスのヘルパー メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>It looks at events on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it calls the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph> method for each event.</source>
          <target state="translated">イベントで参照、<ph id="ph1">`value`</ph>に一致するパラメーター、<ph id="ph2">`filter`</ph>パラメーター、その後の呼び出し、<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A&gt;</ph>各イベントのメソッドです。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph> method places the <ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph> for <ph id="ph3">`value`</ph> on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A&gt;</ph>メソッドの場所、<ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph>の<ph id="ph3">`value`</ph>上、<ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>、<ph id="ph2">&lt;paramref name="value" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the properties will be serialized.</source>
          <target state="translated">プロパティをシリアル化した結果を格納する <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The object on which the properties will be serialized.</source>
          <target state="translated">プロパティをシリアル化する対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which properties will be serialized.</source>
          <target state="translated">シリアル化するプロパティをフィルター処理する <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Serializes the properties on the given object into the given statement collection.</source>
          <target state="translated">指定されたオブジェクトのプロパティを指定されたステートメントのコレクションにシリアル化します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph>メソッドは派生クラスのヘルパー メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>It looks at properties on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it calls the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> method for each property.</source>
          <target state="translated">これは、プロパティを調べ、<ph id="ph1">`value`</ph>に一致するパラメーター、<ph id="ph2">`filter`</ph>パラメーター、その後の呼び出し、<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph>の各プロパティのメソッドです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph> method places the <ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph> for <ph id="ph3">`value`</ph> on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A&gt;</ph>メソッドの場所、<ph id="ph2">&lt;xref:System.ComponentModel.InheritanceAttribute&gt;</ph>の<ph id="ph3">`value`</ph>上、<ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>、<ph id="ph2">&lt;paramref name="value" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Not used.</source>
          <target state="translated">使用しません。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The object whose properties will be serialized.</source>
          <target state="translated">プロパティがシリアル化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array that filters which properties will be serialized.</source>
          <target state="translated">シリアル化するプロパティをフィルター処理する <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Serializes the properties on the given object into the invariant culture’s resource bundle.</source>
          <target state="translated">指定されたオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> method is a helper method that derived classes can call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph>メソッドは派生クラスのヘルパー メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>It looks at properties on the <ph id="ph1">`value`</ph> parameter that match the <ph id="ph2">`filter`</ph> parameter, and then it serializes the properties into the invariant culture resource bundle.</source>
          <target state="translated">これは、プロパティを調べ、<ph id="ph1">`value`</ph>に一致するパラメーター、<ph id="ph2">`filter`</ph>パラメーター、その後は、インバリアント カルチャのリソース バンドルにプロパティをシリアル化します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>If the resource service returns a <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph>, the property values will be stored in the metadata section of the XML resource (.resx) file.</source>
          <target state="translated">リソース サービスが返された場合、<ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph>プロパティ値は、XML リソース (.resx) ファイルのメタデータ セクションに保存されます。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`statements`</ph> parameter is not used.</source>
          <target state="translated"><ph id="ph1">`statements`</ph>パラメーターは使用されません。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</source>
          <target state="translated">プロパティがある必要がありますをリソースとしてシリアル化する、単純な (コンテンツ プロパティではなく) とその値をシリアル化可能にする必要があります。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>Properties that do not conform to this pattern will be skipped.</source>
          <target state="translated">このパターンに準拠していないプロパティはスキップされます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> to write resources for the invariant culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A&gt;</ph> 必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph>を取得する、<ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph>インバリアント カルチャのリソースを記述します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source>If this service is not available, no resources will be written.</source>
          <target state="translated">このサービスが利用できない場合は、リソースは書き込まれません。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>、<ph id="ph2">&lt;paramref name="value" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="statements" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph> into which the property will be serialized.</source>
          <target state="translated">プロパティをシリアル化した結果を格納する <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeStatementCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The object on which the property will be serialized.</source>
          <target state="translated">プロパティをシリアル化する対象となるオブジェクト。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The property to serialize.</source>
          <target state="translated">シリアル化するプロパティ。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>Serializes a property on the given object.</source>
          <target state="translated">指定したオブジェクトのプロパティをシリアル化します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> method retrieves a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph> for the <ph id="ph3">`propertyToSerialize`</ph> parameter and delegates to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph>メソッドの取得、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&gt;</ph>の<ph id="ph3">`propertyToSerialize`</ph>パラメーターとするデリゲート。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> places the <ph id="ph2">`statements`</ph> and <ph id="ph3">`propertyToSerialize`</ph> parameters on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A&gt;</ph> 配置、<ph id="ph2">`statements`</ph>と<ph id="ph3">`propertyToSerialize`</ph>上のパラメーター、<ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, <ph id="ph3">&lt;paramref name="statements" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="propertyToSerialize" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>、<ph id="ph2">&lt;paramref name="value" /&gt;</ph>、<ph id="ph3">&lt;paramref name="statements" /&gt;</ph>、または <ph id="ph4">&lt;paramref name="propertyToSerialize" /&gt;</ph> が <ph id="ph5">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The name of the resource bundle into which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> をシリアル化した結果を格納するリソース バンドルの名前。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>Serializes the given object into a resource bundle using the given resource name.</source>
          <target state="translated">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> method is a helper method that serializes a value to a resource bundle under the given name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph>メソッドは、指定した名前の下にあるリソース バンドルに値をシリアル化するヘルパー メソッドです。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The culture that the resource is written to is determined by searching the serialization manager’s <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt;</ph> collection for a property called <ph id="ph2">`ResourceCulture`</ph>.</source>
          <target state="translated">リソースに書き込まれるカルチャは、シリアル化マネージャーの検索によって決まります<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A&gt;</ph>プロパティのコレクションと呼ばれる<ph id="ph2">`ResourceCulture`</ph>です。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>If this property exists, resources will be written to that culture.</source>
          <target state="translated">このプロパティが存在する場合は、リソースはそのカルチャを記述します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>Otherwise, resources will be written to the invariant culture.</source>
          <target state="translated">それ以外の場合、リソースは、インバリアント カルチャに書き込まれます。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターは、シリアル化可能である必要があります。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> to write resources for the correct culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> 必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph>を取得する、<ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph>を正しいカルチャのリソースを記述します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>If this service is not available, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> will instead build a binary object in code that represents the resource.</source>
          <target state="translated">このサービスが使用できない場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph>は代わりにリソースを表すコードのバイナリ オブジェクトを構築します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source><ph id="ph1">&lt;see langword="ResourceCulture" /&gt;</ph> is a read-write property that is accessed through the serialization manager’s <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ResourceCulture" /&gt;</ph> シリアル化マネージャーからアクセスする読み取り/書き込みプロパティは、<ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /&gt;</ph> method never changes the value of this property; it merely reads it to identify the culture to which it will write.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /&gt;</ph>メソッドは、このプロパティの値を決して変化以外の場合は単に書き込むがカルチャを識別するために読み取ります。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The property is set during deserialization as resources are parsed and loaded.</source>
          <target state="translated">プロパティは、リソースが解析され、ロード、逆シリアル化中に設定されます。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The name of the resource bundle into which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> will be serialized.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> をシリアル化した結果を格納するリソース バンドルの名前。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>Serializes the given object into a resource bundle using the given resource name.</source>
          <target state="translated">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The resource is always written to the invariant culture.</source>
          <target state="translated">リソースは常にインバリアント カルチャに書き込まれます。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターは、シリアル化可能である必要があります。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A&gt;</ph> method requires an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> to write resources for the correct culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A&gt;</ph>メソッドが必要な<ph id="ph2">&lt;xref:System.ComponentModel.Design.IResourceService&gt;</ph>を取得する、<ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph>を正しいカルチャのリソースを記述します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
          <source>If this service is not available, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> will instead build a binary object in code that represents the resource.</source>
          <target state="translated">このサービスが使用できない場合<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph>は代わりにリソースを表すコードのバイナリ オブジェクトを構築します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合があります。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Serializes the given object into an expression.</source>
          <target state="translated">指定したオブジェクトを式にシリアル化します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> object if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> can be serialized; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> をシリアル化できる場合は <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> オブジェクト。それ以外の場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case a primitive expression will be returned.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターを指定できます<ph id="ph2">`null`</ph>、後者プリミティブ式が返されます。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method uses the following rules for serializing types:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>メソッドは型をシリアル化するため、次の規則を使用します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It first calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method to see if an expression has already been created for the object.</source>
          <target state="translated">最初に呼び出して、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>オブジェクトの式が既に作成されているメソッド。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If so, it returns the existing expression.</source>
          <target state="translated">その場合、既存の式を返します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It then locates the object’s serializer, and asks it to serialize.</source>
          <target state="translated">オブジェクトのシリアライザーを検索し、シリアル化するように指示します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the return value of the object’s serializer is a <ph id="ph1">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>, the expression is returned.</source>
          <target state="translated">かどうか、オブジェクトのシリアライザーの戻り値は、<ph id="ph1">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>式が返されます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>It makes one last call to <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> to see if the serializer added an expression.</source>
          <target state="translated">最後の呼び出しに 1 つは<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>シリアライザーが式を追加するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Finally, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">最後に、<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</source>
          <target state="translated">式を作成できませんでした適切なシリアライザーが見つからなかった場合は、エラーは、シリアル化マネージャーを通じて報告されます。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>No error will be reported if a serializer was found but it failed to produce an expression.</source>
          <target state="translated">シリアライザーは見つかりましたが、式を生成するために失敗した場合、エラーは報告されません。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</source>
          <target state="translated">この場合、シリアライザーか、既にエラーが報告されたこと、または、オブジェクトをシリアル化されませんでしたと見なされます。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If the serializer returned a statement or a collection of statements, those statements will not be discarded.</source>
          <target state="translated">ステートメントまたはステートメントのコレクションに、シリアライザーが返される場合は、これらのステートメントは破棄されません。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method will first look for a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext&gt;</ph> on the context stack and add statements to the statement context object's <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>メソッドは、まず、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext&gt;</ph>コンテキスト スタックが作成され、ステートメントのコンテキストにステートメントを追加<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If there is no statement context, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method will look in the context for a <ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph> and add the statements there.</source>
          <target state="translated">ステートメントのコンテキストが存在しない場合、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>メソッドは、コンテキストにおける検索、<ph id="ph2">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>ありますのステートメントを追加します。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If no place can be found to add the statements, an error will be generated.</source>
          <target state="translated">場所がありませんできますが、ステートメントを追加する検出された場合、エラーが生成されます。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>You should not call the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph> method within <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt;</ph> when serializing your own object.</source>
          <target state="translated">呼び出す必要はありません、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>メソッド内で<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A&gt;</ph>独自のオブジェクトのシリアル化します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Instead, you should call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>.</source>
          <target state="translated">呼び出す必要がある代わりに、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>If it returns <ph id="ph1">`null`</ph>, create your own expression and call <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>.</source>
          <target state="translated">返された場合<ph id="ph1">`null`</ph>、独自の式と呼び出し作成<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Then proceed with the rest of your serialization.</source>
          <target state="translated">シリアル化の残りの部分に進みます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Serializes an object into an expression.</source>
          <target state="translated">オブジェクトを式にシリアル化します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>Serializes the given object into an expression.</source>
          <target state="translated">指定したオブジェクトを式にシリアル化します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph> as a serialized expression.</source>
          <target state="translated">シリアル化された式として <ph id="ph2">&lt;paramref name="value" /&gt;</ph> を格納している <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> method is a helper method that serializes a value to a resource expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph>リソース式の値をシリアル化するヘルパー メソッドです。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>This is in contrast to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph> method, which writes a value to a resource binary object.</source>
          <target state="translated">これは、対照的に、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A&gt;</ph>メソッドで、リソースのバイナリ オブジェクトに値を書き込みます。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> goes one step further and returns an expression that can be used to recover the resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> 一歩し、リソースを回復するために使用する式を返します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>For example, the return value might be "rm.GetValue("SomeBitmap");".</source>
          <target state="translated">たとえば、戻り値は"rm 可能性があります。GetValue("SomeBitmap");"です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The name of the resource is calculated from the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>, if one can be found on the context stack.</source>
          <target state="translated">リソースの名前がから計算された、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>コンテキスト スタックに見つかったいずれかの場合は、します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> method will look on the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph> for the following objects:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph>メソッドは検索、<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;</ph>次のオブジェクトに対して。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>—a collection of statements to add a resource manager to, if one needs to be declared.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeStatementCollection&gt;</ph>-いずれかを宣言する必要がある場合に、リソース マネージャーを追加するステートメントのコレクション。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>—the root expression, which is needed to create a resource manager.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>— リソース マネージャーを作成するために必要なルートの式。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>—used to fabricate a name for the resource and to decide what type of resource manager call to make.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.ExpressionContext&gt;</ph>リソースの名前を作成してするリソース マネージャーの呼び出しの種類を決定するために使用します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize into the invariant culture; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">インバリアント カルチャにシリアル化する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>Serializes the given object into an expression appropriate for the invariant culture.</source>
          <target state="translated">指定したオブジェクトをインバリアント カルチャに適した式にシリアル化します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> containing <ph id="ph2">&lt;paramref name="value" /&gt;</ph> as a serialized expression.</source>
          <target state="translated">シリアル化された式として <ph id="ph2">&lt;paramref name="value" /&gt;</ph> を格納している <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source>If the <ph id="ph1">`ensureInvariant`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph> method will also write the resource value into the invariant culture’s resource file if the current <ph id="ph4">`ResourceCulture`</ph> is not the invariant culture..</source>
          <target state="translated">場合、<ph id="ph1">`ensureInvariant`</ph>パラメーターは<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A&gt;</ph>メソッドも値を書き込みます、リソース、インバリアント カルチャのリソース ファイルに場合、現在<ph id="ph4">`ResourceCulture`</ph>インバリアント カルチャではありません.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
          <source>Associates an object with an expression.</source>
          <target state="translated">オブジェクトを式に関連付けます。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> with which to associate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> を関連付ける <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>Associates an object with an expression.</source>
          <target state="translated">オブジェクトを式に関連付けます。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method is a helper method that associates a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> with an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>メソッドは、ヘルパー メソッドを関連付ける、<ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>オブジェクトを使用します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source>Objects that have been associated with expressions in this way are accessible through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated">この方法で式に関連付けられているオブジェクトは経由でアクセスできる、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> その式のテーブルとしてコンテキスト スタックに追加されたオブジェクトは任意のシリアライザーのアクセス<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="expression" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>、<ph id="ph2">&lt;paramref name="value" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="expression" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> to use for serialization.</source>
          <target state="translated">シリアル化に使用する <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The object to serialize.</source>
          <target state="translated">シリアル化するオブジェクト。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph> with which to associate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> を関連付ける <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify a preset expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">あらかじめ設定された式を指定する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>Associates an object with an expression, optionally specifying a preset expression.</source>
          <target state="translated">必要に応じて事前設定された式を指定し、オブジェクトを式に関連付けます。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> method is a helper method that associates a <ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph> with an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>メソッドは、ヘルパー メソッドを関連付ける、<ph id="ph2">&lt;xref:System.CodeDom.CodeExpression&gt;</ph>オブジェクトを使用します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>Objects that have been associated with expressions in this way are accessible through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated">この方法で式に関連付けられているオブジェクトは経由でアクセスできる、<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A&gt;</ph>は、その式のテーブルとしてコンテキスト スタックに追加されたオブジェクトは任意のシリアライザーのアクセス<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A&gt;</ph>メソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>