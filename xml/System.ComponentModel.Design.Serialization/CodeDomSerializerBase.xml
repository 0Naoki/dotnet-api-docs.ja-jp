<Type Name="CodeDomSerializerBase" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="144dbb568547f7474811c00a2c95c9f1b0c1a8df" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomSerializerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializerBase abstract" />
  <TypeSignature Language="F#" Value="type CodeDomSerializerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eb4f8-101">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> の各クラスの基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb4f8-101">Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-102"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase>クラス間で共有のベースとして使用される、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>と<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>クラス。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-102">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class is used as a shared base between the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> and <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> classes.</span></span> <span data-ttu-id="eb4f8-103">パブリック<xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>クラスから派生し、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase>クラス。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-103">Public <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> classes derive from the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class.</span></span> <span data-ttu-id="eb4f8-104">各パブリック クラスは、独自のパブリック API を定義します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-104">Each public class defines its own public API.</span></span> <span data-ttu-id="eb4f8-105"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase>クラスはパブリック API は定義されませんが、さまざまなシリアル化プロセスを支援するために使用できるユーティリティ メソッドを提供しています。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-105">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase> class defines no public API, but does offer a multitude of utility methods that can be used to aid the serialization process.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  </Docs>
  <Members>
    <Member MemberName="DeserializeExpression">
      <MemberSignature Language="C#" Value="protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeExpression (manager As IDesignerSerializationManager, name As String, expression As CodeExpression) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ name, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.DeserializeExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * System.CodeDom.CodeExpression -&gt; obj" Usage="codeDomSerializerBase.DeserializeExpression (manager, name, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-106">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="eb4f8-107">式の結果として作成されるオブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-107">The name of the object that results from the expression.</span>
          </span>
          <span data-ttu-id="eb4f8-108">オブジェクトに名前を付ける必要がない場合は、<see langword="null" /> でもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-108">Can be <see langword="null" /> if there is no need to name the object.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="eb4f8-109">解釈する <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-109">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-110">指定した式をメモリ内オブジェクトに逆シリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-110">Deserializes the given expression into an in-memory object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-111">
            <paramref name="expression" /> の解釈の結果として作成されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-111">An object resulting from interpretation of <paramref name="expression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-112">これは、ヘルパー式を逆シリアル化するクラスを派生メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-112">This is a helper method that derived classes can call to deserialize an expression.</span></span> <span data-ttu-id="eb4f8-113">解釈し、CodeDOM 式で指定されたを実行して、ステートメントを逆シリアル化、`expression`パラメーターとし、結果を返します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-113">It deserializes the statement by interpreting and executing the CodeDOM expression specified by the `expression` parameter, and then returns the results.</span></span> <span data-ttu-id="eb4f8-114">指定した名前を指定をオブジェクトがこの式の結果として作成する必要がある場合、`name`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-114">If an object needs to be created as a result of this expression, it will be given the name specified by the `name` parameter.</span></span> <span data-ttu-id="eb4f8-115">名前が`null`場合は、オブジェクトの名前を付ける必要はありません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-115">The name can be `null` if there is no need to name the object.</span></span> <span data-ttu-id="eb4f8-116">次の表に、特定の式が処理します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-116">The following table describes how specific expressions are handled.</span></span>  
  
|<span data-ttu-id="eb4f8-117">式</span><span class="sxs-lookup"><span data-stu-id="eb4f8-117">Expression</span></span>|<span data-ttu-id="eb4f8-118">動作</span><span class="sxs-lookup"><span data-stu-id="eb4f8-118">Behavior</span></span>|  
|----------------|--------------|  
|<xref:System.CodeDom.CodeThisReferenceExpression>|<span data-ttu-id="eb4f8-119">この式を表す`this`または`Me`します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-119">This expression represents `this` or `Me`.</span></span> <span data-ttu-id="eb4f8-120">この式に関連付けられているオブジェクトを検索する、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A>メソッドは、コンテキストのスタックの検索、<xref:System.ComponentModel.Design.Serialization.RootContext>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-120">To locate the object that is associated with this expression, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> method will look in the context stack for a <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span> <span data-ttu-id="eb4f8-121">このオブジェクトには、グラフとそれを表す式のルート オブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-121">This object contains the root object of the graph and the expression that represents it.</span></span> <span data-ttu-id="eb4f8-122">オブジェクトが存在し、式が一致する場合は、ルート オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-122">If the object is present and the expression matches, the root object will be returned.</span></span> <span data-ttu-id="eb4f8-123">インスタンスが見つからない場合は、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-123">An error is reported if an instance cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeFieldReferenceExpression>|<span data-ttu-id="eb4f8-124">フィールド参照のターゲットは、ルート オブジェクトに評価された場合、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>マネージャーのパラメーターのメソッドを使用して名前に基づいてオブジェクトのインスタンスが取得されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-124">If the target of the field reference evaluates to the root object, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the manager parameter will be used to retrieve the object instance based on name.</span></span> <span data-ttu-id="eb4f8-125">それ以外の場合、要求されたフィールドを検索する、対象オブジェクトに対して標準的なリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-125">Otherwise, standard reflection is used against the target object to locate the requested field.</span></span> <span data-ttu-id="eb4f8-126">フィールドが見つからない場合は、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-126">An error is reported if the field cannot be located.</span></span>|  
|<xref:System.CodeDom.CodeVariableReferenceExpression>|<span data-ttu-id="eb4f8-127"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>のメソッド、`manager`パラメーターが指定された変数名を表すインスタンスの検索に使用します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-127">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method of the `manager` parameter is used to locate the instance representing the given variable name.</span></span> <span data-ttu-id="eb4f8-128">インスタンスが見つからない場合は、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-128">An error is reported if an instance cannot be located.</span></span>|  
  
 <span data-ttu-id="eb4f8-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> 続行すると、式の解釈は、オブジェクトを完全に解決するまで、または不要になった式を簡略化できます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-129"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> continues to interpret expressions until they are completely resolved to an object, or until it can no longer simplify the expression.</span></span> <span data-ttu-id="eb4f8-130">この場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A>が返されます、<xref:System.CodeDom.CodeExpression>最も単純な式を格納しています。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-130">In this case, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression%2A> will return a <xref:System.CodeDom.CodeExpression> that contains the most simplified expression.</span></span> <span data-ttu-id="eb4f8-131">次の式はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-131">The following expressions are not supported:</span></span>  
  
-   <xref:System.CodeDom.CodeEventReferenceExpression>  
  
-   <xref:System.CodeDom.CodeMethodReferenceExpression>  
  
-   <xref:System.CodeDom.CodeDelegateCreateExpression>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeInstance">
      <MemberSignature Language="C#" Value="protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DeserializeInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type, object[] parameters, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DeserializeInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type, cli::array &lt;System::Object ^&gt; ^ parameters, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj&#xA;override this.DeserializeInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type * obj[] * string * bool -&gt; obj" Usage="codeDomSerializerBase.DeserializeInstance (manager, type, parameters, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-132">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-132">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="eb4f8-133">返されるインスタンスの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-133">The <see cref="T:System.Type" /> of the instance to return.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="eb4f8-134">
            <c>type</c> のコンストラクターに渡すパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-134">The parameters to pass to the constructor for <c>type</c>.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="eb4f8-135">逆シリアル化されたオブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-135">The name of the deserialized object.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="eb4f8-136">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-136">
              <see langword="true" /> to add this object to the design container; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb4f8-137">この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-137">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-138">指定した型のインスタンスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-138">Returns an instance of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-139">
            <paramref name="type" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-139">An instance of <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-140"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A>オブジェクトのインスタンスを取得するには、逆シリアル化中にメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-140">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance%2A> method is invoked during deserialization to obtain an instance of an object.</span></span> <span data-ttu-id="eb4f8-141">呼び出されると、要求された型のインスタンスが返されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-141">When this is called, an instance of the requested type should be returned.</span></span> <span data-ttu-id="eb4f8-142">既定の実装を呼び出す、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>のメソッド、`manager`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-142">The default implementation invokes the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method of the `manager` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-143">
            <paramref name="manager" /> または <paramref name="type" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-143">
              <paramref name="manager" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="DeserializePropertiesFromResources">
      <MemberSignature Language="C#" Value="protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializePropertiesFromResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializePropertiesFromResources (manager As IDesignerSerializationManager, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializePropertiesFromResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.DeserializePropertiesFromResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.DeserializePropertiesFromResources (manager, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-144">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-144">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-145">プロパティを逆シリアル化する対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-145">The object from which the properties are to be deserialized.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="eb4f8-146">逆シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-146">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-147">インバリアント カルチャのリソース バンドルから、指定したオブジェクトのプロパティを逆シリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-147">Deserializes properties on the given object from the invariant culture’s resource bundle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-148"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A>メソッドは、クラスを派生するヘルパー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-148">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="eb4f8-149">指定されたオブジェクトのプロパティを検索し、インバリアント カルチャのリソースのバンドルからその値を読み込もうとします。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-149">It looks for properties on the given object and attempts to load their values out of the invariant culture’s resource bundle.</span></span> <span data-ttu-id="eb4f8-150">これは通常、ソース コードに出力されていないデザイン時プロパティを処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-150">This is generally used to handle design-time properties that are not emitted into source code.</span></span> <span data-ttu-id="eb4f8-151">適していないローカライズされたプロパティにインバリアント カルチャでのみ動作するためです。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-151">It should not be used for localized properties because it only operates on the invariant culture.</span></span>  
  
 <span data-ttu-id="eb4f8-152">このメソッドは、すべてのプロパティの検査、`value`パラメーターで指定された属性と一致する、`filter`パラメーター、および、リソースのバイナリ オブジェクトでこれらのプロパティをチェックします。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-152">This method inspects all of the properties of the `value` parameter that match the attributes specified by the `filter` parameter, and then checks for those properties in a resource binary object.</span></span> <span data-ttu-id="eb4f8-153">これは、逆シリアル化のプロパティをデザイン時プロパティなどのコードでは表現できない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-153">This is useful for deserializing properties that cannot be represented in code, such as design-time properties.</span></span>  
  
 <span data-ttu-id="eb4f8-154">このメソッドは、デザイナー ローダーが用意されている必要があります、<xref:System.ComponentModel.Design.IResourceService>のリソースを読み取る。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-154">This method requires that a designer loader offers an <xref:System.ComponentModel.Design.IResourceService> to read resources.</span></span> <span data-ttu-id="eb4f8-155">場合、<xref:System.ComponentModel.Design.IResourceService>提供、 <xref:System.Resources.ResXResourceReader> 、インバリアント カルチャの<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A>は、XML リソース (.resx) ファイルのメタデータ セクションで、最終的なコンパイル済みコードにも記載されていないからリソースを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-155">If the <xref:System.ComponentModel.Design.IResourceService> provides a <xref:System.Resources.ResXResourceReader> for the invariant culture, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources%2A> will read resources from the XML resource (.resx) file’s metadata section, which is not included in final compiled code.</span></span> <span data-ttu-id="eb4f8-156">このサービスが利用できない場合は、リソースは読み取られません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-156">If this service is not available, no resources will be read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatement">
      <MemberSignature Language="C#" Value="protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeserializeStatement(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeserializeStatement (manager As IDesignerSerializationManager, statement As CodeStatement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeserializeStatement(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberSignature Language="F#" Value="member this.DeserializeStatement : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatement -&gt; unit" Usage="codeDomSerializerBase.DeserializeStatement (manager, statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-157">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-157">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="statement">
          <span data-ttu-id="eb4f8-158">逆シリアル化を行う対象の <see cref="T:System.CodeDom.CodeStatement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-158">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-159">CodeDOM ステートメントを解釈して実行することにより、ステートメントを逆シリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-159">Deserializes a statement by interpreting and executing a CodeDOM statement.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-160"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A>メソッドは、クラスを派生するヘルパー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-160">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="eb4f8-161">解釈、`statement`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-161">It interprets the `statement` parameter.</span></span>  
  
 <span data-ttu-id="eb4f8-162"><xref:System.CodeDom.CodeStatement>逆シリアル化は、コンテキスト スタックにプッシュされます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-162">The <xref:System.CodeDom.CodeStatement> being deserialized will be pushed on the context stack.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributesFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAttributesFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-163">シリアル化マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-163">The serialization manager.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="eb4f8-164">対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-164">The target type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-165">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-165">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-166">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-166">A collection of attributes as defined in the project's target version of the .NET Framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.AttributeCollection GetAttributesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetAttributesHelper (manager As IDesignerSerializationManager, instance As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttributesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-167">シリアル化マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-167">The serialization manager.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="eb4f8-168">対象の型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-168">An object of the target type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-169">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-169">Gets a collection of attributes as defined in the project's target version of the .NET Framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-170">プロジェクトのターゲット バージョンの .NET Framework で定義されている属性のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-170">A collection of attributes as defined in the project's target version of the .NET Framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventsHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.EventDescriptorCollection GetEventsHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetEventsHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEventsHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEventsHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-171">シリアル化マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-171">The serialization manager.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="eb4f8-172">対象の型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-172">An object of the target type.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="eb4f8-173">ターゲット バージョンの .NET Framework に渡す属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-173">An array of attributes to pass to the target version of the .NET Framework.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-174">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-174">Gets a collection of events as defined in the project's target version of the .NET Framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-175">プロジェクトのターゲット バージョンの .NET Framework で定義されているイベントのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-175">A collection of events as defined in the project's target version of the .NET Framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression GetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ GetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.GetExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-176">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-176">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-177">式の取得対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-177">The object for which to get an expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-178">指定したオブジェクトの式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-178">Returns an expression for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-179">
            <paramref name="value" /> を表す <see cref="T:System.CodeDom.CodeExpression" />。<paramref name="value" /> の既存の式が存在しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-179">A <see cref="T:System.CodeDom.CodeExpression" /> representing <paramref name="value" />, or <see langword="null" /> if there is no existing expression for <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-180"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッドは、指定したオブジェクトを表す式を返します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-180">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method returns an expression representing the given object.</span></span> <span data-ttu-id="eb4f8-181">返すことができます`null`ことを示すオブジェクト式が設定されていないことをについて説明します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-181">It can return `null`, indicating that no expression has been set that describes the object.</span></span> <span data-ttu-id="eb4f8-182">3 つの方法のいずれかで式が取得されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-182">Expressions are acquired in one of three ways:</span></span>  
  
-   <span data-ttu-id="eb4f8-183">前回の呼び出しの結果である場合、式、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-183">The expression could be the result of a prior call to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method.</span></span>  
  
-   <span data-ttu-id="eb4f8-184">式で検出された可能性があります、<xref:System.ComponentModel.Design.Serialization.RootContext>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-184">The expression could have been found in the <xref:System.ComponentModel.Design.Serialization.RootContext>.</span></span>  
  
-   <span data-ttu-id="eb4f8-185">式から派生<xref:System.ComponentModel.Design.IReferenceService>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-185">The expression could be derived through <xref:System.ComponentModel.Design.IReferenceService>.</span></span>  
  
 <span data-ttu-id="eb4f8-186">式を派生させる<xref:System.ComponentModel.Design.IReferenceService>、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッドが、指定したオブジェクトの名前を参照サービスを照会します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-186">To derive expressions through <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method queries the reference service for a name for the given object.</span></span> <span data-ttu-id="eb4f8-187">式のサービスが有効な名前を返す場合<xref:System.ComponentModel.Design.IReferenceService>、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッドがあるかどうかを確認します、"."名にします。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-187">If the expression service returns a valid name, <xref:System.ComponentModel.Design.IReferenceService>, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method checks to see if there is a "." in the name.</span></span> <span data-ttu-id="eb4f8-188">これは、式サービスが、別のオブジェクトの読み取り専用プロパティの戻り値としてこのオブジェクトをすることを示します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-188">This indicates that the expression service found this object as the return value of a read-only property on another object.</span></span> <span data-ttu-id="eb4f8-189">存在する場合、"."、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>部分に参照を分割します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-189">If there is a ".", <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will split the reference into parts.</span></span> <span data-ttu-id="eb4f8-190">左端の部分が名前に評価される、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-190">The leftmost part is a name that will be evaluated with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> method.</span></span> <span data-ttu-id="eb4f8-191">各後続の部分のプロパティの参照式が作成されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-191">For each subsequent part, a property reference expression will be built.</span></span> <span data-ttu-id="eb4f8-192">最後の式から返されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-192">The final expression will then be returned.</span></span>  
  
 <span data-ttu-id="eb4f8-193">オブジェクトに設定すると、式がない場合、または参照サービス オブジェクトが見つからなかった場合<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>戻ります`null`オブジェクトの既存の式が存在しないことを示します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-193">If the object did not have an expression set, or if the object was not found in the reference service, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> will return `null`, indicating there is no existing expression for the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-194">
            <paramref name="manager" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-194">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesHelper">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetPropertiesHelper (manager As IDesignerSerializationManager, instance As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetPropertiesHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetPropertiesHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper (manager, instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-195">シリアル化マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-195">The serialization manager.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="eb4f8-196">対象の型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-196">An object of the target type.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="eb4f8-197">ターゲット バージョンの .NET Framework に渡す属性の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-197">An array of attributes to pass to the target version of the .NET Framework.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-198">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-198">Gets a collection of properties as defined in the project's target version of the .NET Framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-199">プロジェクトのターゲット バージョンの .NET Framework で定義されているプロパティのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-199">A collection of properties as defined in the project's target version of the .NET Framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeFromTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeFromTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeFromTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeFromTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper (manager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-200">シリアル化マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-200">The serialization manager.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="eb4f8-201">使用するメタデータを持つ型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-201">The type to use metadata from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-202">型のメタデータから生成されたリフレクション型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-202">Gets a reflection type generated from type metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-203">
            <paramref name="type" /> のメタデータから生成されたリフレクション型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-203">A reflection type generated from the metadata of <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-204">戻り値は等しくできない`type`非リフレクション型と比較するために使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-204">The return value will not be equal to `type` and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionTypeHelper">
      <MemberSignature Language="C#" Value="protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Type GetReflectionTypeHelper(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetReflectionTypeHelper (manager As IDesignerSerializationManager, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Type ^ GetReflectionTypeHelper(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionTypeHelper : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; Type" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper (manager, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-205">シリアル化マネージャー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-205">The serialization manager.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="eb4f8-206">使用するメタデータを持つオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-206">The object to use metadata from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-207">オブジェクトのメタデータから生成されたリフレクション型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-207">Gets a reflection type generated from object metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-208">
            <paramref name="object" /> のメタデータから生成されたリフレクション型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-208">A reflection type generated from the metadata of <paramref name="object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-209">戻り値は、オブジェクトの型と一致する場合し、非リフレクション型との比較は使用しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-209">The return value will not be equal to the type of object and should not be used for comparison with non-reflection types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb4f8-210">指定したオブジェクト値または型のシリアライザーを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-210">Locates a serializer for the given object value or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, value As Object) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-211">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-211">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-212">取得するシリアライザーを指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-212">The object specifying the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-213">指定したオブジェクト値のシリアライザーを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-213">Locates a serializer for the given object value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-214">
            <paramref name="value" /> に適合する <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-214">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-215"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>メソッドは、拡張機能、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-215">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="eb4f8-216"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>メソッドはオブジェクトの値ではなく、オブジェクトの種類を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-216">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span> <span data-ttu-id="eb4f8-217">部外にを通じて特定のオブジェクトのメタデータがオーバーライドされる場合<xref:System.ComponentModel.TypeDescriptor>でそのメタデータのオーバーライドは表示されません、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>メソッドで、型はわずかです。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-217">If an external party had overridden metadata for a specific object through <xref:System.ComponentModel.TypeDescriptor>, that metadata override would not be seen by the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method, which only takes a type.</span></span> <span data-ttu-id="eb4f8-218"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>メソッドのメタデータ値と値の型を確認します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-218">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method checks the metadata of the value and the value’s type.</span></span> <span data-ttu-id="eb4f8-219">2 つが異なる場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>は次の値にデザイナーのシリアライザーはカスタム属性がないかどうかになります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-219">If the two differ, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will look to see if there is a custom designer serializer attribute on the value.</span></span> <span data-ttu-id="eb4f8-220">場合は、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>使用を試みます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-220">If so, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> will attempt to use it.</span></span> <span data-ttu-id="eb4f8-221">それに従うこと<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-221">Otherwise, it will defer to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-222">
            <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-222">
              <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.Type valueType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSerializer (manager As IDesignerSerializationManager, valueType As Type) As CodeDomSerializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::Serialization::CodeDomSerializer ^ GetSerializer(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, Type ^ valueType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * Type -&gt; System.ComponentModel.Design.Serialization.CodeDomSerializer" Usage="codeDomSerializerBase.GetSerializer (manager, valueType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.CodeDomSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="valueType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-223">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-223">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="valueType">
          <span data-ttu-id="eb4f8-224">取得するシリアライザーを指定する <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-224">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-225">指定した型のシリアライザーを検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-225">Locates a serializer for the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-226">
            <paramref name="valueType" /> に適合する <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-226">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-227"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A>メソッドは、拡張機能、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-227">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer%2A> method is an extension to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="eb4f8-228"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType>メソッドはオブジェクトの値ではなく、オブジェクトの種類を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-228">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=nameWithType> method takes an object type, rather than an object value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-229">
            <paramref name="manager" /> または <paramref name="valueType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-229">
              <paramref name="manager" /> or <paramref name="valueType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetFrameworkProvider">
      <MemberSignature Language="C#" Value="protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider(class System.IServiceProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTargetFrameworkProvider (provider As IServiceProvider, instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetTargetFrameworkProvider(IServiceProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetTargetFrameworkProvider : IServiceProvider * obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="eb4f8-230">型説明のプロバイダー サービス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-230">The type description provider service.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="eb4f8-231">
            <c>provider</c> が <see langword="null" /> の場合に、型説明のプロバイダー サービスの派生元にすることができるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-231">An object from which the type description provider service can be derived, if <c>provider</c> is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-232">型のフィルター処理に使用できる、ターゲット バージョンの .NET Framework を認識する <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-232">Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-233">.NET Framework を認識する型説明のプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-233">A .NET Framework-aware type description provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueName">
      <MemberSignature Language="C#" Value="protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetUniqueName(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUniqueName (manager As IDesignerSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetUniqueName(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueName : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; string" Usage="codeDomSerializerBase.GetUniqueName (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-234">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-234">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-235">名前の取得対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-235">The object for which the name will be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-236">指定したオブジェクトの一意の名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-236">Returns a unique name for the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-237">
            <paramref name="value" /> の一意の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-237">A unique name for <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-238"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> メソッドは <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-238">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> method calls the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> method.</span></span> <span data-ttu-id="eb4f8-239">このメソッドしても、名前は、返されません<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A>使用<xref:System.ComponentModel.Design.Serialization.INameCreationService>オブジェクトの有効な名前を作成します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-239">If this method does not return a name, then <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> uses <xref:System.ComponentModel.Design.Serialization.INameCreationService> to fabricate a valid name for the object.</span></span> <span data-ttu-id="eb4f8-240">サービスが使用できない場合<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A>して一意にするインデックス番号を組み合わせて短い型名に基づいて名前を作成します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-240">If the service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName%2A> will fabricate a name based on the short type name combined with an index number to make it unique.</span></span> <span data-ttu-id="eb4f8-241">呼び出すことによって、生成される名前は、シリアル化マネージャーに関連付け、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>メソッドの前に、新しい名前が返されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-241">The resulting name is associated with the serialization manager by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A> method before the new name is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-242">
            <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-242">
              <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSerialized">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb4f8-243">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-243">Returns a value indicating whether the given object has been serialized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-244">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-244">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-245">以前のシリアル化のテスト対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-245">The object to test for previous serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-246">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-246">Returns a value indicating whether the given object has been serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-247">
            <paramref name="value" /> がシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-247">
              <see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-248">`value`と見なされるパラメーターがシリアル化、`manager`パラメーターまたは別のシリアライザーを呼び出す必要がありますが、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>間のリレーションシップを作成するメソッドを`value`と参照元の式。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-248">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-249">
            <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-249">
              <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="IsSerialized">
      <MemberSignature Language="C#" Value="protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsSerialized(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsSerialized (manager As IDesignerSerializationManager, value As Object, honorPreset As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsSerialized(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool honorPreset);" />
      <MemberSignature Language="F#" Value="member this.IsSerialized : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; bool" Usage="codeDomSerializerBase.IsSerialized (manager, value, honorPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="honorPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-250">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-250">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-251">以前のシリアル化のテスト対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-251">The object to test for previous serialization.</span>
          </span>
        </param>
        <param name="honorPreset">
          <span data-ttu-id="eb4f8-252">あらかじめ設定された式を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-252">
              <see langword="true" /> to include preset expressions; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-253">指定したオブジェクトがシリアル化されているかどうかを示す値を返します。オプションで、あらかじめ設定された式を考慮することもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-253">Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-254">
            <paramref name="value" /> がシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-254">
              <see langword="true" /> if <paramref name="value" /> has been serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-255">`value`と見なされるパラメーターがシリアル化、`manager`パラメーターまたは別のシリアライザーを呼び出す必要がありますが、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>間のリレーションシップを作成するメソッドを`value`と参照元の式。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-255">For the `value` parameter to be considered serialized, the `manager` parameter or another serializer must have called the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method to create a relationship between `value` and a referring expression.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-256">
            <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-256">
              <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeCreationExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeCreationExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, [out] bool&amp; isComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeCreationExpression (manager As IDesignerSerializationManager, value As Object, ByRef isComplete As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeCreationExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, [Runtime::InteropServices::Out] bool % isComplete);" />
      <MemberSignature Language="F#" Value="member this.SerializeCreationExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj *  -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeCreationExpression (manager, value, isComplete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="isComplete" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-257">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-257">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-258">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-258">The object to serialize.</span>
          </span>
        </param>
        <param name="isComplete">
          <span data-ttu-id="eb4f8-259">
            <c>value</c> が完全にシリアル化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-259">
              <see langword="true" /> if <c>value</c> was fully serialized; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-260">指定したオブジェクトの作成を表す式を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-260">Returns an expression representing the creation of the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-261">
            <paramref name="value" /> の作成を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-261">An expression representing the creation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-262"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A>の作成を表す式をシリアル化するメソッドを使用することができます、`value`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-262">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression%2A> method can be used to serialize an expression that represents the creation of the `value` parameter.</span></span> <span data-ttu-id="eb4f8-263">記述子のインスタンスの対応になります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-263">It is aware of instance descriptors.</span></span>  
  
 <span data-ttu-id="eb4f8-264">`isComplete`にパラメーターが設定されている`true`式は、完全に構成されたオブジェクトを表す場合、または`false`さらに、オブジェクトのプロパティをシリアル化を行う必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-264">The `isComplete` parameter is set to `true` if the expression represents a fully configured object, or `false` if further serialization must be done on the object’s properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-265">
            <paramref name="manager" /> または <paramref name="value" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-265">
              <paramref name="manager" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="SerializeEvent">
      <MemberSignature Language="C#" Value="protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvent(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.EventDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvent (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, descriptor As EventDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvent(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::EventDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvent : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.EventDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeEvent (manager, statements, value, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="descriptor" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-266">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-266">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="statements">
          <span data-ttu-id="eb4f8-267">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-267">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-268">
            <c>descriptor</c> のバインド先となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-268">The object to which <c>descriptor</c> is bound.</span>
          </span>
        </param>
        <param name="descriptor">
          <span data-ttu-id="eb4f8-269">シリアル化するイベントを指定する <see cref="T:System.ComponentModel.EventDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-269">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-270">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-270">Serializes the given event into the given statement collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-271"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>メソッドは、1 つのイベントをシリアル化するクラスを派生するヘルパー メソッドを呼び出すことができます、指定された<xref:System.CodeDom.CodeStatementCollection>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-271">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method is a helper method that derived classes can call to serialize a single event into the given <xref:System.CodeDom.CodeStatementCollection>.</span></span> <span data-ttu-id="eb4f8-272"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> シリアル化マネージャーをクエリ、 <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> 、特定のイベントの要求、<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>でシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-272"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> queries the serialization manager for a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the given event, and then asks the <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> to serialize it.</span></span>  
  
 <span data-ttu-id="eb4f8-273"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 配置、`statements`と`descriptor`パラメーターを<xref:System.ComponentModel.Design.Serialization.ContextStack>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-273"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> places the `statements` and `descriptor` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 <span data-ttu-id="eb4f8-274"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> 必要があります、<xref:System.ComponentModel.Design.IEventBindingService>コンパイルされないメソッドをイベント バインドを検出します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-274"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> requires an <xref:System.ComponentModel.Design.IEventBindingService> to discover event bindings to methods that are not compiled.</span></span> <span data-ttu-id="eb4f8-275">このサービスが存在しない場合、コンパイルされていないメソッドをイベント バインドは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-275">If this service is not present, event bindings to non-compiled methods will not be written.</span></span> <span data-ttu-id="eb4f8-276">コンパイルされたメソッドをイベント バインドは、イベントがバインドされているオブジェクトを式に変換できる場合にもシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-276">Event bindings to compiled methods will still be serialized if the objects to which the events are bound can be converted into expressions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-277">
            <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="descriptor" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-277">
              <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
          <span data-ttu-id="eb4f8-278">
            <see cref="T:System.ComponentModel.Design.IEventBindingService" /> が使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-278">
              <see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.ComponentModel.Design.IEventBindingService" />
      </Docs>
    </Member>
    <Member MemberName="SerializeEvents">
      <MemberSignature Language="C#" Value="protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, params Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeEvents(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeEvents (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, ParamArray filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeEvents(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, ... cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeEvents : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeEvents (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-279">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-279">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="statements">
          <span data-ttu-id="eb4f8-280">イベントをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-280">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-281">イベントをシリアル化する対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-281">The object on which events will be serialized.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="eb4f8-282">シリアル化するイベントをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-282">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-283">指定されたイベントを指定されたステートメントのコレクションにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-283">Serializes the specified events into the given statement collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-284"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>メソッドは、クラスを派生するヘルパー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-284">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="eb4f8-285">イベント検索、`value`に一致するパラメーター、`filter`パラメーター、し、呼び出し、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>各イベントのメソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-285">It looks at events on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A> method for each event.</span></span>  
  
 <span data-ttu-id="eb4f8-286"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>メソッドの場所、<xref:System.ComponentModel.InheritanceAttribute>の`value`上、<xref:System.ComponentModel.Design.Serialization.ContextStack>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-286">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-287">
            <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-287">
              <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
      </Docs>
    </Member>
    <Member MemberName="SerializeProperties">
      <MemberSignature Language="C#" Value="protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperties(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperties (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperties(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperties : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializeProperties (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-288">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-288">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="statements">
          <span data-ttu-id="eb4f8-289">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-289">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-290">プロパティをシリアル化する対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-290">The object on which the properties will be serialized.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="eb4f8-291">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-291">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-292">指定されたオブジェクトのプロパティを指定されたステートメントのコレクションにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-292">Serializes the properties on the given object into the given statement collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-293"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>メソッドは、クラスを派生するヘルパー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-293">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="eb4f8-294">これは、プロパティを調べ、`value`パラメーターに一致する、`filter`パラメーター、し、呼び出し、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>の各プロパティのメソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-294">It looks at properties on the `value` parameter that match the `filter` parameter, and then it calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method for each property.</span></span>  
  
 <span data-ttu-id="eb4f8-295"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>メソッドの場所、<xref:System.ComponentModel.InheritanceAttribute>の`value`上、<xref:System.ComponentModel.Design.Serialization.ContextStack>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-295">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A> method places the <xref:System.ComponentModel.InheritanceAttribute> for `value` on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-296">
            <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-296">
              <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
      </Docs>
    </Member>
    <Member MemberName="SerializePropertiesToResources">
      <MemberSignature Language="C#" Value="protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializePropertiesToResources(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializePropertiesToResources (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, filter As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializePropertiesToResources(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.SerializePropertiesToResources : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * Attribute[] -&gt; unit" Usage="codeDomSerializerBase.SerializePropertiesToResources (manager, statements, value, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-297">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-297">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="statements">
          <span data-ttu-id="eb4f8-298">使用しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-298">Not used.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-299">プロパティがシリアル化されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-299">The object whose properties will be serialized.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="eb4f8-300">シリアル化するプロパティをフィルター処理する <see cref="T:System.Attribute" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-300">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-301">指定されたオブジェクトのプロパティをインバリアント カルチャのリソース バンドルにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-301">Serializes the properties on the given object into the invariant culture’s resource bundle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-302"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A>メソッドは、クラスを派生するヘルパー メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-302">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> method is a helper method that derived classes can call.</span></span> <span data-ttu-id="eb4f8-303">これは、プロパティを調べ、`value`に一致するパラメーター、`filter`パラメーター、その後は、インバリアント カルチャのリソース バンドルにプロパティをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-303">It looks at properties on the `value` parameter that match the `filter` parameter, and then it serializes the properties into the invariant culture resource bundle.</span></span> <span data-ttu-id="eb4f8-304">リソース サービスが返された場合、<xref:System.Resources.ResXResourceWriter>プロパティの値は、XML リソース (.resx) ファイルのメタデータ セクションに格納されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-304">If the resource service returns a <xref:System.Resources.ResXResourceWriter>, the property values will be stored in the metadata section of the XML resource (.resx) file.</span></span> <span data-ttu-id="eb4f8-305">`statements`パラメーターは使用されません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-305">The `statements` parameter is not used.</span></span>  
  
 <span data-ttu-id="eb4f8-306">プロパティがある必要がありますをリソースとしてシリアル化する、単純な (コンテンツのプロパティではなく) とその値をシリアル化可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-306">To be serialized as a resource, a property must be simple (not a content property) and its value must be serializable.</span></span> <span data-ttu-id="eb4f8-307">このパターンに準拠していないプロパティはスキップされます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-307">Properties that do not conform to this pattern will be skipped.</span></span>  
  
 <span data-ttu-id="eb4f8-308"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> 必要があります、<xref:System.ComponentModel.Design.IResourceService>を取得する、<xref:System.Resources.ResourceWriter>インバリアント カルチャのリソースを記述します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-308"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the invariant culture.</span></span> <span data-ttu-id="eb4f8-309">このサービスが利用できない場合は、リソースは書き込まれません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-309">If this service is not available, no resources will be written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-310">
            <paramref name="manager" />、<paramref name="value" />、または <paramref name="statements" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-310">
              <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.Resources.ResourceWriter" />
        <altmember cref="T:System.Resources.ResXResourceWriter" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
      </Docs>
    </Member>
    <Member MemberName="SerializeProperty">
      <MemberSignature Language="C#" Value="protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeProperty(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatementCollection statements, object value, class System.ComponentModel.PropertyDescriptor propertyToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeProperty (manager As IDesignerSerializationManager, statements As CodeStatementCollection, value As Object, propertyToSerialize As PropertyDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeProperty(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatementCollection ^ statements, System::Object ^ value, System::ComponentModel::PropertyDescriptor ^ propertyToSerialize);" />
      <MemberSignature Language="F#" Value="member this.SerializeProperty : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatementCollection * obj * System.ComponentModel.PropertyDescriptor -&gt; unit" Usage="codeDomSerializerBase.SerializeProperty (manager, statements, value, propertyToSerialize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatementCollection" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="propertyToSerialize" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-311">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-311">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="statements">
          <span data-ttu-id="eb4f8-312">プロパティをシリアル化した結果を格納する <see cref="T:System.CodeDom.CodeStatementCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-312">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-313">プロパティをシリアル化する対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-313">The object on which the property will be serialized.</span>
          </span>
        </param>
        <param name="propertyToSerialize">
          <span data-ttu-id="eb4f8-314">シリアル化するプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-314">The property to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-315">指定したオブジェクトのプロパティをシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-315">Serializes a property on the given object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-316"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>メソッドの取得、<xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>の`propertyToSerialize`パラメーターとそれにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-316">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> method retrieves a <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> for the `propertyToSerialize` parameter and delegates to it.</span></span>  
  
 <span data-ttu-id="eb4f8-317"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> 配置、`statements`と`propertyToSerialize`パラメーターを<xref:System.ComponentModel.Design.Serialization.ContextStack>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-317"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A> places the `statements` and `propertyToSerialize` parameters on the <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-318">
            <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" />、または <paramref name="propertyToSerialize" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-318">
              <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="SerializeResource">
      <MemberSignature Language="C#" Value="protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResource(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResource (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResource(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResource : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResource (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-319">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-319">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="eb4f8-320">
            <c>value</c> をシリアル化した結果を格納するリソース バンドルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-320">The name of the resource bundle into which <c>value</c> will be serialized.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-321">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-321">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-322">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-322">Serializes the given object into a resource bundle using the given resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-323"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>メソッドは、指定した名前でリソース バンドルの値をシリアル化するヘルパー メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-323">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method is a helper method that serializes a value to a resource bundle under the given name.</span></span> <span data-ttu-id="eb4f8-324">リソースが書き込まれるカルチャは、シリアル化マネージャーの検索によって決まります<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>プロパティのコレクションと呼ばれる`ResourceCulture`します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-324">The culture that the resource is written to is determined by searching the serialization manager’s <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> collection for a property called `ResourceCulture`.</span></span> <span data-ttu-id="eb4f8-325">このプロパティが存在する場合は、そのカルチャのリソースが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-325">If this property exists, resources will be written to that culture.</span></span> <span data-ttu-id="eb4f8-326">それ以外の場合、リソースは、インバリアント カルチャに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-326">Otherwise, resources will be written to the invariant culture.</span></span> <span data-ttu-id="eb4f8-327">`value`パラメーターは、シリアル化可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-327">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="eb4f8-328"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> 必要があります、<xref:System.ComponentModel.Design.IResourceService>を取得する、<xref:System.Resources.ResourceWriter>正しいカルチャのリソースを記述します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-328"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="eb4f8-329">このサービスが使用できない場合<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>は代わりに、リソースを表す、コード内のバイナリ オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-329">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="eb4f8-330">
            <para>
              <see langword="ResourceCulture" /> シリアル化マネージャーの経由でアクセスする読み取り/書き込みプロパティは、<see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />コレクション。<see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />メソッドはこのプロパティの値を変更することはありません。 単に書き込むはカルチャを識別するために読み取る。プロパティは、リソースは解析され、読み込まれると、逆シリアル化中に設定されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-330">
              <para>
                <see langword="ResourceCulture" /> is a read-write property that is accessed through the serialization manager’s <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> collection. The <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" /> method never changes the value of this property; it merely reads it to identify the culture to which it will write. The property is set during deserialization as resources are parsed and loaded.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="SerializeResourceInvariant">
      <MemberSignature Language="C#" Value="protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SerializeResourceInvariant(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SerializeResourceInvariant (manager As IDesignerSerializationManager, resourceName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SerializeResourceInvariant(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::String ^ resourceName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeResourceInvariant : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * string * obj -&gt; unit" Usage="codeDomSerializerBase.SerializeResourceInvariant (manager, resourceName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-331">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-331">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="eb4f8-332">
            <c>value</c> をシリアル化した結果を格納するリソース バンドルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-332">The name of the resource bundle into which <c>value</c> will be serialized.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-333">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-333">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-334">指定したオブジェクトを、指定したリソース名のリソース バンドルにシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-334">Serializes the given object into a resource bundle using the given resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-335">リソースは常にインバリアント カルチャに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-335">The resource is always written to the invariant culture.</span></span> <span data-ttu-id="eb4f8-336">`value`パラメーターは、シリアル化可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-336">The `value` parameter must be serializable.</span></span>  
  
 <span data-ttu-id="eb4f8-337"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A>メソッドが必要です、<xref:System.ComponentModel.Design.IResourceService>を取得する、<xref:System.Resources.ResourceWriter>正しいカルチャのリソースを記述します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-337">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant%2A> method requires an <xref:System.ComponentModel.Design.IResourceService> to obtain a <xref:System.Resources.ResourceWriter> to write resources for the correct culture.</span></span> <span data-ttu-id="eb4f8-338">このサービスが使用できない場合<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>は代わりに、リソースを表す、コード内のバイナリ オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-338">If this service is not available, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> will instead build a binary object in code that represents the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.ComponentModel.Design.IResourceService" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-339">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-339">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-340">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-340">The object to serialize.</span>
          </span>
          <span data-ttu-id="eb4f8-341">
            <see langword="null" /> の場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-341">Can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-342">指定したオブジェクトを式にシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-342">Serializes the given object into an expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-343">
            <paramref name="value" /> をシリアル化できる場合は <see cref="T:System.CodeDom.CodeExpression" /> オブジェクト。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-343">A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-344">`value`パラメーターを指定できます`null`、後者プリミティブ式が返されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-344">The `value` parameter can be `null`, in which case a primitive expression will be returned.</span></span>  
  
 <span data-ttu-id="eb4f8-345"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>メソッドが型をシリアル化するために、次の規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-345">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method uses the following rules for serializing types:</span></span>  
  
1.  <span data-ttu-id="eb4f8-346">まず、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッドをオブジェクトの式が既に作成されているを参照してください。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-346">It first calls the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method to see if an expression has already been created for the object.</span></span> <span data-ttu-id="eb4f8-347">そうである場合は、既存の式を返します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-347">If so, it returns the existing expression.</span></span>  
  
2.  <span data-ttu-id="eb4f8-348">オブジェクトのシリアライザーを検索し、シリアル化するように指示します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-348">It then locates the object’s serializer, and asks it to serialize.</span></span>  
  
3.  <span data-ttu-id="eb4f8-349">かどうか、オブジェクトのシリアライザーの戻り値は、<xref:System.CodeDom.CodeExpression>式が返されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-349">If the return value of the object’s serializer is a <xref:System.CodeDom.CodeExpression>, the expression is returned.</span></span>  
  
4.  <span data-ttu-id="eb4f8-350">いずれかの最後の呼び出しが<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>にシリアライザーが式を追加するかどうかを参照してください。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-350">It makes one last call to <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> to see if the serializer added an expression.</span></span>  
  
5.  <span data-ttu-id="eb4f8-351">最後に、`null`します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-351">Finally, it returns `null`.</span></span>  
  
 <span data-ttu-id="eb4f8-352">式を作成できませんでしたし、適切なシリアライザーが見つかりませんだった場合、は、シリアル化マネージャーを使って、エラーが報告されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-352">If no expression could be created and no suitable serializer could be found, an error will be reported through the serialization manager.</span></span> <span data-ttu-id="eb4f8-353">シリアライザーが見つかりましたが、式を生成するために失敗した場合、エラーは報告されません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-353">No error will be reported if a serializer was found but it failed to produce an expression.</span></span> <span data-ttu-id="eb4f8-354">この場合、シリアライザーか、既にエラーが報告されたこと、またはオブジェクトのシリアル化したものでありませんでしたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-354">In this case, it is assumed that the serializer either already reported the error or it did not attempt to serialize the object.</span></span>  
  
 <span data-ttu-id="eb4f8-355">ステートメントまたはステートメントのコレクションに、シリアライザーが返された場合は、これらのステートメントは破棄されません。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-355">If the serializer returned a statement or a collection of statements, those statements will not be discarded.</span></span> <span data-ttu-id="eb4f8-356"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>メソッドは、まず、<xref:System.ComponentModel.Design.Serialization.StatementContext>コンテキスト スタックが作成され、ステートメントのコンテキスト オブジェクトのステートメントを追加<xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-356">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will first look for a <xref:System.ComponentModel.Design.Serialization.StatementContext> on the context stack and add statements to the statement context object's <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> property.</span></span> <span data-ttu-id="eb4f8-357">ステートメントのコンテキストがない場合、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>のコンテキストでメソッドになりますが、<xref:System.CodeDom.CodeStatementCollection>がステートメントを追加します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-357">If there is no statement context, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method will look in the context for a <xref:System.CodeDom.CodeStatementCollection> and add the statements there.</span></span> <span data-ttu-id="eb4f8-358">場所はありませんが見つからないのステートメントを追加、エラーが生成されます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-358">If no place can be found to add the statements, an error will be generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4f8-359">呼び出す必要はありません、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>メソッド内で<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>独自のオブジェクトをシリアル化するとします。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-359">You should not call the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> method within <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> when serializing your own object.</span></span> <span data-ttu-id="eb4f8-360">代わりに、呼び出す必要がある<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-360">Instead, you should call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</span></span> <span data-ttu-id="eb4f8-361">返された場合`null`、独自の式と呼び出し作成<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>です。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-361">If it returns `null`, create your own expression and call <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</span></span> <span data-ttu-id="eb4f8-362">シリアル化の残りの部分に進みます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-362">Then proceed with the rest of your serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-363">
            <paramref name="manager" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-363">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.StatementContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SerializeToResourceExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb4f8-364">オブジェクトを式にシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-364">Serializes an object into an expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-365">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-365">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-366">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-366">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-367">指定したオブジェクトを式にシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-367">Serializes the given object into an expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-368">シリアル化された式として <paramref name="value" /> を格納している <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-368">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-369"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>メソッドは、リソース式の値をシリアル化するヘルパー メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-369">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method is a helper method that serializes a value to a resource expression.</span></span> <span data-ttu-id="eb4f8-370">これとは対照的に、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>メソッドで、リソースのバイナリ オブジェクトに値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-370">This is in contrast to the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> method, which writes a value to a resource binary object.</span></span> <span data-ttu-id="eb4f8-371"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> もう一歩進めてし、リソースを復旧に使用できる式を返します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-371"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> goes one step further and returns an expression that can be used to recover the resource.</span></span> <span data-ttu-id="eb4f8-372">たとえば、戻り値は"rm 可能性があります。GetValue("SomeBitmap");"します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-372">For example, the return value might be "rm.GetValue("SomeBitmap");".</span></span> <span data-ttu-id="eb4f8-373">リソースの名前はから計算されます、<xref:System.ComponentModel.Design.Serialization.ExpressionContext>コンテキスト スタックのいずれか見つかった場合は、します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-373">The name of the resource is calculated from the <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, if one can be found on the context stack.</span></span>  
  
 <span data-ttu-id="eb4f8-374"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>メソッドになりますが、<xref:System.ComponentModel.Design.Serialization.ContextStack>次のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-374">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will look on the <xref:System.ComponentModel.Design.Serialization.ContextStack> for the following objects:</span></span>  
  
-   <span data-ttu-id="eb4f8-375"><xref:System.CodeDom.CodeStatementCollection>-宣言する必要がある場合は、リソース マネージャーを追加するステートメントのコレクション。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-375"><xref:System.CodeDom.CodeStatementCollection>—a collection of statements to add a resource manager to, if one needs to be declared.</span></span>  
  
-   <span data-ttu-id="eb4f8-376"><xref:System.ComponentModel.Design.Serialization.RootContext>-リソース マネージャーを作成するために必要なルートの式。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-376"><xref:System.ComponentModel.Design.Serialization.RootContext>—the root expression, which is needed to create a resource manager.</span></span>  
  
-   <span data-ttu-id="eb4f8-377"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>-リソースの名前を作成してするリソース マネージャーの呼び出しの種類を決定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-377"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>—used to fabricate a name for the resource and to decide what type of resource manager call to make.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-378">
            <paramref name="manager" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-378">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SerializeToResourceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToResourceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToResourceExpression (manager As IDesignerSerializationManager, value As Object, ensureInvariant As Boolean) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToResourceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, bool ensureInvariant);" />
      <MemberSignature Language="F#" Value="member this.SerializeToResourceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * bool -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializerBase.SerializeToResourceExpression (manager, value, ensureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="ensureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-379">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-379">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-380">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-380">The object to serialize.</span>
          </span>
        </param>
        <param name="ensureInvariant">
          <span data-ttu-id="eb4f8-381">インバリアント カルチャにシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-381">
              <see langword="true" /> to serialize into the invariant culture; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-382">指定したオブジェクトをインバリアント カルチャに適した式にシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-382">Serializes the given object into an expression appropriate for the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb4f8-383">シリアル化された式として <paramref name="value" /> を格納している <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-383">A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-384">場合、`ensureInvariant`パラメーターが`true`、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>メソッドは、また、場合、インバリアント カルチャのリソース ファイルにリソースの値を書き込みは、現在`ResourceCulture`インバリアント カルチャではありません.</span><span class="sxs-lookup"><span data-stu-id="eb4f8-384">If the `ensureInvariant` parameter is `true`, the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> method will also write the resource value into the invariant culture’s resource file if the current `ResourceCulture` is not the invariant culture..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-385">
            <paramref name="manager" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-385">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExpression">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb4f8-386">オブジェクトを式に関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-386">Associates an object with an expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-387">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-387">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-388">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-388">The object to serialize.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="eb4f8-389">
            <c>value</c> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-389">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-390">オブジェクトを式に関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-390">Associates an object with an expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-391"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>メソッドは、ヘルパー メソッドを関連付ける、<xref:System.CodeDom.CodeExpression>オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-391">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="eb4f8-392">この方法で式に関連付けられているオブジェクトはからアクセスできる、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-392">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="eb4f8-393"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> 任意のシリアライザーによってアクセスできるようにコンテキスト スタックに追加されたオブジェクトとしてその式のテーブルを格納<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-393"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb4f8-394">
            <paramref name="manager" />、<paramref name="value" />、または <paramref name="expression" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-394">
              <paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, class System.CodeDom.CodeExpression expression, bool isPreset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetExpression (manager As IDesignerSerializationManager, value As Object, expression As CodeExpression, isPreset As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value, System::CodeDom::CodeExpression ^ expression, bool isPreset);" />
      <MemberSignature Language="F#" Value="member this.SetExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.CodeDom.CodeExpression * bool -&gt; unit" Usage="codeDomSerializerBase.SetExpression (manager, value, expression, isPreset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isPreset" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="eb4f8-395">シリアル化に使用する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-395">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="eb4f8-396">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-396">The object to serialize.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="eb4f8-397">
            <c>value</c> を関連付ける <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-397">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <c>value</c>.</span>
          </span>
        </param>
        <param name="isPreset">
          <span data-ttu-id="eb4f8-398">あらかじめ設定された式を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-398">
              <see langword="true" /> to specify a preset expression; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb4f8-399">必要に応じて事前設定された式を指定し、オブジェクトを式に関連付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb4f8-399">Associates an object with an expression, optionally specifying a preset expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4f8-400"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>メソッドは、ヘルパー メソッドを関連付ける、<xref:System.CodeDom.CodeExpression>オブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-400">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> method is a helper method that associates a <xref:System.CodeDom.CodeExpression> with an object.</span></span> <span data-ttu-id="eb4f8-401">この方法で式に関連付けられているオブジェクトはからアクセスできる、<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-401">Objects that have been associated with expressions in this way are accessible through the <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span> <span data-ttu-id="eb4f8-402"><xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>任意のシリアライザーによってアクセスできるようにコンテキスト スタックに追加されたオブジェクトとしてその式のテーブルを格納<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="eb4f8-402">The <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> stores its expression table as an appended object on the context stack so it is accessible by any serializer’s <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>