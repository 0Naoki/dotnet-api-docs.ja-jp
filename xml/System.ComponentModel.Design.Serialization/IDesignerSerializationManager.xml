<Type Name="IDesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e155ce2e90f730b64dded3e22d19f11e73ab215" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationManager implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationManager : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1d88e-101">デザイン時のシリアル化を管理するためのインターフェイスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d88e-101">Provides an interface that can manage design-time serialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-102">デザイナーが利用できる<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>サービスにアクセスするデザイン時シリアル化処理の管理に便利です。</span><span class="sxs-lookup"><span data-stu-id="1d88e-102">A designer can utilize <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="1d88e-103">たとえば、デザイナーのシリアル化マネージャーを実装するクラスでは、オブジェクトを作成、型の検索、オブジェクトの識別、および特定の種類のシリアル化をカスタマイズするこのインターフェイスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-103">For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d88e-104">次の例は、使用する方法を示しています。<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>およびコード DOM ステートメントを逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-104">The following example illustrates how to use <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to serialize and deserialize Code DOM statements.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="1d88e-105">追加するシリアル化プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-105">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-106">指定したシリアル化プロバイダーをシリアル化マネージャーに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-106">Adds the specified serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-107">このメソッドは、カスタムのシリアル化プロバイダーをシリアル化マネージャーに追加します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-107">This method adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="1d88e-108">シリアル化プロバイダーは、特定の型のオブジェクトに対応するカスタム シリアライザーを提供します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-108">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="1d88e-109">シリアル化中には、特定のデータ型のシリアライザーについて各カスタム シリアル化プロバイダーが照会され、提供できるシリアライザーがある場合は、プロバイダーはそのシリアライザーを返します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-109">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="1d88e-110">シリアル化マネージャーは、特定の型の既定のシリアライザーを使用する前に、このメソッドによって提供されるカスタム シリアライザーを使用します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-110">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d88e-111">シリアライザー間の通信に役立つスタック ベースのユーザー定義ストレージ エリアを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-111">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d88e-112">データを格納する <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-113">この記憶域は、シリアライザーをオブジェクト コンテキスト情報の通信を提供します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-113">This storage area provides communication of object context information to serializers.</span></span> <span data-ttu-id="1d88e-114">シリアル化されるオブジェクトに関するコンテキスト情報を格納し、これを使用してアクセス<xref:System.ComponentModel.Design.Serialization.ContextStack>です。</span><span class="sxs-lookup"><span data-stu-id="1d88e-114">Context information about objects that are being serialized can be stored and accessed through this <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="1d88e-115">作成するデータ型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-115">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="1d88e-116">型のコンストラクターに渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-116">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1d88e-117">オブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-117">The name of the object.</span>
          </span>
          <span data-ttu-id="1d88e-118">この名前は、<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> を使用して後からオブジェクトにアクセスするときに使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-118">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="1d88e-119">
            <see langword="null" /> が渡された場合でもオブジェクトは作成されますが、そのオブジェクトには名前を指定する方法ではアクセスできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-119">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="1d88e-120">
            <see langword="true" /> の場合、オブジェクトはデザイン コンテナーに追加されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-120">If <see langword="true" />, this object is added to the design container.</span>
          </span>
          <span data-ttu-id="1d88e-121">この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-121">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-122">指定した型のインスタンスを作成し、作成したインスタンスを名前付きインスタンスのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-122">Creates an instance of the specified type and adds it to a collection of named instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d88e-123">新しく作成したオブジェクト インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-123">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-124">実装するオブジェクト<xref:System.ComponentModel.IComponent>場合、デザイン時コンテナーに追加されます、`addToContainer`パラメーターは`true`します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-124">Objects that implement <xref:System.ComponentModel.IComponent> are added to the design-time container if the `addToContainer` parameter is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1d88e-125">取得するオブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-125">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-126">指定した名前で作成されたオブジェクトのインスタンスを取得します。そのようなオブジェクトが存在しない場合は <see langword="null" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-126">Gets an instance of a created object of the specified name, or <see langword="null" /> if that object does not exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d88e-127">指定した名前を持つオブジェクトのインスタンス。その名前のオブジェクトが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-127">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-128">前回の呼び出しから取得するオブジェクトの名前が設定されている必要があります<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1d88e-128">The name of the object to retrieve must have been set through a prior call to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1d88e-129">名前を取得する対象のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-129">The object to retrieve the name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-130">指定したオブジェクトの名前を取得します。オブジェクトに名前がない場合は <see langword="null" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-130">Gets the name of the specified object, or <see langword="null" /> if the object has no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d88e-131">オブジェクトの名前。オブジェクトに名前がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-131">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="1d88e-132">シリアライザーを取得する対象のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-132">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="1d88e-133">取得するシリアライザーの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-133">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-134">指定したオブジェクト型に対応する、要求された型のシリアライザーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-134">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d88e-135">要求されたシリアライザーのインスタンス。該当するシリアライザーが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-135">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="1d88e-136">読み込まれる型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-136">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-137">指定した名前の型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-137">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d88e-138">型のインスタンス。型を読み込めない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-138">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d88e-139">有効なシリアライザーを使用してシリアル化できるカスタム プロパティを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-139">Indicates custom properties that can be serializable with available serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d88e-140">シリアル化されるプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-141">このプロパティは、空のコレクションを格納できます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-141">This property can contain an empty collection.</span></span> <span data-ttu-id="1d88e-142">シリアライザーでは、このようなプロパティが存在する必要があります考えないでください。</span><span class="sxs-lookup"><span data-stu-id="1d88e-142">A serializer should never assume that such properties exist.</span></span> <span data-ttu-id="1d88e-143">派生クラスまたはの実装の<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>ここで公開されているプロパティのセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-143">A derived class or implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> defines the set of properties that are exposed here.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1d88e-144">このプロパティは、ユーザー コードで設定できます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d88e-144">This property can be populated by user code.</span>
            </span>
            <span data-ttu-id="1d88e-145">呼び出すための十分な場合があります<see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />の<see cref="T:System.ComponentModel.TypeDescriptor" />このコレクションを設定します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d88e-145">It may be sufficient to call <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> of <see cref="T:System.ComponentModel.TypeDescriptor" /> to populate this collection.</span>
            </span>
            <span data-ttu-id="1d88e-146">シリアル化マネージャーは、カスタム プロパティが存在しない場合、空のコレクションを返す必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1d88e-146">The serialization manager must return an empty collection if no custom properties exist.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="1d88e-147">削除するプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-147">The provider to remove.</span>
          </span>
          <span data-ttu-id="1d88e-148">このオブジェクトは、<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /> を使用して追加されていることが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-148">This object must have been added using <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-149">カスタム シリアル化プロバイダーをシリアル化マネージャーから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-149">Removes a custom serialization provider from the serialization manager.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportError(System::Object ^ errorInformation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="1d88e-150">報告するエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-150">The error to report.</span>
          </span>
          <span data-ttu-id="1d88e-151">この情報オブジェクトには、任意のオブジェクト型を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-151">This information object can be of any object type.</span>
          </span>
          <span data-ttu-id="1d88e-152">オブジェクトが例外である場合は、例外のメッセージが抽出され、ユーザーに報告されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-152">If it is an exception, the message of the exception is extracted and reported to the user.</span>
          </span>
          <span data-ttu-id="1d88e-153">それ以外の型である場合は、<see cref="M:System.Object.ToString" /> が呼び出され、ユーザーに対して情報が表示されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-153">If it is any other type, <see cref="M:System.Object.ToString" /> is called to display the information to the user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-154">シリアル化時のエラーを報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-154">Reports an error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-155">シリアル化マネージャーが複数のエラーのログ記録の実装をサポートしているか<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>、発生したすべてのエラーを一度に表示することができます、今後のレポートのエラー情報オブジェクトを格納できます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-155">If the serialization manager supports logging multiple errors in its implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</span></span> <span data-ttu-id="1d88e-156">このメソッドは、複数のエラーを保存する場合、シリアル化は、このメソッドを呼び出した後に続行できます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-156">If this method stores multiple errors, serialization can continue after a call to this method.</span></span> <span data-ttu-id="1d88e-157">このメソッドが複数のエラーのログ記録をサポートしていない場合、このメソッドは、シリアル化を中止例外をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d88e-157">If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d88e-158">シリアル化マネージャーでは、シリアル化中に発生したエラーに対して例外がスローしない必要があります。</span><span class="sxs-lookup"><span data-stu-id="1d88e-158">The serialization manager should never throw an exception for errors encountered during serialization.</span></span> <span data-ttu-id="1d88e-159">逆シリアル化中に例外をスローする必要がありますのみです。</span><span class="sxs-lookup"><span data-stu-id="1d88e-159">It should only throw an exception during deserialization.</span></span> <span data-ttu-id="1d88e-160">それ以外の場合、ユーザーがドキュメントを保存するため、混乱が失敗することはありません。</span><span class="sxs-lookup"><span data-stu-id="1d88e-160">Otherwise, users become confused because saving the document should never fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Event ResolveName As ResolveNameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::Serialization::ResolveNameEventHandler ^ ResolveName;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d88e-161">
            <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> が、指定した名前をシリアル化マネージャーの名前テーブルで見つけることができない場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-161">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-162">このイベントは、必要に応じていつでもオブジェクトを作成できる方法をシリアライザーに提供するため、シリアライザーは依存関係に基づいてオブジェクトの作成順序を決定する必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="1d88e-162">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="1d88e-163">このイベントのデリゲートは、シリアル化または逆シリアル化が完了した直後に消去されます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-163">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event SerializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SerializationComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d88e-164">シリアル化が完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-164">Occurs when serialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-165">このイベントは、シリアル化または逆シリアル化が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1d88e-165">This event is raised when serialization or deserialization is complete.</span></span>  
  
 <span data-ttu-id="1d88e-166">一般に、シリアル化コードはシリアル化データの生成だけを行い、状態に関連するチェックや処理は要求しません。</span><span class="sxs-lookup"><span data-stu-id="1d88e-166">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="1d88e-167">シリアル化中に状態データを保持する必要がある場合は、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> イベントを待機できるシリアライザーがデータの設定とアクセスを行い、シリアル化後にデータを消去できます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-167">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="1d88e-168">適切な状態の復元後、シリアライザーをシリアル化で再利用できるし、残された状態データまたは開いたストリーム正しいできないために、シリアル化が重要になることができます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-168">Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>  
  
 <span data-ttu-id="1d88e-169">たとえば、シリアライザーは、リソース ファイルなどの別のファイルに書き込む必要がある場合は、完了すると、ファイルを閉じるシリアライザーをデザインする効率的なはいないです。</span><span class="sxs-lookup"><span data-stu-id="1d88e-169">For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</span></span> <span data-ttu-id="1d88e-170">通常、オブジェクト グラフをシリアル化するには、複数のシリアライザーが必要です。</span><span class="sxs-lookup"><span data-stu-id="1d88e-170">Serializing an object graph usually requires several serializers.</span></span> <span data-ttu-id="1d88e-171">リソース ファイルを開き、何度もを終了するとします。</span><span class="sxs-lookup"><span data-stu-id="1d88e-171">The resource file would be opened and closed many times.</span></span> <span data-ttu-id="1d88e-172">代わりに、リソース ファイル閉じることができます、シリアル化の最後を受信待ちするオブジェクトによって、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>イベント。</span><span class="sxs-lookup"><span data-stu-id="1d88e-172">Instead, the resource file can be closed at the end of serialization by an object that listened to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public void SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetName (instance As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetName(System::Object ^ instance, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="1d88e-173">名前を付ける対象のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-173">The object instance to name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1d88e-174">インスタンスに付ける名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-174">The name to give the instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d88e-175">指定した既存のオブジェクトの名前を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d88e-175">Sets the name of the specified existing object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d88e-176">このメソッドは、作成し、オブジェクトのインスタンスを名前を使用せずに必要な場合に役立ちます<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1d88e-176">This method is useful when it is necessary to create and then name an instance of an object without using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span> <span data-ttu-id="1d88e-177">既存のオブジェクトの名前を変更しようとした場合や、既に使用されている名前を新しいオブジェクトに付けようとした場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1d88e-177">An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>