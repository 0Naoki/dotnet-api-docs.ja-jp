<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b43ece75e54589dff9cf246ce425cfe2775514ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30367596" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8010e-101">シリアライザー間でコンテキストの状態を渡す方法を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8010e-101">Provides a means of passing context state among serializers.</span>
      </span>
      <span data-ttu-id="8010e-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8010e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8010e-103"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>コンテキスト スタックに配置され、シリアル化中に最も関連する式が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8010e-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="8010e-104">次の c# コードでは、割り当てを示します。</span><span class="sxs-lookup"><span data-stu-id="8010e-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="8010e-105">シリアル化中のいくつかのシリアライザーには、この 1 つのステートメントの作成を担当します。</span><span class="sxs-lookup"><span data-stu-id="8010e-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="8010e-106">「こんにちは」を作成するためのこれらのシリアライザーの一方はします。</span><span class="sxs-lookup"><span data-stu-id="8010e-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="8010e-107">そのシリアライザー可能性があります式を作成するコンテキストを知る必要がある場合もあります。</span><span class="sxs-lookup"><span data-stu-id="8010e-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="8010e-108">前の例では、このコンテキストは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="8010e-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="8010e-109">次の c# コードは、コンテキストの知識が必要である状況を示しています。</span><span class="sxs-lookup"><span data-stu-id="8010e-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="8010e-110">この場合、リソースの式を作成するシリアライザーは、対象オブジェクトの名前を通知する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8010e-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="8010e-111"><xref:System.ComponentModel.Design.Serialization.ExpressionContext>このクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8010e-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="8010e-112">各シリアライザーでは、式を作成し、全体としてステートメントの一部を処理するシリアライザーを呼び出す、シリアライザーは式のコンテキストをコンテキスト スタックにプッシュします。</span><span class="sxs-lookup"><span data-stu-id="8010e-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="8010e-113">各式のコンテキストでは、スタック上に次の式のコンテキストを検出する親プロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="8010e-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="8010e-114">これは、便利な走査機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="8010e-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8010e-115">
            <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="8010e-116">指定したコード式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-116">The given code expression.</span>
          </span>
        </param>
        <param name="expressionType">
          <span data-ttu-id="8010e-117">指定したコード式の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-117">The given code expression type.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="8010e-118">指定したコード式の所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-118">The given code expression owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8010e-119">指定した式と所有者を使用して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8010e-120">
            <paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-120">
              <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="8010e-121">指定したコード式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-121">The given code expression.</span>
          </span>
        </param>
        <param name="expressionType">
          <span data-ttu-id="8010e-122">指定したコード式の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-122">The given code expression type.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="8010e-123">指定したコード式の所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-123">The given code expression owner.</span>
          </span>
        </param>
        <param name="presetValue">
          <span data-ttu-id="8010e-124">指定したコード式の事前定義された値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-124">The given code expression preset value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8010e-125">現在の値を指定して、<see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8010e-126">
            <paramref name="expression" />、<paramref name="expressionType" />、または <paramref name="owner" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-126">
              <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8010e-127">このコンテキストが表す式を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-127">Gets the expression this context represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8010e-128">このコンテキストが表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-128">The expression this context represents.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8010e-129">式の <see cref="T:System.Type" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-129">Gets the <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8010e-130">式の <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-130">The <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8010e-131">使用することができます<xref:System.ComponentModel.Design.Serialization.ExpressionContext>を式に割り当てるときに、キャストが必要なかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8010e-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8010e-132">この式を所有するオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-132">Gets the object owning this expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8010e-133">この式を所有するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-133">The object owning this expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8010e-134">式がへのプロパティ参照である場合、<xref:System.Windows.Forms.Control.Text%2A>のインスタンスのプロパティ<xref:System.Windows.Forms.Button>と呼ばれる`button1`、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A>返します`button1`です。</span><span class="sxs-lookup"><span data-stu-id="8010e-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8010e-135">式の事前定義された値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-135">Gets the preset value of an expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8010e-136">式の事前定義された値。割り当てられていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8010e-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8010e-137">1 つ存在する必要があります、式の事前設定された値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8010e-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="8010e-138">たとえば、式が参照するプロパティの参照を式で、<xref:System.Windows.Forms.Control.Controls%2A>のプロパティ、 <xref:System.Windows.Forms.Button>、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A>プロパティにはインスタンスが含まれています、<xref:System.Windows.Forms.Control.Controls%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8010e-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="8010e-139">これは、プロパティは読み取り専用と値を格納するオブジェクトによって事前に設定されたためにです。</span><span class="sxs-lookup"><span data-stu-id="8010e-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="8010e-140">一方などのプロパティ<xref:System.Windows.Forms.Control.Text%2A>または<xref:System.Windows.Forms.Control.Visible%2A>事前設定された値が含まれないため、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A>プロパティから返される`null`です。</span><span class="sxs-lookup"><span data-stu-id="8010e-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="8010e-141">次の c# コードでは、シリアライザーがシリアル化を使用してこの情報をどのように使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="8010e-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="8010e-142">シリアライザー、<xref:System.Windows.Forms.Padding>構造体は、最初または 2 番目のフォームを生成する場合に通知する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8010e-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="8010e-143">既定では、最初の形式が生成されます。</span><span class="sxs-lookup"><span data-stu-id="8010e-143">The first form is generated by default.</span></span> <span data-ttu-id="8010e-144">ある場合にのみ、2 番目の形式が生成、<xref:System.ComponentModel.Design.Serialization.ExpressionContext>コンテキスト スタックを含む、<xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A>の値と等しい、<xref:System.Windows.Forms.Padding>現在シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="8010e-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>