<Type Name="INameCreationService" FullName="System.ComponentModel.Design.Serialization.INameCreationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3f89aa3dd1694e1a3b5a2c741089250dbba7f6f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37698196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameCreationService" />
  <TypeSignature Language="F#" Value="type INameCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a379a-101">オブジェクトの一意の名前を生成できるサービスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a379a-101">Provides a service that can generate unique names for objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a379a-102">A<xref:System.ComponentModel.Design.Serialization.DesignerLoader>デザイナーが新しいオブジェクトの一意の名前を作成するための手段を提供するには、このサービスを実装することができます。</span><span class="sxs-lookup"><span data-stu-id="a379a-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this service to provide a way for a designer to create new, unique names for objects.</span></span> <span data-ttu-id="a379a-103">このサービスが利用できない場合、デザイナーには、既定の実装が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a379a-103">If this service is not available, the designer uses a default implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a379a-104">次のコード例は、例を示します<xref:System.ComponentModel.Design.Serialization.INameCreationService>実装します。</span><span class="sxs-lookup"><span data-stu-id="a379a-104">The following example code provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService> implementation.</span></span> <span data-ttu-id="a379a-105">サービスは、指定されたコンテナーの名前に一致しない型に基づく一意の名前を作成できます。</span><span class="sxs-lookup"><span data-stu-id="a379a-105">The service can create a unique name based on a type that does not match any names in the specified container.</span></span> <span data-ttu-id="a379a-106">指定した名前の文字列を検証することもできます。</span><span class="sxs-lookup"><span data-stu-id="a379a-106">It can also validate a specified name string.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[INameCreationServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#1)]
 [!code-vb[INameCreationServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateName">
      <MemberSignature Language="C#" Value="public string CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateName (container As IContainer, dataType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="abstract member CreateName : System.ComponentModel.IContainer * Type -&gt; string" Usage="iNameCreationService.CreateName (container, dataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="a379a-107">新しいオブジェクトが追加される先のコンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-107">The container where the new object is added.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="a379a-108">名前を受け取るオブジェクトのデータ型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-108">The data type of the object that receives the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a379a-109">指定したコンテナー内でどのコンポーネントとも重複しない新しい名前を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-109">Creates a new name that is unique to all components in the specified container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a379a-110">データ型の一意の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-110">A unique name for the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a379a-111">このメソッドは、指定されたコンテナー内で一意である新しいオブジェクトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="a379a-111">This method returns a name for the new object that is unique within the specified container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a379a-112">次のコード例は、例を示します<xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType>メソッドの実装。</span><span class="sxs-lookup"><span data-stu-id="a379a-112">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.CreateName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="a379a-113">メソッドは、指定されたコンテナー内のコンポーネントの名前に一意の指定した型の名前に基づく名前を作成できます。</span><span class="sxs-lookup"><span data-stu-id="a379a-113">The method can create a name based on the name of a specified type that is unique to the names of the components within the specified container.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[INameCreationServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#2)]
 [!code-vb[INameCreationServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a379a-114">
            <para>多くの場合、この種類のサービスは、名前は一意の識別子を使用する番号を持つ多くの場合、追加、データ型の名前から一意のオブジェクト名を作成する実装します。たとえば、<see langword="ListBox1" />の<see langword="ListBox" />オブジェクト。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-114">
              <para>This type of service is often implemented to create a unique object name from the name of the data type, often appended with a number that allows the name to be a unique identifier. For example, <see langword="ListBox1" /> for a <see langword="ListBox" /> object.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsValidName">
      <MemberSignature Language="C#" Value="public bool IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsValidName : string -&gt; bool" Usage="iNameCreationService.IsValidName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a379a-115">検証対象の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-115">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a379a-116">指定した名前が有効かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-116">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a379a-117">名前が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-117">
              <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a379a-118">実装、<xref:System.ComponentModel.Design.Serialization.INameCreationService>有効な名前のパラメーターを定義するルールがあります。</span><span class="sxs-lookup"><span data-stu-id="a379a-118">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="a379a-119">名前を検証し、それらのルールを適用するには、このメソッドを実装することができます。</span><span class="sxs-lookup"><span data-stu-id="a379a-119">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a379a-120">次のコード例は、例を示します<xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType>メソッドの実装。</span><span class="sxs-lookup"><span data-stu-id="a379a-120">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation.</span></span> <span data-ttu-id="a379a-121">指定した文字列が有効な名前かどうかを指定した文字列の各文字を検査する文字列の検証スキームを使用します。</span><span class="sxs-lookup"><span data-stu-id="a379a-121">The method uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="a379a-122">メソッドを返します`true`文字列が、有効な場合または`false`それ以外の場合。</span><span class="sxs-lookup"><span data-stu-id="a379a-122">The method returns `true` if the string is valid, or `false` otherwise.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[INameCreationServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#3)]
 [!code-vb[INameCreationServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="public void ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ValidateName : string -&gt; unit" Usage="iNameCreationService.ValidateName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a379a-123">検証対象の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-123">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a379a-124">指定した名前が有効かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a379a-124">Gets a value indicating whether the specified name is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a379a-125">実装、<xref:System.ComponentModel.Design.Serialization.INameCreationService>有効な名前のパラメーターを定義するルールがあります。</span><span class="sxs-lookup"><span data-stu-id="a379a-125">An implementation of the <xref:System.ComponentModel.Design.Serialization.INameCreationService> can have rules that define the parameters for valid names.</span></span> <span data-ttu-id="a379a-126">名前を検証し、それらのルールを適用するには、このメソッドを実装することができます。</span><span class="sxs-lookup"><span data-stu-id="a379a-126">This method can be implemented to validate a name and enforce those rules.</span></span>  
  
 <span data-ttu-id="a379a-127">このメソッドは<xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>名前が有効でない場合、このメソッドが例外をスローする点が異なります。</span><span class="sxs-lookup"><span data-stu-id="a379a-127">This method is similar to <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A>, except that this method throws an exception if the name is invalid.</span></span> <span data-ttu-id="a379a-128">これにより、実装側は、例外メッセージで詳細情報を提供できます。</span><span class="sxs-lookup"><span data-stu-id="a379a-128">This allows implementers to provide detailed information in the exception message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a379a-129">次のコード例は、例を示します<xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType>指定した文字列が有効な名前かどうかを指定した文字列の各文字を検査する文字列の検証スキームを使用するメソッドの実装。</span><span class="sxs-lookup"><span data-stu-id="a379a-129">The following code example provides an example <xref:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName%2A?displayProperty=nameWithType> method implementation that uses a string validation scheme that examines each character of the specified string to determine whether the specified string is a valid name.</span></span> <span data-ttu-id="a379a-130">メソッドは、文字列が有効でない場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="a379a-130">The method throws an exception if the string is not valid.</span></span>  
  
 [!code-cpp[INameCreationServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/INameCreationServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[INameCreationServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/INameCreationServiceExample/CS/class1.cs#4)]
 [!code-vb[INameCreationServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/INameCreationServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>