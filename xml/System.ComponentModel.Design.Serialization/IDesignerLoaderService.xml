<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="600283504e0b53bfdedb7e61f107502e37fe6f9d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1c2e8-101">外部コンポーネントの非同期読み込みをサポートするためにデザイナー ローダーを拡張できるインターフェイスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c2e8-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2e8-102">A<xref:System.ComponentModel.Design.Serialization.DesignerLoader>外部コンポーネントは、デザイナーの読み込みを管理するには、このインターフェイスを実装することができます。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="1c2e8-103">このインターフェイスでは、外部のコンポーネントを呼び出すことによって、デザイン画面の再読み込みを開始することもできます<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="1c2e8-104">デザイナー ローダーは、非同期の読み込みのためのサポートは必要ない場合は、このインターフェイスを実装する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="1c2e8-105">デザイナーのカスタム実装を使用して読み込む、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>さまざまな方法で発生することができます。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="1c2e8-106">読み込みプロセスには、場合によって外部コンポーネントが関わります。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="1c2e8-107">外部の依存関係と読み込みを容易には、デザイナー ローダー サービス インターフェイスは、読み込みが完了し、各部分の読み込みが完了したことを通知を決定するメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="1c2e8-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>通常の読み込みが完了すると残りの読み込みの依存関係の数を追跡するカウンターをテストすることによってによって決まります。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="1c2e8-109">各部分の読み込みが完了したら、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>が呼び出されると、およびサービス デクリメント カウンターです。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="1c2e8-110">依存読み込みプロセスの数を設定するには、呼び出す<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>を呼び出す負荷プロセスごとに 1 回<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>の読み込みが完了するとします。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="1c2e8-111">最終の読み込みが完了すると、サービスの呼び出し<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>ローダー ホストにします。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c2e8-112">外部コンポーネントを、このインターフェイスが管理する読み込みプロセスの一部として登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-112">Registers an external component as part of the load process managed by this interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2e8-113">呼び出す<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>読み込みプロセスに参加している外部オブジェクトごとに 1 回です。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="1c2e8-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> 読み込みプロセスの作業が終わったときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="1c2e8-115">デザイナーの読み込みが正常に終了した場合は <see langword="true" />。エラーが原因で読み込みを完了できなかった場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-115">
              <see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span>
          </span>
        </param>
        <param name="errorCollection">
          <span data-ttu-id="1c2e8-116">読み込み中に発生したエラーがある場合は、そのエラーのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-116">A collection of errors that occurred during the load, if any.</span>
          </span>
          <span data-ttu-id="1c2e8-117">エラーが発生しなかった場合は、空のコレクションまたは <see langword="null" /> を渡します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c2e8-118">依存読み込みプロセスの 1 つが終了したことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-118">Signals that a dependent load has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2e8-119">このメソッドは、依存読み込み操作が完了したことを通知します。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="1c2e8-120">呼び出す<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>呼び出すことによって登録されたすべてのプロセスに対して 1 回<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>、既に完了しています。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="1c2e8-121">かどうか、依存する読み込みが成功した、呼び出し元のセット、`successful`パラメーターを`true`か空のコレクションを渡すとまたは`null`を`errorCollection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="1c2e8-122">依存の読み込みには、エラーが発生すると、呼び出し元の設定、`successful`パラメーターを`false`理由などへのエラーの理由を示す例外のコレクションを渡すと、`errorCollection`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c2e8-123">デザイン ドキュメントを再読み込みします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-123">Reloads the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c2e8-124">再読み込み要求が受け入れられた場合は <see langword="true" />。ローダーが再読み込みを許可しない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c2e8-124">
              <see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c2e8-125">任意のオブジェクトは、設計ドキュメント ローダーの再読み込みを要求するには、このメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="1c2e8-126">デザイナー ローダーを返すことができるかどうか、ローダー読み込みをサポートして、再読み込みに準拠している`true`です。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="1c2e8-127">返しますそれ以外の場合、`false`の再読み込みが実行されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="1c2e8-128">呼び出し元が直ちに行われている再読み込みに依存できません。デザイナー ローダー、他の時間をスケジュールするか、すぐに再読み込みを試みることができます。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="1c2e8-129">呼び出し元は、デザイナーを再読み込みすることはできない場合、ユーザーにメッセージを表示できます。</span><span class="sxs-lookup"><span data-stu-id="1c2e8-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>