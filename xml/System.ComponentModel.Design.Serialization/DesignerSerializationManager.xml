<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4a005e0451f128854a14f9e2a11fbf960f7114e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="86f69-101">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> インターフェイスの実装を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="86f69-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-102"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>インターフェイスがシリアル化を制御するオブジェクトに書式設定に依存しないインターフェイスを使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="86f69-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="86f69-103">基本的に、コンテキストとサービスが実際には、逆シリアル化を実行するシリアライザーを提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="86f69-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> オブジェクトを追跡することによって逆シリアル化プロセスに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="86f69-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="86f69-105">技法に似ています、<xref:System.ComponentModel.Design.IDesignerHost>インターフェイス: デザイナーが実際には、ユーザー インターフェイス (UI) を提供し、<xref:System.ComponentModel.Design.IDesignerHost>を連携して動作する別のデザイナーを使用する接着剤を提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="86f69-106"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> クラスは、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> を実装しています。</span><span class="sxs-lookup"><span data-stu-id="86f69-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="86f69-107">同様に実行時のシリアライザーに類似した逆シリアル化の一般的なフォームを提供するものでは、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>です。</span><span class="sxs-lookup"><span data-stu-id="86f69-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="86f69-108"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>クラスは、次の 3 つの目的を達成します。</span><span class="sxs-lookup"><span data-stu-id="86f69-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="86f69-109">これは単純ですぐに使用できるオブジェクトのさまざまな形式を逆シリアル化するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="86f69-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="86f69-110">汎用的な特定の形式に結び付いていないをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="86f69-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="86f69-111">マークアップの逆シリアル化と同様に CodeDOM シリアル化解除を均等に使用できます。</span><span class="sxs-lookup"><span data-stu-id="86f69-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="86f69-112">拡張性があり、コピー/貼り付けと元に戻す/やり直しのシナリオで使用される別のシリアル化メソッドをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="86f69-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="86f69-113">デザイン時シリアル化では、実行時のオブジェクトのシリアル化との相違点があります。</span><span class="sxs-lookup"><span data-stu-id="86f69-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="86f69-114">シリアル化を実行するオブジェクト、通常とは別ランタイム オブジェクト コンポーネントからデザイン時のロジックを削除できるようにします。</span><span class="sxs-lookup"><span data-stu-id="86f69-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="86f69-115">シリアル化方式は、オブジェクトを完全に初期化された作成は前提としています。 逆シリアル化中にプロパティとメソッドの呼び出しによって変更します。</span><span class="sxs-lookup"><span data-stu-id="86f69-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="86f69-116">(プロパティは、既定値を含む) のオブジェクトに設定する値を持つオブジェクトのプロパティはシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="86f69-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="86f69-117">逆に、逆シリアル化ストリームには、セキュリティ ホールがあります。</span><span class="sxs-lookup"><span data-stu-id="86f69-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="86f69-118">オブジェクトの完全なシリアル化ではなく、シリアル化ストリーム内のコンテンツの品質に強調します。</span><span class="sxs-lookup"><span data-stu-id="86f69-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="86f69-119">つまり、オブジェクトのシリアル化方法が定義されてない場合は、そのオブジェクトがスキップすることではなく例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="86f69-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="86f69-120">シリアル化エンジンは、どのエラーを無視するかを決定するヒューリスティックされている回復可能な提供できます。</span><span class="sxs-lookup"><span data-stu-id="86f69-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="86f69-121">シリアル化ストリームには、逆シリアル化に必要な量を超えるデータがあります。</span><span class="sxs-lookup"><span data-stu-id="86f69-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="86f69-122">たとえば、ソース コードのシリアル化には、オブジェクト グラフを逆シリアル化するために必要なコードと混合ユーザー コードがあります。</span><span class="sxs-lookup"><span data-stu-id="86f69-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="86f69-123">このユーザー コードは、逆シリアル化では無視され、シリアル化時に保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="86f69-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="86f69-124">これらの相違のため、別のシリアル化モデルは、デザイン時シリアル化に適用されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="86f69-125">このモデルでは、シリアル化されるデータ型ごとに個別のシリアライザー オブジェクトを利用します。</span><span class="sxs-lookup"><span data-stu-id="86f69-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="86f69-126">各シリアライザーでは、全体として小さな問題に対するを提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="86f69-127">これらのシリアライザーは、一般的なシリアル化マネージャーを使用してすべて調整されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="86f69-128">シリアル化マネージャーは、これらの異なるシリアライザー間の状態を維持するためです。</span><span class="sxs-lookup"><span data-stu-id="86f69-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="86f69-129">たとえば、次のクラスを考えてみます。</span><span class="sxs-lookup"><span data-stu-id="86f69-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="86f69-130">このクラスのインスタンスは次の 3 つの異なるシリアライザーを利用して: のいずれかの`SampleObject`整数の文字列は、いずれかとします。</span><span class="sxs-lookup"><span data-stu-id="86f69-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="86f69-131">シリアライザーを`SampleObject`ためには、ルートのシリアライザーと呼ばれるは`SampleObject`シリアル化グラフのルートです。</span><span class="sxs-lookup"><span data-stu-id="86f69-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="86f69-132">複雑なオブジェクト グラフを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="86f69-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="86f69-133">たとえば、何が起こる場合`SampleObject`が次のように変更されました。</span><span class="sxs-lookup"><span data-stu-id="86f69-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="86f69-134">これにより、`SampleObject`自体の別のインスタンスである子にします。</span><span class="sxs-lookup"><span data-stu-id="86f69-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="86f69-135">次のコードは、オブジェクト グラフを入力します。</span><span class="sxs-lookup"><span data-stu-id="86f69-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="86f69-136">ときに`root`がシリアル化される使用される 4 つのシリアライザーがあります: 1 つのルート シリアライザー、子の 1 つのシリアライザー `SampleObject`、1 つのシリアライザーを`int`、および 1 つのシリアライザーを`string`です。</span><span class="sxs-lookup"><span data-stu-id="86f69-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="86f69-137">シリアライザーはキャッシュされるため、シリアライザーの各インスタンスを作成する必要はありません、型に基づく`SampleObject`です。</span><span class="sxs-lookup"><span data-stu-id="86f69-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="86f69-138"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>クラスはシリアル化セッションの概念に基づいています。</span><span class="sxs-lookup"><span data-stu-id="86f69-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="86f69-139">セッションは、さまざまなシリアライザーがアクセスできる状態を維持します。</span><span class="sxs-lookup"><span data-stu-id="86f69-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="86f69-140">セッションが破棄されると、この状態は破棄されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="86f69-141">これにより、シリアライザーはほとんどの場合状態とは、シリアライザーをクリーンアップするために役立ちますが破損していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="86f69-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="86f69-142">次の表では、およびセッション間での状態の管理方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="86f69-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="86f69-143">グローバル状態</span><span class="sxs-lookup"><span data-stu-id="86f69-143">Global State</span></span>  
 <span data-ttu-id="86f69-144">この状態は、シリアル化マネージャー オブジェクトが所有するは、現在のシリアル化セッションに依存しません。</span><span class="sxs-lookup"><span data-stu-id="86f69-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="86f69-145">Object</span><span class="sxs-lookup"><span data-stu-id="86f69-145">Object</span></span>|<span data-ttu-id="86f69-146">使用法</span><span class="sxs-lookup"><span data-stu-id="86f69-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="86f69-147">シリアル化プロバイダー</span><span class="sxs-lookup"><span data-stu-id="86f69-147">Serialization providers</span></span>|<span data-ttu-id="86f69-148">オブジェクトは、カスタムのシリアル化プロバイダーとして自分自身を追加できます。</span><span class="sxs-lookup"><span data-stu-id="86f69-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="86f69-149">これらのプロバイダーは、シリアライザーの検索に使用するため、シリアル化セッションよりも長きます。</span><span class="sxs-lookup"><span data-stu-id="86f69-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="86f69-150">セッションが所有する状態</span><span class="sxs-lookup"><span data-stu-id="86f69-150">Session-Owned State</span></span>  
 <span data-ttu-id="86f69-151">この状態は、セッションが所有し、セッションが破棄されるときに破棄されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="86f69-152">その結果、任意のプロパティまたはこの状態を操作するメソッドへのアクセスは例外をスロー、シリアル化マネージャーがアクティブなセッションでない場合。</span><span class="sxs-lookup"><span data-stu-id="86f69-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="86f69-153">Object</span><span class="sxs-lookup"><span data-stu-id="86f69-153">Object</span></span>|<span data-ttu-id="86f69-154">使用法</span><span class="sxs-lookup"><span data-stu-id="86f69-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="86f69-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> イベント</span><span class="sxs-lookup"><span data-stu-id="86f69-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="86f69-156"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>名の他の解決を提供するシリアライザーによってイベントが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="86f69-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="86f69-157">すべてのイベント ハンドラーは、セッションが終了するときにこのイベントからデタッチします。</span><span class="sxs-lookup"><span data-stu-id="86f69-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="86f69-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> イベント</span><span class="sxs-lookup"><span data-stu-id="86f69-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="86f69-159"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>セッションが破棄される直前にイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="86f69-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="86f69-160">次に、すべてのイベント ハンドラーはこのイベントからデタッチします。</span><span class="sxs-lookup"><span data-stu-id="86f69-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="86f69-161">名前テーブル</span><span class="sxs-lookup"><span data-stu-id="86f69-161">Name table</span></span>|<span data-ttu-id="86f69-162">シリアル化マネージャーは、オブジェクトとその名前の間をマップするテーブルを保持します。</span><span class="sxs-lookup"><span data-stu-id="86f69-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="86f69-163">シリアライザーにオブジェクト名を識別しやすくなります。</span><span class="sxs-lookup"><span data-stu-id="86f69-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="86f69-164">セッションが終了するときに、この名前のテーブルがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="86f69-165">シリアライザー キャッシュ</span><span class="sxs-lookup"><span data-stu-id="86f69-165">Serializer cache</span></span>|<span data-ttu-id="86f69-166">シリアル化マネージャーは、シリアライザーを指定するように指示されていますのキャッシュを保持します。</span><span class="sxs-lookup"><span data-stu-id="86f69-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="86f69-167">セッションが終了するときに、このキャッシュがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="86f69-168">パブリック<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>メソッドは、いつでも安全に呼び出すことができますが、セッション内から呼び出された場合にのみ、その値がキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="86f69-169">コンテキスト スタック</span><span class="sxs-lookup"><span data-stu-id="86f69-169">Context stack</span></span>|<span data-ttu-id="86f69-170">シリアル化マネージャーを使ってアクセスできる、コンテキスト スタックと呼ばれるオブジェクトを保持する、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="86f69-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="86f69-171">シリアライザーは、このスタックを使用して、他のシリアライザーに提供される追加の情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="86f69-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="86f69-172">たとえば、プロパティ値をシリアル化するシリアライザーできますスタックにプッシュ プロパティ名シリアル化をシリアル化する値を要求する前にします。</span><span class="sxs-lookup"><span data-stu-id="86f69-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="86f69-173">このスタックは、セッションが終了したときにクリアされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="86f69-174">エラー一覧</span><span class="sxs-lookup"><span data-stu-id="86f69-174">Error list</span></span>|<span data-ttu-id="86f69-175">シリアル化マネージャーは、シリアル化中に発生したエラーの一覧を保持します。</span><span class="sxs-lookup"><span data-stu-id="86f69-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="86f69-176">この一覧からアクセスできる、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>セッションが終了した場合に、プロパティをオフにします。</span><span class="sxs-lookup"><span data-stu-id="86f69-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="86f69-177">アクセス、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>セッション間でのプロパティは例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="86f69-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-178">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86f69-179">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-180">このコンス トラクターを設定、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>と<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>プロパティ`true`です。</span><span class="sxs-lookup"><span data-stu-id="86f69-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f69-181">
            <see cref="T:System.IServiceProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-181">An <see cref="T:System.IServiceProvider" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-182">指定したサービス プロバイダーで <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-183">既定の実装がそれらの要求を転送するシリアライザーでは、シリアル化マネージャーによって満たすことができないサービスを要求している場合、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="86f69-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="86f69-184">このコンス トラクターを設定、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>と<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>プロパティ`true`です。</span><span class="sxs-lookup"><span data-stu-id="86f69-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f69-185">
            <paramref name="provider" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-185">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-186">このシリアル化マネージャーのコンテナーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-186">Gets or sets to the container for this serialization manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-187">シリアル化マネージャーがコンポーネントを追加する <see cref="T:System.ComponentModel.IContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-188">コンテナーが存在する場合は、シリアル化マネージャーによって作成されるすべてのコンポーネントは、コンテナーに追加されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="86f69-189">このプロパティの既定の実装のサービス プロバイダーを検索、<xref:System.ComponentModel.Design.IDesignerHost>デザイナー ホストによって提供されるコンテナーを使用して、1 つ存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="86f69-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="86f69-190">このプロパティを返しますそれ以外の場合、`null`とコンテナーにコンポーネントが追加されなくなります。</span><span class="sxs-lookup"><span data-stu-id="86f69-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-191">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-191">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="86f69-192">作成するインスタンスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-192">The type to create an instance of.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="86f69-193">型のコンストラクターのパラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-193">The parameters of the type’s constructor.</span>
          </span>
          <span data-ttu-id="86f69-194">既定のコンストラクターを呼び出す場合、このパラメーターは <see langword="null" /> でも空のコレクションでもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="86f69-195">オブジェクトに付ける名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-195">A name to give the object.</span>
          </span>
          <span data-ttu-id="86f69-196">
            <see langword="null" /> の場合、オブジェクトに名前は付けられません。ただし、オブジェクトをコンテナーに追加し、そのコンテナーによってオブジェクトに名前が付けられる場合を除きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="86f69-197">オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装しているときに、コンテナーにオブジェクトを追加する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-197">
              <see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-198">型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-198">Creates an instance of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-199">
            <paramref name="type" /> で指定した型の新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-199">A new instance of the type specified by <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-200">型のインスタンスの作成を試みたときに、シリアライザーでこのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="86f69-201">既定の実装が、型の新しいインスタンスを作成するかの値に応じて、既存のインスタンスを返す可能性があります、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>と<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="86f69-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="86f69-202"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>メソッドは、リフレクションを使用してインスタンスを作成し、一般的なを実行<xref:System.IConvertible>一致するコンス トラクターを検索するパラメーターに変換します。</span><span class="sxs-lookup"><span data-stu-id="86f69-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="86f69-203">
            <paramref name="type" /> は、<paramref name="arguments" /> に格納されたパラメーターを取得するコンストラクターを持ちません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-203">
              <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86f69-204">新しいシリアル化セッションを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-204">Creates a new serialization session.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-205">新しいシリアル化セッションを表す <see cref="T:System.IDisposable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-206">シリアル化マネージャー内のほとんどのデータは、一時的なシリアル化セッションの有効期間だけ存在します。</span><span class="sxs-lookup"><span data-stu-id="86f69-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="86f69-207">セッションが破棄されると、シリアル化が完了すると見なされますされ、この一時的な状態がクリアされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="86f69-208">これにより、複数のオブジェクト ツリーをシリアル化に使用するシリアル化マネージャーの 1 つのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="86f69-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="86f69-209">、一部の状態など、サービス プロバイダーをシリアル化マネージャーに追加された任意のカスタムのシリアル化プロバイダー、セッションにわたって存続します。</span><span class="sxs-lookup"><span data-stu-id="86f69-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-210">シリアル化マネージャーは、既にセッション内に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-210">The serialization manager is already within a session.</span>
          </span>
          <span data-ttu-id="86f69-211">
            <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> のこのバージョンは、同時セッションをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-212">シリアル化または逆シリアル化の実行時に発生したエラーのリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-212">Gets the list of errors that occurred during serialization or deserialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-213">シリアル化または逆シリアル化の実行時に発生したエラーのリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-213">The list of errors that occurred during serialization or deserialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-214">シリアル化セッションがアクティブな間にのみ、エラー一覧を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="86f69-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-215">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-215">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="86f69-216">取得する型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-216">The name of the type to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-217">指定された型名に対応する型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-217">Gets the type corresponding to the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-218">指定された型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-218">The specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="86f69-219">シリアライザーの取得対象となるオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-219">The type of object for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="86f69-220">取得するシリアライザーの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-220">The type of serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-221">指定したオブジェクト型のシリアライザーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-221">Gets the serializer for the given object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-222">
            <paramref name="objectType" /> のシリアライザー。見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-223">たいシリアライザーの型を要求することができます。</span><span class="sxs-lookup"><span data-stu-id="86f69-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="86f69-224">このメソッドが戻る`null`指定したオブジェクトの種類の要求された型のシリアライザーがない場合。</span><span class="sxs-lookup"><span data-stu-id="86f69-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f69-225">
            <paramref name="objectType" /> または <paramref name="serializerType" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-225">
              <paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="86f69-226">取得するサービスの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-226">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-227">要求したサービスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-227">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-228">要求したサービス。サービスを解決できない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-229"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A>メソッドは、基になるコンテナーまたはコンス トラクターで設定されたサービス プロバイダーへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="86f69-230">取得する型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-230">The name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-231">要求された型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-231">Gets the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-232">要求された型。型を解決できない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-233"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>のサービス プロバイダーを検索するメソッド、<xref:System.ComponentModel.Design.ITypeResolutionService>と、利用できる場合に型を解決するのには、そのサービスに委任されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="86f69-234">場合、<xref:System.ComponentModel.Design.ITypeResolutionService>が使用できない<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>が呼び出す、<xref:System.Object.GetType%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="86f69-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86f69-235">イベント データを格納している <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-236">
            <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-237">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86f69-238">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="86f69-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86f69-239"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="86f69-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86f69-240">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="86f69-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="86f69-241">オーバーライドする場合<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="86f69-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86f69-242">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-243">
            <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-244">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86f69-245">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="86f69-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86f69-246"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="86f69-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86f69-247">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="86f69-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="86f69-248">オーバーライドする場合<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="86f69-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86f69-249">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-250">
            <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-251">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="86f69-252">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="86f69-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="86f69-253"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="86f69-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="86f69-254">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="86f69-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="86f69-255">オーバーライドする場合<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="86f69-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-256">
            <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドが、コンテナーに指定した名前が存在することをチェックする必要があるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-257">
            <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が指定したコンポーネント名を渡す場合は <see langword="true" />。<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> がコンテナーに指定した名前が存在するかどうかチェックする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-257">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span>
          </span>
          <span data-ttu-id="86f69-258">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-259"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>プロパティの動作を決定する、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="86f69-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="86f69-260">場合`true`、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>指定されたコンポーネント名を渡します。</span><span class="sxs-lookup"><span data-stu-id="86f69-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="86f69-261">場合`false`、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>コンテナー内の指定された名前の存在がチェックされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="86f69-262">名前が、コンテナーに存在しない場合<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>指定された名前を使用します。</span><span class="sxs-lookup"><span data-stu-id="86f69-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="86f69-263">場合は、名前が、コンテナーに存在<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>は、新しい名前を指定し、コンテナーに追加する際、コンポーネントの名前として null 値を渡します。</span><span class="sxs-lookup"><span data-stu-id="86f69-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="86f69-264">この 2 番目のコマンドは、それらのオブジェクトが存在しないと仮定した場合のではなく、常に、オブジェクトを複製するシリアライザーを実装する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="86f69-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="86f69-265">貼り付けのコマンドは、多くの場合、この種類のシリアライザーを使用します。</span><span class="sxs-lookup"><span data-stu-id="86f69-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="86f69-266">このプロパティを変更できるは、シリアル化セッションにいない場合だけです。</span><span class="sxs-lookup"><span data-stu-id="86f69-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-267">このプロパティは、シリアル化セッション内から変更されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-267">This property was changed from within a serialization session.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-268">シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-269">シリアル化マネージャーの <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティにプロパティを提供する際に使用する必要のあるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-270"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A>プロパティはシリアル化マネージャーのシリアライザーを使用してその動作について説明するプロパティをシリアル化のセットを提供する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="86f69-271">このオブジェクトのパブリック プロパティを検査およびシリアル化マネージャーのターゲット オブジェクトを持つ新しいプロパティ記述子にラップされます。</span><span class="sxs-lookup"><span data-stu-id="86f69-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-272">
            <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを常に作成するかどうかを示すフラグを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-272">Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-273">
            <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が既存のインスタンスを返す場合は <see langword="true" />。<see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型の新しいインスタンスを作成する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-273">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span>
          </span>
          <span data-ttu-id="86f69-274">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-274">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-275">場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>プロパティは`false`、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>メソッドは、型の新しいインスタンスを常に作成します。</span><span class="sxs-lookup"><span data-stu-id="86f69-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="86f69-276">場合<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>は`true`、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>名前テーブルと同じ名前のオブジェクトのコンテナーが最初に検索します。</span><span class="sxs-lookup"><span data-stu-id="86f69-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="86f69-277">このようなオブジェクトが存在し、同じ型では場合<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>は既存のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="86f69-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="86f69-278">この 2 番目のコマンドは、常に新しいツリーを作成するのではなく、既存のオブジェクトのセットをシリアル化の状態を適用するシリアライザーを実装する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="86f69-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="86f69-279">**を元に戻す**コマンドが多くの場合、この種類のシリアライザーを使用します。</span><span class="sxs-lookup"><span data-stu-id="86f69-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="86f69-280">場合で、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>プロパティは`true`、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>プロパティの動作を変更してさらに<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>2 つのオブジェクトの種類に応じて。</span><span class="sxs-lookup"><span data-stu-id="86f69-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-281">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-281">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-282">セッションが作成されるときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-282">Occurs when a session is created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-283">セッションが破棄されるときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-283">Occurs when a session is disposed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f69-284">追加するシリアル化プロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-284">The serialization provider to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-285">シリアル化マネージャーにカスタムのシリアル化プロバイダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-285">Adds a custom serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-286">ときに、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>メソッドの使用をシリアル化プロバイダーを要求、シリアル化マネージャーは、最初に探して型のメタデータに適切なシリアライザー カスタム シリアル化プロバイダーを照会します。</span><span class="sxs-lookup"><span data-stu-id="86f69-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-287">このシリアル化セッションのコンテキスト スタックを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-287">Gets the context stack for this serialization session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-288">データを格納する <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-289">コンテキスト スタックは、スタックとして実装されている、ユーザー定義の記憶域の領域を提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="86f69-290">この記憶域は、シリアライザー間で通信を提供する便利な方法はシリアル化は通常、階層的なプロセスです。</span><span class="sxs-lookup"><span data-stu-id="86f69-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-291">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-291">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="86f69-292">作成するデータ型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-292">The data type to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="86f69-293">型のコンストラクターに渡す引数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-293">The arguments to pass to the constructor for this type.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="86f69-294">オブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-294">The name of the object.</span>
          </span>
          <span data-ttu-id="86f69-295">この名前は、<see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> を使用して後からオブジェクトにアクセスするときに使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="86f69-296">
            <see langword="null" /> が渡された場合でもオブジェクトは作成されますが、そのオブジェクトには名前を指定する方法ではアクセスできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="86f69-297">このオブジェクトをデザイン コンテナーに追加する場合は <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-297">
              <see langword="true" /> to add this object to the design container.</span>
          </span>
          <span data-ttu-id="86f69-298">この値を有効にするには、オブジェクトが <see cref="T:System.ComponentModel.IComponent" /> を実装していることが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-299">
            <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-300">新しく作成したオブジェクト インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-300">The newly created object instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="86f69-301">取得するオブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-301">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-302">指定した名前の作成済みオブジェクトのインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-302">Retrieves an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-303">指定した名前を持つオブジェクトのインスタンス。その名前のオブジェクトが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f69-304">
            <paramref name="name" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-304">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-305">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-305">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86f69-306">名前の取得対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-306">The object for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-307">指定したオブジェクトの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-307">Retrieves a name for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-308">オブジェクトの名前。オブジェクトに名前がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-309">場合、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A>メソッドの対応する名前を見つけることができません、`value`を生成、パラメーター、<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>イベントを返す前に`null`です。</span><span class="sxs-lookup"><span data-stu-id="86f69-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f69-310">
            <paramref name="value" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-310">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-311">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-311">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="86f69-312">シリアライザーを取得する対象のオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-312">The type of the object to get the serializer for.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="86f69-313">取得するシリアライザーの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-313">The type of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-314">指定したオブジェクト型に対応する、要求された型のシリアライザーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-314">Gets a serializer of the requested type for the specified object type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-315">要求されたシリアライザーのインスタンス。該当するシリアライザーが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="86f69-316">読み込まれる型の完全修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-316">The fully qualified name of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-317">指定した名前の型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-317">Gets a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-318">型のインスタンス。型を読み込めない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-319">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-319">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-320">
            <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> プロパティを実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-321">シリアル化されるプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="86f69-322">削除する <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-323">以前に追加したシリアル化プロバイダーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-323">Removes a previously added serialization provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-324"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A>メソッドへの呼び出しによって既に追加されているカスタムのシリアル化プロバイダーを削除する、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="86f69-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="86f69-325">エラー情報を格納しているオブジェクト。通常は、<see cref="T:System.String" /> 型または <see cref="T:System.Exception" /> 型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-326">シリアル化における回復可能なエラーの報告に使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-326">Used to report a recoverable error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-327">シリアライザーを呼び出すことによって回復可能なエラーを適切に処理を書き込むことが、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A>エラー情報を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="86f69-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="86f69-328">シリアル化マネージャーは、完了するか、またはこのメソッドから例外をスロー、シリアル化プロセスを中止可能性があります後、エラーの一覧のレポートをサポートできます。</span><span class="sxs-lookup"><span data-stu-id="86f69-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="86f69-329">シリアライザーは、この関数の呼び出し後に続行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="86f69-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="86f69-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> 追加、`errorInformation`パラメーターを<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="86f69-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="86f69-331">場合`errorInformation`は`null`アクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="86f69-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-332">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-332">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="86f69-333">名前を設定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-333">The object to set the name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="86f69-334">オブジェクトの名前として使用する <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-334">A <see cref="T:System.String" /> used as the name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-335">指定したオブジェクトの名前を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-335">Sets the name for the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-336"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A>メソッドは、既存のオブジェクトの名前を設定する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="86f69-336">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="86f69-337">これによりを呼び出すことによって、オブジェクトのインスタンスの作成、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>のオーバーヘッドを回避する方法、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="86f69-337">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86f69-338">一方または両方のパラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-338">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86f69-339">インスタンスによって指定されたオブジェクトに既に名前が付いているか、<paramref name="name" /> が別の名前付きオブジェクトによって既に使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-339">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-340">このプロパティは、シリアル化セッション外部でアクセスされました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-340">This property was accessed outside of a serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="86f69-341">取得対象となるサービスの型を指定するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-341">An object that specifies the type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86f69-342">このメンバーの説明については、<see cref="M:System.IServiceProvider.GetService(System.Type)" /> メソッドのトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-342">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86f69-343">
            <paramref name="serviceType" /> 型のサービス オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-343">A service object of type <paramref name="serviceType" />.</span>
          </span>
          <span data-ttu-id="86f69-344">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-344">-or-</span>
          </span>
          <span data-ttu-id="86f69-345">
            <paramref name="serviceType" /> 型のサービス オブジェクトがない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-345">
              <see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-346">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="86f69-346">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="86f69-347">これは、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> のインスタンスが <xref:System.IServiceProvider> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="86f69-347">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86f69-348">
            <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> メソッドが、一致する名前が同じ型を参照していることを検査するかどうかを示すフラグを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-348">Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86f69-349">
            <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> が型を検査する場合は <see langword="true" />。検査しない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-349">
              <see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span>
          </span>
          <span data-ttu-id="86f69-350">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-350">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f69-351"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>プロパティの動作を変更して、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>メソッドときに、<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>プロパティは`true`、詳細は次の表に説明します。</span><span class="sxs-lookup"><span data-stu-id="86f69-351">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="86f69-352">動作 `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="86f69-352">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="86f69-353">`true` または `false`</span><span class="sxs-lookup"><span data-stu-id="86f69-353">`true` or `false`</span></span>|<span data-ttu-id="86f69-354">常に、指定した型の新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="86f69-354">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="86f69-355">一致するインスタンスが検出された場合は、その種類に関係なく</span><span class="sxs-lookup"><span data-stu-id="86f69-355">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="86f69-356">一致するインスタンスが見つかった場合、その型が同じメソッドの呼び出しで指定した場合にのみ返されます。</span><span class="sxs-lookup"><span data-stu-id="86f69-356">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="86f69-357"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> 同様のプロパティが共通の親またはインターフェイスを共有できませんを別のオブジェクトの 1 つの型の変換に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="86f69-357"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86f69-358">シリアル化マネージャーに、アクティブなシリアル化セッションが存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86f69-358">The serialization manager has an active serialization session.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>