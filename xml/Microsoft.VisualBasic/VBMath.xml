<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9ec51fc0d9afec7126314ff80bbb18b76041c0e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37709616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a6f5e-101">
        <see langword="VbMath" /> モジュールに含まれるプロシージャを使って、数値演算を実行します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6f5e-101">The <see langword="VbMath" /> module contains procedures used to perform mathematical operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f5e-102">このモジュールは、乱数を生成するため、Visual Basic 言語のキーワードとランタイム ライブラリ メンバーをサポートします。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-102">This module supports the Visual Basic language keywords and run-time library members for generating random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f5e-103">この例では、 `Rnd` 1 と 6 の範囲内でランダムな整数値を生成する関数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-103">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f5e-104">乱数ジェネレーターを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-104">Initializes the random-number generator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6f5e-105">乱数ジェネレーターを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-105">Initializes the random-number generator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f5e-106">このオーバー ロード、`Randomize`メソッドは、シード値を取りません。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-106">This overload of the `Randomize` method does not take a seed value.</span></span> <span data-ttu-id="a6f5e-107">代わりに、システムのタイマーによって返される値は、新しいシード値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-107">Instead, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="a6f5e-108">場合`Randomize`が使用されていない、`Rnd`関数を引数なしで) 使用同数シードとして初めてが呼び出され、それ以降のシード値として最後に生成された番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-108">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f5e-109">ランダムな数値のシーケンスを繰り返すを呼び出す`Rnd`負の値を使用する前に、すぐに引数を持つ`Randomize`数値の引数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-109">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a6f5e-110">`Random`ステートメントおよび`Rnd`結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります、関数のシード値で始まり、有限の範囲内にある数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-110">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="a6f5e-111">その結果、`Random`ステートメントと`Rnd`暗号化で使用するためのランダムな数値を生成する関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-111">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="a6f5e-112">詳細については、「<xref:System.Security.Cryptography.RandomNumberGenerator>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-112">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f5e-113">この例では、`Randomize`乱数ジェネレーターを初期化するステートメント。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-113">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="a6f5e-114">数値の引数が省略されているため、`Randomize`からの戻り値を使用して、`Timer`新しいシード値として機能します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-114">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="a6f5e-115">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-115">Optional.</span>
          </span>
          <span data-ttu-id="a6f5e-116">
            <see langword="Object" /> または任意の有効な数式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-116">An <see langword="Object" /> or any valid numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f5e-117">乱数ジェネレーターを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-117">Initializes the random-number generator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f5e-118">`Randomize` 使用して`Number`初期化するために、`Rnd`関数の乱数ジェネレーター、新しいシード値を指定することです。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-118">`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value.</span></span> <span data-ttu-id="a6f5e-119">省略した場合`Number`システムのタイマーによって返される値は、新しいシード値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-119">If you omit `Number`, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="a6f5e-120">場合`Randomize`が使用されていない、`Rnd`関数を引数なしで) 使用同数シードとして初めてが呼び出され、それ以降のシード値として最後に生成された番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-120">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f5e-121">ランダムな数値のシーケンスを繰り返すを呼び出す`Rnd`負の値を使用する前に、すぐに引数を持つ`Randomize`数値の引数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-121">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="a6f5e-122">使用して`Randomize`の値が同じで`Number`前のシーケンスを繰り返しません。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-122">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a6f5e-123">`Random`ステートメントおよび`Rnd`結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります、関数のシード値で始まり、有限の範囲内にある数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-123">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="a6f5e-124">その結果、`Random`ステートメントと`Rnd`暗号化で使用するためのランダムな数値を生成する関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-124">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="a6f5e-125">詳細については、「<xref:System.Security.Cryptography.RandomNumberGenerator>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-125">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f5e-126">この例では、`Randomize`乱数ジェネレーターを初期化するステートメント。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-126">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="a6f5e-127">数値の引数が省略されているため、`Randomize`からの戻り値を使用して、`Timer`新しいシード値として機能します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-127">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6f5e-128">型 <see langword="Single" /> の乱数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-128">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6f5e-129">型 <see langword="Single" /> の乱数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-129">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f5e-130">乱数系列の次の乱数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-130">The next random number in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f5e-131">`Rnd`未満、1 より大きいまたは 0 に等しい、関数が値を返します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-131">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="a6f5e-132">呼び出しの前に`Rnd`を使用して、`Randomize`乱数ジェネレーターでシードを初期化するために、引数なしのステートメントがシステム タイマーに基づきます。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-132">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="a6f5e-133">特定の範囲の整数の乱数を生成するには、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-133">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="a6f5e-134">ここでは、 `upperbound` 、範囲の最大数と`lowerbound`は範囲の最小数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-134">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f5e-135">ランダムな数値のシーケンスを繰り返すを呼び出す`Rnd`負の値を使用する前に、すぐに引数を持つ`Randomize`数値の引数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-135">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a6f5e-136">`Random`ステートメントおよび`Rnd`結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります、関数のシード値で始まり、有限の範囲内にある数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-136">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="a6f5e-137">その結果、`Random`ステートメントと`Rnd`暗号化で使用するためのランダムな数値を生成する関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-137">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f5e-138">この例では、 `Rnd` 1 と 6 の範囲内でランダムな整数値を生成する関数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-138">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="a6f5e-139">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-139">Optional.</span>
          </span>
          <span data-ttu-id="a6f5e-140">
            <see langword="Single" /> 値または任意の有効な <see langword="Single" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-140">A <see langword="Single" /> value or any valid <see langword="Single" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6f5e-141">型 <see langword="Single" /> の乱数を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-141">Returns a random number of type <see langword="Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6f5e-142">数値が 0 未満の場合、Rnd は <paramref name="Number" /> をシードとして使用して、毎回同じ数値を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-142">If number is less than zero, Rnd generates the same number every time, using <paramref name="Number" /> as the seed.</span>
          </span>
          <span data-ttu-id="a6f5e-143">数値が 0 よりも大きい場合、Rnd はシーケンスの次の乱数を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-143">If number is greater than zero, Rnd generates the next random number in the sequence.</span>
          </span>
          <span data-ttu-id="a6f5e-144">数値が 0 の場合、Rnd は最後に生成された数値を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-144">If number is equal to zero, Rnd generates the most recently generated number.</span>
          </span>
          <span data-ttu-id="a6f5e-145">数値が指定されていない場合、Rnd はシーケンスの次の乱数を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6f5e-145">If number is not supplied, Rnd generates the next random number in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f5e-146">`Rnd`未満、1 より大きいまたは 0 に等しい、関数が値を返します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-146">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="a6f5e-147">値`Number`決定方法`Rnd`乱数を生成します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-147">The value of `Number` determines how `Rnd` generates a random number.</span></span>  
  
 <span data-ttu-id="a6f5e-148">ため、初期シードの同じ番号のシーケンスが生成される連続した呼び出しごとに、`Rnd`関数は、次のシーケンス番号のシードとして以前に生成された番号を使用します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-148">For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence.</span></span>  
  
 <span data-ttu-id="a6f5e-149">呼び出しの前に`Rnd`を使用して、`Randomize`乱数ジェネレーターでシードを初期化するために、引数なしのステートメントがシステム タイマーに基づきます。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-149">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="a6f5e-150">特定の範囲の整数の乱数を生成するには、次の数式を使用します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-150">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="a6f5e-151">ここでは、 `upperbound` 、範囲の最大数と`lowerbound`は範囲の最小数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-151">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6f5e-152">ランダムな数値のシーケンスを繰り返すを呼び出す`Rnd`負の値を使用する前に、すぐに引数を持つ`Randomize`数値の引数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-152">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="a6f5e-153">使用して`Randomize`の値が同じで`Number`前のシーケンスを繰り返しません。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-153">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a6f5e-154">`Random`ステートメントおよび`Rnd`結果が生成するために使用されるアルゴリズムを知っている人に予測可能な可能性があります、関数のシード値で始まり、有限の範囲内にある数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-154">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="a6f5e-155">その結果、`Random`ステートメントと`Rnd`暗号化で使用するためのランダムな数値を生成する関数を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-155">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6f5e-156">この例では、 `Rnd` 1 と 6 の範囲内でランダムな整数値を生成する関数。</span><span class="sxs-lookup"><span data-stu-id="a6f5e-156">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
      </Docs>
    </Member>
  </Members>
</Type>