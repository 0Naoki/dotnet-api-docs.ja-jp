<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67203d2e3262083e36b5d156d1c448b2571fa2ce" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156374" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="159e0-101"><see langword="ErrObject" />モジュールには、プロパティやプロシージャを識別およびを使用して実行時エラーを処理するために使用が含まれています、<see langword="Err" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-102">`ErrObject`モジュールは、サポート、`Err`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="159e0-103">詳細については、「 <xref:Microsoft.VisualBasic.Information.Err%2A> 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="159e0-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-104">この例のプロパティを使用して、`Err`エラー メッセージ ダイアログ ボックスを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="159e0-105">使用するときの動作に注意してください、`Clear`メソッド最初。Visual Basic エラーを生成すると、`Raise`メソッドでは、Visual Basic の既定値のプロパティになります、`Err`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="159e0-106">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="159e0-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="159e0-107">Try...Catch...Finally ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="159e0-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="159e0-108">キーワード (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="159e0-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="159e0-109">Visual Basic ランタイム ライブラリ メンバー</span><span class="sxs-lookup"><span data-stu-id="159e0-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="159e0-110">すべてのプロパティ設定を消去、<see langword="Err" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-111">使用して、`Clear`を明示的にオフに、`Err`オブジェクトの遅延のエラーの処理を使用する場合など、エラーが処理された後`On Error Resume Next`します。</span><span class="sxs-lookup"><span data-stu-id="159e0-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="159e0-112">`Clear`メソッドが自動的に呼び出されるたびに、次のステートメントのいずれかを実行します。</span><span class="sxs-lookup"><span data-stu-id="159e0-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="159e0-113">任意の種類の`Resume`ステートメント</span><span class="sxs-lookup"><span data-stu-id="159e0-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="159e0-114">`Exit Sub`、 `Exit Function`、または `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="159e0-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="159e0-115">すべて`On Error`ステートメント</span><span class="sxs-lookup"><span data-stu-id="159e0-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="159e0-116">すべて`Try...Catch...Finally`ステートメント</span><span class="sxs-lookup"><span data-stu-id="159e0-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="159e0-117">`On Error Resume Next`コンストラクトことをお勧めする`On Error GoTo`他のオブジェクトへのアクセス中にエラーを処理するときにします。</span><span class="sxs-lookup"><span data-stu-id="159e0-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="159e0-118">チェック`Err`オブジェクトと対話は、コードによってアクセスされたオブジェクトがあいまいさを削除します。確認するオブジェクトのエラー コードを配置する`Err.Number`、どのオブジェクトが最初に、エラーを生成および (で指定されたオブジェクト`Err.Source`)。</span><span class="sxs-lookup"><span data-stu-id="159e0-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-119">この例では、`Err`オブジェクトの`Clear`の数値プロパティをリセットする方法、`Err`が 0 の文字列プロパティは、長さ 0 の文字列をオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="159e0-120">呼び出さずに`Clear`、2 番目の呼び出し`MsgBox`同じエラー メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="159e0-121">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="159e0-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-122">返すか設定を<see langword="String" />エラーに関連付けられているわかりやすい文字列を含む式を指定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="159e0-123">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="159e0-124">返すか設定を<see langword="String" />エラーに関連付けられているわかりやすい文字列を含む式を指定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="159e0-125">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-126">`Description`エラーの簡単な説明のプロパティの設定で構成されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="159e0-127">このプロパティを使用して、エラーを処理したくない、またはできないユーザーに警告します。</span><span class="sxs-lookup"><span data-stu-id="159e0-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="159e0-128">ユーザー定義のエラーを生成するときに、エラーの簡単な説明を割り当てる、`Description`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="159e0-129">場合、`Description`プロパティには、設定しないとの値、<xref:Microsoft.VisualBasic.ErrObject.Number%2A>プロパティは、Visual Basic 実行時エラーに対応し、によって返される文字列、<xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>で関数が設定されて、`Description`エラーが生成されたときに、プロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-130">この例では、ユーザー定義メッセージを`Description`のプロパティ、`Err`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-131">最後に実行されたステートメントの行番号を示す整数を取得します。</span><span class="sxs-lookup"><span data-stu-id="159e0-131">Gets an integer indicating the line number of the last executed statement.</span></span></summary>
        <value><span data-ttu-id="159e0-132">最後に実行されたステートメントの行番号。</span><span class="sxs-lookup"><span data-stu-id="159e0-132">The line number of the last executed statement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-133">Visual Basic に行番号がない場合は、0 を返します。</span><span class="sxs-lookup"><span data-stu-id="159e0-133">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-134">この例では、`Erl`プロパティを行番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-134">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="159e0-135">例外が発生したエラーを表すを返します。</span><span class="sxs-lookup"><span data-stu-id="159e0-135">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="159e0-136">発生したエラーを表す例外。</span><span class="sxs-lookup"><span data-stu-id="159e0-136">The exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-137">`GetException`関数はからのみ使用できます、`Err`オブジェクト クラス。</span><span class="sxs-lookup"><span data-stu-id="159e0-137">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="159e0-138">動作する、`Exception`のプロパティ、`Err`発生したエラーを表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-138">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-139">次のコードで例外に割り当てられているメッセージを表示する、`Err`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-139">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-140">返すか設定、<see langword="Integer" />ヘルプ ファイルのトピックのコンテキスト ID を格納しています。</span><span class="sxs-lookup"><span data-stu-id="159e0-140">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="159e0-141">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-141">Read/write.</span></span></summary>
        <value><span data-ttu-id="159e0-142">返すか設定、<see langword="Integer" />ヘルプ ファイルのトピックのコンテキスト ID を格納しています。</span><span class="sxs-lookup"><span data-stu-id="159e0-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="159e0-143">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-143">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-144">`HelpContext`プロパティを使用して、アプリケーションの状況依存のヘルプを表示します。</span><span class="sxs-lookup"><span data-stu-id="159e0-144">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="159e0-145">ヘルプ ファイルがで指定されている場合`HelpFile`、`HelpContext`特定されたヘルプ ファイルを自動的に表示するプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-145">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="159e0-146">どちらの場合、`HelpFile`と`HelpContext`プロパティが空の値、<xref:Microsoft.VisualBasic.ErrObject.Number%2A>プロパティがチェックされます。</span><span class="sxs-lookup"><span data-stu-id="159e0-146">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="159e0-147">場合の値、`Number`プロパティは、Visual Basic ランタイム エラー値に対応し、エラーの Visual Basic のヘルプ コンテキスト ID を使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-147">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="159e0-148">場合の値、`Number`プロパティは、Visual Basic エラーに対応していない、Visual Basic ヘルプ ファイルの内容の画面が表示されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-148">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="159e0-149">一般的なエラーを処理するために、アプリケーションでルーチンを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="159e0-149">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="159e0-150">オブジェクトを使用したプログラミング、ときに、エラー処理の品質を向上させるために、またはエラーが回復可能でない場合にユーザーにわかりやすいメッセージを表示するオブジェクトのヘルプ ファイルを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="159e0-150">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-151">この例では、`HelpContext`のプロパティ、`Err`の Visual Basic ヘルプ トピックを表示するオブジェクト、`Overflow`エラー。</span><span class="sxs-lookup"><span data-stu-id="159e0-151">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-152">返すか設定、<see langword="String" />ヘルプ ファイルへの完全修飾パスを含む式を指定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-152">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="159e0-153">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-153">Read/write.</span></span></summary>
        <value><span data-ttu-id="159e0-154">返すか設定、<see langword="String" />ヘルプ ファイルへの完全修飾パスを含む式を指定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="159e0-155">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-155">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-156">ヘルプ ファイルを指定する場合、`HelpFile`プロパティ、自動的にで呼び出された、ユーザーがヘルプ キー (または F1 キー) を押すと、エラー メッセージ ダイアログ ボックス。</span><span class="sxs-lookup"><span data-stu-id="159e0-156">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="159e0-157">場合、`HelpContext`プロパティには、このトピックで、指定したファイルの ID が自動的に表示される有効なコンテキストが含まれています。</span><span class="sxs-lookup"><span data-stu-id="159e0-157">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="159e0-158">ない場合は`HelpFile`を指定すると、Visual Basic ヘルプ ファイルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-158">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="159e0-159">一般的なエラーを処理するために、アプリケーションでルーチンを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="159e0-159">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="159e0-160">オブジェクトを使用したプログラミング、ときに、エラー処理の品質を向上させるために、またはエラーが回復可能でない場合にユーザーにわかりやすいメッセージを表示するオブジェクトのヘルプ ファイルを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="159e0-160">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-161">この例では、`HelpFile`のプロパティ、`Err`ヘルプ システムを起動するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-161">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="159e0-162">既定で、`HelpFile`プロパティには、Visual Basic のヘルプ ファイルの名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="159e0-162">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-163">ダイナミック リンク ライブラリ (DLL) の呼び出しによって生成されたシステム エラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="159e0-163">Gets a system error code produced by a call to a dynamic-link library (DLL).</span></span></summary>
        <value><span data-ttu-id="159e0-164">ダイナミック リンク ライブラリ (DLL) への呼び出しによって生成されたシステム エラー コード。</span><span class="sxs-lookup"><span data-stu-id="159e0-164">A system error code produced by a call to a dynamic-link library (DLL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-165"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>プロパティは、Visual Basic コードから DLL の呼び出しにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-165">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="159e0-166">このような呼び出しが行われたときに、呼び出された関数は、通常、成功または失敗を示すコードが返されます、<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-166">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="159e0-167">成功または失敗を示す戻り値を決定する DLL の関数のマニュアルを確認します。</span><span class="sxs-lookup"><span data-stu-id="159e0-167">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="159e0-168">Visual Basic アプリケーションをすぐに確認するエラー コードが返されるたびに、<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-168">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="159e0-169">例外が発生しなかったときに、<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-169">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="159e0-170"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>プロパティは保護されて<xref:System.Security.Permissions.SecurityAction.LinkDemand>から信頼されていないコードからアクセスされるようにするのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="159e0-170">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="159e0-171">ただし、<xref:System.Security.Permissions.SecurityAction.LinkDemand>が直前の呼び出し元のみが必要です<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>権限。</span><span class="sxs-lookup"><span data-stu-id="159e0-171">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="159e0-172">値を公開する場合は、コードは、部分的に信頼されたコードから呼び出すことができます、<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>検証は、セキュリティ上のリスクなし。</span><span class="sxs-lookup"><span data-stu-id="159e0-172">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="159e0-173">使用する方法についての重要な制限については、 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 、メンバーを参照してください[Demand とします。LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)します。</span><span class="sxs-lookup"><span data-stu-id="159e0-173">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="159e0-174">アクセス許可の詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="159e0-174">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="159e0-175">スマート デバイスのこのプロパティは常に 0 を返しますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="159e0-175">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-176">次の例を使用する方法を示しています、 `LastDllError` Windows api 関数を呼び出した後のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-176">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="159e0-177">`PrintWindowCoordinates`プロシージャは、ウィンドウを呼び出し、ハンドルを取得、`GetWindowRect`関数。</span><span class="sxs-lookup"><span data-stu-id="159e0-177">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="159e0-178">`GetWindowRect` RECT データ構造体をウィンドウを構成する四角形の辺の長さに設定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-178">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="159e0-179">エラーが発生して、エラー番号は無効なハンドルを渡す場合、`LastDllError`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-179">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-180">返すか、エラーを示す数値を設定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-180">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="159e0-181">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-181">Read/write.</span></span></summary>
        <value><span data-ttu-id="159e0-182">返すか、エラーを示す数値を設定します。</span><span class="sxs-lookup"><span data-stu-id="159e0-182">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="159e0-183">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-183">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-184">すべての`Raise`以外で引数`Number`は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="159e0-184">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="159e0-185">省略可能な引数、およびのプロパティの設定を省略した場合、`Err`オブジェクトが消去されていない値を含めることが、その値、エラーの値として使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-185">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="159e0-186">`Err`オブジェクトでエラーを生成する場合よりも豊富な情報を提供する、`Error`ステートメントでは、`Raise`はクラス モジュールを記述するときにエラーを生成するために便利です。</span><span class="sxs-lookup"><span data-stu-id="159e0-186">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="159e0-187">たとえば、`Raise`メソッドでは、エラーを生成したソースで指定できます、`Source`プロパティ、エラーのオンライン ヘルプは、参照できるし、具合です。</span><span class="sxs-lookup"><span data-stu-id="159e0-187">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="159e0-188">オブジェクトから、ユーザー定義のエラーを返すときに設定`Err.Number`エラー コードとして選択した数を加算して、`VbObjectError`定数。</span><span class="sxs-lookup"><span data-stu-id="159e0-188">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="159e0-189">たとえば、次のコードを使用して、1051 エラー コードとしての数を返します。</span><span class="sxs-lookup"><span data-stu-id="159e0-189">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="159e0-190">この例での一般的な使用、`Number`エラー処理ルーチン内のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-190">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="159e0-191">この例では、`Err`オブジェクトの`Raise`Visual Basic で記述された関数内で元のエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="159e0-191">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="159e0-192">呼び出し元の関数は、エラーをキャッチし、ユーザーに報告できます。</span><span class="sxs-lookup"><span data-stu-id="159e0-192">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="159e0-193">そのプロシージャに注意してください`CallingProcedure`から派生できる情報の種類の比較、`Err`オブジェクトから派生できる情報を`Exception`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-193">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="159e0-194"><paramref name="Number" /> 65535 を超えています。</span><span class="sxs-lookup"><span data-stu-id="159e0-194"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="159e0-195">必須。</span><span class="sxs-lookup"><span data-stu-id="159e0-195">Required.</span></span> <span data-ttu-id="159e0-196"><see langword="Long" /> エラーの性質を識別する整数。</span><span class="sxs-lookup"><span data-stu-id="159e0-196"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="159e0-197">Visual Basic エラーの番号は 0 から 65535 の範囲です。0 から 512 はシステム エラー用に予約されています。513 から 65535 はユーザー定義エラーに使用できます。</span><span class="sxs-lookup"><span data-stu-id="159e0-197">Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.</span></span> <span data-ttu-id="159e0-198">設定するときに、<see langword="Number" />にエラー コード番号を追加するプロパティをクラス モジュールに独自のエラー コードは、<see langword="vbObjectError" />定数。</span><span class="sxs-lookup"><span data-stu-id="159e0-198">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="159e0-199">たとえば、エラー番号 513 を生成するには、<c>vbObjectError + 513</c> を <see langword="Number" /> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="159e0-199">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="159e0-200">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="159e0-200">Optional.</span></span> <span data-ttu-id="159e0-201"><see langword="String" /> オブジェクトまたはエラーを生成したアプリケーションの名前付けの式。</span><span class="sxs-lookup"><span data-stu-id="159e0-201"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="159e0-202">オブジェクトに対してこのプロパティを設定する場合は、<c>project</c>.<c>class</c> の形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-202">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="159e0-203">場合<paramref name="Source" />が指定されていない、現在の Visual Basic プロジェクトのプロセス ID を使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-203">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="159e0-204">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="159e0-204">Optional.</span></span> <span data-ttu-id="159e0-205"><see langword="String" /> エラーを説明する式。</span><span class="sxs-lookup"><span data-stu-id="159e0-205"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="159e0-206">値を指定しない場合、<see langword="Number" />プロパティが検査されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-206">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="159e0-207">Visual Basic 実行時のエラーにマップできる場合は、コード、によって返される文字列、<see langword="Error" />として関数を使用、<see langword="Description" />プロパティ。</span><span class="sxs-lookup"><span data-stu-id="159e0-207">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="159e0-208">対応する Visual Basic エラーがない場合、 <see langword="Number" /> 「アプリケーション定義またはオブジェクト定義エラー」メッセージ プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-208">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="159e0-209">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="159e0-209">Optional.</span></span> <span data-ttu-id="159e0-210">このエラーのヘルプの含まれているヘルプ ファイルへの完全修飾パス。</span><span class="sxs-lookup"><span data-stu-id="159e0-210">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="159e0-211">指定しない場合、Visual Basic は、完全修飾のドライブ、パス、および Visual Basic ヘルプ ファイルのファイル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-211">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="159e0-212">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="159e0-212">Optional.</span></span> <span data-ttu-id="159e0-213">内のトピックを識別するコンテキスト ID<paramref name="HelpFile" />エラーのヘルプを提供します。</span><span class="sxs-lookup"><span data-stu-id="159e0-213">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="159e0-214">省略すると、Visual Basic ヘルプ ファイル コンテキスト ID に対応するエラーの場合、<see langword="Number" />プロパティが存在する場合に使用されています。</span><span class="sxs-lookup"><span data-stu-id="159e0-214">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="159e0-215">実行時エラー; が生成されます。代わりに使用できる、<see langword="Error" />ステートメント。</span><span class="sxs-lookup"><span data-stu-id="159e0-215">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-216">すべての`Raise`以外で引数`Number`は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="159e0-216">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="159e0-217">省略可能な引数、およびのプロパティの設定を省略した場合、`Err`オブジェクトが消去されていない値を含めることが、その値、エラーの値として使用します。</span><span class="sxs-lookup"><span data-stu-id="159e0-217">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="159e0-218">`Err`オブジェクトでエラーを生成する場合よりも豊富な情報を提供する、`Error`ステートメントでは、`Raise`はクラス モジュールを記述するときにエラーを生成するために便利です。</span><span class="sxs-lookup"><span data-stu-id="159e0-218">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="159e0-219">たとえば、`Raise`メソッドでは、エラーを生成したソースで指定できます、`Source`プロパティ、エラーのオンライン ヘルプは、参照できるし、具合です。</span><span class="sxs-lookup"><span data-stu-id="159e0-219">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-220">この例では、`Err`オブジェクトの`Raise`Visual Basic で記述された関数内でエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="159e0-220">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="159e0-221">呼び出し元の関数は、エラーをキャッチし、それをメッセージ ボックスでユーザーに報告できます。</span><span class="sxs-lookup"><span data-stu-id="159e0-221">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="159e0-222">Error ステートメント</span><span class="sxs-lookup"><span data-stu-id="159e0-222">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="159e0-223">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="159e0-223">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="159e0-224">返すか設定を<see langword="String" />オブジェクトまたはアプリケーション エラーの発生源の名前を指定する式。</span><span class="sxs-lookup"><span data-stu-id="159e0-224">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="159e0-225">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-225">Read/write.</span></span></summary>
        <value><span data-ttu-id="159e0-226">返すか設定を<see langword="String" />オブジェクトまたはアプリケーション エラーの発生源の名前を指定する式。</span><span class="sxs-lookup"><span data-stu-id="159e0-226">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="159e0-227">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="159e0-227">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="159e0-228">`Source`プロパティを指定します、`String`オブジェクトを表す式のエラーを生成した; 式は、通常、オブジェクトのクラス名またはプロセス id です。</span><span class="sxs-lookup"><span data-stu-id="159e0-228">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="159e0-229">使用して、`Source`プロパティをコードがアクセス先のオブジェクトで生成されたエラーを処理できない場合は、情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="159e0-229">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="159e0-230">例では、Microsoft Excel にアクセスすることが生成される場合、`Division by zero`エラー、Microsoft Excel を設定`Err.Number`エラーとセットの場合は、そのエラー コードを`Source`"Excel.Application"にします。</span><span class="sxs-lookup"><span data-stu-id="159e0-230">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="159e0-231">アプリケーションが、コードからエラーを生成するときに`Source`は、アプリケーションのプログラム ID です。</span><span class="sxs-lookup"><span data-stu-id="159e0-231">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="159e0-232">クラス内で`Source`形式を持つ名前を含める必要があります*プロジェクト*.*クラス*します。</span><span class="sxs-lookup"><span data-stu-id="159e0-232">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="159e0-233">コードで、予期しないエラーが発生した場合、`Source`プロパティ自動的に入力します。</span><span class="sxs-lookup"><span data-stu-id="159e0-233">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="159e0-234">モジュールの場合にエラー`Source`プロジェクト名が含まれています。</span><span class="sxs-lookup"><span data-stu-id="159e0-234">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="159e0-235">この例の使用、`Source`一般的なエラー処理ルーチンにします。</span><span class="sxs-lookup"><span data-stu-id="159e0-235">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="159e0-236">エラーが発生したとき`Class1`、文字列`"Class1"`に割り当てられている、`Source`のプロパティ、`Err`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="159e0-236">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="159e0-237">この文字列は、ソースと、エラーの数を示す情報メッセージに表示されます。</span><span class="sxs-lookup"><span data-stu-id="159e0-237">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="159e0-238">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="159e0-238">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>