<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ErrObject.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519573ad50fc15f1c13f60caa02a1d51f05408059.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19573ad50fc15f1c13f60caa02a1d51f05408059</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> module contains properties and procedures used to identify and handle run-time errors using the <ph id="ph2">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> モジュールに含まれているプロパティおよびプロシージャを使用して、<ph id="ph2">&lt;see langword="Err" /&gt;</ph> オブジェクトによる実行時エラーの識別と処理を実行します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">`ErrObject`</ph> module supports the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated"><ph id="ph1">`ErrObject`</ph>モジュールは、サポート、<ph id="ph2">`Err`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>This example uses the properties of the <ph id="ph1">`Err`</ph> object in constructing an error-message dialog box.</source>
          <target state="translated">この例のプロパティを使用して、<ph id="ph1">`Err`</ph>エラー メッセージ ダイアログ ボックスを作成するオブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>Notice what happens when you use the <ph id="ph1">`Clear`</ph> method first: When you then generate a Visual Basic error with the <ph id="ph2">`Raise`</ph> method, Visual Basic's default values become the properties of the <ph id="ph3">`Err`</ph> object.</source>
          <target state="translated">使用するときの動作に注意してください、<ph id="ph1">`Clear`</ph>メソッド最初: しと Visual Basic エラーを生成すると、<ph id="ph2">`Raise`</ph>メソッド、Visual Basic の既定値のプロパティになる、<ph id="ph3">`Err`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Clears all property settings of the <ph id="ph1">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Err" /&gt;</ph> オブジェクトのプロパティ設定をすべてクリアします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Use <ph id="ph1">`Clear`</ph> to explicitly clear the <ph id="ph2">`Err`</ph> object after an error has been handled, such as when you use deferred error handling with <ph id="ph3">`On Error Resume Next`</ph>.</source>
          <target state="translated">使用して<ph id="ph1">`Clear`</ph>を明示的にオフに、<ph id="ph2">`Err`</ph>遅延によるエラー処理を使用する場合など、エラーが処理された後にオブジェクト<ph id="ph3">`On Error Resume Next`</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`Clear`</ph> method is called automatically whenever any of the following statements executes:</source>
          <target state="translated"><ph id="ph1">`Clear`</ph>メソッドが自動的には、次のステートメントのいずれかを実行するたびに。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any type of <ph id="ph1">`Resume`</ph> statement</source>
          <target state="translated">任意の種類の<ph id="ph1">`Resume`</ph>ステートメント</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>, or <ph id="ph3">`Exit Property`</ph></source>
          <target state="translated"><ph id="ph1">`Exit Sub`</ph>、 <ph id="ph2">`Exit Function`</ph>、または <ph id="ph3">`Exit Property`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`On Error`</ph> statement</source>
          <target state="translated">どの<ph id="ph1">`On Error`</ph>ステートメント</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`Try...Catch...Finally`</ph> statement</source>
          <target state="translated">どの<ph id="ph1">`Try...Catch...Finally`</ph>ステートメント</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`On Error Resume Next`</ph> construct may be preferable to <ph id="ph2">`On Error GoTo`</ph> when handling errors generated during access to other objects.</source>
          <target state="translated"><ph id="ph1">`On Error Resume Next`</ph>コンストラクトことをお勧めする<ph id="ph2">`On Error GoTo`</ph>他のオブジェクトへのアクセス中にエラーを処理するときにします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Checking <ph id="ph1">`Err`</ph> after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in <ph id="ph2">`Err.Number`</ph>, as well as which object originally generated the error (the object specified in <ph id="ph3">`Err.Source`</ph>).</source>
          <target state="translated">チェック<ph id="ph1">`Err`</ph>オブジェクトと対話をコードによってアクセスされたオブジェクトがあいまいさを削除した後: を確認するオブジェクトのエラー コードを配置する<ph id="ph2">`Err.Number`</ph>、どのオブジェクトが最初に、エラーを生成および (で指定されたオブジェクト<ph id="ph3">`Err.Source`</ph>)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Clear`</ph> method to reset the numeric properties of the <ph id="ph3">`Err`</ph> object to zero and its string properties to zero-length strings.</source>
          <target state="translated">この例では、<ph id="ph1">`Err`</ph>オブジェクトの<ph id="ph2">`Clear`</ph>の数値プロパティをリセットする方法、 <ph id="ph3">`Err`</ph> 0 や長さ 0 の文字列にその文字列プロパティをオブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Without the call to <ph id="ph1">`Clear`</ph>, the second call to <ph id="ph2">`MsgBox`</ph> would display the same error message.</source>
          <target state="translated">呼び出さずに<ph id="ph1">`Clear`</ph>、2 番目の呼び出し<ph id="ph2">`MsgBox`</ph>同じエラー メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">エラーに関連する説明文字列を含む <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">エラーに関連する説明文字列を含む <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>The <ph id="ph1">`Description`</ph> property setting consists of a short description of the error.</source>
          <target state="translated"><ph id="ph1">`Description`</ph>エラーの簡単な説明のプロパティの設定で構成されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Use this property to alert the user to an error that you cannot or do not want to handle.</source>
          <target state="translated">ユーザーができない場合や、処理したくないエラーのアラートを生成するには、このプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>When generating a user-defined error, assign a short description of your error to the <ph id="ph1">`Description`</ph> property.</source>
          <target state="translated">ユーザー定義のエラーを生成するときに、エラーの簡単な説明を割り当てる、<ph id="ph1">`Description`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>If the <ph id="ph1">`Description`</ph> property is not filled in, and the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property corresponds to a Visual Basic run-time error, then the string returned by the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> function is set in the <ph id="ph4">`Description`</ph> property when the error is generated.</source>
          <target state="translated">場合、<ph id="ph1">`Description`</ph>プロパティが指定されていません、しの値、<ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph>プロパティは、Visual Basic ランタイム エラーに対応し、によって返される文字列、<ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph>関数が設定されている、<ph id="ph4">`Description`</ph>プロパティ エラーが生成されたときにします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>This example assigns a user-defined message to the <ph id="ph1">`Description`</ph> property of the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated">この例では、ユーザー定義のメッセージを<ph id="ph1">`Description`</ph>のプロパティ、<ph id="ph2">`Err`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">最後に実行されたステートメントの行番号を示す整数値を返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">最後に実行されたステートメントの行番号を示す整数値を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">Visual Basic に行番号がない場合は、0 を返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>This example uses the <ph id="ph1">`Erl`</ph> property to indicate the line number.</source>
          <target state="translated">この例では、<ph id="ph1">`Erl`</ph>行番号を指定するプロパティです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">発生したエラーを表す例外を返します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">発生したエラーを表す例外を返します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The <ph id="ph1">`GetException`</ph> function is available only from the <ph id="ph2">`Err`</ph> object class.</source>
          <target state="translated"><ph id="ph1">`GetException`</ph>関数はからのみ使用可能な<ph id="ph2">`Err`</ph>オブジェクト クラス。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>It works with the <ph id="ph1">`Exception`</ph> property of the <ph id="ph2">`Err`</ph> object to display the error that has occurred.</source>
          <target state="translated">連携して、<ph id="ph1">`Exception`</ph>のプロパティ、<ph id="ph2">`Err`</ph>が発生したエラーを表示するオブジェクト。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The following code displays the message assigned to the exception in the <ph id="ph1">`Err`</ph> object:</source>
          <target state="translated">次のコードの例外に割り当てられているメッセージを表示する、<ph id="ph1">`Err`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">ヘルプ ファイルのトピックのコンテキスト ID を含む <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">ヘルプ ファイルのトピックのコンテキスト ID を含む <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>The <ph id="ph1">`HelpContext`</ph> property is used to display context-sensitive Help for an application.</source>
          <target state="translated"><ph id="ph1">`HelpContext`</ph>アプリケーションの状況依存のヘルプを表示するプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If a Help file is specified in <ph id="ph1">`HelpFile`</ph>, the <ph id="ph2">`HelpContext`</ph> property is used to automatically display the Help file identified.</source>
          <target state="translated">ヘルプ ファイルがで指定されている場合<ph id="ph1">`HelpFile`</ph>、<ph id="ph2">`HelpContext`</ph>プロパティの使用に自動的に指定されたヘルプ ファイルを表示します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If both the <ph id="ph1">`HelpFile`</ph> and <ph id="ph2">`HelpContext`</ph> properties are empty, the value of the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property  is checked.</source>
          <target state="translated">場合は、両方、<ph id="ph1">`HelpFile`</ph>と<ph id="ph2">`HelpContext`</ph>が空です。 プロパティの値、<ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph>プロパティがチェックします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</source>
          <target state="translated">場合の値、<ph id="ph1">`Number`</ph>プロパティは、Visual Basic ランタイム エラーの値に対応し、エラーの Visual Basic のヘルプ コンテキスト ID を使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</source>
          <target state="translated">場合の値、<ph id="ph1">`Number`</ph>プロパティは、Visual Basic エラーに対応するいないと、Visual Basic のヘルプ ファイルの内容の画面が表示されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">アプリケーション内に、一般的なエラーを処理するルーチンを記述する必要があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">オブジェクトを使用したプログラミング、ときに、エラー処理の品質を向上させるか、エラーは回復できない場合、ユーザーに意味のあるメッセージを表示するオブジェクトのヘルプ ファイルを使用することができます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>This example uses the <ph id="ph1">`HelpContext`</ph> property of the <ph id="ph2">`Err`</ph> object to show the Visual Basic Help topic for the <ph id="ph3">`Overflow`</ph> error.</source>
          <target state="translated">この例では、<ph id="ph1">`HelpContext`</ph>のプロパティ、 <ph id="ph2">`Err`</ph> 、Visual Basic のヘルプ トピックを表示するオブジェクト、<ph id="ph3">`Overflow`</ph>エラーです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">ヘルプ ファイルへの絶対パスを含む <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">ヘルプ ファイルへの絶対パスを含む <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If a Help file is specified by the <ph id="ph1">`HelpFile`</ph> property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</source>
          <target state="translated">ヘルプ ファイルを指定する場合、<ph id="ph1">`HelpFile`</ph>プロパティ、自動的に呼び出されてヘルプ キー (または、F1 キー) を押すエラー メッセージ ダイアログ ボックス。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If the <ph id="ph1">`HelpContext`</ph> property contains a valid context ID for the specified file, that topic is automatically displayed.</source>
          <target state="translated">場合、<ph id="ph1">`HelpContext`</ph>プロパティには、このトピックで、指定されたファイルの ID が自動的に表示されている有効なコンテキストが含まれています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If no <ph id="ph1">`HelpFile`</ph> is specified, the Visual Basic Help file is displayed.</source>
          <target state="translated">ない場合は<ph id="ph1">`HelpFile`</ph>を指定すると、Visual Basic のヘルプ ファイルが表示されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">アプリケーション内に、一般的なエラーを処理するルーチンを記述する必要があります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">オブジェクトを使用したプログラミング、ときに、エラー処理の品質を向上させるか、エラーは回復できない場合、ユーザーに意味のあるメッセージを表示するオブジェクトのヘルプ ファイルを使用することができます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>This example uses the <ph id="ph1">`HelpFile`</ph> property of the <ph id="ph2">`Err`</ph> object to start the Help system.</source>
          <target state="translated">この例では、<ph id="ph1">`HelpFile`</ph>のプロパティ、<ph id="ph2">`Err`</ph>ヘルプ システムを起動するオブジェクト。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>By default, the <ph id="ph1">`HelpFile`</ph> property contains the name of the Visual Basic Help file.</source>
          <target state="translated">既定では、<ph id="ph1">`HelpFile`</ph>プロパティには、Visual Basic のヘルプ ファイルの名前が含まれています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">ダイナミック リンク ライブラリ (DLL) の呼び出しによって生成されたシステム エラー コードを返します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">ダイナミック リンク ライブラリ (DLL) の呼び出しによって生成されたシステム エラー コードを返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">読み取り専用です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property applies only to DLL calls made from Visual Basic code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph>プロパティ Visual Basic コードから DLL の呼び出しにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>When such a call is made, the called function usually returns a code indicating success or failure, and the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is filled.</source>
          <target state="translated">呼び出された関数が通常、成功または失敗を示すコードを返します、このような呼び出しが行われたときに、<ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph>プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</source>
          <target state="translated">成功または失敗を示す戻り値を決定する DLL の関数のドキュメントを確認してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Whenever the failure code is returned, the Visual Basic application should immediately check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property.</source>
          <target state="translated">Visual Basic アプリケーションを直ちに確認する必要がありますエラー コードが返されるたびに、<ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>No exception is raised when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is set.</source>
          <target state="translated">例外が発生しなかったときに、<ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph>プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is protected by <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>, which helps prevent it from being accessed from untrusted code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph>プロパティがによって保護されている<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>を防ぎやすく、信頼されていないコードからアクセスされているからです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>However, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> requires only the immediate caller to have <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> permission.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>のみ即時呼び出し元を持つ必要があります<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph>権限です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If your code can be called from partially trusted code, exposing the value of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> without validation is a security risk.</source>
          <target state="translated">値を公開する場合は、コードは、部分的に信頼されたコードから呼び出すことができます、<ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph>検証は、セキュリティ上のリスクなし。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For important limitations about how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">使用方法に関する重要な制限事項、 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> 、メンバーを参照してください<bpt id="p1">[</bpt>Demand とします。LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For more information about permissions, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">アクセス許可の詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>と<bpt id="p1">[</bpt>コード アクセス許可<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Note   For smart devices this property always returns zero.</source>
          <target state="translated">スマート デバイス用にこのプロパティは常に 0 を返します注意してください。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The following example shows how you can use the <ph id="ph1">`LastDllError`</ph> property after calling a function in the Windows API.</source>
          <target state="translated">次の例を使用する方法を示しています、 <ph id="ph1">`LastDllError`</ph> Windows api 関数を呼び出した後のプロパティです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">`PrintWindowCoordinates`</ph> procedure takes a handle to a window and calls the <ph id="ph2">`GetWindowRect`</ph> function.</source>
          <target state="translated"><ph id="ph1">`PrintWindowCoordinates`</ph>プロシージャでは、ウィンドウと呼び出しに、ハンドル、<ph id="ph2">`GetWindowRect`</ph>関数。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source><ph id="ph1">`GetWindowRect`</ph> fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</source>
          <target state="translated"><ph id="ph1">`GetWindowRect`</ph> ウィンドウを構成する四角形の辺の長さで RECT データ構造体を埋めます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If you pass an invalid handle, an error occurs, and the error number is available through the <ph id="ph1">`LastDllError`</ph> property.</source>
          <target state="translated">エラーが発生して、エラー番号は無効なハンドルを渡す場合、<ph id="ph1">`LastDllError`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">エラーを示す数値を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">エラーを示す数値を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">すべての<ph id="ph1">`Raise`</ph>以外で引数<ph id="ph2">`Number`</ph>は省略可能です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">オプションの引数と、プロパティの設定を省略した場合、<ph id="ph1">`Err`</ph>オブジェクトには、クリアされていない値が含まれている、それらの値が、エラーの値として機能します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated"><ph id="ph1">`Err`</ph>オブジェクトより詳細な情報でエラーを生成する場合よりも、<ph id="ph2">`Error`</ph>ステートメントでは、<ph id="ph3">`Raise`</ph>はクラス モジュールを作成するときにエラーを生成するために便利です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">たとえば、<ph id="ph1">`Raise`</ph>メソッド、エラーを生成したソースで指定することができます、<ph id="ph2">`Source`</ph>プロパティ、エラーのオンライン ヘルプは、参照できるしなどです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>When returning a user-defined error from an object, set <ph id="ph1">`Err.Number`</ph> by adding the number you selected as an error code to the <ph id="ph2">`VbObjectError`</ph> constant.</source>
          <target state="translated">オブジェクトから、ユーザー定義のエラーを返す場合は設定<ph id="ph1">`Err.Number`</ph>エラー コードとして選択した数を加算して、<ph id="ph2">`VbObjectError`</ph>定数。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, you use the following code to return the number 1051 as an error code:</source>
          <target state="translated">たとえば、次のコードを使用して、エラー コードとして 1051 数を返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example illustrates a typical use of the <ph id="ph1">`Number`</ph> property in an error-handling routine.</source>
          <target state="translated">この例の一般的な使用を示しています、<ph id="ph1">`Number`</ph>エラー処理ルーチン内のプロパティです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an original error within a function written in Visual Basic.</source>
          <target state="translated">この例では、<ph id="ph1">`Err`</ph>オブジェクトの<ph id="ph2">`Raise`</ph>Visual Basic で記述された関数内で元のエラーを生成する方法です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>The calling function can catch the error and report it to the user.</source>
          <target state="translated">呼び出し元の関数は、エラーをキャッチし、ユーザーに報告できます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Notice that procedure <ph id="ph1">`CallingProcedure`</ph> contrasts the type of information that you can derive from an <ph id="ph2">`Err`</ph> object with the information that you can derive from an <ph id="ph3">`Exception`</ph> object.</source>
          <target state="translated">そのプロシージャに注意してください<ph id="ph1">`CallingProcedure`</ph>を派生させる情報の種類を対比、<ph id="ph2">`Err`</ph>オブジェクトから派生できる情報を<ph id="ph3">`Exception`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is greater than 65535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> が 65535 より大きい値です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">必須。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph> integer that identifies the nature of the error.</source>
          <target state="translated">エラーの性質を識別する <ph id="ph1">&lt;see langword="Long" /&gt;</ph> 型の整数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</source>
          <target state="translated">Visual Basic エラーの番号は 0 ～ 65535 の範囲です。0 ～ 512 はシステム エラー用に予約されています。513 ～ 65535 はユーザー定義エラーに使用できます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property to your own error code in a class module, you add your error code number to the <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph> constant.</source>
          <target state="translated">クラス モジュールの <ph id="ph1">&lt;see langword="Number" /&gt;</ph> プロパティに固有のエラー コードを設定する場合は、エラー コード番号を <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph> 定数に追加する必要があります。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, to generate the error number 513, assign <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property.</source>
          <target state="translated">たとえば、エラー番号 513 を生成するには、<bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> を <ph id="ph1">&lt;see langword="Number" /&gt;</ph> プロパティに割り当てます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression naming the object or application that generated the error.</source>
          <target state="translated">エラーが生成されたオブジェクトまたはアプリケーションを指定する <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting this property for an object, use the form <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">オブジェクトに対してこのプロパティを設定する場合は、<bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept> の形式を使用します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept> is not specified, the process ID of the current Visual Basic project is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept> が指定されていない場合は、現在の Visual Basic プロジェクトのプロセス ID が使用されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression describing the error.</source>
          <target state="translated">エラーを説明する <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, the value in the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is examined.</source>
          <target state="translated">省略した場合、<ph id="ph1">&lt;see langword="Number" /&gt;</ph> プロパティの値が調べられます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> function is used as the <ph id="ph2">&lt;see langword="Description" /&gt;</ph> property.</source>
          <target state="translated">Visual Basic 実行時エラー コードに対応する可能性がある場合、<ph id="ph1">&lt;see langword="Error" /&gt;</ph> 関数によって返される文字列は <ph id="ph2">&lt;see langword="Description" /&gt;</ph> プロパティとして使用されます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If there is no Visual Basic error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property, the "Application-defined or object-defined error" message is used.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Number" /&gt;</ph> プロパティに対応する Visual Basic エラーがなかった場合は、"アプリケーション定義エラーまたはオブジェクト定義エラー" メッセージが使用されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The fully qualified path to the Help file in which help on this error can be found.</source>
          <target state="translated">このエラーのヘルプが含まれているヘルプ ファイルへの絶対パス。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</source>
          <target state="translated">省略した場合、Visual Basic は Visual Basic ヘルプ ファイルの完全修飾されたドライブ、パス、およびファイル名を使用します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The context ID identifying a topic within <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> that provides help for the error.</source>
          <target state="translated">エラーのヘルプを提供する <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> 内のトピックを識別するコンテキスト ID。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If omitted, the Visual Basic Help-file context ID for the error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is used, if it exists.</source>
          <target state="translated">省略した場合、<ph id="ph1">&lt;see langword="Number" /&gt;</ph> プロパティに対応するエラーの Visual Basic ヘルプ ファイルのコンテキスト ID が使用されます (存在する場合)。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Generates a run-time error; can be used instead of the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> statement.</source>
          <target state="translated">実行時エラーを生成します。<ph id="ph1">&lt;see langword="Error" /&gt;</ph> ステートメントの代わりに使用できます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">すべての<ph id="ph1">`Raise`</ph>以外で引数<ph id="ph2">`Number`</ph>は省略可能です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">オプションの引数と、プロパティの設定を省略した場合、<ph id="ph1">`Err`</ph>オブジェクトには、クリアされていない値が含まれている、それらの値が、エラーの値として機能します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated"><ph id="ph1">`Err`</ph>オブジェクトより詳細な情報でエラーを生成する場合よりも、<ph id="ph2">`Error`</ph>ステートメントでは、<ph id="ph3">`Raise`</ph>はクラス モジュールを作成するときにエラーを生成するために便利です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">たとえば、<ph id="ph1">`Raise`</ph>メソッド、エラーを生成したソースで指定することができます、<ph id="ph2">`Source`</ph>プロパティ、エラーのオンライン ヘルプは、参照できるしなどです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an error within a function written in Visual Basic.</source>
          <target state="translated">この例では、<ph id="ph1">`Err`</ph>オブジェクトの<ph id="ph2">`Raise`</ph>Visual Basic で記述された関数内でエラーを生成する方法です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The calling function can catch the error and report it to the user with a message box.</source>
          <target state="translated">呼び出し元の関数は、エラーをキャッチし、メッセージ ボックスを持つユーザーに報告できます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">最初にエラーを生成したオブジェクトまたはアプリケーションの名前を示す <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">最初にエラーを生成したオブジェクトまたはアプリケーションの名前を示す <ph id="ph1">&lt;see langword="String" /&gt;</ph> 型の式を返すか、または設定します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">読み取り/書き込み。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>The <ph id="ph1">`Source`</ph> property specifies a <ph id="ph2">`String`</ph> expression representing the object that generated the error; the expression is usually the object's class name or process ID.</source>
          <target state="translated"><ph id="ph1">`Source`</ph>プロパティを指定します、<ph id="ph2">`String`</ph>オブジェクトを表す式、エラーを生成する以外の場合は、式は、通常、オブジェクトのクラス名またはプロセス id です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Use the <ph id="ph1">`Source`</ph> property to provide information when your code is unable to handle an error generated in an accessed object.</source>
          <target state="translated">使用して、<ph id="ph1">`Source`</ph>プロパティをコードがアクセス先のオブジェクトで生成されたエラーを処理できない場合は、情報を提供します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For example, if you access Microsoft Excel and it generates a <ph id="ph1">`Division by zero`</ph> error, Microsoft Excel sets <ph id="ph2">`Err.Number`</ph> to its error code for that error and sets <ph id="ph3">`Source`</ph> to "Excel.Application".</source>
          <target state="translated">たとえば、Microsoft Excel にアクセスして、生成、<ph id="ph1">`Division by zero`</ph>エラー、Microsoft Excel 設定<ph id="ph2">`Err.Number`</ph>セットをそのエラーの場合は、そのエラー コードを<ph id="ph3">`Source`</ph>「始めます」にします。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When the application is generating an error from code, <ph id="ph1">`Source`</ph> is your application's programmatic ID.</source>
          <target state="translated">アプリケーションが、コードからエラーを生成するときに<ph id="ph1">`Source`</ph>アプリケーションのプログラムによる ID です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Within a class, <ph id="ph1">`Source`</ph> should contain a name having the form <bpt id="p1">*</bpt>project<ept id="p1">*</ept>.<bpt id="p2">*</bpt>class<ept id="p2">*</ept>.</source>
          <target state="translated">クラス内で<ph id="ph1">`Source`</ph>形式を持つ名前を含める必要があります<bpt id="p1">*</bpt>プロジェクト<ept id="p1">*</ept>.<bpt id="p2">*</bpt>クラス<ept id="p2">*</ept>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an unexpected error occurs in your code, the <ph id="ph1">`Source`</ph> property is automatically filled in.</source>
          <target state="translated">コードで予期しないエラーが発生したときに、<ph id="ph1">`Source`</ph>にプロパティが自動的に入力します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For errors in a module, <ph id="ph1">`Source`</ph> contains the project name.</source>
          <target state="translated">モジュールの場合、エラー<ph id="ph1">`Source`</ph>プロジェクト名が含まれています。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This example demonstrates the use of the <ph id="ph1">`Source`</ph> property in a typical error-handling routine.</source>
          <target state="translated">この例での使用、<ph id="ph1">`Source`</ph>一般的なエラー処理ルーチン内のプロパティです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an error is raised from <ph id="ph1">`Class1`</ph>, the string <ph id="ph2">`"Class1"`</ph> is assigned to the <ph id="ph3">`Source`</ph> property of the <ph id="ph4">`Err`</ph> object.</source>
          <target state="translated">エラーが発生すると<ph id="ph1">`Class1`</ph>、文字列<ph id="ph2">`"Class1"`</ph>に割り当てられている、<ph id="ph3">`Source`</ph>のプロパティ、<ph id="ph4">`Err`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This string is then displayed in an informative message indicating the source and number of the error.</source>
          <target state="translated">この文字列がソースと、エラーの数を示す情報メッセージに表示されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>