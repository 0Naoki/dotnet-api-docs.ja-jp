<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45c777b42bfcb723ac69a7530f5c3b2670539357" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70345423" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="562b3-101"><see langword="ErrObject" /> モジュールに含まれているプロパティおよびプロシージャを使用して、<see langword="Err" /> オブジェクトによる実行時エラーの識別と処理を実行します。</span><span class="sxs-lookup"><span data-stu-id="562b3-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-102">モジュール`ErrObject`はオブジェクトを`Err`サポートしています。</span><span class="sxs-lookup"><span data-stu-id="562b3-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="562b3-103">詳細については、「<xref:Microsoft.VisualBasic.Information.Err%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="562b3-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-104">この例では、 `Err`オブジェクトのプロパティを使用して、エラーメッセージダイアログボックスを構築します。</span><span class="sxs-lookup"><span data-stu-id="562b3-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="562b3-105">最初にメソッドを使用すると`Clear` 、次のような結果になります。その後、 `Raise`メソッドを使用して Visual Basic エラーを生成すると、Visual Basic の既定値が`Err`オブジェクトのプロパティになります。</span><span class="sxs-lookup"><span data-stu-id="562b3-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="562b3-106">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="562b3-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="562b3-107">Try...Catch...Finally ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="562b3-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="562b3-108">キーワード (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="562b3-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="562b3-109">ランタイムライブラリのメンバーの Visual Basic</span><span class="sxs-lookup"><span data-stu-id="562b3-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="562b3-110"><see langword="Err" /> オブジェクトのプロパティ設定をすべてクリアします。</span><span class="sxs-lookup"><span data-stu-id="562b3-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-111">`Err`で`Clear` 遅延エラー処理を使用する場合など、エラーが処理された後にオブジェクトを明示的にクリアするには、を使用します。`On Error Resume Next`</span><span class="sxs-lookup"><span data-stu-id="562b3-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="562b3-112">`Clear`メソッドは、次のいずれかのステートメントが実行されるたびに自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="562b3-113">任意の種類`Resume`のステートメント</span><span class="sxs-lookup"><span data-stu-id="562b3-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="562b3-114">`Exit Sub`、 `Exit Function`、または `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="562b3-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="562b3-115">任意`On Error`のステートメント</span><span class="sxs-lookup"><span data-stu-id="562b3-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="562b3-116">任意`Try...Catch...Finally`のステートメント</span><span class="sxs-lookup"><span data-stu-id="562b3-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="562b3-117">他`On Error Resume Next`のオブジェクトへのアクセス`On Error GoTo`中に発生したエラーを処理する場合は、コンストラクトの方が適している場合があります。</span><span class="sxs-lookup"><span data-stu-id="562b3-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="562b3-118">オブジェクト`Err`との各操作を実行した後に、コードによってアクセスされたオブジェクトがあいまいになることを確認します。エラーコード`Err.Number`を配置したオブジェクトと、最初にエラーを生成したオブジェクト (で`Err.Source`指定されたオブジェクト) を確認できます。</span><span class="sxs-lookup"><span data-stu-id="562b3-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-119">この例では`Err` 、 `Clear`オブジェクトのメソッドを使用して、 `Err`オブジェクトの数値プロパティを0に、その文字列プロパティを長さ0の文字列にリセットします。</span><span class="sxs-lookup"><span data-stu-id="562b3-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="562b3-120">を`Clear`呼び出さないと、へ`MsgBox`の2回目の呼び出しで同じエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="562b3-121">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="562b3-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-122">エラーに関連する説明文字列を含む <see langword="String" /> 型の式を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="562b3-123">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="562b3-124">エラーに関連する説明文字列を含む <see langword="String" /> 型の式を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="562b3-125">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-126">プロパティ`Description`の設定は、エラーの簡単な説明で構成されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="562b3-127">このプロパティを使用して、ユーザーに処理することができない、または処理しないエラーを通知します。</span><span class="sxs-lookup"><span data-stu-id="562b3-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="562b3-128">ユーザー定義エラーを生成する場合は、エラーの簡単な説明を`Description`プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="562b3-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="562b3-129">プロパティに値が設定されておらず、 <xref:Microsoft.VisualBasic.ErrObject.Number%2A>プロパティの値が Visual Basic ランタイムエラーに対応している場合は、エラーが生成<xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>されたときに`Description` 、関数によって返された文字列がプロパティに設定されます。 `Description`</span><span class="sxs-lookup"><span data-stu-id="562b3-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-130">この例では、 `Description` `Err`オブジェクトのプロパティにユーザー定義メッセージを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="562b3-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-131">最後に実行されたステートメントの行番号を示す整数を取得します。</span><span class="sxs-lookup"><span data-stu-id="562b3-131">Gets an integer indicating the line number of the last executed statement.</span></span></summary>
        <value><span data-ttu-id="562b3-132">最後に実行されたステートメントの行番号。</span><span class="sxs-lookup"><span data-stu-id="562b3-132">The line number of the last executed statement.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-133">Visual Basic で行番号が検出されなかった場合は、0を返します。</span><span class="sxs-lookup"><span data-stu-id="562b3-133">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-134">この例では`Erl` 、プロパティを使用して行番号を示しています。</span><span class="sxs-lookup"><span data-stu-id="562b3-134">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetException() cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="562b3-135">発生したエラーを表す例外を返します。</span><span class="sxs-lookup"><span data-stu-id="562b3-135">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="562b3-136">発生したエラーを表す例外。</span><span class="sxs-lookup"><span data-stu-id="562b3-136">The exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-137">関数は、 `Err` object クラスからのみ使用できます。 `GetException`</span><span class="sxs-lookup"><span data-stu-id="562b3-137">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="562b3-138">オブジェクトのプロパティ`Exception`と連携して、発生したエラーを表示します。 `Err`</span><span class="sxs-lookup"><span data-stu-id="562b3-138">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-139">次のコードは、 `Err`オブジェクトの例外に割り当てられたメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="562b3-139">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-140">ヘルプ ファイルのトピックのコンテキスト ID を含む <see langword="Integer" /> を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-140">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="562b3-141">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-141">Read/write.</span></span></summary>
        <value><span data-ttu-id="562b3-142">ヘルプ ファイルのトピックのコンテキスト ID を含む <see langword="Integer" /> を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="562b3-143">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-143">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-144">プロパティ`HelpContext`は、アプリケーションの状況依存のヘルプを表示するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-144">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="562b3-145">ヘルプファイルがで`HelpFile`指定されて`HelpContext`いる場合、プロパティは、識別されたヘルプファイルを自動的に表示するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-145">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="562b3-146">プロパティ`HelpFile` <xref:Microsoft.VisualBasic.ErrObject.Number%2A>と`HelpContext`プロパティの両方が空の場合、プロパティの値がチェックされます。</span><span class="sxs-lookup"><span data-stu-id="562b3-146">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="562b3-147">`Number`プロパティの値が Visual Basic の実行時エラー値に対応している場合は、エラーの Visual Basic ヘルプコンテキスト ID が使用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-147">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="562b3-148">`Number`プロパティの値が Visual Basic エラーに対応していない場合は、Visual Basic ヘルプファイルの [コンテンツ] 画面が表示されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-148">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="562b3-149">一般的なエラーを処理するには、アプリケーションにルーチンを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="562b3-149">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="562b3-150">オブジェクトを使用してプログラミングする場合は、オブジェクトのヘルプファイルを使用してエラー処理の品質を向上させたり、エラーが回復できない場合にユーザーにわかりやすいメッセージを表示したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="562b3-150">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-151">この例では`HelpContext` 、 `Err`オブジェクトのプロパティを使用して、 `Overflow`エラーの Visual Basic ヘルプトピックを表示します。</span><span class="sxs-lookup"><span data-stu-id="562b3-151">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-152">ヘルプ ファイルへの絶対パスを含む <see langword="String" /> 型の式を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-152">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="562b3-153">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-153">Read/write.</span></span></summary>
        <value><span data-ttu-id="562b3-154">ヘルプ ファイルへの絶対パスを含む <see langword="String" /> 型の式を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="562b3-155">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-155">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-156">ヘルプファイルが`HelpFile`プロパティによって指定されている場合は、ユーザーが [エラーメッセージ] ダイアログボックスでヘルプキー (または F1 キー) を押したときに自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-156">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="562b3-157">`HelpContext`プロパティに、指定したファイルの有効なコンテキスト ID が格納されている場合は、そのトピックが自動的に表示されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-157">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="562b3-158">`HelpFile`が指定されていない場合は、Visual Basic ヘルプファイルが表示されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-158">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="562b3-159">一般的なエラーを処理するには、アプリケーションにルーチンを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="562b3-159">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="562b3-160">オブジェクトを使用してプログラミングする場合は、オブジェクトのヘルプファイルを使用してエラー処理の品質を向上させたり、エラーが回復できない場合にユーザーにわかりやすいメッセージを表示したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="562b3-160">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-161">この例では`HelpFile` 、 `Err`オブジェクトのプロパティを使用して、ヘルプシステムを起動します。</span><span class="sxs-lookup"><span data-stu-id="562b3-161">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="562b3-162">既定では、 `HelpFile`プロパティに Visual Basic ヘルプファイルの名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="562b3-162">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-163">ダイナミック リンク ライブラリ (DLL) の呼び出しによって生成されたシステム エラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="562b3-163">Gets a system error code produced by a call to a dynamic-link library (DLL).</span></span></summary>
        <value><span data-ttu-id="562b3-164">ダイナミックリンクライブラリ (DLL) への呼び出しによって生成されたシステムエラーコード。</span><span class="sxs-lookup"><span data-stu-id="562b3-164">A system error code produced by a call to a dynamic-link library (DLL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-165">プロパティ<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>は、Visual Basic コードから行われた DLL 呼び出しにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-165">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="562b3-166">このような呼び出しが行われると、呼び出された関数は、通常は成功または失敗<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>を示すコードを返し、プロパティが入力されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-166">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="562b3-167">DLL の関数のドキュメントを参照して、成功または失敗を示す戻り値を確認します。</span><span class="sxs-lookup"><span data-stu-id="562b3-167">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="562b3-168">エラーコードが返されるたびに、Visual Basic アプリケーションはプロパティを<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>すぐに確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="562b3-168">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="562b3-169">プロパティが設定されて<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>いる場合、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="562b3-169">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="562b3-170">プロパティ<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>はによって<xref:System.Security.Permissions.SecurityAction.LinkDemand>保護されるため、信頼されていないコードからのアクセスを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="562b3-170">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="562b3-171">ただし、 <xref:System.Security.Permissions.SecurityAction.LinkDemand>には、直接の呼び出し元<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>だけがアクセス許可を持っている必要があります。</span><span class="sxs-lookup"><span data-stu-id="562b3-171">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="562b3-172">部分的に信頼されているコードからコードを呼び出すことが<xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A>できる場合、検証せずにの値を公開すると、セキュリティ上のリスクがあります。</span><span class="sxs-lookup"><span data-stu-id="562b3-172">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="562b3-173">メンバーの<xref:System.Security.Permissions.SecurityAction.LinkDemand>使用方法に関する重要な制限事項に[ついては、「Demand vs」を参照してください。LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)。</span><span class="sxs-lookup"><span data-stu-id="562b3-173">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="562b3-174">アクセス許可の詳細について<xref:System.Security.Permissions.SecurityPermission>は、「」および「[コードアクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="562b3-174">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="562b3-175">注: スマートデバイスの場合、このプロパティは常に0を返します。</span><span class="sxs-lookup"><span data-stu-id="562b3-175">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-176">次の例は、Windows API で関数`LastDllError`を呼び出した後にプロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="562b3-176">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="562b3-177">プロシージャ`PrintWindowCoordinates`はウィンドウへのハンドルを受け取り、 `GetWindowRect`関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="562b3-177">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="562b3-178">`GetWindowRect`ウィンドウを構成する四角形の辺の長さを四角形のデータ構造体に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="562b3-178">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="562b3-179">無効なハンドルを渡した場合、エラーが発生し、エラー番号はプロパティを`LastDllError`通じて取得できます。</span><span class="sxs-lookup"><span data-stu-id="562b3-179">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-180">エラーを示す数値を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-180">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="562b3-181">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-181">Read/write.</span></span></summary>
        <value><span data-ttu-id="562b3-182">エラーを示す数値を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-182">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="562b3-183">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-183">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-184">`Raise` 以外`Number`のすべての引数は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="562b3-184">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="562b3-185">省略可能な引数を省略し、 `Err`オブジェクトのプロパティ設定にクリアされていない値が含まれている場合、それらの値はエラーの値として機能します。</span><span class="sxs-lookup"><span data-stu-id="562b3-185">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="562b3-186">オブジェクトは`Err` 、 `Error`ステートメントを使用してエラーを生成する場合よりも`Raise`豊富な情報を提供するので、はクラスモジュールの記述時にエラーを生成するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="562b3-186">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="562b3-187">たとえば、 `Raise`メソッドを使用すると、エラーを生成したソースを`Source`プロパティで指定できます。エラーのオンラインヘルプを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="562b3-187">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="562b3-188">オブジェクトからユーザー定義エラーを返す場合は、選択し`Err.Number`た数値をエラーコードとして`VbObjectError`定数に追加してを設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-188">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="562b3-189">たとえば、次のコードを使用して、エラーコードとして数値1051を返します。</span><span class="sxs-lookup"><span data-stu-id="562b3-189">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="562b3-190">この例は、エラー処理ルーチンで`Number`のプロパティの一般的な使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="562b3-190">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="562b3-191">この例では`Err` 、オブジェクト`Raise`のメソッドを使用して、Visual Basic で記述された関数内で元のエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="562b3-191">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="562b3-192">呼び出し元の関数は、エラーをキャッチしてユーザーに報告できます。</span><span class="sxs-lookup"><span data-stu-id="562b3-192">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="562b3-193">このプロシージャ`CallingProcedure`は、オブジェクト`Err`から派生できる情報の種類と、 `Exception`オブジェクトから派生できる情報を比較することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="562b3-193">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="562b3-194"><paramref name="Number" /> が 65535 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="562b3-194"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="562b3-195">必須です。</span><span class="sxs-lookup"><span data-stu-id="562b3-195">Required.</span></span> <span data-ttu-id="562b3-196">エラーの性質を識別する <see langword="Long" /> 型の整数。</span><span class="sxs-lookup"><span data-stu-id="562b3-196"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="562b3-197">Visual Basic エラーの番号は 0 から 65535 の範囲です。0 から 512 はシステム エラー用に予約されています。513 から 65535 はユーザー定義エラーに使用できます。</span><span class="sxs-lookup"><span data-stu-id="562b3-197">Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.</span></span> <span data-ttu-id="562b3-198">クラス モジュールの <see langword="Number" /> プロパティに固有のエラー コードを設定する場合は、エラー コード番号を <see langword="vbObjectError" /> 定数に追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="562b3-198">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="562b3-199">たとえば、エラー番号 513 を生成するには、<c>vbObjectError + 513</c> を <see langword="Number" /> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="562b3-199">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="562b3-200">任意。</span><span class="sxs-lookup"><span data-stu-id="562b3-200">Optional.</span></span> <span data-ttu-id="562b3-201">エラーが生成されたオブジェクトまたはアプリケーションを指定する <see langword="String" /> 型の式。</span><span class="sxs-lookup"><span data-stu-id="562b3-201"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="562b3-202">オブジェクトに対してこのプロパティを設定する場合は、<c>project</c>.<c>class</c> の形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="562b3-202">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="562b3-203"><paramref name="Source" /> が指定されていない場合は、現在の Visual Basic プロジェクトのプロセス ID が使用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-203">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="562b3-204">任意。</span><span class="sxs-lookup"><span data-stu-id="562b3-204">Optional.</span></span> <span data-ttu-id="562b3-205">エラーを説明する <see langword="String" /> 型の式。</span><span class="sxs-lookup"><span data-stu-id="562b3-205"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="562b3-206">省略した場合、<see langword="Number" /> プロパティの値が調べられます。</span><span class="sxs-lookup"><span data-stu-id="562b3-206">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="562b3-207">Visual Basic 実行時エラー コードに対応する可能性がある場合、<see langword="Error" /> 関数によって返される文字列は <see langword="Description" /> プロパティとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-207">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="562b3-208"><see langword="Number" /> プロパティに対応する Visual Basic エラーがなかった場合は、"アプリケーション定義エラーまたはオブジェクト定義エラー" メッセージが使用されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-208">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="562b3-209">任意。</span><span class="sxs-lookup"><span data-stu-id="562b3-209">Optional.</span></span> <span data-ttu-id="562b3-210">このエラーのヘルプが含まれているヘルプ ファイルへの絶対パス。</span><span class="sxs-lookup"><span data-stu-id="562b3-210">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="562b3-211">省略した場合、Visual Basic は Visual Basic ヘルプ ファイルの完全修飾されたドライブ、パス、およびファイル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="562b3-211">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="562b3-212">任意。</span><span class="sxs-lookup"><span data-stu-id="562b3-212">Optional.</span></span> <span data-ttu-id="562b3-213">エラーのヘルプを提供する <paramref name="HelpFile" /> 内のトピックを識別するコンテキスト ID。</span><span class="sxs-lookup"><span data-stu-id="562b3-213">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="562b3-214">省略した場合、<see langword="Number" /> プロパティに対応するエラーの Visual Basic ヘルプ ファイルのコンテキスト ID が使用されます (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="562b3-214">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="562b3-215">実行時エラーを生成します。<see langword="Error" /> ステートメントの代わりに使用できます。</span><span class="sxs-lookup"><span data-stu-id="562b3-215">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-216">`Raise` 以外`Number`のすべての引数は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="562b3-216">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="562b3-217">省略可能な引数を省略し、 `Err`オブジェクトのプロパティ設定にクリアされていない値が含まれている場合、それらの値はエラーの値として機能します。</span><span class="sxs-lookup"><span data-stu-id="562b3-217">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="562b3-218">オブジェクトは`Err` 、 `Error`ステートメントを使用してエラーを生成する場合よりも`Raise`豊富な情報を提供するので、はクラスモジュールの記述時にエラーを生成するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="562b3-218">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="562b3-219">たとえば、 `Raise`メソッドを使用すると、エラーを生成したソースを`Source`プロパティで指定できます。エラーのオンラインヘルプを参照することもできます。</span><span class="sxs-lookup"><span data-stu-id="562b3-219">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-220">この例では`Err` 、オブジェクト`Raise`のメソッドを使用して、Visual Basic で記述された関数内でエラーを生成します。</span><span class="sxs-lookup"><span data-stu-id="562b3-220">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="562b3-221">呼び出し元の関数は、エラーをキャッチし、メッセージボックスを使用してユーザーに報告できます。</span><span class="sxs-lookup"><span data-stu-id="562b3-221">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="562b3-222">Error ステートメント</span><span class="sxs-lookup"><span data-stu-id="562b3-222">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="562b3-223">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="562b3-223">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="562b3-224">最初にエラーを生成したオブジェクトまたはアプリケーションの名前を示す <see langword="String" /> 型の式を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-224">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="562b3-225">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-225">Read/write.</span></span></summary>
        <value><span data-ttu-id="562b3-226">最初にエラーを生成したオブジェクトまたはアプリケーションの名前を示す <see langword="String" /> 型の式を返すか、または設定します。</span><span class="sxs-lookup"><span data-stu-id="562b3-226">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="562b3-227">読み取り/書き込み。</span><span class="sxs-lookup"><span data-stu-id="562b3-227">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="562b3-228">プロパティ`Source`は、エラー `String`を生成したオブジェクトを表す式を指定します。通常、式は、オブジェクトのクラス名またはプロセス ID です。</span><span class="sxs-lookup"><span data-stu-id="562b3-228">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="562b3-229">プロパティは`Source` 、アクセスされたオブジェクトで生成されるエラーをコードが処理できない場合に情報を提供するために使用します。</span><span class="sxs-lookup"><span data-stu-id="562b3-229">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="562b3-230">たとえば、microsoft excel にアクセスして`Division by zero`エラーが生成された場合、microsoft excel はそのエラーのエラーコードをに設定`Err.Number`し、を "Excel. アプリケーション" に設定`Source`します。</span><span class="sxs-lookup"><span data-stu-id="562b3-230">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="562b3-231">アプリケーションがコードからエラーを生成している`Source`場合、はアプリケーションのプログラム ID です。</span><span class="sxs-lookup"><span data-stu-id="562b3-231">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="562b3-232">クラス内には`Source` 、フォーム*プロジェクト*を持つ名前が含まれている必要があります。*クラス*。</span><span class="sxs-lookup"><span data-stu-id="562b3-232">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="562b3-233">コードで予期しないエラーが発生すると`Source` 、プロパティは自動的に入力されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-233">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="562b3-234">モジュールのエラーの場合は`Source` 、プロジェクト名が含まれます。</span><span class="sxs-lookup"><span data-stu-id="562b3-234">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="562b3-235">この例では、一般的な`Source`エラー処理ルーチンでプロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="562b3-235">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="562b3-236">から`Class1`エラーが発生した場合、文字列`"Class1"`は`Err`オブジェクトの`Source`プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="562b3-236">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="562b3-237">この文字列は、エラーのソースと番号を示す情報メッセージに表示されます。</span><span class="sxs-lookup"><span data-stu-id="562b3-237">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="562b3-238">On Error ステートメント (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="562b3-238">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
