<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59d35cb4d0012b6046a7dc9eaed7c9256370add6" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52210117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca723-101">
        <see langword="DateAndTime" /> モジュールには、日付と時刻の操作に使用されるプロシージャとプロパティが含まれています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca723-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-102">このモジュールは、Visual Basic 言語のキーワードとランタイム ライブラリ メンバーであるため、現在の日付または時刻の取得、日付計算の実行、日付または時刻を返す、日付や時刻などを設定またはプロセスの時間をサポートします。</span><span class="sxs-lookup"><span data-stu-id="ca723-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-103">この例では、`Today`プロパティの現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/dates-and-times-summary.md">
      <span data-ttu-id="ca723-104">日付と時刻の概要</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca723-104">Dates and Times Summary</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">
      <span data-ttu-id="ca723-105">キーワード (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca723-105">Keywords (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">
      <span data-ttu-id="ca723-106">Visual Basic ランタイム ライブラリ メンバー</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca723-106">Visual Basic Run-Time Library Members</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-107">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-107">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="ca723-108">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-108">Required.</span>
          </span>
          <span data-ttu-id="ca723-109">加算する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-109">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="ca723-110">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-110">Required.</span>
          </span>
          <span data-ttu-id="ca723-111">
            <see langword="Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-111">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="ca723-112">加算する時間間隔を表す浮動小数点式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-112">Floating-point expression representing the number of intervals you want to add.</span>
          </span>
          <span data-ttu-id="ca723-113">
            <paramref name="Number" /> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-113">
              <paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span>
          </span>
          <span data-ttu-id="ca723-114">
            <paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-114">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span>
          </span>
          <span data-ttu-id="ca723-115">その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-115">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="ca723-116">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-116">Required.</span>
          </span>
          <span data-ttu-id="ca723-117">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-117">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="ca723-118">時間間隔を加算する日時を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-118">An expression representing the date and time to which the interval is to be added.</span>
          </span>
          <span data-ttu-id="ca723-119">
            <paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-119">
              <paramref name="DateValue" /> itself is not changed in the calling program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-120">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-120">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-121">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-121">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-122">使用することができます、`DateAdd`関数を追加または日付から指定した時間間隔を減算します。</span><span class="sxs-lookup"><span data-stu-id="ca723-122">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="ca723-123">たとえば、今すぐ今日または時間 45 分前に、から 30 日の日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="ca723-123">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="ca723-124">日数を加算する`DateValue`、使用することができます`DateInterval.Day`、 `DateInterval.DayOfYear`、または`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-124">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="ca723-125">の同等として処理`DayOfYear`と`Weekday`意味のある時間間隔ではありません。</span><span class="sxs-lookup"><span data-stu-id="ca723-125">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="ca723-126">`DateAdd`関数が無効な日付を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="ca723-126">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="ca723-127">必要に応じて、結果として得られる結果の年の月の最終日に、結果として得られる日付の日の部分が下方調整されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-127">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="ca723-128">次の例では、1 月 31 日に 1 か月が追加されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-128">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="ca723-129">この例で`DateAdd`返します`#2/28/1995#`ではなく、`#2/31/1995#`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-129">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="ca723-130">場合`DateValue`は`#1/31/1996#`、返します`#2/29/1996#`1996 が閏年であるためです。</span><span class="sxs-lookup"><span data-stu-id="ca723-130">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca723-131">`DateAdd` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-131">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="ca723-132">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-132">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="ca723-133">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔を加算する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="ca723-133">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="ca723-134">ミリ秒単位に丸められますの日の小数部の数を追加するなど、`Date`変数として次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ca723-134">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="ca723-135">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-135">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-136">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-136">Enumeration value</span></span>|<span data-ttu-id="ca723-137">String</span><span class="sxs-lookup"><span data-stu-id="ca723-137">String</span></span>|<span data-ttu-id="ca723-138">加算する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="ca723-138">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="ca723-139">d</span><span class="sxs-lookup"><span data-stu-id="ca723-139">d</span></span>|<span data-ttu-id="ca723-140">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-140">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="ca723-141">Y</span><span class="sxs-lookup"><span data-stu-id="ca723-141">y</span></span>|<span data-ttu-id="ca723-142">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-142">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="ca723-143">h</span><span class="sxs-lookup"><span data-stu-id="ca723-143">h</span></span>|<span data-ttu-id="ca723-144">1 時間です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="ca723-144">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="ca723-145">n</span><span class="sxs-lookup"><span data-stu-id="ca723-145">n</span></span>|<span data-ttu-id="ca723-146">時間は 1 分ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="ca723-146">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="ca723-147">m</span><span class="sxs-lookup"><span data-stu-id="ca723-147">m</span></span>|<span data-ttu-id="ca723-148">月です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-148">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="ca723-149">q</span><span class="sxs-lookup"><span data-stu-id="ca723-149">q</span></span>|<span data-ttu-id="ca723-150">四半期です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-150">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="ca723-151">s</span><span class="sxs-lookup"><span data-stu-id="ca723-151">s</span></span>|<span data-ttu-id="ca723-152">秒です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="ca723-152">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="ca723-153">週</span><span class="sxs-lookup"><span data-stu-id="ca723-153">w</span></span>|<span data-ttu-id="ca723-154">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-154">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="ca723-155">ww</span><span class="sxs-lookup"><span data-stu-id="ca723-155">ww</span></span>|<span data-ttu-id="ca723-156">1 週間です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-156">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="ca723-157">yyyy</span><span class="sxs-lookup"><span data-stu-id="ca723-157">yyyy</span></span>|<span data-ttu-id="ca723-158">年。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-158">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-159">この例では、日付と、使用、`DateAdd`関数を指定した数か月間、将来の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca723-159">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-160">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-160">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-161">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-161">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca723-162">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-162">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-163">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-163">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="ca723-164">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-164">Required.</span>
          </span>
          <span data-ttu-id="ca723-165">加算する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-165">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="ca723-166">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-166">Required.</span>
          </span>
          <span data-ttu-id="ca723-167">
            <see langword="Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-167">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="ca723-168">加算する時間間隔を表す浮動小数点式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-168">Floating-point expression representing the number of intervals you want to add.</span>
          </span>
          <span data-ttu-id="ca723-169">
            <paramref name="Number" /> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-169">
              <paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span>
          </span>
          <span data-ttu-id="ca723-170">
            <paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-170">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span>
          </span>
          <span data-ttu-id="ca723-171">その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-171">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="ca723-172">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-172">Required.</span>
          </span>
          <span data-ttu-id="ca723-173">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-173">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="ca723-174">時間間隔を加算する日時を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-174">An expression representing the date and time to which the interval is to be added.</span>
          </span>
          <span data-ttu-id="ca723-175">
            <paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-175">
              <paramref name="DateValue" /> itself is not changed in the calling program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-176">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-176">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-177">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-177">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-178">使用することができます、`DateAdd`関数を追加または日付から指定した時間間隔を減算します。</span><span class="sxs-lookup"><span data-stu-id="ca723-178">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="ca723-179">たとえば、今すぐ今日または時間 45 分前に、から 30 日の日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="ca723-179">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="ca723-180">日数を加算する`DateValue`、使用することができます`DateInterval.Day`、 `DateInterval.DayOfYear`、または`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-180">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="ca723-181">の同等として処理`DayOfYear`と`Weekday`意味のある時間間隔ではありません。</span><span class="sxs-lookup"><span data-stu-id="ca723-181">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="ca723-182">`DateAdd`関数が無効な日付を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="ca723-182">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="ca723-183">必要に応じて、結果として得られる結果の年の月の最終日に、結果として得られる日付の日の部分が下方調整されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-183">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="ca723-184">次の例では、1 月 31 日に 1 か月が追加されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-184">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="ca723-185">この例で`DateAdd`返します`#2/28/1995#`ではなく、`#2/31/1995#`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-185">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="ca723-186">場合`DateValue`は`#1/31/1996#`、返します`#2/29/1996#`1996 が閏年であるためです。</span><span class="sxs-lookup"><span data-stu-id="ca723-186">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca723-187">`DateAdd` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-187">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="ca723-188">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-188">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="ca723-189">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔を加算する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="ca723-189">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="ca723-190">ミリ秒単位に丸められますの日の小数部の数を追加するなど、`Date`変数として次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ca723-190">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="ca723-191">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-191">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-192">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-192">Enumeration value</span></span>|<span data-ttu-id="ca723-193">String</span><span class="sxs-lookup"><span data-stu-id="ca723-193">String</span></span>|<span data-ttu-id="ca723-194">加算する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="ca723-194">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="ca723-195">d</span><span class="sxs-lookup"><span data-stu-id="ca723-195">d</span></span>|<span data-ttu-id="ca723-196">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-196">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="ca723-197">Y</span><span class="sxs-lookup"><span data-stu-id="ca723-197">y</span></span>|<span data-ttu-id="ca723-198">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-198">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="ca723-199">h</span><span class="sxs-lookup"><span data-stu-id="ca723-199">h</span></span>|<span data-ttu-id="ca723-200">1 時間です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="ca723-200">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="ca723-201">n</span><span class="sxs-lookup"><span data-stu-id="ca723-201">n</span></span>|<span data-ttu-id="ca723-202">時間は 1 分ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="ca723-202">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="ca723-203">m</span><span class="sxs-lookup"><span data-stu-id="ca723-203">m</span></span>|<span data-ttu-id="ca723-204">月です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-204">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="ca723-205">q</span><span class="sxs-lookup"><span data-stu-id="ca723-205">q</span></span>|<span data-ttu-id="ca723-206">四半期です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-206">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="ca723-207">s</span><span class="sxs-lookup"><span data-stu-id="ca723-207">s</span></span>|<span data-ttu-id="ca723-208">秒です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="ca723-208">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="ca723-209">週</span><span class="sxs-lookup"><span data-stu-id="ca723-209">w</span></span>|<span data-ttu-id="ca723-210">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-210">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="ca723-211">ww</span><span class="sxs-lookup"><span data-stu-id="ca723-211">ww</span></span>|<span data-ttu-id="ca723-212">1 週間です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-212">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="ca723-213">yyyy</span><span class="sxs-lookup"><span data-stu-id="ca723-213">yyyy</span></span>|<span data-ttu-id="ca723-214">年。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="ca723-214">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-215">この例では、日付と、使用、`DateAdd`関数を指定した数か月間、将来の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca723-215">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-216">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-216">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-217">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-217">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca723-218">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-218">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-219">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-219">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-220">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-220">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="ca723-221">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-221">Required.</span>
          </span>
          <span data-ttu-id="ca723-222">
            <paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-222">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span>
          </span>
        </param>
        <param name="Date1">
          <span data-ttu-id="ca723-223">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-223">Required.</span>
          </span>
          <span data-ttu-id="ca723-224">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-224">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="ca723-225">計算で使用する 1 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-225">The first date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="Date2">
          <span data-ttu-id="ca723-226">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-226">Required.</span>
          </span>
          <span data-ttu-id="ca723-227">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-227">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="ca723-228">計算で使用する 2 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-228">The second date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="ca723-229">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-229">Optional.</span>
          </span>
          <span data-ttu-id="ca723-230">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-230">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="ca723-231">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-231">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="ca723-232">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-232">Optional.</span>
          </span>
          <span data-ttu-id="ca723-233">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-233">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="ca723-234">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-234">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-235">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-235">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-236">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-236">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-237">使用することができます、`DateDiff`関数を指定した時間間隔の数が 2 つの日付/時刻値の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca723-237">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="ca723-238">たとえば、使用する場合があります`DateDiff`して 2 つの日付または今日から年の終わりまでの週の数までの日数の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="ca723-238">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="ca723-239">動作</span><span class="sxs-lookup"><span data-stu-id="ca723-239">Behavior</span></span>  
  
-   <span data-ttu-id="ca723-240">**パラメーターの処理を行う。**</span><span class="sxs-lookup"><span data-stu-id="ca723-240">**Treatment of Parameters.**</span></span> <span data-ttu-id="ca723-241">`DateDiff` 値を減算`Date1`の値から`Date2`の違いを生成するためにします。</span><span class="sxs-lookup"><span data-stu-id="ca723-241">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="ca723-242">どちらの値は、呼び出し元のプログラムで変更されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-242">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="ca723-243">**値を返します。**</span><span class="sxs-lookup"><span data-stu-id="ca723-243">**Return Values.**</span></span> <span data-ttu-id="ca723-244">`Date1`と`Date2`は、`Date`データ型、日付と時刻の値が格納精度は 100 ナノ秒タイマー刻みシステム タイマー。</span><span class="sxs-lookup"><span data-stu-id="ca723-244">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="ca723-245">ただし、`DateDiff`常として、時間間隔の数、`Long`値。</span><span class="sxs-lookup"><span data-stu-id="ca723-245">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="ca723-246">場合`Date1`以降の日付と時間よりも表します`Date2`、`DateDiff`負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-246">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="ca723-247">**日の間隔。**</span><span class="sxs-lookup"><span data-stu-id="ca723-247">**Day Intervals.**</span></span> <span data-ttu-id="ca723-248">場合`Interval`に設定されている`DateInterval.DayOfYear`、扱われますと同じ`DateInterval.Day`ため、`DayOfYear`の時間間隔の意味のある単位でないです。</span><span class="sxs-lookup"><span data-stu-id="ca723-248">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="ca723-249">**週の間隔。**</span><span class="sxs-lookup"><span data-stu-id="ca723-249">**Week Intervals.**</span></span> <span data-ttu-id="ca723-250">場合`Interval`に設定されている`DateInterval.WeekOfYear`、戻り値が格納されている週の最初の日の週数を表す`Date1`と格納されている週の初日`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-250">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="ca723-251">次の例は、どのように異なる結果が生成されます`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-251">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="ca723-252">前の例では、`DateDiff`に 0 を返します`wD`に 1 を返します 2 つの日付間の差は 7 日間より小さいため`wY`それぞれのカレンダーの最初の日の間で 7 日間の相違があるため、数週間です。</span><span class="sxs-lookup"><span data-stu-id="ca723-252">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="ca723-253">**間隔を長くします。**</span><span class="sxs-lookup"><span data-stu-id="ca723-253">**Larger Intervals.**</span></span> <span data-ttu-id="ca723-254">場合`Interval`に設定されている`DateInterval.Year`、戻り値の年の部分から純粋な計算`Date1`と`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-254">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="ca723-255">同様に、戻り値`DateInterval.Month`、引数の年と月の部分から純粋な計算が`DateInterval.Quarter`四半期の 2 つの日付を格納しているからです。</span><span class="sxs-lookup"><span data-stu-id="ca723-255">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="ca723-256">たとえば、次の年の 1 月 1 日に 12 月 31 日を比較するときに`DateDiff`1 を返します`DateInterval.Year`、 `DateInterval.Quarter`、または`DateInterval.Month`最大で 1 日が経過した場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="ca723-256">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="ca723-257">持つ複数時代 (年号)、日本語などのカルチャ、`DateDiff`違いは、2 つまたは複数の時代 (年号) にまたがる場合メソッドは、年の差分を返しません。</span><span class="sxs-lookup"><span data-stu-id="ca723-257">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="ca723-258">によって返される値の差を計算する代わりに、<xref:System.DateTime.Year%2A>プロパティ、次の例で示した:`date2.Year - date1.Year`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-258">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="ca723-259">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="ca723-259">**Other Intervals.**</span></span> <span data-ttu-id="ca723-260">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔の検索の追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="ca723-260">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="ca723-261">たとえば、使用することができます、`Subtract`オーバー ロードされた形式のいずれかでメソッド:<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、<xref:System.TimeSpan>から、`Date`を返す別の変数`Date`値と<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、`Date`値返す、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="ca723-261">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="ca723-262">次の例に示すようにかかる時間をミリ秒単位を確認するプロセスの時間を測定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-262">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="ca723-263">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-263">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-264">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-264">Enumeration value</span></span>|<span data-ttu-id="ca723-265">文字列値</span><span class="sxs-lookup"><span data-stu-id="ca723-265">String value</span></span>|<span data-ttu-id="ca723-266">時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="ca723-266">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="ca723-267">"d"</span><span class="sxs-lookup"><span data-stu-id="ca723-267">"d"</span></span>|<span data-ttu-id="ca723-268">Day</span><span class="sxs-lookup"><span data-stu-id="ca723-268">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="ca723-269">"y"</span><span class="sxs-lookup"><span data-stu-id="ca723-269">"y"</span></span>|<span data-ttu-id="ca723-270">Day</span><span class="sxs-lookup"><span data-stu-id="ca723-270">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="ca723-271">"h"</span><span class="sxs-lookup"><span data-stu-id="ca723-271">"h"</span></span>|<span data-ttu-id="ca723-272">Hour</span><span class="sxs-lookup"><span data-stu-id="ca723-272">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="ca723-273">"n"</span><span class="sxs-lookup"><span data-stu-id="ca723-273">"n"</span></span>|<span data-ttu-id="ca723-274">Minute</span><span class="sxs-lookup"><span data-stu-id="ca723-274">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="ca723-275">"m"</span><span class="sxs-lookup"><span data-stu-id="ca723-275">"m"</span></span>|<span data-ttu-id="ca723-276">月</span><span class="sxs-lookup"><span data-stu-id="ca723-276">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="ca723-277">"q"</span><span class="sxs-lookup"><span data-stu-id="ca723-277">"q"</span></span>|<span data-ttu-id="ca723-278">四半期</span><span class="sxs-lookup"><span data-stu-id="ca723-278">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="ca723-279">"s"</span><span class="sxs-lookup"><span data-stu-id="ca723-279">"s"</span></span>|<span data-ttu-id="ca723-280">Second</span><span class="sxs-lookup"><span data-stu-id="ca723-280">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="ca723-281">"w"</span><span class="sxs-lookup"><span data-stu-id="ca723-281">"w"</span></span>|<span data-ttu-id="ca723-282">週</span><span class="sxs-lookup"><span data-stu-id="ca723-282">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="ca723-283">"ww"</span><span class="sxs-lookup"><span data-stu-id="ca723-283">"ww"</span></span>|<span data-ttu-id="ca723-284">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="ca723-284">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="ca723-285">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="ca723-285">"yyyy"</span></span>|<span data-ttu-id="ca723-286">Year</span><span class="sxs-lookup"><span data-stu-id="ca723-286">Year</span></span>|  
  
 <span data-ttu-id="ca723-287">`DayOfWeek`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-287">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-288">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-288">Enumeration value</span></span>|<span data-ttu-id="ca723-289">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-289">Value</span></span>|<span data-ttu-id="ca723-290">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-290">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="ca723-291">0</span><span class="sxs-lookup"><span data-stu-id="ca723-291">0</span></span>|<span data-ttu-id="ca723-292">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="ca723-292">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="ca723-293">1</span><span class="sxs-lookup"><span data-stu-id="ca723-293">1</span></span>|<span data-ttu-id="ca723-294">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-294">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="ca723-295">2</span><span class="sxs-lookup"><span data-stu-id="ca723-295">2</span></span>|<span data-ttu-id="ca723-296">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="ca723-296">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="ca723-297">3</span><span class="sxs-lookup"><span data-stu-id="ca723-297">3</span></span>|<span data-ttu-id="ca723-298">火曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-298">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="ca723-299">4</span><span class="sxs-lookup"><span data-stu-id="ca723-299">4</span></span>|<span data-ttu-id="ca723-300">水曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-300">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="ca723-301">5</span><span class="sxs-lookup"><span data-stu-id="ca723-301">5</span></span>|<span data-ttu-id="ca723-302">木曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-302">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="ca723-303">6</span><span class="sxs-lookup"><span data-stu-id="ca723-303">6</span></span>|<span data-ttu-id="ca723-304">金曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-304">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="ca723-305">7</span><span class="sxs-lookup"><span data-stu-id="ca723-305">7</span></span>|<span data-ttu-id="ca723-306">土曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-306">Saturday</span></span>|  
  
 <span data-ttu-id="ca723-307">`WeekOfYear`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-307">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-308">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-308">Enumeration value</span></span>|<span data-ttu-id="ca723-309">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-309">Value</span></span>|<span data-ttu-id="ca723-310">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-310">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="ca723-311">0</span><span class="sxs-lookup"><span data-stu-id="ca723-311">0</span></span>|<span data-ttu-id="ca723-312">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-312">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="ca723-313">1</span><span class="sxs-lookup"><span data-stu-id="ca723-313">1</span></span>|<span data-ttu-id="ca723-314">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-314">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="ca723-315">2</span><span class="sxs-lookup"><span data-stu-id="ca723-315">2</span></span>|<span data-ttu-id="ca723-316">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-316">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="ca723-317">3</span><span class="sxs-lookup"><span data-stu-id="ca723-317">3</span></span>|<span data-ttu-id="ca723-318">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="ca723-318">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-319">この例では、`DateDiff`の特定の日から今日までの日数を表示する関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-319">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-320">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-320">
              <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-321">
            <paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-321">
              <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-322">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-322">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="ca723-323">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-323">Required.</span>
          </span>
          <span data-ttu-id="ca723-324">
            <paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-324">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span>
          </span>
        </param>
        <param name="Date1">
          <span data-ttu-id="ca723-325">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-325">Required.</span>
          </span>
          <span data-ttu-id="ca723-326">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-326">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="ca723-327">計算で使用する 1 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-327">The first date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="Date2">
          <span data-ttu-id="ca723-328">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-328">Required.</span>
          </span>
          <span data-ttu-id="ca723-329">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-329">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="ca723-330">計算で使用する 2 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-330">The second date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="ca723-331">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-331">Optional.</span>
          </span>
          <span data-ttu-id="ca723-332">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-332">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="ca723-333">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-333">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="ca723-334">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-334">Optional.</span>
          </span>
          <span data-ttu-id="ca723-335">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-335">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="ca723-336">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-336">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-337">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-337">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-338">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-338">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-339">使用することができます、`DateDiff`関数を指定した時間間隔の数が 2 つの日付/時刻値の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca723-339">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="ca723-340">たとえば、使用する場合があります`DateDiff`して 2 つの日付または今日から年の終わりまでの週の数までの日数の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="ca723-340">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="ca723-341">動作</span><span class="sxs-lookup"><span data-stu-id="ca723-341">Behavior</span></span>  
  
-   <span data-ttu-id="ca723-342">**パラメーターの処理を行う。**</span><span class="sxs-lookup"><span data-stu-id="ca723-342">**Treatment of Parameters.**</span></span> <span data-ttu-id="ca723-343">`DateDiff` 値を減算`Date1`の値から`Date2`の違いを生成するためにします。</span><span class="sxs-lookup"><span data-stu-id="ca723-343">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="ca723-344">どちらの値は、呼び出し元のプログラムで変更されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-344">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="ca723-345">**値を返します。**</span><span class="sxs-lookup"><span data-stu-id="ca723-345">**Return Values.**</span></span> <span data-ttu-id="ca723-346">`Date1`と`Date2`は、`Date`データ型、日付と時刻の値が格納精度は 100 ナノ秒タイマー刻みシステム タイマー。</span><span class="sxs-lookup"><span data-stu-id="ca723-346">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="ca723-347">ただし、`DateDiff`常として、時間間隔の数、`Long`値。</span><span class="sxs-lookup"><span data-stu-id="ca723-347">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="ca723-348">場合`Date1`以降の日付と時間よりも表します`Date2`、`DateDiff`負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-348">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="ca723-349">**日の間隔。**</span><span class="sxs-lookup"><span data-stu-id="ca723-349">**Day Intervals.**</span></span> <span data-ttu-id="ca723-350">場合`Interval`に設定されている`DateInterval.DayOfYear`、扱われますと同じ`DateInterval.Day`ため、`DayOfYear`の時間間隔の意味のある単位でないです。</span><span class="sxs-lookup"><span data-stu-id="ca723-350">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="ca723-351">**週の間隔。**</span><span class="sxs-lookup"><span data-stu-id="ca723-351">**Week Intervals.**</span></span> <span data-ttu-id="ca723-352">場合`Interval`に設定されている`DateInterval.WeekOfYear`、戻り値が格納されている週の最初の日の週数を表す`Date1`と格納されている週の初日`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-352">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="ca723-353">次の例は、どのように異なる結果が生成されます`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-353">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="ca723-354">前の例では、`DateDiff`に 0 を返します`wD`に 1 を返します 2 つの日付間の差は 7 日間より小さいため`wY`それぞれのカレンダーの最初の日の間で 7 日間の相違があるため、数週間です。</span><span class="sxs-lookup"><span data-stu-id="ca723-354">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="ca723-355">**間隔を長くします。**</span><span class="sxs-lookup"><span data-stu-id="ca723-355">**Larger Intervals.**</span></span> <span data-ttu-id="ca723-356">場合`Interval`に設定されている`DateInterval.Year`、戻り値の年の部分から純粋な計算`Date1`と`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-356">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="ca723-357">同様に、戻り値`DateInterval.Month`、引数の年と月の部分から純粋な計算が`DateInterval.Quarter`四半期の 2 つの日付を格納しているからです。</span><span class="sxs-lookup"><span data-stu-id="ca723-357">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="ca723-358">たとえば、次の年の 1 月 1 日に 12 月 31 日を比較するときに`DateDiff`1 を返します`DateInterval.Year`、 `DateInterval.Quarter`、または`DateInterval.Month`最大で 1 日が経過した場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="ca723-358">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="ca723-359">持つ複数時代 (年号)、日本語などのカルチャ、`DateDiff`違いは、2 つまたは複数の時代 (年号) にまたがる場合メソッドは、年の差分を返しません。</span><span class="sxs-lookup"><span data-stu-id="ca723-359">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="ca723-360">によって返される値の差を計算する代わりに、<xref:System.DateTime.Year%2A>プロパティ、次の例で示した:`date2.Year - date1.Year`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-360">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="ca723-361">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="ca723-361">**Other Intervals.**</span></span> <span data-ttu-id="ca723-362">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔の検索の追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="ca723-362">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="ca723-363">たとえば、使用することができます、`Subtract`オーバー ロードされた形式のいずれかでメソッド:<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、<xref:System.TimeSpan>から、`Date`を返す別の変数`Date`値と<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、`Date`値返す、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="ca723-363">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="ca723-364">次の例に示すようにかかる時間をミリ秒単位を確認するプロセスの時間を測定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-364">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="ca723-365">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-365">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-366">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-366">Enumeration value</span></span>|<span data-ttu-id="ca723-367">文字列値</span><span class="sxs-lookup"><span data-stu-id="ca723-367">String value</span></span>|<span data-ttu-id="ca723-368">時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="ca723-368">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="ca723-369">"d"</span><span class="sxs-lookup"><span data-stu-id="ca723-369">"d"</span></span>|<span data-ttu-id="ca723-370">Day</span><span class="sxs-lookup"><span data-stu-id="ca723-370">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="ca723-371">"y"</span><span class="sxs-lookup"><span data-stu-id="ca723-371">"y"</span></span>|<span data-ttu-id="ca723-372">Day</span><span class="sxs-lookup"><span data-stu-id="ca723-372">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="ca723-373">"h"</span><span class="sxs-lookup"><span data-stu-id="ca723-373">"h"</span></span>|<span data-ttu-id="ca723-374">Hour</span><span class="sxs-lookup"><span data-stu-id="ca723-374">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="ca723-375">"n"</span><span class="sxs-lookup"><span data-stu-id="ca723-375">"n"</span></span>|<span data-ttu-id="ca723-376">Minute</span><span class="sxs-lookup"><span data-stu-id="ca723-376">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="ca723-377">"m"</span><span class="sxs-lookup"><span data-stu-id="ca723-377">"m"</span></span>|<span data-ttu-id="ca723-378">月</span><span class="sxs-lookup"><span data-stu-id="ca723-378">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="ca723-379">"q"</span><span class="sxs-lookup"><span data-stu-id="ca723-379">"q"</span></span>|<span data-ttu-id="ca723-380">四半期</span><span class="sxs-lookup"><span data-stu-id="ca723-380">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="ca723-381">"s"</span><span class="sxs-lookup"><span data-stu-id="ca723-381">"s"</span></span>|<span data-ttu-id="ca723-382">Second</span><span class="sxs-lookup"><span data-stu-id="ca723-382">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="ca723-383">"w"</span><span class="sxs-lookup"><span data-stu-id="ca723-383">"w"</span></span>|<span data-ttu-id="ca723-384">週</span><span class="sxs-lookup"><span data-stu-id="ca723-384">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="ca723-385">"ww"</span><span class="sxs-lookup"><span data-stu-id="ca723-385">"ww"</span></span>|<span data-ttu-id="ca723-386">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="ca723-386">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="ca723-387">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="ca723-387">"yyyy"</span></span>|<span data-ttu-id="ca723-388">Year</span><span class="sxs-lookup"><span data-stu-id="ca723-388">Year</span></span>|  
  
 <span data-ttu-id="ca723-389">`DayOfWeek`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-389">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-390">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-390">Enumeration value</span></span>|<span data-ttu-id="ca723-391">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-391">Value</span></span>|<span data-ttu-id="ca723-392">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-392">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="ca723-393">0</span><span class="sxs-lookup"><span data-stu-id="ca723-393">0</span></span>|<span data-ttu-id="ca723-394">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="ca723-394">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="ca723-395">1</span><span class="sxs-lookup"><span data-stu-id="ca723-395">1</span></span>|<span data-ttu-id="ca723-396">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-396">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="ca723-397">2</span><span class="sxs-lookup"><span data-stu-id="ca723-397">2</span></span>|<span data-ttu-id="ca723-398">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="ca723-398">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="ca723-399">3</span><span class="sxs-lookup"><span data-stu-id="ca723-399">3</span></span>|<span data-ttu-id="ca723-400">火曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-400">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="ca723-401">4</span><span class="sxs-lookup"><span data-stu-id="ca723-401">4</span></span>|<span data-ttu-id="ca723-402">水曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-402">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="ca723-403">5</span><span class="sxs-lookup"><span data-stu-id="ca723-403">5</span></span>|<span data-ttu-id="ca723-404">木曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-404">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="ca723-405">6</span><span class="sxs-lookup"><span data-stu-id="ca723-405">6</span></span>|<span data-ttu-id="ca723-406">金曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-406">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="ca723-407">7</span><span class="sxs-lookup"><span data-stu-id="ca723-407">7</span></span>|<span data-ttu-id="ca723-408">土曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-408">Saturday</span></span>|  
  
 <span data-ttu-id="ca723-409">`WeekOfYear`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-409">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-410">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-410">Enumeration value</span></span>|<span data-ttu-id="ca723-411">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-411">Value</span></span>|<span data-ttu-id="ca723-412">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-412">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="ca723-413">0</span><span class="sxs-lookup"><span data-stu-id="ca723-413">0</span></span>|<span data-ttu-id="ca723-414">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-414">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="ca723-415">1</span><span class="sxs-lookup"><span data-stu-id="ca723-415">1</span></span>|<span data-ttu-id="ca723-416">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-416">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="ca723-417">2</span><span class="sxs-lookup"><span data-stu-id="ca723-417">2</span></span>|<span data-ttu-id="ca723-418">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-418">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="ca723-419">3</span><span class="sxs-lookup"><span data-stu-id="ca723-419">3</span></span>|<span data-ttu-id="ca723-420">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="ca723-420">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-421">この例では、`DateDiff`の特定の日から今日までの日数を表示する関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-421">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-422">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-422">
              <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-423">
            <paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-423">
              <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-424">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-424">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-425">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-425">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="ca723-426">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-426">Required.</span>
          </span>
          <span data-ttu-id="ca723-427">返される日付/時刻値の一部を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-427">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="ca723-428">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-428">Required.</span>
          </span>
          <span data-ttu-id="ca723-429">評価する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-429">
              <see langword="Date" /> value that you want to evaluate.</span>
          </span>
        </param>
        <param name="FirstDayOfWeekValue">
          <span data-ttu-id="ca723-430">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-430">Optional.</span>
          </span>
          <span data-ttu-id="ca723-431">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-431">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="ca723-432">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-432">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="FirstWeekOfYearValue">
          <span data-ttu-id="ca723-433">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-433">Optional.</span>
          </span>
          <span data-ttu-id="ca723-434">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-434">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="ca723-435">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-435">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-436">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-436">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-437">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-437">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-438">使用することができます、`DatePart`を日付/時刻値を評価し、特定のコンポーネントを返す関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-438">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="ca723-439">たとえば、使用する場合があります`DatePart`日曜日、または現在の時間を計算します。</span><span class="sxs-lookup"><span data-stu-id="ca723-439">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="ca723-440">選択した場合`DateInterval.Weekday`の`Interval`引数、戻り値の値と矛盾、`FirstDayOfWeek`列挙体。</span><span class="sxs-lookup"><span data-stu-id="ca723-440">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="ca723-441">選択した場合`DateInterval.WeekOfYear`、`DatePart`を使用して、<xref:System.Globalization.Calendar>と<xref:System.Globalization.CultureInfo>のクラス、<xref:System.Globalization>名前空間を現在の設定を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca723-441">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="ca723-442">`FirstDayOfWeekValue`引数を使用する計算に影響を与えます、`DateInterval.Weekday`と`DateInterval.WeekOfYear``Interval`設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-442">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="ca723-443">`FirstWeekOfYearValue`引数を指定する計算に影響を与えます`DateInterval.WeekOfYear`の`Interval`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-443">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="ca723-444">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する日付/時刻の部分を取得する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="ca723-444">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="ca723-445">などの全体の日付値を取得できます、`Date`時刻値の変数は次のように、午前 0 時に設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-445">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="ca723-446">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-446">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-447">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-447">Enumeration value</span></span>|<span data-ttu-id="ca723-448">String</span><span class="sxs-lookup"><span data-stu-id="ca723-448">String</span></span>|<span data-ttu-id="ca723-449">日付/時刻値を返す部分</span><span class="sxs-lookup"><span data-stu-id="ca723-449">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="ca723-450">d</span><span class="sxs-lookup"><span data-stu-id="ca723-450">d</span></span>|<span data-ttu-id="ca723-451">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="ca723-451">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="ca723-452">Y</span><span class="sxs-lookup"><span data-stu-id="ca723-452">y</span></span>|<span data-ttu-id="ca723-453">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="ca723-453">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="ca723-454">h</span><span class="sxs-lookup"><span data-stu-id="ca723-454">h</span></span>|<span data-ttu-id="ca723-455">Hour</span><span class="sxs-lookup"><span data-stu-id="ca723-455">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="ca723-456">n</span><span class="sxs-lookup"><span data-stu-id="ca723-456">n</span></span>|<span data-ttu-id="ca723-457">Minute</span><span class="sxs-lookup"><span data-stu-id="ca723-457">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="ca723-458">m</span><span class="sxs-lookup"><span data-stu-id="ca723-458">m</span></span>|<span data-ttu-id="ca723-459">月</span><span class="sxs-lookup"><span data-stu-id="ca723-459">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="ca723-460">q</span><span class="sxs-lookup"><span data-stu-id="ca723-460">q</span></span>|<span data-ttu-id="ca723-461">四半期</span><span class="sxs-lookup"><span data-stu-id="ca723-461">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="ca723-462">s</span><span class="sxs-lookup"><span data-stu-id="ca723-462">s</span></span>|<span data-ttu-id="ca723-463">Second</span><span class="sxs-lookup"><span data-stu-id="ca723-463">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="ca723-464">週</span><span class="sxs-lookup"><span data-stu-id="ca723-464">w</span></span>|<span data-ttu-id="ca723-465">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="ca723-465">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="ca723-466">ww</span><span class="sxs-lookup"><span data-stu-id="ca723-466">ww</span></span>|<span data-ttu-id="ca723-467">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="ca723-467">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="ca723-468">yyyy</span><span class="sxs-lookup"><span data-stu-id="ca723-468">yyyy</span></span>|<span data-ttu-id="ca723-469">Year</span><span class="sxs-lookup"><span data-stu-id="ca723-469">Year</span></span>|  
  
 <span data-ttu-id="ca723-470">`FirstDayOfWeekValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-470">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-471">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-471">Enumeration value</span></span>|<span data-ttu-id="ca723-472">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-472">Value</span></span>|<span data-ttu-id="ca723-473">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-473">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="ca723-474">0</span><span class="sxs-lookup"><span data-stu-id="ca723-474">0</span></span>|<span data-ttu-id="ca723-475">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="ca723-475">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="ca723-476">1</span><span class="sxs-lookup"><span data-stu-id="ca723-476">1</span></span>|<span data-ttu-id="ca723-477">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-477">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="ca723-478">2</span><span class="sxs-lookup"><span data-stu-id="ca723-478">2</span></span>|<span data-ttu-id="ca723-479">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="ca723-479">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="ca723-480">3</span><span class="sxs-lookup"><span data-stu-id="ca723-480">3</span></span>|<span data-ttu-id="ca723-481">火曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-481">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="ca723-482">4</span><span class="sxs-lookup"><span data-stu-id="ca723-482">4</span></span>|<span data-ttu-id="ca723-483">水曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-483">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="ca723-484">5</span><span class="sxs-lookup"><span data-stu-id="ca723-484">5</span></span>|<span data-ttu-id="ca723-485">木曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-485">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="ca723-486">6</span><span class="sxs-lookup"><span data-stu-id="ca723-486">6</span></span>|<span data-ttu-id="ca723-487">金曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-487">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="ca723-488">7</span><span class="sxs-lookup"><span data-stu-id="ca723-488">7</span></span>|<span data-ttu-id="ca723-489">土曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-489">Saturday</span></span>|  
  
 <span data-ttu-id="ca723-490">`FirstWeekOfYearValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-490">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-491">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-491">Enumeration value</span></span>|<span data-ttu-id="ca723-492">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-492">Value</span></span>|<span data-ttu-id="ca723-493">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-493">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="ca723-494">0</span><span class="sxs-lookup"><span data-stu-id="ca723-494">0</span></span>|<span data-ttu-id="ca723-495">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-495">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="ca723-496">1</span><span class="sxs-lookup"><span data-stu-id="ca723-496">1</span></span>|<span data-ttu-id="ca723-497">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-497">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="ca723-498">2</span><span class="sxs-lookup"><span data-stu-id="ca723-498">2</span></span>|<span data-ttu-id="ca723-499">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-499">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="ca723-500">3</span><span class="sxs-lookup"><span data-stu-id="ca723-500">3</span></span>|<span data-ttu-id="ca723-501">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="ca723-501">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-502">この例では、日付と、使用、`DatePart`関数をそれが出現する年の四半期が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-502">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-503">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-503">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-504">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-504">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-505">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-505">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="ca723-506">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-506">Required.</span>
          </span>
          <span data-ttu-id="ca723-507">返される日付/時刻値の一部を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-507">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="ca723-508">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-508">Required.</span>
          </span>
          <span data-ttu-id="ca723-509">評価する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-509">
              <see langword="Date" /> value that you want to evaluate.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="ca723-510">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-510">Optional.</span>
          </span>
          <span data-ttu-id="ca723-511">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-511">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="ca723-512">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-512">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="ca723-513">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-513">Optional.</span>
          </span>
          <span data-ttu-id="ca723-514">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-514">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="ca723-515">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-515">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-516">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-516">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-517">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-517">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-518">使用することができます、`DatePart`を日付/時刻値を評価し、特定のコンポーネントを返す関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-518">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="ca723-519">たとえば、使用する場合があります`DatePart`日曜日、または現在の時間を計算します。</span><span class="sxs-lookup"><span data-stu-id="ca723-519">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="ca723-520">選択した場合`DateInterval.Weekday`の`Interval`引数、戻り値の値と矛盾、`FirstDayOfWeek`列挙体。</span><span class="sxs-lookup"><span data-stu-id="ca723-520">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="ca723-521">選択した場合`DateInterval.WeekOfYear`、`DatePart`を使用して、<xref:System.Globalization.Calendar>と<xref:System.Globalization.CultureInfo>のクラス、<xref:System.Globalization>名前空間を現在の設定を確認します。</span><span class="sxs-lookup"><span data-stu-id="ca723-521">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="ca723-522">`FirstDayOfWeekValue`引数を使用する計算に影響を与えます、`DateInterval.Weekday`と`DateInterval.WeekOfYear``Interval`設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-522">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="ca723-523">`FirstWeekOfYearValue`引数を指定する計算に影響を与えます`DateInterval.WeekOfYear`の`Interval`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-523">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="ca723-524">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する日付/時刻の部分を取得する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="ca723-524">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="ca723-525">などの全体の日付値を取得できます、`Date`時刻値の変数は次のように、午前 0 時に設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-525">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="ca723-526">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-526">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-527">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-527">Enumeration value</span></span>|<span data-ttu-id="ca723-528">String</span><span class="sxs-lookup"><span data-stu-id="ca723-528">String</span></span>|<span data-ttu-id="ca723-529">日付/時刻値を返す部分</span><span class="sxs-lookup"><span data-stu-id="ca723-529">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="ca723-530">d</span><span class="sxs-lookup"><span data-stu-id="ca723-530">d</span></span>|<span data-ttu-id="ca723-531">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="ca723-531">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="ca723-532">Y</span><span class="sxs-lookup"><span data-stu-id="ca723-532">y</span></span>|<span data-ttu-id="ca723-533">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="ca723-533">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="ca723-534">h</span><span class="sxs-lookup"><span data-stu-id="ca723-534">h</span></span>|<span data-ttu-id="ca723-535">Hour</span><span class="sxs-lookup"><span data-stu-id="ca723-535">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="ca723-536">n</span><span class="sxs-lookup"><span data-stu-id="ca723-536">n</span></span>|<span data-ttu-id="ca723-537">Minute</span><span class="sxs-lookup"><span data-stu-id="ca723-537">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="ca723-538">m</span><span class="sxs-lookup"><span data-stu-id="ca723-538">m</span></span>|<span data-ttu-id="ca723-539">月</span><span class="sxs-lookup"><span data-stu-id="ca723-539">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="ca723-540">q</span><span class="sxs-lookup"><span data-stu-id="ca723-540">q</span></span>|<span data-ttu-id="ca723-541">四半期</span><span class="sxs-lookup"><span data-stu-id="ca723-541">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="ca723-542">s</span><span class="sxs-lookup"><span data-stu-id="ca723-542">s</span></span>|<span data-ttu-id="ca723-543">Second</span><span class="sxs-lookup"><span data-stu-id="ca723-543">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="ca723-544">週</span><span class="sxs-lookup"><span data-stu-id="ca723-544">w</span></span>|<span data-ttu-id="ca723-545">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="ca723-545">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="ca723-546">ww</span><span class="sxs-lookup"><span data-stu-id="ca723-546">ww</span></span>|<span data-ttu-id="ca723-547">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="ca723-547">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="ca723-548">yyyy</span><span class="sxs-lookup"><span data-stu-id="ca723-548">yyyy</span></span>|<span data-ttu-id="ca723-549">Year</span><span class="sxs-lookup"><span data-stu-id="ca723-549">Year</span></span>|  
  
 <span data-ttu-id="ca723-550">`FirstDayOfWeekValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-550">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-551">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-551">Enumeration value</span></span>|<span data-ttu-id="ca723-552">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-552">Value</span></span>|<span data-ttu-id="ca723-553">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-553">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="ca723-554">0</span><span class="sxs-lookup"><span data-stu-id="ca723-554">0</span></span>|<span data-ttu-id="ca723-555">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="ca723-555">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="ca723-556">1</span><span class="sxs-lookup"><span data-stu-id="ca723-556">1</span></span>|<span data-ttu-id="ca723-557">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-557">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="ca723-558">2</span><span class="sxs-lookup"><span data-stu-id="ca723-558">2</span></span>|<span data-ttu-id="ca723-559">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="ca723-559">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="ca723-560">3</span><span class="sxs-lookup"><span data-stu-id="ca723-560">3</span></span>|<span data-ttu-id="ca723-561">火曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-561">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="ca723-562">4</span><span class="sxs-lookup"><span data-stu-id="ca723-562">4</span></span>|<span data-ttu-id="ca723-563">水曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-563">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="ca723-564">5</span><span class="sxs-lookup"><span data-stu-id="ca723-564">5</span></span>|<span data-ttu-id="ca723-565">木曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-565">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="ca723-566">6</span><span class="sxs-lookup"><span data-stu-id="ca723-566">6</span></span>|<span data-ttu-id="ca723-567">金曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-567">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="ca723-568">7</span><span class="sxs-lookup"><span data-stu-id="ca723-568">7</span></span>|<span data-ttu-id="ca723-569">土曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-569">Saturday</span></span>|  
  
 <span data-ttu-id="ca723-570">`FirstWeekOfYearValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-570">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-571">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-571">Enumeration value</span></span>|<span data-ttu-id="ca723-572">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-572">Value</span></span>|<span data-ttu-id="ca723-573">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-573">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="ca723-574">0</span><span class="sxs-lookup"><span data-stu-id="ca723-574">0</span></span>|<span data-ttu-id="ca723-575">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-575">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="ca723-576">1</span><span class="sxs-lookup"><span data-stu-id="ca723-576">1</span></span>|<span data-ttu-id="ca723-577">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-577">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="ca723-578">2</span><span class="sxs-lookup"><span data-stu-id="ca723-578">2</span></span>|<span data-ttu-id="ca723-579">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="ca723-579">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="ca723-580">3</span><span class="sxs-lookup"><span data-stu-id="ca723-580">3</span></span>|<span data-ttu-id="ca723-581">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="ca723-581">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-582">この例では、日付と、使用、`DatePart`関数をそれが出現する年の四半期が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-582">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-583">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-583">
              <paramref name="Interval" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-584">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-584">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-585">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-585">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year">
          <span data-ttu-id="ca723-586">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-586">Required.</span>
          </span>
          <span data-ttu-id="ca723-587">1 ～ 9999 の <see langword="Integer" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-587">
              <see langword="Integer" /> expression from 1 through 9999.</span>
          </span>
          <span data-ttu-id="ca723-588">ただし、この範囲より小さい値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-588">However, values below this range are also accepted.</span>
          </span>
          <span data-ttu-id="ca723-589">
            <paramref name="Year" /> が 0 ～ 99 の場合、下の「解説」で説明しているように、1930 ～ 2029 年として解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-589">If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span>
          </span>
          <span data-ttu-id="ca723-590">
            <paramref name="Year" /> が 1 未満の場合、現在の年からその値が減算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-590">If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</span>
          </span>
        </param>
        <param name="Month">
          <span data-ttu-id="ca723-591">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-591">Required.</span>
          </span>
          <span data-ttu-id="ca723-592">1 ～ 12 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-592">
              <see langword="Integer" /> expression from 1 through 12.</span>
          </span>
          <span data-ttu-id="ca723-593">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-593">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="ca723-594">
            <paramref name="Month" /> の値は 1 だけオフセットされた後、計算対象の年の 1 月に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-594">The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year.</span>
          </span>
          <span data-ttu-id="ca723-595">つまり、(<paramref name="Month" /> - 1) が 1 月に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-595">In other words, (<paramref name="Month" /> - 1) is added to January.</span>
          </span>
          <span data-ttu-id="ca723-596">年は必要に応じて再計算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-596">The year is recalculated if necessary.</span>
          </span>
          <span data-ttu-id="ca723-597">この処理による結果の例を次に示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-597">The following results illustrate this effect:</span>
          </span>
          <span data-ttu-id="ca723-598">
            <paramref name="Month" /> が 1 の場合、結果は計算対象の年の 1 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-598">If <paramref name="Month" /> is 1, the result is January of the calculated year.</span>
          </span>
          <span data-ttu-id="ca723-599">
            <paramref name="Month" /> が 0 の場合、結果は前年の 12 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-599">If <paramref name="Month" /> is 0, the result is December of the previous year.</span>
          </span>
          <span data-ttu-id="ca723-600">If <paramref name="Month" /> が -1 の場合、結果は前年の 11 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-600">If <paramref name="Month" /> is -1, the result is November of the previous year.</span>
          </span>
          <span data-ttu-id="ca723-601">
            <paramref name="Month" /> が 13 の場合、結果は翌年の 1 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-601">If <paramref name="Month" /> is 13, the result is January of the following year.</span>
          </span>
        </param>
        <param name="Day">
          <span data-ttu-id="ca723-602">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-602">Required.</span>
          </span>
          <span data-ttu-id="ca723-603">1 ～ 31 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-603">
              <see langword="Integer" /> expression from 1 through 31.</span>
          </span>
          <span data-ttu-id="ca723-604">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-604">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="ca723-605">
            <paramref name="Day" /> の値は 1 だけオフセットされた後、計算対象の月の最初の日に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-605">The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month.</span>
          </span>
          <span data-ttu-id="ca723-606">つまり、(<paramref name="Day" /> - 1) がその月の最初の日に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-606">In other words, (<paramref name="Day" /> - 1) is added to the first of the month.</span>
          </span>
          <span data-ttu-id="ca723-607">必要に応じて月と年が再計算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-607">The month and year are recalculated if necessary.</span>
          </span>
          <span data-ttu-id="ca723-608">この処理による結果の例を次に示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-608">The following results illustrate this effect:</span>
          </span>
          <span data-ttu-id="ca723-609">
            <paramref name="Day" /> が 1 の場合、結果は計算対象の月の最初の日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-609">If <paramref name="Day" /> is 1, the result is the first day of the calculated month.</span>
          </span>
          <span data-ttu-id="ca723-610">
            <paramref name="Day" /> が 0 の場合、結果は前月の末日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-610">If <paramref name="Day" /> is 0, the result is the last day of the previous month.</span>
          </span>
          <span data-ttu-id="ca723-611">
            <paramref name="Day" /> が -1 の場合、結果は前月の末日の前日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-611">If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.</span>
          </span>
          <span data-ttu-id="ca723-612">
            <paramref name="Day" /> が現在の月の末日を過ぎている場合、結果は翌月の適切な日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-612">If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month.</span>
          </span>
          <span data-ttu-id="ca723-613">たとえば、<paramref name="Month" /> が 4 で <paramref name="Day" /> が 31 の場合、結果は 5 月 1 日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-613">For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-614">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-614">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-615">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-615">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-616">Windows 98 または Windows 2000 では、下 2 桁の年、`Year`引数は、コンピューターのユーザー定義の設定に基づいて解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-616">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="ca723-617">既定の設定では 0 から 29 までの値は 2000 ~ 2029 年 30 ~ 99 の値がように、1930 ~ 1999 年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-617">The default settings are that values from 0 through 29 are interpreted as the years 2000–2029, and values from 30 through 99 are interpreted as the years 1930–1999.</span></span> <span data-ttu-id="ca723-618">他のすべての`Year`引数を使用して、4 桁の年。 たとえば、1924 します。</span><span class="sxs-lookup"><span data-stu-id="ca723-618">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="ca723-619">以前のバージョンの Windows には、前に説明した既定値に基づく 2 桁の年が解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-619">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="ca723-620">関数が正しい値を返すことを確認、4 桁を使用して、`Year`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-620">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="ca723-621">次の例は、負の値は 0、および引数の正の値。</span><span class="sxs-lookup"><span data-stu-id="ca723-621">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="ca723-622">ここでは、`DateSerial`関数が返される、`Date`年 10 年前の現在の年に、の最初の日の前日を表す 10 年 2 月の最終日つまり、します。</span><span class="sxs-lookup"><span data-stu-id="ca723-622">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="ca723-623">いずれか`Month`または`Day`正常な範囲を超える場合、単位に繰り上げに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-623">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="ca723-624">たとえば、32 日を指定すると、評価されますと 1 の値に応じて、次の 4 つの日に 1 か月として`Month`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-624">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="ca723-625">場合`Year`が 9999 より大きいか、いずれかの引数が-2,147, 483,648 ~ 2,147, 483,647、範囲外の場合、<xref:System.ArgumentException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca723-625">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="ca723-626">3 つの引数で指定された日より早い場合は 1、または年 12 月 31 日 23時 59分: 59 より後の年 1 月 1 日 00時 00分: 00 から 9999 場合、<xref:System.ArgumentOutOfRangeException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca723-626">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="ca723-627">`Date`データ型には、時間のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca723-627">The `Date` data type includes time components.</span></span> <span data-ttu-id="ca723-628">`DateSerial` 返される値が計算された日の開始を表しますようは、0 の場合にこれらすべてを設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-628">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="ca723-629">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用をアセンブリの追加のオプション、`Date`値。</span><span class="sxs-lookup"><span data-stu-id="ca723-629">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="ca723-630">オーバー ロードされたのいずれかを使用するなど、<xref:System.DateTime.%23ctor%2A>を設定するコンス トラクター、`Date`コンポーネントの目的の組み合わせを使用して変数。</span><span class="sxs-lookup"><span data-stu-id="ca723-630">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="ca723-631">次の例のセット`NewDateTime`1978 年 5 月 6日 8:30 の前に 2 つ目の 10 分の 1 にします。</span><span class="sxs-lookup"><span data-stu-id="ca723-631">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="ca723-632">この例では、`DateSerial`関数を指定した年、月、日の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-632">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-633">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-633">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-634">システムに従った現在の日付を表す文字列型 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-634">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca723-635">システムに従った現在の日付を表す文字列型 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-635">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-636">`DateString` システム日付を月の省略名を使用して年-月-日形式で返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-636">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="ca723-637">日付の許容される形式は M-d yyyy, M-y d、m/d/yyyy、および M/d/y です。</span><span class="sxs-lookup"><span data-stu-id="ca723-637">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="ca723-638">これは 2 バイト文字セット (DBCS) を使用するものを除くすべてのシステム ロケールに当てはまります。</span><span class="sxs-lookup"><span data-stu-id="ca723-638">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="ca723-639">システム ロケールは、2 バイト文字セットを使用している場合`DateString`システム日付を yyyy-mm-dd の形式で返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-639">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="ca723-640">システムのロケールの設定を使用して、**時計、言語および地域**内の項目**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="ca723-640">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="ca723-641">**注**、`DateString`プロパティでは、システムの日付を返します - yyyy-mm-dd の形式でのみ、 `zh` (中国語簡体字)、 `ko` (韓国語)、および`ja`(日本語版) システム ロケールで Visual Basic を実行している場合Silverlight です。</span><span class="sxs-lookup"><span data-stu-id="ca723-641">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="ca723-642">取得または設定としては、現在のシステム時刻を`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-642">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="ca723-643">現在のロケールの形式で、またはカスタムの形式では、現在のシステム日付または時刻を取得を指定、<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数、またはユーザー定義の定義済み日付/時刻形式の指定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-643">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="ca723-644">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca723-644">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="ca723-645">として現在のシステム日付へのアクセスに、`Date`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-645">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca723-646">システム日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca723-646">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="ca723-647">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="ca723-647">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-648">次の例では、`DateString`プロパティを現在のシステム日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca723-648">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-649">
            <see langword="DateString" /> の値を設定するのに使用する無効な形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-649">Invalid format used to set the value of <see langword="DateString" />.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate">
          <span data-ttu-id="ca723-650">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-650">Required.</span>
          </span>
          <span data-ttu-id="ca723-651">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す <see langword="String" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-651">
              <see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-652">文字列で表した日付情報を含む <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-652">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-653">文字列で表した日付情報を含む <see langword="Date" /> 値。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-653">
              <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-654">場合`StringDate`1 ~ 12 の有効な日付の区切り記号で区切られた数字だけを含む`DateValue`は月、日、お使いのシステム指定の短い日付形式に従って年の順序を認識します。</span><span class="sxs-lookup"><span data-stu-id="ca723-654">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="ca723-655">`DateValue` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-655">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="ca723-656">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-656">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="ca723-657">短い日付形式を設定して上書きできます、<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>のプロパティ、<xref:System.Globalization.DateTimeFormatInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-657">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="ca723-658">`DateValue` 長、省略、および数値の形式で月の名前を認識します。</span><span class="sxs-lookup"><span data-stu-id="ca723-658">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="ca723-659">12/30/1991 と 12/30/91 を認識するだけでなく、 `DateValue` 1991 年 12 月 30 日と 1991 年 12 月 30 日にも認識します。</span><span class="sxs-lookup"><span data-stu-id="ca723-659">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="ca723-660">場合の年の部分`StringDate`を省略すると、`DateValue`は、コンピューターのシステム日付から現在の年を使用します。</span><span class="sxs-lookup"><span data-stu-id="ca723-660">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="ca723-661">場合、`StringDate`引数には、時刻の情報が含まれています。`DateValue`で返される値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="ca723-661">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="ca723-662">ただし場合、 `StringDate` 「89: 98」などの無効な時刻の情報が含まれています、<xref:System.InvalidCastException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca723-662">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-663">この例では、`DateValue`日付を文字列に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-663">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="ca723-664">する日付を直接割り当てる日付リテラルを使用することも、`Object`または`Date`変数、たとえば、`oldDate = #2/12/69#`します。</span><span class="sxs-lookup"><span data-stu-id="ca723-664">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-665">
            <paramref name="StringDate" /> に無効な時刻情報が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-665">
              <paramref name="StringDate" /> includes invalid time information.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="ca723-666">データ型の概要 (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-666">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="ca723-667">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-667">Required.</span>
          </span>
          <span data-ttu-id="ca723-668">日を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-668">
              <see langword="Date" /> value from which you want to extract the day.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-669">月内の通算日を表す 1 ～ 31 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-669">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-670">月内の通算日を表す 1 ～ 31 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-670">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-671">使用する場合、`Day`で修飾する必要があります、関数、`Microsoft.VisualBasic`名前空間、ため、<xref:System.Windows.Forms>名前空間を定義<xref:System.Windows.Forms.Day>列挙として。</span><span class="sxs-lookup"><span data-stu-id="ca723-671">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="ca723-672">次の例はどのように条件を満たす`Day`このあいまいさの解決。</span><span class="sxs-lookup"><span data-stu-id="ca723-672">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="ca723-673">呼び出すことによって、1 か月の日を取得することも`DatePart`を指定して`DateInterval.Day`の*間隔*引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-673">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-674">次の例では、`Day`指定された日付の月の日を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-674">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="ca723-675">開発環境では、コードのロケール設定を使用して標準の短い形式 (「02/12/1969」) などのリテラルの日付が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-675">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="ca723-676">`Day` 修飾から区別するためには、<xref:System.Windows.Forms.Day?displayProperty=nameWithType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="ca723-676">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="ca723-677">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-677">Required.</span>
          </span>
          <span data-ttu-id="ca723-678">時を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-678">
              <see langword="Date" /> value from which you want to extract the hour.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-679">時を表す 0 ～ 23 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-679">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-680">時を表す 0 ～ 23 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-680">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-681">呼び出すことによって、1 日の時間を取得することも`DatePart`を指定して`DateInterval.Hour`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-681">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-682">この例では、`Hour`指定された時間から 1 時間を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-682">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="ca723-683">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-683">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="ca723-684">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-684">Required.</span>
          </span>
          <span data-ttu-id="ca723-685">分を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-685">
              <see langword="Date" /> value from which you want to extract the minute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-686">分を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-686">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-687">分を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-687">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-688">呼び出すことによって、時間の分を取得することも`DatePart`を指定して`DateInterval.Minute`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-688">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-689">この例では、`Minute`指定された時間から 1 時間の分を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-689">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="ca723-690">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-690">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="ca723-691">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-691">Required.</span>
          </span>
          <span data-ttu-id="ca723-692">月を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-692">
              <see langword="Date" /> value from which you want to extract the month.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-693">月を表す 1 ～ 12 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-693">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-694">月を表す 1 ～ 12 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-694">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-695">呼び出すことによって、年の月を取得することも`DatePart`を指定して`DateInterval.Month`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-695">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-696">この例では、`Month`指定された日付の月を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-696">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="ca723-697">開発環境で、日付リテラルが表示されます短い日付形式で、コードのロケール設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ca723-697">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month">
          <span data-ttu-id="ca723-698">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-698">Required.</span>
          </span>
          <span data-ttu-id="ca723-699">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-699">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="ca723-700">数値 (1 ～ 13) による月の指定です。1 は 1 月を示し、12 は 12 月を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-700">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span>
          </span>
          <span data-ttu-id="ca723-701">13 か月カレンダーでは値 13 を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-701">You can use the value 13 with a 13-month calendar.</span>
          </span>
          <span data-ttu-id="ca723-702">システムで 12 か月カレンダーを使用しているとき、<paramref name="Month" /> に 13 を指定すると、<see langword="MonthName" /> は空の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-702">If your system is using a 12-month calendar and <paramref name="Month" /> is 13, <see langword="MonthName" /> returns an empty string.</span>
          </span>
        </param>
        <param name="Abbreviate">
          <span data-ttu-id="ca723-703">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-703">Optional.</span>
          </span>
          <span data-ttu-id="ca723-704">月名を省略するかどうかを示す <see langword="Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-704">
              <see langword="Boolean" /> value that indicates if the month name is to be abbreviated.</span>
          </span>
          <span data-ttu-id="ca723-705">省略した場合、既定値の <see langword="False" /> が使用され、月名は省略されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-705">If omitted, the default is <see langword="False" />, which means the month name is not abbreviated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-706">指定した月の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-706">Returns a <see langword="String" /> value containing the name of the specified month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-707">指定した月の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-707">Returns a <see langword="String" /> value containing the name of the specified month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-708">によって返される文字列`MonthName`上だけでなく、入力引数にも依存して、**地域のオプション**、Windows で指定された設定**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="ca723-708">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca723-709">`MonthName` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-709">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="ca723-710">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-710">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-711">この例では、`MonthName`指定された整数 1 か月の名前を決定する関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-711">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="ca723-712">ブール値が決まるかどうか、完全な名前 (`False`) または省略名 (`True`) が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-712">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-713">
            <paramref name="Month" /> が 1 より小さいか、または 13 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-713">
              <paramref name="Month" /> is less than 1 or greater than 13.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-714">システムに従った現在の日付と時刻を含む日付型 (<see langword="Date" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-714">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca723-715">システムに従った現在の日付と時刻を含む日付型 (<see langword="Date" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-715">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-716">システム日付を設定するには、使用、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-716">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="ca723-717">システム時刻を設定するには、使用、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-717">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-718">次の例では、`Now`を現在のシステム日付と時刻を返すプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-718">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="ca723-719">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-719">Required.</span>
          </span>
          <span data-ttu-id="ca723-720">秒を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-720">
              <see langword="Date" /> value from which you want to extract the second.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-721">秒を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-721">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-722">秒を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-722">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-723">呼び出すことによって、1 分の 2 つ目を取得することも`DatePart`を指定して`DateInterval.Second`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-723">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-724">次の例では、`Second`指定した時間から分の 2 つ目を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-724">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="ca723-725">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-725">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-726">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-726">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca723-727">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-727">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-728">`Date`データ型には、日付のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca723-728">The `Date` data type includes date components.</span></span> <span data-ttu-id="ca723-729">システム時刻を返すときに`TimeOfDay`返される値は 1 年の最初の曜日を表すために、これらすべてを 1 を設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-729">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="ca723-730">システム時刻を設定するときに`TimeOfDay`日付の構成要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-730">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="ca723-731">として現在のシステム時刻にアクセスする、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-731">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="ca723-732">取得または設定の現在のシステム日付を使用、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-732">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca723-733">システム日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca723-733">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="ca723-734">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="ca723-734">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-735">この例では、`TimeOfDay`を現在のシステム時刻を返すプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-735">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-736">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see langword="Double" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-736">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca723-737">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see langword="Double" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-737">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-738">`Timer`プロパティは、最新の午前 0 時以降、秒とミリ秒の両方を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-738">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="ca723-739">戻り値の整数部分で、秒、小数部がミリ秒。</span><span class="sxs-lookup"><span data-stu-id="ca723-739">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-740">この例では、`Timer`プロパティをアプリケーションを一時停止します。</span><span class="sxs-lookup"><span data-stu-id="ca723-740">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="ca723-741">一時停止中に他の処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="ca723-741">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="ca723-742">修飾する必要がありますに注意してください、`Timer`プロパティを<xref:Microsoft.VisualBasic?displayProperty=nameWithType>名前空間、ため`Timer`はで定義されたクラスでも、 <xref:System.Threading?displayProperty=nameWithType>、 <xref:System.Timers?displayProperty=nameWithType>、および<xref:System.Windows.Forms?displayProperty=nameWithType>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-742">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour">
          <span data-ttu-id="ca723-743">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-743">Required.</span>
          </span>
          <span data-ttu-id="ca723-744">0 ～ 23 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-744">
              <see langword="Integer" /> expression from 0 through 23.</span>
          </span>
          <span data-ttu-id="ca723-745">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-745">However, values outside this range are also accepted.</span>
          </span>
        </param>
        <param name="Minute">
          <span data-ttu-id="ca723-746">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-746">Required.</span>
          </span>
          <span data-ttu-id="ca723-747">0 ～ 59 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-747">
              <see langword="Integer" /> expression from 0 through 59.</span>
          </span>
          <span data-ttu-id="ca723-748">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-748">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="ca723-749">計算される時には <paramref name="Minute" />  の値が加算されるため、負の値を指定するとその時からさかのぼる分数が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-749">The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</span>
          </span>
        </param>
        <param name="Second">
          <span data-ttu-id="ca723-750">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-750">Required.</span>
          </span>
          <span data-ttu-id="ca723-751">0 ～ 59 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-751">
              <see langword="Integer" /> expression from 0 through 59.</span>
          </span>
          <span data-ttu-id="ca723-752">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-752">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="ca723-753">算出される分には <paramref name="Second" />  の値が加算されるため、負の値を指定するとその分からさかのぼる秒数が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-753">The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-754">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-754">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-755">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-755">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-756">次の例は、負の値は 0、および引数の正の値。</span><span class="sxs-lookup"><span data-stu-id="ca723-756">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="ca723-757">`TimeSerial`まで正午、または 8時 45分: 00 AM までの 3 つの時間に 15 分を表す時間を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-757">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="ca723-758">いずれか`Minute`または`Second`正常な範囲を超える場合、単位に繰り上げに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-758">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="ca723-759">たとえば、75 分を指定する場合は 1 時間 15 分として評価されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-759">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="ca723-760">`TimeSerial` 1 日の秒数である 86,400、剰余合計秒数が減少します。</span><span class="sxs-lookup"><span data-stu-id="ca723-760">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="ca723-761">そのため、返される時刻には 00時 00分: 00 ~ 23時 59分: 59 常にします。</span><span class="sxs-lookup"><span data-stu-id="ca723-761">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="ca723-762">`Date`データ型には、日付のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca723-762">The `Date` data type includes date components.</span></span> <span data-ttu-id="ca723-763">`TimeSerial` 返される値は 1 年の最初の曜日を表すためすべてを 1 にこれらのオプションを設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-763">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="ca723-764">ただし、引数の値によって計算された時刻が 24 時間を超える場合、1 日は、必要に応じてが増加します。</span><span class="sxs-lookup"><span data-stu-id="ca723-764">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="ca723-765">次の例の値で`Hour`と`Minute`24 時間以上の時間の合計が発生します。</span><span class="sxs-lookup"><span data-stu-id="ca723-765">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="ca723-766">引数の値は、負の値の計算時間になる、日付情報は 1/1/0001 を設定し、時刻情報は 00時 00分: 00 ~ 23時 59分: 59 に調整されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-766">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="ca723-767">ただし、計算された時間がより小さい負の 24 時間場合、<xref:System.ArgumentOutOfRangeException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca723-767">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="ca723-768">すべて`Date`値でサポートされて、<xref:System.DateTime?displayProperty=nameWithType>構造、そのメソッドを使用をアセンブリの追加のオプション、`Date`値。</span><span class="sxs-lookup"><span data-stu-id="ca723-768">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="ca723-769">オーバー ロードされたのいずれかを使用するなど、<xref:System.DateTime.%23ctor%2A>を設定するコンス トラクター、`Date`コンポーネントの目的の組み合わせを使用して変数。</span><span class="sxs-lookup"><span data-stu-id="ca723-769">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="ca723-770">次の例のセット`newDateTime`1978 年 5 月 6日 8:30 の前に 2 つ目の 10 分の 1 にします。</span><span class="sxs-lookup"><span data-stu-id="ca723-770">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="ca723-771">次の例では、`TimeSerial`関数を指定した時間、分、および秒の時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-771">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-772">引数が -2,147,483,648 ～ 2,147,483,647 の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-772">An argument is outside the range -2,147,483,648 through 2,147,483,647</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca723-773">計算された時刻が負の 24 時間より小さくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-773">Calculated time is less than negative 24 hours.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-774">システムにおける現在の時刻を表す文字列 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-774">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca723-775">システムにおける現在の時刻を表す文字列 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-775">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-776">`TimeString` 常に 24 時間形式は"hh:mm:ss"のシステム時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-776">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="ca723-777">この形式はカルチャに依存しない、つまり、変更した場合でも、変わりません、**地域のオプション**で**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="ca723-777">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="ca723-778">取得または設定としては、現在のシステム日付を`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-778">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="ca723-779">現在のロケールの形式で、またはカスタムの形式では、現在のシステム日付または時刻を取得を指定、<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数、またはユーザー定義の定義済み日付/時刻形式の指定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-779">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="ca723-780">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca723-780">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="ca723-781">として現在のシステム時刻にアクセスする、`Date`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-781">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca723-782">システムの日付または時刻を設定すると、部分信頼の状況では、その実行に影響を与える可能性がありますアンマネージ コードのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca723-782">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="ca723-783">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="ca723-783">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-784">この例では、`TimeString`プロパティを現在のシステム時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca723-784">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-785">
            <see langword="TimeString" /> の値を設定するのに使用する無効な形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-785">Invalid format used to set the value of <see langword="TimeString" />.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime">
          <span data-ttu-id="ca723-786">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-786">Required.</span>
          </span>
          <span data-ttu-id="ca723-787">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す <see langword="String" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-787">
              <see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-788">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-788">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-789">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-789">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-790">有効な時刻を入力する 12 時間制または 24 時間制を使用します。</span><span class="sxs-lookup"><span data-stu-id="ca723-790">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="ca723-791">たとえば、`"2:24 P.M."`と`"14:24"`はどちらも有効な`StringTime`引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-791">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="ca723-792">場合、`StringTime`引数には、日付の情報が含まれています。`TimeValue`で返される値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="ca723-792">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="ca723-793">ただし場合、`StringTime`無効な日付は、"年 32年 1 月"など、情報、<xref:System.InvalidCastException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ca723-793">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-794">次の例では、`TimeValue`の時刻に、文字列を変換する関数。</span><span class="sxs-lookup"><span data-stu-id="ca723-794">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="ca723-795">すると、時間を直接割り当てる日付リテラルを使用することも、`Date`変数。</span><span class="sxs-lookup"><span data-stu-id="ca723-795">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="ca723-796">
            <paramref name="StringTime" /> に無効な日付情報が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-796">
              <paramref name="StringTime" /> includes invalid date information.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca723-797">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-797">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca723-798">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-798">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-799">`Date`データ型には、時間のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca723-799">The `Date` data type includes time components.</span></span> <span data-ttu-id="ca723-800">システムの日付を返すときに`Today`を 0 にこれらのすべて設定するため、返される値は午前 0 時を表します (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="ca723-800">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="ca723-801">システムの日付を設定するときに`Today`時コンポーネントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ca723-801">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="ca723-802">として現在のシステム日付へのアクセスに、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-802">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="ca723-803">取得または設定の現在のシステム時刻を使用、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ca723-803">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca723-804">システム日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca723-804">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="ca723-805">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="ca723-805">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-806">この例では、`Today`プロパティの現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="ca723-806">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="ca723-807">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-807">Required.</span>
          </span>
          <span data-ttu-id="ca723-808">曜日を調べる <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-808">
              <see langword="Date" /> value for which you want to determine the day of the week.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="ca723-809">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-809">Optional.</span>
          </span>
          <span data-ttu-id="ca723-810">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-810">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="ca723-811">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-811">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-812">曜日を表す数値を含む <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-812">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-813">曜日を表す数値を含む <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-813">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-814">によって返される値、`Weekday`の値に対応する関数、`FirstDayOfWeek`列挙; は、1 は日曜日を表し、7 が土曜日を表します。</span><span class="sxs-lookup"><span data-stu-id="ca723-814">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca723-815">`Weekday` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-815">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="ca723-816">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-816">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="ca723-817">`DayOfWeek`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-817">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-818">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-818">Enumeration value</span></span>|<span data-ttu-id="ca723-819">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-819">Value</span></span>|<span data-ttu-id="ca723-820">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-820">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="ca723-821">0</span><span class="sxs-lookup"><span data-stu-id="ca723-821">0</span></span>|<span data-ttu-id="ca723-822">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="ca723-822">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="ca723-823">1</span><span class="sxs-lookup"><span data-stu-id="ca723-823">1</span></span>|<span data-ttu-id="ca723-824">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="ca723-824">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="ca723-825">2</span><span class="sxs-lookup"><span data-stu-id="ca723-825">2</span></span>|<span data-ttu-id="ca723-826">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="ca723-826">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="ca723-827">3</span><span class="sxs-lookup"><span data-stu-id="ca723-827">3</span></span>|<span data-ttu-id="ca723-828">火曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-828">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="ca723-829">4</span><span class="sxs-lookup"><span data-stu-id="ca723-829">4</span></span>|<span data-ttu-id="ca723-830">水曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-830">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="ca723-831">5</span><span class="sxs-lookup"><span data-stu-id="ca723-831">5</span></span>|<span data-ttu-id="ca723-832">木曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-832">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="ca723-833">6</span><span class="sxs-lookup"><span data-stu-id="ca723-833">6</span></span>|<span data-ttu-id="ca723-834">金曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-834">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="ca723-835">7</span><span class="sxs-lookup"><span data-stu-id="ca723-835">7</span></span>|<span data-ttu-id="ca723-836">土曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-836">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-837">次の例では、`Weekday`指定した日付から、曜日を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-837">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-838">
            <paramref name="DayOfWeek" /> が 0 より小さいか、または 7 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-838">
              <paramref name="DayOfWeek" /> is less than 0 or more than 7.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday">
          <span data-ttu-id="ca723-839">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-839">Required.</span>
          </span>
          <span data-ttu-id="ca723-840">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-840">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="ca723-841">曜日を指定する 1 ～ 7 の数値。1 は週の最初の曜日を表し、7 は週の最後の曜日を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-841">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span>
          </span>
          <span data-ttu-id="ca723-842">最初と最後の曜日は、<paramref name="FirstDayOfWeekValue" /> の設定により決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-842">The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</span>
          </span>
        </param>
        <param name="Abbreviate">
          <span data-ttu-id="ca723-843">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-843">Optional.</span>
          </span>
          <span data-ttu-id="ca723-844">曜日の名前を省略するかどうかを示す <see langword="Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-844">
              <see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span>
          </span>
          <span data-ttu-id="ca723-845">省略した場合、既定値の <see langword="False" /> が使用され、曜日の名前は省略されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-845">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span>
          </span>
        </param>
        <param name="FirstDayOfWeekValue">
          <span data-ttu-id="ca723-846">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-846">Optional.</span>
          </span>
          <span data-ttu-id="ca723-847">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-847">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="ca723-848">指定しない場合は、<see langword="FirstDayOfWeek.System" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-848">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-849">指定した曜日の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-849">Returns a <see langword="String" /> value containing the name of the specified weekday.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-850">指定した曜日の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-850">Returns a <see langword="String" /> value containing the name of the specified weekday.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-851">によって返される文字列`WeekdayName`上だけでなく、入力引数にも依存して、**地域のオプション**、Windows で指定された設定**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="ca723-851">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca723-852">`WeekdayName` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="ca723-852">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="ca723-853">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="ca723-853">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="ca723-854">`FirstDayOfWeekValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="ca723-854">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="ca723-855">列挙値</span><span class="sxs-lookup"><span data-stu-id="ca723-855">Enumeration value</span></span>|<span data-ttu-id="ca723-856">[値]</span><span class="sxs-lookup"><span data-stu-id="ca723-856">Value</span></span>|<span data-ttu-id="ca723-857">説明</span><span class="sxs-lookup"><span data-stu-id="ca723-857">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="ca723-858">0</span><span class="sxs-lookup"><span data-stu-id="ca723-858">0</span></span>|<span data-ttu-id="ca723-859">システムで指定された週の最初の日 (既定値) の設定</span><span class="sxs-lookup"><span data-stu-id="ca723-859">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="ca723-860">1</span><span class="sxs-lookup"><span data-stu-id="ca723-860">1</span></span>|<span data-ttu-id="ca723-861">日曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-861">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="ca723-862">2</span><span class="sxs-lookup"><span data-stu-id="ca723-862">2</span></span>|<span data-ttu-id="ca723-863">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="ca723-863">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="ca723-864">3</span><span class="sxs-lookup"><span data-stu-id="ca723-864">3</span></span>|<span data-ttu-id="ca723-865">火曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-865">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="ca723-866">4</span><span class="sxs-lookup"><span data-stu-id="ca723-866">4</span></span>|<span data-ttu-id="ca723-867">水曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-867">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="ca723-868">5</span><span class="sxs-lookup"><span data-stu-id="ca723-868">5</span></span>|<span data-ttu-id="ca723-869">木曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-869">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="ca723-870">6</span><span class="sxs-lookup"><span data-stu-id="ca723-870">6</span></span>|<span data-ttu-id="ca723-871">金曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-871">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="ca723-872">7</span><span class="sxs-lookup"><span data-stu-id="ca723-872">7</span></span>|<span data-ttu-id="ca723-873">土曜日</span><span class="sxs-lookup"><span data-stu-id="ca723-873">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ca723-874">次の例では、`Weekday`から指定した日付、週の曜日を取得する関数をクリックし、`WeekDayName`番号から、曜日の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-874">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ca723-875">
            <paramref name="Weekday" /> が 1 より小さいか 7 を超えています。または <paramref name="FirstDayOfWeekValue" /> が 0 より小さいか 7 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-875">
              <paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="ca723-876">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-876">Required.</span>
          </span>
          <span data-ttu-id="ca723-877">年を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-877">
              <see langword="Date" /> value from which you want to extract the year.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca723-878">年を表す 1 ～ 9999 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-878">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca723-879">年を表す 1 ～ 9999 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca723-879">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca723-880">呼び出すことによって、年を取得することも`DatePart`を指定して`DateInterval.Year`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="ca723-880">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca723-881">次の例では、`Year`指定された日付の年を取得します。</span><span class="sxs-lookup"><span data-stu-id="ca723-881">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="ca723-882">開発環境で、日付リテラルが表示されます短い日付形式で、コードのロケール設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ca723-882">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>