<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9af54b7260248e286df3a5c1a1f951ff11c39b81" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70345470" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="697ce-101"><see langword="DateAndTime" /> モジュールには、日付と時刻の操作に使用されるプロシージャとプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="697ce-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-102">このモジュールは、現在の日付または時刻を取得したり、日付の計算を実行したり、日付または時刻を返したり、プロセスの日付または時刻を設定したりする、Visual Basic 言語キーワードとランタイムライブラリメンバーをサポートします。</span><span class="sxs-lookup"><span data-stu-id="697ce-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-103">この例では`Today` 、プロパティを使用して、現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/dates-and-times-summary.md"><span data-ttu-id="697ce-104">日付と時刻の概要</span><span class="sxs-lookup"><span data-stu-id="697ce-104">Dates and Times Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="697ce-105">キーワード (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="697ce-106">ランタイムライブラリのメンバーの Visual Basic</span><span class="sxs-lookup"><span data-stu-id="697ce-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="697ce-107">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-107">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="697ce-108">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-108">Required.</span></span> <span data-ttu-id="697ce-109">加算する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-109">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="697ce-110">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-110">Required.</span></span> <span data-ttu-id="697ce-111">加算する時間間隔を表す浮動小数点式。</span><span class="sxs-lookup"><span data-stu-id="697ce-111">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="697ce-112">これは、正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) とすることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-112">It can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="697ce-113"><paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-113">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="697ce-114">その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-114">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="697ce-115">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-115">Required.</span></span> <span data-ttu-id="697ce-116">時間間隔を加算する日時を表す式。</span><span class="sxs-lookup"><span data-stu-id="697ce-116">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="697ce-117"><paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</span><span class="sxs-lookup"><span data-stu-id="697ce-117"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="697ce-118">指定された時間間隔を加算した日付と時刻を含む値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-118">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="697ce-119">指定された時間間隔を加算した日付と時刻を含む値。</span><span class="sxs-lookup"><span data-stu-id="697ce-119">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-120">`DateAdd`関数を使用すると、指定した時間間隔を日付から加算または減算できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-120">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="697ce-121">たとえば、今日または45分前の時点から30日前までの日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-121">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="697ce-122">に`DateValue`日数を追加するには、 `DateInterval.Day` `DateInterval.DayOfYear`、、また`DateInterval.Weekday`はを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-122">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="697ce-123">`DayOfYear` と`Weekday`は意味のある時間間隔ではないため、これらは同等として扱われます。</span><span class="sxs-lookup"><span data-stu-id="697ce-123">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="697ce-124">関数`DateAdd`は、無効な日付を返しません。</span><span class="sxs-lookup"><span data-stu-id="697ce-124">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="697ce-125">必要に応じて、結果として得られる日付の日部分が、結果の年の結果として得られる月の最後の日まで下方に調整されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-125">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="697ce-126">次の例では、1か月31日を追加します。</span><span class="sxs-lookup"><span data-stu-id="697ce-126">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="697ce-127">この例では`DateAdd` 、 `#2/28/1995#`は、 `#2/31/1995#`ではなくを返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-127">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="697ce-128">が`DateValue`の`#1/31/1996#`場合は、 `#2/29/1996#` 1996 が閏年であるため、が返されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-128">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="697ce-129">`DateAdd`名前空間の<xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo>クラスのプロパティから現在のカレンダー設定を使用します。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-129">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="697ce-130">既定<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値は、**コントロールパネル**の設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-130">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="697ce-131">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、そのメソッドでは、時間間隔を追加するための追加オプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-131">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="697ce-132">たとえば、次のように、ミリ秒単位で丸めた日付の小数部を`Date`変数に追加できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-132">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="697ce-133">引数`Interval`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-133">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-134">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-134">Enumeration value</span></span>|<span data-ttu-id="697ce-135">String</span><span class="sxs-lookup"><span data-stu-id="697ce-135">String</span></span>|<span data-ttu-id="697ce-136">追加する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="697ce-136">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="697ce-137">d</span><span class="sxs-lookup"><span data-stu-id="697ce-137">d</span></span>|<span data-ttu-id="697ce-138">毎日整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-138">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="697ce-139">Y</span><span class="sxs-lookup"><span data-stu-id="697ce-139">y</span></span>|<span data-ttu-id="697ce-140">毎日整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-140">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="697ce-141">h</span><span class="sxs-lookup"><span data-stu-id="697ce-141">h</span></span>|<span data-ttu-id="697ce-142">時最も近いミリ秒に丸める</span><span class="sxs-lookup"><span data-stu-id="697ce-142">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="697ce-143">n</span><span class="sxs-lookup"><span data-stu-id="697ce-143">n</span></span>|<span data-ttu-id="697ce-144">数分最も近いミリ秒に丸める</span><span class="sxs-lookup"><span data-stu-id="697ce-144">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="697ce-145">m</span><span class="sxs-lookup"><span data-stu-id="697ce-145">m</span></span>|<span data-ttu-id="697ce-146">翌月整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-146">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="697ce-147">q</span><span class="sxs-lookup"><span data-stu-id="697ce-147">q</span></span>|<span data-ttu-id="697ce-148">実績整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-148">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="697ce-149">s</span><span class="sxs-lookup"><span data-stu-id="697ce-149">s</span></span>|<span data-ttu-id="697ce-150">Second最も近いミリ秒に丸める</span><span class="sxs-lookup"><span data-stu-id="697ce-150">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="697ce-151">週</span><span class="sxs-lookup"><span data-stu-id="697ce-151">w</span></span>|<span data-ttu-id="697ce-152">毎日整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-152">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="697ce-153">各地</span><span class="sxs-lookup"><span data-stu-id="697ce-153">ww</span></span>|<span data-ttu-id="697ce-154">前週整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-154">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="697ce-155">yyyy</span><span class="sxs-lookup"><span data-stu-id="697ce-155">yyyy</span></span>|<span data-ttu-id="697ce-156">比整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-156">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-157">この例では、日付を取得し`DateAdd` 、関数を使用して、対応する日付を指定した月数だけ後に表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-157">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-158"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="697ce-158"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-159"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="697ce-159"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="697ce-160">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span><span class="sxs-lookup"><span data-stu-id="697ce-160">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-161">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-161">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="697ce-162">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-162">Required.</span></span> <span data-ttu-id="697ce-163">加算する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-163">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="697ce-164">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-164">Required.</span></span> <span data-ttu-id="697ce-165">加算する時間間隔を表す浮動小数点式。</span><span class="sxs-lookup"><span data-stu-id="697ce-165">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="697ce-166"><paramref name="Number" /> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-166"><paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="697ce-167"><paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-167">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="697ce-168">その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-168">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="697ce-169">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-169">Required.</span></span> <span data-ttu-id="697ce-170">時間間隔を加算する日時を表す式。</span><span class="sxs-lookup"><span data-stu-id="697ce-170">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="697ce-171"><paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</span><span class="sxs-lookup"><span data-stu-id="697ce-171"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="697ce-172">指定された時間間隔を加算した日付と時刻を含む値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-172">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="697ce-173">指定された時間間隔を加算した日付と時刻を含む値。</span><span class="sxs-lookup"><span data-stu-id="697ce-173">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-174">`DateAdd`関数を使用すると、指定した時間間隔を日付から加算または減算できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-174">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="697ce-175">たとえば、今日または45分前の時点から30日前までの日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-175">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="697ce-176">に`DateValue`日数を追加するには、 `DateInterval.Day` `DateInterval.DayOfYear`、、また`DateInterval.Weekday`はを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-176">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="697ce-177">`DayOfYear` と`Weekday`は意味のある時間間隔ではないため、これらは同等として扱われます。</span><span class="sxs-lookup"><span data-stu-id="697ce-177">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="697ce-178">関数`DateAdd`は、無効な日付を返しません。</span><span class="sxs-lookup"><span data-stu-id="697ce-178">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="697ce-179">必要に応じて、結果として得られる日付の日部分が、結果の年の結果として得られる月の最後の日まで下方に調整されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-179">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="697ce-180">次の例では、1か月31日を追加します。</span><span class="sxs-lookup"><span data-stu-id="697ce-180">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="697ce-181">この例では`DateAdd` 、 `#2/28/1995#`は、 `#2/31/1995#`ではなくを返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-181">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="697ce-182">が`DateValue`の`#1/31/1996#`場合は、 `#2/29/1996#` 1996 が閏年であるため、が返されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-182">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="697ce-183">`DateAdd`名前空間の<xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo>クラスのプロパティから現在のカレンダー設定を使用します。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-183">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="697ce-184">既定<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値は、**コントロールパネル**の設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-184">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="697ce-185">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、そのメソッドでは、時間間隔を追加するための追加オプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-185">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="697ce-186">たとえば、次のように、ミリ秒単位で丸めた日付の小数部を`Date`変数に追加できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-186">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="697ce-187">引数`Interval`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-187">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-188">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-188">Enumeration value</span></span>|<span data-ttu-id="697ce-189">String</span><span class="sxs-lookup"><span data-stu-id="697ce-189">String</span></span>|<span data-ttu-id="697ce-190">追加する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="697ce-190">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="697ce-191">d</span><span class="sxs-lookup"><span data-stu-id="697ce-191">d</span></span>|<span data-ttu-id="697ce-192">毎日整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-192">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="697ce-193">Y</span><span class="sxs-lookup"><span data-stu-id="697ce-193">y</span></span>|<span data-ttu-id="697ce-194">毎日整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-194">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="697ce-195">h</span><span class="sxs-lookup"><span data-stu-id="697ce-195">h</span></span>|<span data-ttu-id="697ce-196">時最も近いミリ秒に丸める</span><span class="sxs-lookup"><span data-stu-id="697ce-196">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="697ce-197">n</span><span class="sxs-lookup"><span data-stu-id="697ce-197">n</span></span>|<span data-ttu-id="697ce-198">数分最も近いミリ秒に丸める</span><span class="sxs-lookup"><span data-stu-id="697ce-198">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="697ce-199">m</span><span class="sxs-lookup"><span data-stu-id="697ce-199">m</span></span>|<span data-ttu-id="697ce-200">翌月整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-200">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="697ce-201">q</span><span class="sxs-lookup"><span data-stu-id="697ce-201">q</span></span>|<span data-ttu-id="697ce-202">実績整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-202">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="697ce-203">s</span><span class="sxs-lookup"><span data-stu-id="697ce-203">s</span></span>|<span data-ttu-id="697ce-204">Second最も近いミリ秒に丸める</span><span class="sxs-lookup"><span data-stu-id="697ce-204">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="697ce-205">週</span><span class="sxs-lookup"><span data-stu-id="697ce-205">w</span></span>|<span data-ttu-id="697ce-206">毎日整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-206">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="697ce-207">各地</span><span class="sxs-lookup"><span data-stu-id="697ce-207">ww</span></span>|<span data-ttu-id="697ce-208">前週整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-208">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="697ce-209">yyyy</span><span class="sxs-lookup"><span data-stu-id="697ce-209">yyyy</span></span>|<span data-ttu-id="697ce-210">比整数値に切り捨てられました</span><span class="sxs-lookup"><span data-stu-id="697ce-210">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-211">この例では、日付を取得し`DateAdd` 、関数を使用して、対応する日付を指定した月数だけ後に表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-211">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-212"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="697ce-212"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-213"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="697ce-213"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="697ce-214">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span><span class="sxs-lookup"><span data-stu-id="697ce-214">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-215">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-215">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="697ce-216">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-216">Returns a value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="697ce-217">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-217">Required.</span></span> <span data-ttu-id="697ce-218"><paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-218">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="697ce-219">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-219">Required.</span></span> <span data-ttu-id="697ce-220">計算で使用する 1 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-220">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="697ce-221">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-221">Required.</span></span> <span data-ttu-id="697ce-222">計算で使用する 2 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-222">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="697ce-223">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-223">Optional.</span></span> <span data-ttu-id="697ce-224">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-224">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="697ce-225">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-225">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="697ce-226">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-226">Optional.</span></span> <span data-ttu-id="697ce-227">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-227">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="697ce-228">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-228">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="697ce-229">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-229">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="697ce-230">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-230">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-231">関数を使用する`DateDiff`と、2つの日付/時刻値の間に存在する指定された時間間隔の数を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-231">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="697ce-232">たとえば、を使用`DateDiff`して、2つの日付の間の日数を計算したり、今日から年末までの週数を計算したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-232">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="697ce-233">動作</span><span class="sxs-lookup"><span data-stu-id="697ce-233">Behavior</span></span>  
  
-   <span data-ttu-id="697ce-234">**パラメーターの処理。**</span><span class="sxs-lookup"><span data-stu-id="697ce-234">**Treatment of Parameters.**</span></span> <span data-ttu-id="697ce-235">`DateDiff`の値をの`Date2`値から減算して、差を生成します。`Date1`</span><span class="sxs-lookup"><span data-stu-id="697ce-235">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="697ce-236">呼び出し元のプログラムでは、どちらの値も変更されません。</span><span class="sxs-lookup"><span data-stu-id="697ce-236">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="697ce-237">**戻り値。**</span><span class="sxs-lookup"><span data-stu-id="697ce-237">**Return Values.**</span></span> <span data-ttu-id="697ce-238">と`Date1` `Date`のデータ型はであるため、日付と時刻の値はシステムタイマーの100ナノ秒のタイマー刻みに正確に保持されます。 `Date2`</span><span class="sxs-lookup"><span data-stu-id="697ce-238">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="697ce-239">ただし、 `DateDiff`は常に`Long`値として時間間隔の数を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-239">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="697ce-240">が`Date1`よりも`Date2`後の日付と時刻を`DateDiff`表している場合、は負の値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-240">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="697ce-241">**日付間隔。**</span><span class="sxs-lookup"><span data-stu-id="697ce-241">**Day Intervals.**</span></span> <span data-ttu-id="697ce-242">が`Interval`に`DateInterval.DayOfYear`設定されている場合、は時間`DateInterval.Day`間隔の`DayOfYear`有効な単位ではないため、と同じように扱われます。</span><span class="sxs-lookup"><span data-stu-id="697ce-242">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="697ce-243">**週間隔。**</span><span class="sxs-lookup"><span data-stu-id="697ce-243">**Week Intervals.**</span></span> <span data-ttu-id="697ce-244">が`Interval`に`DateInterval.WeekOfYear`設定されている場合、戻り値は、が含ま`Date1`れる週の最初の日からを含む`Date2`週の最初の曜日までの週数を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-244">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="697ce-245">次の例では、によって異なる`DateInterval.Weekday`結果が生成される方法を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-245">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="697ce-246">前の例では`DateDiff` 、2つ`wD`の日付の差が7日未満であるため、は0を返しますが`wY` 、それぞれの暦の最初の日には7日間の差があるため、は1をに返します。ごと.</span><span class="sxs-lookup"><span data-stu-id="697ce-246">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="697ce-247">**間隔が長くなっています。**</span><span class="sxs-lookup"><span data-stu-id="697ce-247">**Larger Intervals.**</span></span> <span data-ttu-id="697ce-248">が`Interval`に`DateInterval.Year`設定されている場合、戻り値はと`Date2`の`Date1`年の部分から純粋に計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-248">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="697ce-249">同様に、の`DateInterval.Month`戻り値は、引数の年と月の部分から純粋に計算され、2つの日付を含む四半期からに対して`DateInterval.Quarter`のみ計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-249">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="697ce-250">たとえば、年12月31日を次`DateDiff`の年の1月31日と比較すると、は1日に1日しか経過していないにもかかわらず、、 `DateInterval.Quarter`、または`DateInterval.Month`に対し`DateInterval.Year`て1を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-250">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="697ce-251">複数の時代 (年号) を持つ日本語などの`DateDiff`カルチャでは、この差が2つ以上の時代 (年号) にまたがっている場合、メソッドは年数の差を返しません。</span><span class="sxs-lookup"><span data-stu-id="697ce-251">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="697ce-252">代わりに、次の<xref:System.DateTime.Year%2A> `date2.Year - date1.Year`例に示すように、プロパティによって返される値の差を計算できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-252">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="697ce-253">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="697ce-253">**Other Intervals.**</span></span> <span data-ttu-id="697ce-254">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、そのメソッドによって、時間間隔を検索するための追加オプションが提供されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-254">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="697ce-255">たとえば`Subtract` 、オーバーロードされた形式のいずれかでメソッドを使用できます。 <xref:System.TimeSpan> `Date`変数からを減算して`Date`別の値<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>を返し`Date` 、値を減算します。 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>を返す場合<xref:System.TimeSpan>は。</span><span class="sxs-lookup"><span data-stu-id="697ce-255">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="697ce-256">次の例に示すように、プロセスで、所要時間 (ミリ秒) を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-256">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="697ce-257">引数`Interval`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-257">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-258">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-258">Enumeration value</span></span>|<span data-ttu-id="697ce-259">文字列値</span><span class="sxs-lookup"><span data-stu-id="697ce-259">String value</span></span>|<span data-ttu-id="697ce-260">時差の単位</span><span class="sxs-lookup"><span data-stu-id="697ce-260">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="697ce-261">"d"</span><span class="sxs-lookup"><span data-stu-id="697ce-261">"d"</span></span>|<span data-ttu-id="697ce-262">Day</span><span class="sxs-lookup"><span data-stu-id="697ce-262">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="697ce-263">"y"</span><span class="sxs-lookup"><span data-stu-id="697ce-263">"y"</span></span>|<span data-ttu-id="697ce-264">Day</span><span class="sxs-lookup"><span data-stu-id="697ce-264">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="697ce-265">"h"</span><span class="sxs-lookup"><span data-stu-id="697ce-265">"h"</span></span>|<span data-ttu-id="697ce-266">Hour</span><span class="sxs-lookup"><span data-stu-id="697ce-266">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="697ce-267">"n"</span><span class="sxs-lookup"><span data-stu-id="697ce-267">"n"</span></span>|<span data-ttu-id="697ce-268">Minute</span><span class="sxs-lookup"><span data-stu-id="697ce-268">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="697ce-269">"m"</span><span class="sxs-lookup"><span data-stu-id="697ce-269">"m"</span></span>|<span data-ttu-id="697ce-270">月</span><span class="sxs-lookup"><span data-stu-id="697ce-270">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="697ce-271">"q"</span><span class="sxs-lookup"><span data-stu-id="697ce-271">"q"</span></span>|<span data-ttu-id="697ce-272">Quarter</span><span class="sxs-lookup"><span data-stu-id="697ce-272">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="697ce-273">"s"</span><span class="sxs-lookup"><span data-stu-id="697ce-273">"s"</span></span>|<span data-ttu-id="697ce-274">Second</span><span class="sxs-lookup"><span data-stu-id="697ce-274">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="697ce-275">"w"</span><span class="sxs-lookup"><span data-stu-id="697ce-275">"w"</span></span>|<span data-ttu-id="697ce-276">週</span><span class="sxs-lookup"><span data-stu-id="697ce-276">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="697ce-277">"ww"</span><span class="sxs-lookup"><span data-stu-id="697ce-277">"ww"</span></span>|<span data-ttu-id="697ce-278">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="697ce-278">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="697ce-279">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="697ce-279">"yyyy"</span></span>|<span data-ttu-id="697ce-280">Year</span><span class="sxs-lookup"><span data-stu-id="697ce-280">Year</span></span>|  
  
 <span data-ttu-id="697ce-281">引数`DayOfWeek`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-281">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-282">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-282">Enumeration value</span></span>|<span data-ttu-id="697ce-283">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-283">Value</span></span>|<span data-ttu-id="697ce-284">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-284">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="697ce-285">0</span><span class="sxs-lookup"><span data-stu-id="697ce-285">0</span></span>|<span data-ttu-id="697ce-286">システム設定で指定された週の最初の曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-286">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="697ce-287">1</span><span class="sxs-lookup"><span data-stu-id="697ce-287">1</span></span>|<span data-ttu-id="697ce-288">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-288">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="697ce-289">2</span><span class="sxs-lookup"><span data-stu-id="697ce-289">2</span></span>|<span data-ttu-id="697ce-290">月曜日 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-290">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="697ce-291">3</span><span class="sxs-lookup"><span data-stu-id="697ce-291">3</span></span>|<span data-ttu-id="697ce-292">火曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-292">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="697ce-293">4</span><span class="sxs-lookup"><span data-stu-id="697ce-293">4</span></span>|<span data-ttu-id="697ce-294">水曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-294">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="697ce-295">5</span><span class="sxs-lookup"><span data-stu-id="697ce-295">5</span></span>|<span data-ttu-id="697ce-296">木曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-296">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="697ce-297">6</span><span class="sxs-lookup"><span data-stu-id="697ce-297">6</span></span>|<span data-ttu-id="697ce-298">金曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-298">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="697ce-299">7</span><span class="sxs-lookup"><span data-stu-id="697ce-299">7</span></span>|<span data-ttu-id="697ce-300">土曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-300">Saturday</span></span>|  
  
 <span data-ttu-id="697ce-301">引数`WeekOfYear`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-301">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-302">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-302">Enumeration value</span></span>|<span data-ttu-id="697ce-303">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-303">Value</span></span>|<span data-ttu-id="697ce-304">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-304">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="697ce-305">0</span><span class="sxs-lookup"><span data-stu-id="697ce-305">0</span></span>|<span data-ttu-id="697ce-306">システム設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-306">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="697ce-307">1</span><span class="sxs-lookup"><span data-stu-id="697ce-307">1</span></span>|<span data-ttu-id="697ce-308">1月1日が発生する週 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-308">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="697ce-309">2</span><span class="sxs-lookup"><span data-stu-id="697ce-309">2</span></span>|<span data-ttu-id="697ce-310">新しい年に少なくとも4日ある週 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-310">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="697ce-311">3</span><span class="sxs-lookup"><span data-stu-id="697ce-311">3</span></span>|<span data-ttu-id="697ce-312">新しい年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-312">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-313">この例では`DateDiff` 、関数を使用して、指定された日付と今日の間の日数を表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-313">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-314">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="697ce-314"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-315"><paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="697ce-315"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-316">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-316">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="697ce-317">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-317">Required.</span></span> <span data-ttu-id="697ce-318"><paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-318">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="697ce-319">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-319">Required.</span></span> <span data-ttu-id="697ce-320">計算で使用する 1 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-320">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="697ce-321">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-321">Required.</span></span> <span data-ttu-id="697ce-322">計算で使用する 2 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-322">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="697ce-323">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-323">Optional.</span></span> <span data-ttu-id="697ce-324">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-324">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="697ce-325">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-325">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="697ce-326">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-326">Optional.</span></span> <span data-ttu-id="697ce-327">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-327">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="697ce-328">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-328">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="697ce-329">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-329">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="697ce-330">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-330">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-331">関数を使用する`DateDiff`と、2つの日付/時刻値の間に存在する指定された時間間隔の数を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-331">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="697ce-332">たとえば、を使用`DateDiff`して、2つの日付の間の日数を計算したり、今日から年末までの週数を計算したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-332">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="697ce-333">動作</span><span class="sxs-lookup"><span data-stu-id="697ce-333">Behavior</span></span>  
  
-   <span data-ttu-id="697ce-334">**パラメーターの処理。**</span><span class="sxs-lookup"><span data-stu-id="697ce-334">**Treatment of Parameters.**</span></span> <span data-ttu-id="697ce-335">`DateDiff`の値をの`Date2`値から減算して、差を生成します。`Date1`</span><span class="sxs-lookup"><span data-stu-id="697ce-335">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="697ce-336">呼び出し元のプログラムでは、どちらの値も変更されません。</span><span class="sxs-lookup"><span data-stu-id="697ce-336">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="697ce-337">**戻り値。**</span><span class="sxs-lookup"><span data-stu-id="697ce-337">**Return Values.**</span></span> <span data-ttu-id="697ce-338">と`Date1` `Date`のデータ型はであるため、日付と時刻の値はシステムタイマーの100ナノ秒のタイマー刻みに正確に保持されます。 `Date2`</span><span class="sxs-lookup"><span data-stu-id="697ce-338">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="697ce-339">ただし、 `DateDiff`は常に`Long`値として時間間隔の数を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-339">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="697ce-340">が`Date1`よりも`Date2`後の日付と時刻を`DateDiff`表している場合、は負の値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-340">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="697ce-341">**日付間隔。**</span><span class="sxs-lookup"><span data-stu-id="697ce-341">**Day Intervals.**</span></span> <span data-ttu-id="697ce-342">が`Interval`に`DateInterval.DayOfYear`設定されている場合、は時間`DateInterval.Day`間隔の`DayOfYear`有効な単位ではないため、と同じように扱われます。</span><span class="sxs-lookup"><span data-stu-id="697ce-342">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="697ce-343">**週間隔。**</span><span class="sxs-lookup"><span data-stu-id="697ce-343">**Week Intervals.**</span></span> <span data-ttu-id="697ce-344">が`Interval`に`DateInterval.WeekOfYear`設定されている場合、戻り値は、が含ま`Date1`れる週の最初の日からを含む`Date2`週の最初の曜日までの週数を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-344">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="697ce-345">次の例では、によって異なる`DateInterval.Weekday`結果が生成される方法を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-345">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="697ce-346">前の例では`DateDiff` 、2つ`wD`の日付の差が7日未満であるため、は0を返しますが`wY` 、それぞれの暦の最初の日には7日間の差があるため、は1をに返します。ごと.</span><span class="sxs-lookup"><span data-stu-id="697ce-346">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="697ce-347">**間隔が長くなっています。**</span><span class="sxs-lookup"><span data-stu-id="697ce-347">**Larger Intervals.**</span></span> <span data-ttu-id="697ce-348">が`Interval`に`DateInterval.Year`設定されている場合、戻り値はと`Date2`の`Date1`年の部分から純粋に計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-348">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="697ce-349">同様に、の`DateInterval.Month`戻り値は、引数の年と月の部分から純粋に計算され、2つの日付を含む四半期からに対して`DateInterval.Quarter`のみ計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-349">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="697ce-350">たとえば、年12月31日を次`DateDiff`の年の1月31日と比較すると、は1日に1日しか経過していないにもかかわらず、、 `DateInterval.Quarter`、または`DateInterval.Month`に対し`DateInterval.Year`て1を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-350">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="697ce-351">複数の時代 (年号) を持つ日本語などの`DateDiff`カルチャでは、この差が2つ以上の時代 (年号) にまたがっている場合、メソッドは年数の差を返しません。</span><span class="sxs-lookup"><span data-stu-id="697ce-351">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="697ce-352">代わりに、次の<xref:System.DateTime.Year%2A> `date2.Year - date1.Year`例に示すように、プロパティによって返される値の差を計算できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-352">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="697ce-353">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="697ce-353">**Other Intervals.**</span></span> <span data-ttu-id="697ce-354">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、そのメソッドによって、時間間隔を検索するための追加オプションが提供されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-354">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="697ce-355">たとえば`Subtract` 、オーバーロードされた形式のいずれかでメソッドを使用できます。 <xref:System.TimeSpan> `Date`変数からを減算して`Date`別の値<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>を返し`Date` 、値を減算します。 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>を返す場合<xref:System.TimeSpan>は。</span><span class="sxs-lookup"><span data-stu-id="697ce-355">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="697ce-356">次の例に示すように、プロセスで、所要時間 (ミリ秒) を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-356">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="697ce-357">引数`Interval`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-357">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-358">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-358">Enumeration value</span></span>|<span data-ttu-id="697ce-359">文字列値</span><span class="sxs-lookup"><span data-stu-id="697ce-359">String value</span></span>|<span data-ttu-id="697ce-360">時差の単位</span><span class="sxs-lookup"><span data-stu-id="697ce-360">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="697ce-361">"d"</span><span class="sxs-lookup"><span data-stu-id="697ce-361">"d"</span></span>|<span data-ttu-id="697ce-362">Day</span><span class="sxs-lookup"><span data-stu-id="697ce-362">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="697ce-363">"y"</span><span class="sxs-lookup"><span data-stu-id="697ce-363">"y"</span></span>|<span data-ttu-id="697ce-364">Day</span><span class="sxs-lookup"><span data-stu-id="697ce-364">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="697ce-365">"h"</span><span class="sxs-lookup"><span data-stu-id="697ce-365">"h"</span></span>|<span data-ttu-id="697ce-366">Hour</span><span class="sxs-lookup"><span data-stu-id="697ce-366">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="697ce-367">"n"</span><span class="sxs-lookup"><span data-stu-id="697ce-367">"n"</span></span>|<span data-ttu-id="697ce-368">Minute</span><span class="sxs-lookup"><span data-stu-id="697ce-368">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="697ce-369">"m"</span><span class="sxs-lookup"><span data-stu-id="697ce-369">"m"</span></span>|<span data-ttu-id="697ce-370">月</span><span class="sxs-lookup"><span data-stu-id="697ce-370">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="697ce-371">"q"</span><span class="sxs-lookup"><span data-stu-id="697ce-371">"q"</span></span>|<span data-ttu-id="697ce-372">Quarter</span><span class="sxs-lookup"><span data-stu-id="697ce-372">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="697ce-373">"s"</span><span class="sxs-lookup"><span data-stu-id="697ce-373">"s"</span></span>|<span data-ttu-id="697ce-374">Second</span><span class="sxs-lookup"><span data-stu-id="697ce-374">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="697ce-375">"w"</span><span class="sxs-lookup"><span data-stu-id="697ce-375">"w"</span></span>|<span data-ttu-id="697ce-376">週</span><span class="sxs-lookup"><span data-stu-id="697ce-376">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="697ce-377">"ww"</span><span class="sxs-lookup"><span data-stu-id="697ce-377">"ww"</span></span>|<span data-ttu-id="697ce-378">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="697ce-378">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="697ce-379">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="697ce-379">"yyyy"</span></span>|<span data-ttu-id="697ce-380">Year</span><span class="sxs-lookup"><span data-stu-id="697ce-380">Year</span></span>|  
  
 <span data-ttu-id="697ce-381">引数`DayOfWeek`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-381">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-382">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-382">Enumeration value</span></span>|<span data-ttu-id="697ce-383">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-383">Value</span></span>|<span data-ttu-id="697ce-384">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-384">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="697ce-385">0</span><span class="sxs-lookup"><span data-stu-id="697ce-385">0</span></span>|<span data-ttu-id="697ce-386">システム設定で指定された週の最初の曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-386">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="697ce-387">1</span><span class="sxs-lookup"><span data-stu-id="697ce-387">1</span></span>|<span data-ttu-id="697ce-388">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-388">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="697ce-389">2</span><span class="sxs-lookup"><span data-stu-id="697ce-389">2</span></span>|<span data-ttu-id="697ce-390">月曜日 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-390">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="697ce-391">3</span><span class="sxs-lookup"><span data-stu-id="697ce-391">3</span></span>|<span data-ttu-id="697ce-392">火曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-392">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="697ce-393">4</span><span class="sxs-lookup"><span data-stu-id="697ce-393">4</span></span>|<span data-ttu-id="697ce-394">水曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-394">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="697ce-395">5</span><span class="sxs-lookup"><span data-stu-id="697ce-395">5</span></span>|<span data-ttu-id="697ce-396">木曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-396">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="697ce-397">6</span><span class="sxs-lookup"><span data-stu-id="697ce-397">6</span></span>|<span data-ttu-id="697ce-398">金曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-398">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="697ce-399">7</span><span class="sxs-lookup"><span data-stu-id="697ce-399">7</span></span>|<span data-ttu-id="697ce-400">土曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-400">Saturday</span></span>|  
  
 <span data-ttu-id="697ce-401">引数`WeekOfYear`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-401">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-402">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-402">Enumeration value</span></span>|<span data-ttu-id="697ce-403">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-403">Value</span></span>|<span data-ttu-id="697ce-404">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-404">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="697ce-405">0</span><span class="sxs-lookup"><span data-stu-id="697ce-405">0</span></span>|<span data-ttu-id="697ce-406">システム設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-406">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="697ce-407">1</span><span class="sxs-lookup"><span data-stu-id="697ce-407">1</span></span>|<span data-ttu-id="697ce-408">1月1日が発生する週 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-408">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="697ce-409">2</span><span class="sxs-lookup"><span data-stu-id="697ce-409">2</span></span>|<span data-ttu-id="697ce-410">新しい年に少なくとも4日ある週 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-410">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="697ce-411">3</span><span class="sxs-lookup"><span data-stu-id="697ce-411">3</span></span>|<span data-ttu-id="697ce-412">新しい年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-412">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-413">この例では`DateDiff` 、関数を使用して、指定された日付と今日の間の日数を表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-413">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-414">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="697ce-414"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-415"><paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="697ce-415"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-416">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-416">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="697ce-417">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-417">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="697ce-418">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-418">Required.</span></span> <span data-ttu-id="697ce-419">返される日付/時刻値の一部を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-419">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="697ce-420">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-420">Required.</span></span> <span data-ttu-id="697ce-421">評価する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-421">The <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="697ce-422">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-422">Optional.</span></span> <span data-ttu-id="697ce-423">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-423">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="697ce-424">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-424">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="FirstWeekOfYearValue"><span data-ttu-id="697ce-425">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-425">Optional.</span></span> <span data-ttu-id="697ce-426">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-426">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="697ce-427">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-427">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="697ce-428">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-428">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="697ce-429">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-429">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-430">`DatePart`関数を使用すると、日付/時刻値を評価し、特定のコンポーネントを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-430">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="697ce-431">たとえば、を使用`DatePart`して曜日または現在の時間を計算することができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-431">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="697ce-432">引数と`DateInterval.Weekday` `Interval`してを選択した場合、戻り値は`FirstDayOfWeek`列挙体の値と一致します。</span><span class="sxs-lookup"><span data-stu-id="697ce-432">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="697ce-433">`DateInterval.WeekOfYear`を選択した`DatePart`場合、 <xref:System.Globalization.Calendar>は<xref:System.Globalization.CultureInfo> <xref:System.Globalization>名前空間のクラスとクラスを使用して現在の設定を決定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-433">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="697ce-434">引数`FirstDayOfWeekValue`は、 `DateInterval.Weekday`および`DateInterval.WeekOfYear` 設定を使用する計算に`Interval`影響します。</span><span class="sxs-lookup"><span data-stu-id="697ce-434">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="697ce-435">引数`FirstWeekOfYearValue`は、に`Interval`を指定`DateInterval.WeekOfYear`する計算に影響します。</span><span class="sxs-lookup"><span data-stu-id="697ce-435">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="697ce-436">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、メソッドは、日付/時刻部分を取得するための追加オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="697ce-436">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="697ce-437">たとえば、次のように、時刻値を午前 0 `Date`時に設定して、変数の日付値全体を取得できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-437">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="697ce-438">引数`Interval`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-438">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-439">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-439">Enumeration value</span></span>|<span data-ttu-id="697ce-440">String</span><span class="sxs-lookup"><span data-stu-id="697ce-440">String</span></span>|<span data-ttu-id="697ce-441">返される日付/時刻値の一部</span><span class="sxs-lookup"><span data-stu-id="697ce-441">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="697ce-442">d</span><span class="sxs-lookup"><span data-stu-id="697ce-442">d</span></span>|<span data-ttu-id="697ce-443">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="697ce-443">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="697ce-444">Y</span><span class="sxs-lookup"><span data-stu-id="697ce-444">y</span></span>|<span data-ttu-id="697ce-445">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="697ce-445">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="697ce-446">h</span><span class="sxs-lookup"><span data-stu-id="697ce-446">h</span></span>|<span data-ttu-id="697ce-447">Hour</span><span class="sxs-lookup"><span data-stu-id="697ce-447">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="697ce-448">n</span><span class="sxs-lookup"><span data-stu-id="697ce-448">n</span></span>|<span data-ttu-id="697ce-449">Minute</span><span class="sxs-lookup"><span data-stu-id="697ce-449">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="697ce-450">m</span><span class="sxs-lookup"><span data-stu-id="697ce-450">m</span></span>|<span data-ttu-id="697ce-451">月</span><span class="sxs-lookup"><span data-stu-id="697ce-451">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="697ce-452">q</span><span class="sxs-lookup"><span data-stu-id="697ce-452">q</span></span>|<span data-ttu-id="697ce-453">Quarter</span><span class="sxs-lookup"><span data-stu-id="697ce-453">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="697ce-454">s</span><span class="sxs-lookup"><span data-stu-id="697ce-454">s</span></span>|<span data-ttu-id="697ce-455">Second</span><span class="sxs-lookup"><span data-stu-id="697ce-455">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="697ce-456">週</span><span class="sxs-lookup"><span data-stu-id="697ce-456">w</span></span>|<span data-ttu-id="697ce-457">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="697ce-457">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="697ce-458">各地</span><span class="sxs-lookup"><span data-stu-id="697ce-458">ww</span></span>|<span data-ttu-id="697ce-459">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="697ce-459">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="697ce-460">yyyy</span><span class="sxs-lookup"><span data-stu-id="697ce-460">yyyy</span></span>|<span data-ttu-id="697ce-461">Year</span><span class="sxs-lookup"><span data-stu-id="697ce-461">Year</span></span>|  
  
 <span data-ttu-id="697ce-462">引数`FirstDayOfWeekValue`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-462">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-463">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-463">Enumeration value</span></span>|<span data-ttu-id="697ce-464">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-464">Value</span></span>|<span data-ttu-id="697ce-465">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-465">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="697ce-466">0</span><span class="sxs-lookup"><span data-stu-id="697ce-466">0</span></span>|<span data-ttu-id="697ce-467">システム設定で指定された週の最初の曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-467">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="697ce-468">1</span><span class="sxs-lookup"><span data-stu-id="697ce-468">1</span></span>|<span data-ttu-id="697ce-469">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-469">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="697ce-470">2</span><span class="sxs-lookup"><span data-stu-id="697ce-470">2</span></span>|<span data-ttu-id="697ce-471">月曜日 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-471">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="697ce-472">3</span><span class="sxs-lookup"><span data-stu-id="697ce-472">3</span></span>|<span data-ttu-id="697ce-473">火曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-473">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="697ce-474">4</span><span class="sxs-lookup"><span data-stu-id="697ce-474">4</span></span>|<span data-ttu-id="697ce-475">水曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-475">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="697ce-476">5</span><span class="sxs-lookup"><span data-stu-id="697ce-476">5</span></span>|<span data-ttu-id="697ce-477">木曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-477">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="697ce-478">6</span><span class="sxs-lookup"><span data-stu-id="697ce-478">6</span></span>|<span data-ttu-id="697ce-479">金曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-479">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="697ce-480">7</span><span class="sxs-lookup"><span data-stu-id="697ce-480">7</span></span>|<span data-ttu-id="697ce-481">土曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-481">Saturday</span></span>|  
  
 <span data-ttu-id="697ce-482">引数`FirstWeekOfYearValue`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-482">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-483">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-483">Enumeration value</span></span>|<span data-ttu-id="697ce-484">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-484">Value</span></span>|<span data-ttu-id="697ce-485">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-485">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="697ce-486">0</span><span class="sxs-lookup"><span data-stu-id="697ce-486">0</span></span>|<span data-ttu-id="697ce-487">システム設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-487">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="697ce-488">1</span><span class="sxs-lookup"><span data-stu-id="697ce-488">1</span></span>|<span data-ttu-id="697ce-489">1月1日が発生する週 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-489">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="697ce-490">2</span><span class="sxs-lookup"><span data-stu-id="697ce-490">2</span></span>|<span data-ttu-id="697ce-491">新しい年に少なくとも4日ある週 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-491">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="697ce-492">3</span><span class="sxs-lookup"><span data-stu-id="697ce-492">3</span></span>|<span data-ttu-id="697ce-493">新しい年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-493">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-494">この例では、日付を取得し`DatePart` 、関数を使用して、発生した年の四半期を表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-494">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-495"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="697ce-495"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-496"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="697ce-496"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-497">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-497">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netcore-3.0;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="697ce-498">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-498">Required.</span></span> <span data-ttu-id="697ce-499">返される日付/時刻値の一部を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-499">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="697ce-500">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-500">Required.</span></span> <span data-ttu-id="697ce-501">評価する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-501">A <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="697ce-502">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-502">Optional.</span></span> <span data-ttu-id="697ce-503">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-503">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="697ce-504">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-504">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="697ce-505">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-505">Optional.</span></span> <span data-ttu-id="697ce-506">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-506">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="697ce-507">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-507">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="697ce-508">特定の <see langword="Date" /> 型値の中の指定された要素を含む値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-508">Returns an value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="697ce-509">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値の値。</span><span class="sxs-lookup"><span data-stu-id="697ce-509">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-510">`DatePart`関数を使用すると、日付/時刻値を評価し、特定のコンポーネントを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-510">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="697ce-511">たとえば、を使用`DatePart`して曜日または現在の時間を計算することができます。</span><span class="sxs-lookup"><span data-stu-id="697ce-511">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="697ce-512">引数と`DateInterval.Weekday` `Interval`してを選択した場合、戻り値は`FirstDayOfWeek`列挙体の値と一致します。</span><span class="sxs-lookup"><span data-stu-id="697ce-512">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="697ce-513">`DateInterval.WeekOfYear`を選択した`DatePart`場合、 <xref:System.Globalization.Calendar>は<xref:System.Globalization.CultureInfo> <xref:System.Globalization>名前空間のクラスとクラスを使用して現在の設定を決定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-513">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="697ce-514">引数`FirstDayOfWeekValue`は、 `DateInterval.Weekday`および`DateInterval.WeekOfYear` 設定を使用する計算に`Interval`影響します。</span><span class="sxs-lookup"><span data-stu-id="697ce-514">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="697ce-515">引数`FirstWeekOfYearValue`は、に`Interval`を指定`DateInterval.WeekOfYear`する計算に影響します。</span><span class="sxs-lookup"><span data-stu-id="697ce-515">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="697ce-516">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、メソッドは、日付/時刻部分を取得するための追加オプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="697ce-516">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="697ce-517">たとえば、次のように、時刻値を午前 0 `Date`時に設定して、変数の日付値全体を取得できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-517">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="697ce-518">引数`Interval`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-518">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-519">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-519">Enumeration value</span></span>|<span data-ttu-id="697ce-520">String</span><span class="sxs-lookup"><span data-stu-id="697ce-520">String</span></span>|<span data-ttu-id="697ce-521">返される日付/時刻値の一部</span><span class="sxs-lookup"><span data-stu-id="697ce-521">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="697ce-522">d</span><span class="sxs-lookup"><span data-stu-id="697ce-522">d</span></span>|<span data-ttu-id="697ce-523">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="697ce-523">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="697ce-524">Y</span><span class="sxs-lookup"><span data-stu-id="697ce-524">y</span></span>|<span data-ttu-id="697ce-525">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="697ce-525">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="697ce-526">h</span><span class="sxs-lookup"><span data-stu-id="697ce-526">h</span></span>|<span data-ttu-id="697ce-527">Hour</span><span class="sxs-lookup"><span data-stu-id="697ce-527">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="697ce-528">n</span><span class="sxs-lookup"><span data-stu-id="697ce-528">n</span></span>|<span data-ttu-id="697ce-529">Minute</span><span class="sxs-lookup"><span data-stu-id="697ce-529">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="697ce-530">m</span><span class="sxs-lookup"><span data-stu-id="697ce-530">m</span></span>|<span data-ttu-id="697ce-531">月</span><span class="sxs-lookup"><span data-stu-id="697ce-531">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="697ce-532">q</span><span class="sxs-lookup"><span data-stu-id="697ce-532">q</span></span>|<span data-ttu-id="697ce-533">Quarter</span><span class="sxs-lookup"><span data-stu-id="697ce-533">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="697ce-534">s</span><span class="sxs-lookup"><span data-stu-id="697ce-534">s</span></span>|<span data-ttu-id="697ce-535">Second</span><span class="sxs-lookup"><span data-stu-id="697ce-535">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="697ce-536">週</span><span class="sxs-lookup"><span data-stu-id="697ce-536">w</span></span>|<span data-ttu-id="697ce-537">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="697ce-537">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="697ce-538">各地</span><span class="sxs-lookup"><span data-stu-id="697ce-538">ww</span></span>|<span data-ttu-id="697ce-539">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="697ce-539">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="697ce-540">yyyy</span><span class="sxs-lookup"><span data-stu-id="697ce-540">yyyy</span></span>|<span data-ttu-id="697ce-541">Year</span><span class="sxs-lookup"><span data-stu-id="697ce-541">Year</span></span>|  
  
 <span data-ttu-id="697ce-542">引数`FirstDayOfWeekValue`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-542">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-543">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-543">Enumeration value</span></span>|<span data-ttu-id="697ce-544">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-544">Value</span></span>|<span data-ttu-id="697ce-545">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-545">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="697ce-546">0</span><span class="sxs-lookup"><span data-stu-id="697ce-546">0</span></span>|<span data-ttu-id="697ce-547">システム設定で指定された週の最初の曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-547">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="697ce-548">1</span><span class="sxs-lookup"><span data-stu-id="697ce-548">1</span></span>|<span data-ttu-id="697ce-549">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-549">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="697ce-550">2</span><span class="sxs-lookup"><span data-stu-id="697ce-550">2</span></span>|<span data-ttu-id="697ce-551">月曜日 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-551">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="697ce-552">3</span><span class="sxs-lookup"><span data-stu-id="697ce-552">3</span></span>|<span data-ttu-id="697ce-553">火曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-553">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="697ce-554">4</span><span class="sxs-lookup"><span data-stu-id="697ce-554">4</span></span>|<span data-ttu-id="697ce-555">水曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-555">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="697ce-556">5</span><span class="sxs-lookup"><span data-stu-id="697ce-556">5</span></span>|<span data-ttu-id="697ce-557">木曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-557">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="697ce-558">6</span><span class="sxs-lookup"><span data-stu-id="697ce-558">6</span></span>|<span data-ttu-id="697ce-559">金曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-559">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="697ce-560">7</span><span class="sxs-lookup"><span data-stu-id="697ce-560">7</span></span>|<span data-ttu-id="697ce-561">土曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-561">Saturday</span></span>|  
  
 <span data-ttu-id="697ce-562">引数`FirstWeekOfYearValue`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-562">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-563">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-563">Enumeration value</span></span>|<span data-ttu-id="697ce-564">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-564">Value</span></span>|<span data-ttu-id="697ce-565">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-565">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="697ce-566">0</span><span class="sxs-lookup"><span data-stu-id="697ce-566">0</span></span>|<span data-ttu-id="697ce-567">システム設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-567">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="697ce-568">1</span><span class="sxs-lookup"><span data-stu-id="697ce-568">1</span></span>|<span data-ttu-id="697ce-569">1月1日が発生する週 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-569">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="697ce-570">2</span><span class="sxs-lookup"><span data-stu-id="697ce-570">2</span></span>|<span data-ttu-id="697ce-571">新しい年に少なくとも4日ある週 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-571">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="697ce-572">3</span><span class="sxs-lookup"><span data-stu-id="697ce-572">3</span></span>|<span data-ttu-id="697ce-573">新しい年の最初の週</span><span class="sxs-lookup"><span data-stu-id="697ce-573">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-574">この例では、日付を取得し`DatePart` 、関数を使用して、発生した年の四半期を表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-574">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-575"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="697ce-575"><paramref name="Interval" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-576"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="697ce-576"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-577">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-577">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year"><span data-ttu-id="697ce-578">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-578">Required.</span></span> <span data-ttu-id="697ce-579">1 から 9999 の整数式。</span><span class="sxs-lookup"><span data-stu-id="697ce-579">Integer expression from 1 through 9999.</span></span> <span data-ttu-id="697ce-580">ただし、この範囲より小さい値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="697ce-580">However, values below this range are also accepted.</span></span> <span data-ttu-id="697ce-581"><paramref name="Year" /> が 0 ～ 99 の場合、下の「解説」で説明しているように、1930 ～ 2029 年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-581">If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span></span> <span data-ttu-id="697ce-582"><paramref name="Year" /> が 1 未満の場合、現在の年からその値が減算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-582">If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</span></span></param>
        <param name="Month"><span data-ttu-id="697ce-583">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-583">Required.</span></span> <span data-ttu-id="697ce-584">1 から 12 の整数式。</span><span class="sxs-lookup"><span data-stu-id="697ce-584">Integer expression from 1 through 12.</span></span> <span data-ttu-id="697ce-585">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="697ce-585">However, values outside this range are also accepted.</span></span> <span data-ttu-id="697ce-586"><paramref name="Month" /> の値は 1 だけオフセットされた後、計算対象の年の 1 月に加算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-586">The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year.</span></span> <span data-ttu-id="697ce-587">つまり、(<paramref name="Month" /> - 1) が 1 月に加算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-587">In other words, (<paramref name="Month" /> - 1) is added to January.</span></span> <span data-ttu-id="697ce-588">年は必要に応じて再計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-588">The year is recalculated if necessary.</span></span> <span data-ttu-id="697ce-589">この処理による結果の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-589">The following results illustrate this effect:</span></span> 
<span data-ttu-id="697ce-590"><paramref name="Month" /> が 1 の場合、結果は計算対象の年の 1 月になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-590">If <paramref name="Month" /> is 1, the result is January of the calculated year.</span></span>  
  
<span data-ttu-id="697ce-591"><paramref name="Month" /> が 0 の場合、結果は前年の 12 月になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-591">If <paramref name="Month" /> is 0, the result is December of the previous year.</span></span>  
  
<span data-ttu-id="697ce-592">If <paramref name="Month" /> が -1 の場合、結果は前年の 11 月になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-592">If <paramref name="Month" /> is -1, the result is November of the previous year.</span></span>  
  
<span data-ttu-id="697ce-593"><paramref name="Month" /> が 13 の場合、結果は翌年の 1 月になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-593">If <paramref name="Month" /> is 13, the result is January of the following year.</span></span></param>
        <param name="Day"><span data-ttu-id="697ce-594">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-594">Required.</span></span> <span data-ttu-id="697ce-595">1 から 31 の整数式。</span><span class="sxs-lookup"><span data-stu-id="697ce-595">Integer expression from 1 through 31.</span></span> <span data-ttu-id="697ce-596">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="697ce-596">However, values outside this range are also accepted.</span></span> <span data-ttu-id="697ce-597"><paramref name="Day" /> の値は 1 だけオフセットされた後、計算対象の月の最初の日に加算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-597">The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month.</span></span> <span data-ttu-id="697ce-598">つまり、(<paramref name="Day" /> - 1) がその月の最初の日に加算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-598">In other words, (<paramref name="Day" /> - 1) is added to the first of the month.</span></span> <span data-ttu-id="697ce-599">必要に応じて月と年が再計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-599">The month and year are recalculated if necessary.</span></span> <span data-ttu-id="697ce-600">この処理による結果の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-600">The following results illustrate this effect:</span></span> 
<span data-ttu-id="697ce-601"><paramref name="Day" /> が 1 の場合、結果は計算対象の月の最初の日になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-601">If <paramref name="Day" /> is 1, the result is the first day of the calculated month.</span></span>  
  
<span data-ttu-id="697ce-602"><paramref name="Day" /> が 0 の場合、結果は前月の末日になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-602">If <paramref name="Day" /> is 0, the result is the last day of the previous month.</span></span>  
  
<span data-ttu-id="697ce-603"><paramref name="Day" /> が -1 の場合、結果は前月の末日の前日になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-603">If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.</span></span>  
  
<span data-ttu-id="697ce-604"><paramref name="Day" /> が現在の月の末日を過ぎている場合、結果は翌月の適切な日になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-604">If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month.</span></span> <span data-ttu-id="697ce-605">たとえば、<paramref name="Month" /> が 4 で <paramref name="Day" /> が 31 の場合、結果は 5 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="697ce-605">For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</span></span></param>
        <summary><span data-ttu-id="697ce-606">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-606">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="697ce-607">指定された年、月、日を表す <see langword="Date" /> 値であり、時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-607">A <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-608">Windows 98 または windows 2000 では、 `Year`引数の2桁の年がユーザー定義のコンピューター設定に基づいて解釈されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-608">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="697ce-609">既定の設定では、0 ~ 29 の値は2000-2029 年と解釈され、30 ~ 99 の値は年数1930-1999 として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-609">The default settings are that values from 0 through 29 are interpreted as the years 2000-2029, and values from 30 through 99 are interpreted as the years 1930-1999.</span></span> <span data-ttu-id="697ce-610">それ以外`Year`のすべての引数には、1924のように4桁の年を使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-610">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="697ce-611">以前のバージョンの Windows では、前に説明した既定値に基づいて2桁の年が解釈されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-611">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="697ce-612">関数が適切な値を返すようにするには、4桁`Year`のを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-612">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="697ce-613">次の例では、負の値、ゼロ、および正の引数の値を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-613">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="697ce-614">ここでは`DateSerial` 、関数は`Date` 、年3月の最初の日の1日前の日付を表すを返します。つまり、現在の年の10年前に10年前の日を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-614">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="697ce-615">または`Month` `Day`のいずれかが通常の範囲を超えている場合は、必要に応じて次の大きな単位に適用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-615">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="697ce-616">たとえば、32日を指定すると、の`Month`値に応じて、1か月として評価されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-616">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="697ce-617">が`Year` 9999 より大きい場合、またはいずれかの引数が-2147483648 ~ 2147483647 の範囲外<xref:System.ArgumentException>の場合は、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="697ce-617">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="697ce-618">3つの引数で指定された日付が、1年1月1日の00:00:00 より前、または9999年12月31日<xref:System.ArgumentOutOfRangeException>の23:59:59 よりも前の場合、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="697ce-618">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="697ce-619">データ`Date`型には、時間部分が含まれます。</span><span class="sxs-lookup"><span data-stu-id="697ce-619">The `Date` data type includes time components.</span></span> <span data-ttu-id="697ce-620">`DateSerial`これらのすべてを0に設定し、戻り値が計算された日の開始を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-620">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="697ce-621">すべて`Date`の値は<xref:System.DateTime>構造体によってサポートされるため、値を`Date`アセンブルするときに、そのメソッドによって追加のオプションが提供されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-621">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="697ce-622">たとえば、オーバーロード<xref:System.DateTime.%23ctor%2A>されたコンストラクターのいずれかを使用して`Date` 、必要なコンポーネントの組み合わせを使用して変数を設定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-622">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="697ce-623">次の例で`NewDateTime`は、1978年5月 6 8:30 秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-623">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="697ce-624">この例では`DateSerial` 、関数を使用して、指定した年、月、および日の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-624">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-625">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-625">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="697ce-626">システムの現在の日付を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-626">Returns or sets a string value representing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="697ce-627">システムの現在の日付を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-627">Returns or sets a string value representing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-628">`DateString`月の省略名を使用する、MM-yyyy 形式のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-628">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="697ce-629">日付に使用できる形式は、M-d-yyyy、M-d-y、M/d/yyyy、M/d/y です。</span><span class="sxs-lookup"><span data-stu-id="697ce-629">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="697ce-630">これは、2バイト文字セット (DBCS) を使用するものを除くすべてのシステムロケールに当てはまります。</span><span class="sxs-lookup"><span data-stu-id="697ce-630">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="697ce-631">システムロケールで2バイト文字セットが使用されて`DateString`いる場合、は、システム日付を yyyy-mm-dd 形式で返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-631">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="697ce-632">システムロケールは、**コントロールパネル**の [**時計]、[言語]、[地域**] の項目を使用して設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-632">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="697ce-633">**メモ**Silverlight `DateString`内で Visual Basic を実行している場合、プロパティは、 `zh` (簡体字中国語)、 `ko` (韓国語)、および`ja` (日本語) システムロケールの yyyy-MM dd 形式のシステム日付のみを返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-633">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="697ce-634">現在のシステム時刻をとして`String`取得または設定するには、 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-634">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="697ce-635">現在のシステム日付または時刻をロケールの形式またはカスタム形式で取得するには、 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数に渡して、定義済みまたはユーザー定義の日付/時刻形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-635">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="697ce-636">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-636">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="697ce-637">現在のシステム日付をとして`Date`アクセスするに<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>は、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-637">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="697ce-638">システムの日付または時刻を設定するには、アンマネージコードのアクセス許可が必要です。これは、部分信頼状況での実行に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="697ce-638">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="697ce-639">詳細については<xref:System.Security.Permissions.SecurityPermission> 、「」および「[コードアクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="697ce-639">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-640">次の例では`DateString` 、プロパティを使用して、現在のシステム日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-640">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-641"><see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" /> の値を設定するのに使用する無効な形式。</span><span class="sxs-lookup"><span data-stu-id="697ce-641">Invalid format used to set the value of <see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime DateValue(string StringDate) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate"><span data-ttu-id="697ce-642">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-642">Required.</span></span> <span data-ttu-id="697ce-643">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-643">string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="697ce-644">文字列で表した日付情報を含む <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-644">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="697ce-645">文字列で表した日付情報を含む <see langword="Date" /> 値であり、時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-645">A <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-646">が`StringDate`有効な日付の区切り記号で区切られた 1 ~ 12 `DateValue`の数値のみを含む場合、は、システムに対して指定された短い日付形式に従って、月、日、および年の順序を認識します。</span><span class="sxs-lookup"><span data-stu-id="697ce-646">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="697ce-647">`DateValue`名前空間の<xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo>クラスのプロパティから現在のカレンダー設定を使用します。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-647">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="697ce-648">既定<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値は、**コントロールパネル**の設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-648">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="697ce-649">名前空間の<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> <xref:System.Globalization.DateTimeFormatInfo>クラスのプロパティを設定することにより、短い日付形式をオーバーライドできます。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-649">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="697ce-650">`DateValue`は、長い形式、省略形、および数値形式で月名を認識します。</span><span class="sxs-lookup"><span data-stu-id="697ce-650">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="697ce-651">たとえば、12/30/1991 と12/30/91 を認識するだけでなく`DateValue` 、では、1991、、および10月30日の1991も認識しています。</span><span class="sxs-lookup"><span data-stu-id="697ce-651">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="697ce-652">の`StringDate`年の部分が省略され`DateValue`ている場合、では、コンピューターのシステム日付の現在の年を使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-652">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="697ce-653">引数に`StringDate`時刻情報が含まれ`DateValue`ている場合、は戻り値にを含めません。</span><span class="sxs-lookup"><span data-stu-id="697ce-653">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="697ce-654">ただし、に`StringDate` "89:98" <xref:System.InvalidCastException>などの無効な時刻情報が含まれている場合は、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="697ce-654">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-655">この例では`DateValue` 、関数を使用して文字列を日付に変換します。</span><span class="sxs-lookup"><span data-stu-id="697ce-655">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="697ce-656">日付リテラルを使用して、 `Object`または`Date`変数 (など) `oldDate = #2/12/69#`に日付を直接割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-656">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-657"><paramref name="StringDate" /> に無効な時刻情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="697ce-657"><paramref name="StringDate" /> includes invalid time information.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="697ce-658">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="697ce-658">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Day(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="697ce-659">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-659">Required.</span></span> <span data-ttu-id="697ce-660">日を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-660">A <see langword="Date" /> value from which you want to extract the day.</span></span></param>
        <summary><span data-ttu-id="697ce-661">日付を表す 1 から 31 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-661">Returns an integer value from 1 through 31 representing the day of the month.</span></span></summary>
        <returns><span data-ttu-id="697ce-662">日付を表す 1 から 31 の整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-662">An integer value from 1 through 31 representing the day of the month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-663">`Day`関数を使用する場合は、名前<xref:System.Windows.Forms>空間が列挙体とし`Microsoft.VisualBasic`て定義<xref:System.Windows.Forms.Day>されているため、名前空間で修飾する必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="697ce-663">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="697ce-664">次の例では、 `Day`修飾がこのあいまいさを解決する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="697ce-664">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="697ce-665">を呼び出し`DatePart`て*Interval*引数にを指定`DateInterval.Day`することによって、月の日付を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-665">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-666">次の例では`Day` 、関数を使用して、指定された日付から月の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-666">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="697ce-667">開発環境では、日付リテラルは、コードのロケール設定を使用して、標準の短い形式 ("02/12/1969" など) で表示されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-667">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="697ce-668">`Day`は、列挙体と<xref:System.Windows.Forms.Day?displayProperty=nameWithType>区別するために修飾されています。</span><span class="sxs-lookup"><span data-stu-id="697ce-668">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Hour(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="697ce-669">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-669">Required.</span></span> <span data-ttu-id="697ce-670">時を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-670">A <see langword="Date" /> value from which you want to extract the hour.</span></span></param>
        <summary><span data-ttu-id="697ce-671">時刻を表す 0 から 23 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-671">Returns an integer value from 0 through 23 representing the hour of the day.</span></span></summary>
        <returns><span data-ttu-id="697ce-672">時刻を表す 0 から 23 の整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-672">An integer value from 0 through 23 representing the hour of the day.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-673">を呼び出し`DatePart`て`Interval`引数にを指定`DateInterval.Hour`することによって、1日の時間を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-673">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-674">この例では`Hour` 、関数を使用して、指定された時間から時間を取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-674">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="697ce-675">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-675">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Minute(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="697ce-676">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-676">Required.</span></span> <span data-ttu-id="697ce-677">分を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-677">A <see langword="Date" /> value from which you want to extract the minute.</span></span></param>
        <summary><span data-ttu-id="697ce-678">分を表す 0 から 59 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-678">Returns an integer value from 0 through 59 representing the minute of the hour.</span></span></summary>
        <returns><span data-ttu-id="697ce-679">分を表す 0 から 59 の整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-679">An integer value from 0 through 59 representing the minute of the hour.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-680">を呼び出し`DatePart`て`Interval`引数にを指定`DateInterval.Minute`することによって、時間の分を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-680">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-681">この例では`Minute` 、関数を使用して、指定された時間から時間の分を取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-681">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="697ce-682">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-682">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Month(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="697ce-683">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-683">Required.</span></span> <span data-ttu-id="697ce-684">月を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-684">A <see langword="Date" /> value from which you want to extract the month.</span></span></param>
        <summary><span data-ttu-id="697ce-685">月を表す 1 から 12 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-685">Returns an integer value from 1 through 12 representing the month of the year.</span></span></summary>
        <returns><span data-ttu-id="697ce-686">月を表す 1 から 12 の整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-686">An integer value from 1 through 12 representing the month of the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-687">を呼び出し`DatePart`て`Interval`引数にを指定`DateInterval.Month`することによって、年の月を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-687">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-688">この例では`Month` 、関数を使用して、指定された日付から月を取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-688">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="697ce-689">開発環境では、日付リテラルは、コードのロケール設定を使用して短い日付形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-689">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MonthName(int32 Month, bool Abbreviate) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month"><span data-ttu-id="697ce-690">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-690">Required.</span></span> <span data-ttu-id="697ce-691">数値 (1 ～ 13) による月の指定です。1 は 1 月を示し、12 は 12 月を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-691">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span></span> <span data-ttu-id="697ce-692">13 か月カレンダーでは値 13 を使用できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-692">You can use the value 13 with a 13-month calendar.</span></span> <span data-ttu-id="697ce-693">システムで 12 か月カレンダーを使用しているとき、<paramref name="Month" /> に 13 を指定すると、<c>MonthName</c> からは空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-693">If your system is using a 12-month calendar and <paramref name="Month" /> is 13, <c>MonthName</c> returns an empty string.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="697ce-694">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-694">Optional.</span></span> <span data-ttu-id="697ce-695">月の名前を省略する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="697ce-695"><see langword="True" /> to abbreviate the month name; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="697ce-696">既定値は、<see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="697ce-696">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="697ce-697">指定された月の名前を含む文字列値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-697">Returns a string value containing the name of the specified month.</span></span></summary>
        <returns><span data-ttu-id="697ce-698">指定された月の名前を含む文字列値。</span><span class="sxs-lookup"><span data-stu-id="697ce-698">A string value containing the name of the specified month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-699">によって`MonthName`返される文字列は、入力引数だけでなく、Windows の**コントロールパネル**で指定されている**地域のオプション**の設定にも依存します。</span><span class="sxs-lookup"><span data-stu-id="697ce-699">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="697ce-700">`MonthName`名前空間の<xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo>クラスのプロパティから現在のカレンダー設定を使用します。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-700">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="697ce-701">既定<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値は、**コントロールパネル**の設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-701">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-702">この例では`MonthName` 、関数を使用して、指定された整数で月の名前を決定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-702">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="697ce-703">ブール値によって、完全な名前 (`False`) と省略名 (`True`) のどちらが表示されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-703">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-704"><paramref name="Month" /> が 1 より小さいか、または 13 を超えています。</span><span class="sxs-lookup"><span data-stu-id="697ce-704"><paramref name="Month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="697ce-705">ご利用のシステムに従った現在の日付と時刻を含む日付型の値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-705">Returns a value containing the current date and time according to your system.</span></span></summary>
        <value><span data-ttu-id="697ce-706">システムに従った現在の日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="697ce-706">The current date and time according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-707">システム日付を設定するには<xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-707">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="697ce-708">システム時刻を設定するには、 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-708">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-709">次の例では`Now` 、プロパティを使用して、現在のシステムの日付と時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-709">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Second(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="697ce-710">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-710">Required.</span></span> <span data-ttu-id="697ce-711">秒を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-711">A <see langword="Date" /> value from which you want to extract the second.</span></span></param>
        <summary><span data-ttu-id="697ce-712">秒を表す 0 から 59 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-712">Returns an integer value from 0 through 59 representing the second of the minute.</span></span></summary>
        <returns><span data-ttu-id="697ce-713">秒を表す 0 から 59 の整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-713">An integer value from 0 through 59 representing the second of the minute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-714">を呼び出し`DatePart`て`Interval`引数にを指定`DateInterval.Second`することで、分の2番目のを取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-714">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-715">次の例では`Second` 、関数を使用して、指定した時刻から分の2番目のを取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-715">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="697ce-716">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-716">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="697ce-717">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-717">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="697ce-718">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-718">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-719">データ`Date`型には、日付部分が含まれます。</span><span class="sxs-lookup"><span data-stu-id="697ce-719">The `Date` data type includes date components.</span></span> <span data-ttu-id="697ce-720">システム時刻を返す場合、 `TimeOfDay`はこれらのすべてを1に設定します。したがって、返される値は、1年の最初の日を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-720">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="697ce-721">システム時刻を設定すると`TimeOfDay` 、は日付のコンポーネントを無視します。</span><span class="sxs-lookup"><span data-stu-id="697ce-721">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="697ce-722">として`String`現在のシステム時刻にアクセスするに<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>は、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-722">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="697ce-723">現在のシステム日付を取得または設定するに<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>は、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-723">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="697ce-724">システムの日付または時刻を設定するには、アンマネージコードのアクセス許可が必要です。これは、部分信頼状況での実行に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="697ce-724">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="697ce-725">詳細については<xref:System.Security.Permissions.SecurityPermission> 、「」および「[コードアクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="697ce-725">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-726">この例では`TimeOfDay` 、プロパティを使用して、現在のシステム時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-726">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="697ce-727">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see cref="T:System.Double" />) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-727">Returns a <see cref="T:System.Double" /> value representing the number of seconds elapsed since midnight.</span></span></summary>
        <value><span data-ttu-id="697ce-728">午前0時から経過した秒数を表す値。</span><span class="sxs-lookup"><span data-stu-id="697ce-728">A value representing the number of seconds elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-729">プロパティ`Timer`は、秒と、最新の深夜0時からのミリ秒の両方を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-729">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="697ce-730">秒は戻り値の整数部分にあり、ミリ秒は小数部に含まれます。</span><span class="sxs-lookup"><span data-stu-id="697ce-730">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-731">この例では`Timer` 、プロパティを使用してアプリケーションを一時停止します。</span><span class="sxs-lookup"><span data-stu-id="697ce-731">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="697ce-732">一時停止中に他の処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-732">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="697ce-733">は`Timer` <xref:System.Threading?displayProperty=nameWithType>、 `Timer` <xref:Microsoft.VisualBasic?displayProperty=nameWithType> 、 、および<xref:System.Windows.Forms?displayProperty=nameWithType>の各名前空間で定義されているクラスでもあるため、プロパティを名前空間で修飾する必要があることに注意してください。 <xref:System.Timers?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="697ce-733">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour"><span data-ttu-id="697ce-734">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-734">Required.</span></span> <span data-ttu-id="697ce-735">0 から 23 の整数式。</span><span class="sxs-lookup"><span data-stu-id="697ce-735">Integer expression from 0 through 23.</span></span> <span data-ttu-id="697ce-736">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="697ce-736">However, values outside this range are also accepted.</span></span></param>
        <param name="Minute"><span data-ttu-id="697ce-737">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-737">Required.</span></span> <span data-ttu-id="697ce-738">0 から 59 の整数式。</span><span class="sxs-lookup"><span data-stu-id="697ce-738">Integer expression from 0 through 59.</span></span> <span data-ttu-id="697ce-739">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="697ce-739">However, values outside this range are also accepted.</span></span> <span data-ttu-id="697ce-740">計算される時には <paramref name="Minute" />  の値が加算されるため、負の値を指定するとその時からさかのぼる分数が指定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-740">The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</span></span></param>
        <param name="Second"><span data-ttu-id="697ce-741">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-741">Required.</span></span> <span data-ttu-id="697ce-742">0 から 59 の整数式。</span><span class="sxs-lookup"><span data-stu-id="697ce-742">Integer expression from 0 through 59.</span></span> <span data-ttu-id="697ce-743">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="697ce-743">However, values outside this range are also accepted.</span></span> <span data-ttu-id="697ce-744">算出される分には <paramref name="Second" />  の値が加算されるため、負の値を指定するとその分からさかのぼる秒数が指定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-744">The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</span></span></param>
        <summary><span data-ttu-id="697ce-745">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-745">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="697ce-746">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-746">A <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-747">次の例では、負の値、ゼロ、および正の引数の値を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-747">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="697ce-748">関数`TimeSerial`は、正午から3時間前の15分前、または午前8:45:00 時を表す時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-748">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="697ce-749">または`Minute` `Second`のいずれかが通常の範囲を超えている場合は、必要に応じて次の大きな単位に適用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-749">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="697ce-750">たとえば、75分を指定した場合、1時間15分として評価されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-750">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="697ce-751">`TimeSerial`秒の合計86400秒数を減らします (秒単位)。</span><span class="sxs-lookup"><span data-stu-id="697ce-751">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="697ce-752">したがって、返される時刻は常に 00:00:00 ~ 23:59:59 です。</span><span class="sxs-lookup"><span data-stu-id="697ce-752">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="697ce-753">データ`Date`型には、日付部分が含まれます。</span><span class="sxs-lookup"><span data-stu-id="697ce-753">The `Date` data type includes date components.</span></span> <span data-ttu-id="697ce-754">`TimeSerial`これらのすべてを1に設定するため、戻り値は1年の最初の日を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-754">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="697ce-755">ただし、引数の値によって計算された時間が24時間を超えた場合、その日は必要に応じてインクリメントされます。</span><span class="sxs-lookup"><span data-stu-id="697ce-755">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="697ce-756">次の例では、と`Hour` `Minute`の値によって、合計24時間を超える時間が計算されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-756">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="697ce-757">引数の値が負の計算時間になると、日付情報は1/1/0001 に設定され、時刻情報は00:00:00 と23:59:59 の間に調整されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-757">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="697ce-758">ただし、計算された時間が負の24時間<xref:System.ArgumentOutOfRangeException>未満の場合は、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="697ce-758">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="697ce-759">すべて`Date`の値は<xref:System.DateTime?displayProperty=nameWithType>構造体によってサポートされるため、値を`Date`アセンブルするときに、そのメソッドによって追加のオプションが提供されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-759">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="697ce-760">たとえば、オーバーロード<xref:System.DateTime.%23ctor%2A>されたコンストラクターのいずれかを使用して`Date` 、必要なコンポーネントの組み合わせを使用して変数を設定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-760">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="697ce-761">次の例で`newDateTime`は、1978年5月 6 8:30 秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-761">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="697ce-762">次の例では`TimeSerial` 、関数を使用して、指定した時間、分、および秒の時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-762">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-763">引数が -2,147,483,648 ～ 2,147,483,647 の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="697ce-763">An argument is outside the range -2,147,483,648 through 2,147,483,647</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="697ce-764">計算された時刻が負の 24 時間より小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="697ce-764">Calculated time is less than negative 24 hours.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="697ce-765">システムの現在の時刻を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-765">Returns or sets a string value representing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="697ce-766">システムの現在の時刻を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-766">Returns or sets a string value representing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-767">`TimeString`システム時刻は、常に24時間形式の "HH: mm: ss" として返されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-767">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="697ce-768">この形式はカルチャに依存しないため、**コントロールパネル**の **[地域のオプション]** を変更しても変更されません。</span><span class="sxs-lookup"><span data-stu-id="697ce-768">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="697ce-769">現在のシステム日付をとして`String`取得または設定するには、 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-769">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="697ce-770">現在のシステム日付または時刻をロケールの形式またはカスタム形式で取得するには、 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数に渡して、定義済みまたはユーザー定義の日付/時刻形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-770">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="697ce-771">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-771">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="697ce-772">として`Date`現在のシステム時刻にアクセスするに<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>は、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-772">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="697ce-773">システムの日付または時刻を設定するには、アンマネージコードのアクセス許可が必要です。これは、部分信頼状況での実行に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="697ce-773">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="697ce-774">詳細については<xref:System.Security.Permissions.SecurityPermission> 、「」および「[コードアクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="697ce-774">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-775">この例では`TimeString` 、プロパティを使用して、現在のシステム時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-775">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-776"><see langword="TimeString" /> の値を設定するのに使用する無効な形式。</span><span class="sxs-lookup"><span data-stu-id="697ce-776">Invalid format used to set the value of <see langword="TimeString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime TimeValue(string StringTime) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime"><span data-ttu-id="697ce-777">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-777">Required.</span></span> <span data-ttu-id="697ce-778">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す文字列式。</span><span class="sxs-lookup"><span data-stu-id="697ce-778">A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="697ce-779">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-779">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="697ce-780">文字列で表した時刻情報を含む <see langword="Date" /> 値であり、日付情報は 1 年 1 月 1 日に設定されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-780">A <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-781">有効な時刻を入力するには、12時間または24時間制を使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-781">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="697ce-782">たとえば、 `"2:24 P.M."`とは`"14:24"`両方とも`StringTime`有効な引数です。</span><span class="sxs-lookup"><span data-stu-id="697ce-782">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="697ce-783">引数に`StringTime`日付情報が含まれ`TimeValue`ている場合、は戻り値にを含めません。</span><span class="sxs-lookup"><span data-stu-id="697ce-783">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="697ce-784">ただし、に`StringTime`無効な日付情報が含まれている場合 (たとえば、 <xref:System.InvalidCastException> 32 年1月の場合)、エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="697ce-784">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-785">次の例では`TimeValue` 、関数を使用して、文字列を時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="697ce-785">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="697ce-786">また、日付リテラルを使用して、 `Date`変数に時刻を直接割り当てることもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-786">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="697ce-787"><paramref name="StringTime" /> に無効な日付情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="697ce-787"><paramref name="StringTime" /> includes invalid date information.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="697ce-788">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-788">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="697ce-789">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="697ce-789">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-790">データ`Date`型には、時間部分が含まれます。</span><span class="sxs-lookup"><span data-stu-id="697ce-790">The `Date` data type includes time components.</span></span> <span data-ttu-id="697ce-791">システム日付を返す場合、 `Today`はこれらのすべてを0に設定します。したがって、戻り値は午前0時 (00:00:00) を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-791">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="697ce-792">システム日付を設定すると`Today` 、は時刻のコンポーネントを無視します。</span><span class="sxs-lookup"><span data-stu-id="697ce-792">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="697ce-793">現在のシステム日付をとして`String`アクセスするに<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>は、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-793">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="697ce-794">現在のシステム時刻を取得または設定するに<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>は、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-794">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="697ce-795">システムの日付または時刻を設定するには、アンマネージコードのアクセス許可が必要です。これは、部分信頼状況での実行に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="697ce-795">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="697ce-796">詳細については<xref:System.Security.Permissions.SecurityPermission> 、「」および「[コードアクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="697ce-796">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-797">この例では`Today` 、プロパティを使用して、現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-797">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="697ce-798">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-798">Required.</span></span> <span data-ttu-id="697ce-799">曜日を調べる <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-799">A <see langword="Date" /> value for which you want to determine the day of the week.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="697ce-800">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-800">Optional.</span></span> <span data-ttu-id="697ce-801">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-801">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="697ce-802">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-802">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <summary><span data-ttu-id="697ce-803">曜日を表す数値を含む整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-803">Returns an integer value containing a number representing the day of the week.</span></span></summary>
        <returns><span data-ttu-id="697ce-804">曜日を表す数値を含む整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-804">An integer value containing a number representing the day of the week.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-805">`Weekday`関数によって返される値は、 `FirstDayOfWeek`列挙体の値に対応します。つまり、1は日曜日を表し、7は土曜日を示します。</span><span class="sxs-lookup"><span data-stu-id="697ce-805">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="697ce-806">`Weekday`名前空間の<xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo>クラスのプロパティから現在のカレンダー設定を使用します。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-806">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="697ce-807">既定<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値は、**コントロールパネル**の設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-807">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="697ce-808">引数`DayOfWeek`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-808">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-809">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-809">Enumeration value</span></span>|<span data-ttu-id="697ce-810">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-810">Value</span></span>|<span data-ttu-id="697ce-811">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-811">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="697ce-812">0</span><span class="sxs-lookup"><span data-stu-id="697ce-812">0</span></span>|<span data-ttu-id="697ce-813">システム設定で指定された週の最初の曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-813">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="697ce-814">1</span><span class="sxs-lookup"><span data-stu-id="697ce-814">1</span></span>|<span data-ttu-id="697ce-815">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="697ce-815">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="697ce-816">2</span><span class="sxs-lookup"><span data-stu-id="697ce-816">2</span></span>|<span data-ttu-id="697ce-817">月曜日 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-817">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="697ce-818">3</span><span class="sxs-lookup"><span data-stu-id="697ce-818">3</span></span>|<span data-ttu-id="697ce-819">火曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-819">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="697ce-820">4</span><span class="sxs-lookup"><span data-stu-id="697ce-820">4</span></span>|<span data-ttu-id="697ce-821">水曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-821">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="697ce-822">5</span><span class="sxs-lookup"><span data-stu-id="697ce-822">5</span></span>|<span data-ttu-id="697ce-823">木曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-823">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="697ce-824">6</span><span class="sxs-lookup"><span data-stu-id="697ce-824">6</span></span>|<span data-ttu-id="697ce-825">金曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-825">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="697ce-826">7</span><span class="sxs-lookup"><span data-stu-id="697ce-826">7</span></span>|<span data-ttu-id="697ce-827">土曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-827">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-828">次の例では`Weekday` 、関数を使用して、指定された日付から曜日を取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-828">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-829"><paramref name="DayOfWeek" /> が 0 より小さいか、または 7 を超えています。</span><span class="sxs-lookup"><span data-stu-id="697ce-829"><paramref name="DayOfWeek" /> is less than 0 or more than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday"><span data-ttu-id="697ce-830">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-830">Required.</span></span> <span data-ttu-id="697ce-831">Integer。</span><span class="sxs-lookup"><span data-stu-id="697ce-831">Integer.</span></span> <span data-ttu-id="697ce-832">曜日を指定する 1 ～ 7 の数値。1 は週の最初の曜日を表し、7 は週の最後の曜日を表します。</span><span class="sxs-lookup"><span data-stu-id="697ce-832">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span></span> <span data-ttu-id="697ce-833">最初と最後の曜日は、<paramref name="FirstDayOfWeekValue" /> の設定により決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-833">The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="697ce-834">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-834">Optional.</span></span> <span data-ttu-id="697ce-835">曜日の名前を省略するかどうかを示す <see langword="Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-835"><see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span></span> <span data-ttu-id="697ce-836">省略した場合、既定値の <see langword="False" /> が使用され、曜日の名前は省略されません。</span><span class="sxs-lookup"><span data-stu-id="697ce-836">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="697ce-837">任意。</span><span class="sxs-lookup"><span data-stu-id="697ce-837">Optional.</span></span> <span data-ttu-id="697ce-838">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="697ce-838">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="697ce-839">指定しない場合は、<see langword="FirstDayOfWeek.System" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-839">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span></span></param>
        <summary><span data-ttu-id="697ce-840">指定された曜日の名前を含んでいる文字列値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-840">Returns a string value containing the name of the specified weekday.</span></span></summary>
        <returns><span data-ttu-id="697ce-841">指定された曜日の名前を含んでいる文字列値。</span><span class="sxs-lookup"><span data-stu-id="697ce-841">A string value containing the name of the specified weekday.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-842">によって`WeekdayName`返される文字列は、入力引数だけでなく、Windows の**コントロールパネル**で指定されている**地域のオプション**の設定にも依存します。</span><span class="sxs-lookup"><span data-stu-id="697ce-842">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="697ce-843">`WeekdayName`名前空間の<xref:System.Globalization.CultureInfo.CurrentCulture%2A> <xref:System.Globalization.CultureInfo>クラスのプロパティから現在のカレンダー設定を使用します。 <xref:System.Globalization></span><span class="sxs-lookup"><span data-stu-id="697ce-843">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="697ce-844">既定<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値は、**コントロールパネル**の設定によって決まります。</span><span class="sxs-lookup"><span data-stu-id="697ce-844">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="697ce-845">引数`FirstDayOfWeekValue`には、次の設定のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="697ce-845">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="697ce-846">列挙値</span><span class="sxs-lookup"><span data-stu-id="697ce-846">Enumeration value</span></span>|<span data-ttu-id="697ce-847">[値]</span><span class="sxs-lookup"><span data-stu-id="697ce-847">Value</span></span>|<span data-ttu-id="697ce-848">説明</span><span class="sxs-lookup"><span data-stu-id="697ce-848">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="697ce-849">0</span><span class="sxs-lookup"><span data-stu-id="697ce-849">0</span></span>|<span data-ttu-id="697ce-850">システム設定で指定された週の最初の曜日 (既定)</span><span class="sxs-lookup"><span data-stu-id="697ce-850">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="697ce-851">1</span><span class="sxs-lookup"><span data-stu-id="697ce-851">1</span></span>|<span data-ttu-id="697ce-852">日曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-852">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="697ce-853">2</span><span class="sxs-lookup"><span data-stu-id="697ce-853">2</span></span>|<span data-ttu-id="697ce-854">月曜日 (ISO standard 8601、セクション3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="697ce-854">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="697ce-855">3</span><span class="sxs-lookup"><span data-stu-id="697ce-855">3</span></span>|<span data-ttu-id="697ce-856">火曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-856">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="697ce-857">4</span><span class="sxs-lookup"><span data-stu-id="697ce-857">4</span></span>|<span data-ttu-id="697ce-858">水曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-858">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="697ce-859">5</span><span class="sxs-lookup"><span data-stu-id="697ce-859">5</span></span>|<span data-ttu-id="697ce-860">木曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-860">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="697ce-861">6</span><span class="sxs-lookup"><span data-stu-id="697ce-861">6</span></span>|<span data-ttu-id="697ce-862">金曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-862">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="697ce-863">7</span><span class="sxs-lookup"><span data-stu-id="697ce-863">7</span></span>|<span data-ttu-id="697ce-864">土曜日</span><span class="sxs-lookup"><span data-stu-id="697ce-864">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="697ce-865">次の例では`Weekday` 、関数を使用して、指定した日付`WeekDayName`から曜日を取得し、その数字から曜日の名前を取得する関数を使用します。</span><span class="sxs-lookup"><span data-stu-id="697ce-865">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="697ce-866"><paramref name="Weekday" /> が 1 より小さいか 7 を超えています。または <paramref name="FirstDayOfWeekValue" /> が 0 より小さいか 7 を超えています。</span><span class="sxs-lookup"><span data-stu-id="697ce-866"><paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Year(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="697ce-867">必須です。</span><span class="sxs-lookup"><span data-stu-id="697ce-867">Required.</span></span> <span data-ttu-id="697ce-868">年を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="697ce-868">A <see langword="Date" /> value from which you want to extract the year.</span></span></param>
        <summary><span data-ttu-id="697ce-869">年を表す 1 から 9999 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="697ce-869">Returns an integer value from 1 through 9999 representing the year.</span></span></summary>
        <returns><span data-ttu-id="697ce-870">年を表す 1 から 9999 の整数値。</span><span class="sxs-lookup"><span data-stu-id="697ce-870">An integer value from 1 through 9999 representing the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="697ce-871">を呼び出し`DatePart`て、 `Interval`引数にを指定`DateInterval.Year`することによって、年を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="697ce-871">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="697ce-872">次の例では`Year` 、関数を使用して、指定された日付から年を取得します。</span><span class="sxs-lookup"><span data-stu-id="697ce-872">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="697ce-873">開発環境では、日付リテラルは、コードのロケール設定を使用して短い日付形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="697ce-873">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>
