<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="deadd67a892db7c9d1d1d3605adc1e0e3852ba22" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354794" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="88e05-101"><see langword="DateAndTime" /> モジュールには、日付と時刻の操作に使用されるプロシージャとプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-102">このモジュールは、Visual Basic 言語のキーワードとランタイム ライブラリ メンバーであるため、現在の日付または時刻の取得、日付計算の実行、日付または時刻を返す、日付や時刻などを設定またはプロセスの時間をサポートします。</span><span class="sxs-lookup"><span data-stu-id="88e05-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-103">この例では、`Today`プロパティの現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/dates-and-times-summary.md"><span data-ttu-id="88e05-104">日付と時刻の概要</span><span class="sxs-lookup"><span data-stu-id="88e05-104">Dates and Times Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="88e05-105">キーワード (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="88e05-106">Visual Basic ランタイム ライブラリ メンバー</span><span class="sxs-lookup"><span data-stu-id="88e05-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88e05-107">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-107">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="88e05-108">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-108">Required.</span></span> <span data-ttu-id="88e05-109">加算する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-109">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="88e05-110">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-110">Required.</span></span> <span data-ttu-id="88e05-111">加算する時間間隔を表す浮動小数点式。</span><span class="sxs-lookup"><span data-stu-id="88e05-111">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="88e05-112">これは、正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) とすることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-112">It can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="88e05-113"><paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-113">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="88e05-114">その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-114">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="88e05-115">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-115">Required.</span></span> <span data-ttu-id="88e05-116">時間間隔を加算する日時を表す式。</span><span class="sxs-lookup"><span data-stu-id="88e05-116">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="88e05-117"><paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</span><span class="sxs-lookup"><span data-stu-id="88e05-117"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="88e05-118">指定された時間間隔を加算した日付と時刻を含む値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-118">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="88e05-119">指定された時間間隔を加算した日付と時刻を含む値。</span><span class="sxs-lookup"><span data-stu-id="88e05-119">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-120">使用することができます、`DateAdd`関数を追加または日付から指定した時間間隔を減算します。</span><span class="sxs-lookup"><span data-stu-id="88e05-120">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="88e05-121">たとえば、今すぐ今日または時間 45 分前に、から 30 日の日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="88e05-121">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="88e05-122">日数を加算する`DateValue`、使用することができます`DateInterval.Day`、 `DateInterval.DayOfYear`、または`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-122">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="88e05-123">の同等として処理`DayOfYear`と`Weekday`意味のある時間間隔ではありません。</span><span class="sxs-lookup"><span data-stu-id="88e05-123">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="88e05-124">`DateAdd`関数が無効な日付を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="88e05-124">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="88e05-125">必要に応じて、結果として得られる結果の年の月の最終日に、結果として得られる日付の日の部分が下方調整されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-125">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="88e05-126">次の例では、1 月 31 日に 1 か月が追加されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-126">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="88e05-127">この例で`DateAdd`返します`#2/28/1995#`ではなく、`#2/31/1995#`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-127">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="88e05-128">場合`DateValue`は`#1/31/1996#`、返します`#2/29/1996#`1996 が閏年であるためです。</span><span class="sxs-lookup"><span data-stu-id="88e05-128">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88e05-129">`DateAdd` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-129">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="88e05-130">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-130">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="88e05-131">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔を加算する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="88e05-131">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="88e05-132">ミリ秒単位に丸められますの日の小数部の数を追加するなど、`Date`変数として次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="88e05-132">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="88e05-133">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-133">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-134">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-134">Enumeration value</span></span>|<span data-ttu-id="88e05-135">String</span><span class="sxs-lookup"><span data-stu-id="88e05-135">String</span></span>|<span data-ttu-id="88e05-136">加算する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="88e05-136">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="88e05-137">d</span><span class="sxs-lookup"><span data-stu-id="88e05-137">d</span></span>|<span data-ttu-id="88e05-138">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-138">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="88e05-139">Y</span><span class="sxs-lookup"><span data-stu-id="88e05-139">y</span></span>|<span data-ttu-id="88e05-140">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-140">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="88e05-141">h</span><span class="sxs-lookup"><span data-stu-id="88e05-141">h</span></span>|<span data-ttu-id="88e05-142">1 時間です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="88e05-142">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="88e05-143">n</span><span class="sxs-lookup"><span data-stu-id="88e05-143">n</span></span>|<span data-ttu-id="88e05-144">時間は 1 分ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="88e05-144">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="88e05-145">m</span><span class="sxs-lookup"><span data-stu-id="88e05-145">m</span></span>|<span data-ttu-id="88e05-146">月です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-146">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="88e05-147">q</span><span class="sxs-lookup"><span data-stu-id="88e05-147">q</span></span>|<span data-ttu-id="88e05-148">四半期です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-148">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="88e05-149">s</span><span class="sxs-lookup"><span data-stu-id="88e05-149">s</span></span>|<span data-ttu-id="88e05-150">秒です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="88e05-150">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="88e05-151">週</span><span class="sxs-lookup"><span data-stu-id="88e05-151">w</span></span>|<span data-ttu-id="88e05-152">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-152">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="88e05-153">ww</span><span class="sxs-lookup"><span data-stu-id="88e05-153">ww</span></span>|<span data-ttu-id="88e05-154">1 週間です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-154">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="88e05-155">yyyy</span><span class="sxs-lookup"><span data-stu-id="88e05-155">yyyy</span></span>|<span data-ttu-id="88e05-156">年。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-156">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-157">この例では、日付と、使用、`DateAdd`関数を指定した数か月間、将来の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-157">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-158"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="88e05-158"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-159"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="88e05-159"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88e05-160">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span><span class="sxs-lookup"><span data-stu-id="88e05-160">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-161">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-161">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="88e05-162">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-162">Required.</span></span> <span data-ttu-id="88e05-163">加算する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-163">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to add.</span></span></param>
        <param name="Number"><span data-ttu-id="88e05-164">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-164">Required.</span></span> <span data-ttu-id="88e05-165">加算する時間間隔を表す浮動小数点式。</span><span class="sxs-lookup"><span data-stu-id="88e05-165">Floating-point expression representing the number of intervals you want to add.</span></span> <span data-ttu-id="88e05-166"><paramref name="Number" /> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="88e05-166"><paramref name="Number" /> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span></span> <span data-ttu-id="88e05-167"><paramref name="Interval" /> で時、分、または秒を指定する場合、小数部を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-167">It can contain a fractional part when <paramref name="Interval" /> specifies hours, minutes, or seconds.</span></span> <span data-ttu-id="88e05-168">その他の値を <paramref name="Interval" /> で指定する場合、<paramref name="Number" /> の小数部は無視されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-168">For other values of <paramref name="Interval" />, any fractional part of <paramref name="Number" /> is ignored.</span></span></param>
        <param name="DateValue"><span data-ttu-id="88e05-169">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-169">Required.</span></span> <span data-ttu-id="88e05-170">時間間隔を加算する日時を表す式。</span><span class="sxs-lookup"><span data-stu-id="88e05-170">An expression representing the date and time to which the interval is to be added.</span></span> <span data-ttu-id="88e05-171"><paramref name="DateValue" /> 自体は、呼び出し元のプログラムでは変更されません。</span><span class="sxs-lookup"><span data-stu-id="88e05-171"><paramref name="DateValue" /> itself is not changed in the calling program.</span></span></param>
        <summary><span data-ttu-id="88e05-172">指定された時間間隔を加算した日付と時刻を含む値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-172">Returns a value containing a date and time value to which a specified time interval has been added.</span></span></summary>
        <returns><span data-ttu-id="88e05-173">指定された時間間隔を加算した日付と時刻を含む値。</span><span class="sxs-lookup"><span data-stu-id="88e05-173">A value containing a date and time value to which a specified time interval has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-174">使用することができます、`DateAdd`関数を追加または日付から指定した時間間隔を減算します。</span><span class="sxs-lookup"><span data-stu-id="88e05-174">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="88e05-175">たとえば、今すぐ今日または時間 45 分前に、から 30 日の日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="88e05-175">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="88e05-176">日数を加算する`DateValue`、使用することができます`DateInterval.Day`、 `DateInterval.DayOfYear`、または`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-176">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="88e05-177">の同等として処理`DayOfYear`と`Weekday`意味のある時間間隔ではありません。</span><span class="sxs-lookup"><span data-stu-id="88e05-177">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="88e05-178">`DateAdd`関数が無効な日付を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="88e05-178">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="88e05-179">必要に応じて、結果として得られる結果の年の月の最終日に、結果として得られる日付の日の部分が下方調整されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-179">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="88e05-180">次の例では、1 月 31 日に 1 か月が追加されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-180">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="88e05-181">この例で`DateAdd`返します`#2/28/1995#`ではなく、`#2/31/1995#`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-181">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="88e05-182">場合`DateValue`は`#1/31/1996#`、返します`#2/29/1996#`1996 が閏年であるためです。</span><span class="sxs-lookup"><span data-stu-id="88e05-182">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88e05-183">`DateAdd` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-183">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="88e05-184">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-184">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="88e05-185">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔を加算する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="88e05-185">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="88e05-186">ミリ秒単位に丸められますの日の小数部の数を追加するなど、`Date`変数として次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="88e05-186">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="88e05-187">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-187">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-188">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-188">Enumeration value</span></span>|<span data-ttu-id="88e05-189">String</span><span class="sxs-lookup"><span data-stu-id="88e05-189">String</span></span>|<span data-ttu-id="88e05-190">加算する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="88e05-190">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="88e05-191">d</span><span class="sxs-lookup"><span data-stu-id="88e05-191">d</span></span>|<span data-ttu-id="88e05-192">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-192">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="88e05-193">Y</span><span class="sxs-lookup"><span data-stu-id="88e05-193">y</span></span>|<span data-ttu-id="88e05-194">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-194">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="88e05-195">h</span><span class="sxs-lookup"><span data-stu-id="88e05-195">h</span></span>|<span data-ttu-id="88e05-196">1 時間です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="88e05-196">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="88e05-197">n</span><span class="sxs-lookup"><span data-stu-id="88e05-197">n</span></span>|<span data-ttu-id="88e05-198">時間は 1 分ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="88e05-198">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="88e05-199">m</span><span class="sxs-lookup"><span data-stu-id="88e05-199">m</span></span>|<span data-ttu-id="88e05-200">月です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-200">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="88e05-201">q</span><span class="sxs-lookup"><span data-stu-id="88e05-201">q</span></span>|<span data-ttu-id="88e05-202">四半期です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-202">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="88e05-203">s</span><span class="sxs-lookup"><span data-stu-id="88e05-203">s</span></span>|<span data-ttu-id="88e05-204">秒です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="88e05-204">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="88e05-205">週</span><span class="sxs-lookup"><span data-stu-id="88e05-205">w</span></span>|<span data-ttu-id="88e05-206">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-206">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="88e05-207">ww</span><span class="sxs-lookup"><span data-stu-id="88e05-207">ww</span></span>|<span data-ttu-id="88e05-208">1 週間です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-208">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="88e05-209">yyyy</span><span class="sxs-lookup"><span data-stu-id="88e05-209">yyyy</span></span>|<span data-ttu-id="88e05-210">年。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="88e05-210">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-211">この例では、日付と、使用、`DateAdd`関数を指定した数か月間、将来の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-211">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-212"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="88e05-212"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-213"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="88e05-213"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88e05-214">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span><span class="sxs-lookup"><span data-stu-id="88e05-214">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-215">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-215">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88e05-216">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-216">Returns a value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="88e05-217">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-217">Required.</span></span> <span data-ttu-id="88e05-218"><paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-218">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="88e05-219">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-219">Required.</span></span> <span data-ttu-id="88e05-220">計算で使用する 1 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-220">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="88e05-221">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-221">Required.</span></span> <span data-ttu-id="88e05-222">計算で使用する 2 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-222">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="88e05-223">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-223">Optional.</span></span> <span data-ttu-id="88e05-224">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-224">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="88e05-225">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-225">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="88e05-226">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-226">Optional.</span></span> <span data-ttu-id="88e05-227">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-227">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="88e05-228">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-228">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="88e05-229">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-229">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="88e05-230">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-230">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-231">使用することができます、`DateDiff`関数を指定した時間間隔の数が 2 つの日付/時刻値の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="88e05-231">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="88e05-232">たとえば、使用する場合があります`DateDiff`して 2 つの日付または今日から年の終わりまでの週の数までの日数の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="88e05-232">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="88e05-233">動作</span><span class="sxs-lookup"><span data-stu-id="88e05-233">Behavior</span></span>  
  
-   <span data-ttu-id="88e05-234">**パラメーターの処理を行う。**</span><span class="sxs-lookup"><span data-stu-id="88e05-234">**Treatment of Parameters.**</span></span> <span data-ttu-id="88e05-235">`DateDiff` 値を減算`Date1`の値から`Date2`の違いを生成するためにします。</span><span class="sxs-lookup"><span data-stu-id="88e05-235">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="88e05-236">どちらの値は、呼び出し元のプログラムで変更されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-236">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="88e05-237">**値を返します。**</span><span class="sxs-lookup"><span data-stu-id="88e05-237">**Return Values.**</span></span> <span data-ttu-id="88e05-238">`Date1`と`Date2`は、`Date`データ型、日付と時刻の値が格納精度は 100 ナノ秒タイマー刻みシステム タイマー。</span><span class="sxs-lookup"><span data-stu-id="88e05-238">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="88e05-239">ただし、`DateDiff`常として、時間間隔の数、`Long`値。</span><span class="sxs-lookup"><span data-stu-id="88e05-239">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="88e05-240">場合`Date1`以降の日付と時間よりも表します`Date2`、`DateDiff`負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-240">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="88e05-241">**日の間隔。**</span><span class="sxs-lookup"><span data-stu-id="88e05-241">**Day Intervals.**</span></span> <span data-ttu-id="88e05-242">場合`Interval`に設定されている`DateInterval.DayOfYear`、扱われますと同じ`DateInterval.Day`ため、`DayOfYear`の時間間隔の意味のある単位でないです。</span><span class="sxs-lookup"><span data-stu-id="88e05-242">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="88e05-243">**週の間隔。**</span><span class="sxs-lookup"><span data-stu-id="88e05-243">**Week Intervals.**</span></span> <span data-ttu-id="88e05-244">場合`Interval`に設定されている`DateInterval.WeekOfYear`、戻り値が格納されている週の最初の日の週数を表す`Date1`と格納されている週の初日`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-244">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="88e05-245">次の例は、どのように異なる結果が生成されます`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-245">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="88e05-246">前の例では、`DateDiff`に 0 を返します`wD`に 1 を返します 2 つの日付間の差は 7 日間より小さいため`wY`それぞれのカレンダーの最初の日の間で 7 日間の相違があるため、数週間です。</span><span class="sxs-lookup"><span data-stu-id="88e05-246">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="88e05-247">**間隔を長くします。**</span><span class="sxs-lookup"><span data-stu-id="88e05-247">**Larger Intervals.**</span></span> <span data-ttu-id="88e05-248">場合`Interval`に設定されている`DateInterval.Year`、戻り値の年の部分から純粋な計算`Date1`と`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-248">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="88e05-249">同様に、戻り値`DateInterval.Month`、引数の年と月の部分から純粋な計算が`DateInterval.Quarter`四半期の 2 つの日付を格納しているからです。</span><span class="sxs-lookup"><span data-stu-id="88e05-249">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="88e05-250">たとえば、次の年の 1 月 1 日に 12 月 31 日を比較するときに`DateDiff`1 を返します`DateInterval.Year`、 `DateInterval.Quarter`、または`DateInterval.Month`最大で 1 日が経過した場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="88e05-250">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="88e05-251">持つ複数時代 (年号)、日本語などのカルチャ、`DateDiff`違いは、2 つまたは複数の時代 (年号) にまたがる場合メソッドは、年の差分を返しません。</span><span class="sxs-lookup"><span data-stu-id="88e05-251">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="88e05-252">によって返される値の差を計算する代わりに、<xref:System.DateTime.Year%2A>プロパティ、次の例で示した:`date2.Year - date1.Year`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-252">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="88e05-253">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="88e05-253">**Other Intervals.**</span></span> <span data-ttu-id="88e05-254">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔の検索の追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="88e05-254">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="88e05-255">たとえば、使用することができます、`Subtract`オーバー ロードされた形式のいずれかでメソッド:<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、<xref:System.TimeSpan>から、`Date`を返す別の変数`Date`値と<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、`Date`値返す、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="88e05-255">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="88e05-256">次の例に示すようにかかる時間をミリ秒単位を確認するプロセスの時間を測定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-256">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="88e05-257">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-257">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-258">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-258">Enumeration value</span></span>|<span data-ttu-id="88e05-259">文字列値</span><span class="sxs-lookup"><span data-stu-id="88e05-259">String value</span></span>|<span data-ttu-id="88e05-260">時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="88e05-260">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="88e05-261">"d"</span><span class="sxs-lookup"><span data-stu-id="88e05-261">"d"</span></span>|<span data-ttu-id="88e05-262">Day</span><span class="sxs-lookup"><span data-stu-id="88e05-262">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="88e05-263">"y"</span><span class="sxs-lookup"><span data-stu-id="88e05-263">"y"</span></span>|<span data-ttu-id="88e05-264">Day</span><span class="sxs-lookup"><span data-stu-id="88e05-264">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="88e05-265">"h"</span><span class="sxs-lookup"><span data-stu-id="88e05-265">"h"</span></span>|<span data-ttu-id="88e05-266">Hour</span><span class="sxs-lookup"><span data-stu-id="88e05-266">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="88e05-267">"n"</span><span class="sxs-lookup"><span data-stu-id="88e05-267">"n"</span></span>|<span data-ttu-id="88e05-268">Minute</span><span class="sxs-lookup"><span data-stu-id="88e05-268">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="88e05-269">"m"</span><span class="sxs-lookup"><span data-stu-id="88e05-269">"m"</span></span>|<span data-ttu-id="88e05-270">月</span><span class="sxs-lookup"><span data-stu-id="88e05-270">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="88e05-271">"q"</span><span class="sxs-lookup"><span data-stu-id="88e05-271">"q"</span></span>|<span data-ttu-id="88e05-272">四半期</span><span class="sxs-lookup"><span data-stu-id="88e05-272">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="88e05-273">"s"</span><span class="sxs-lookup"><span data-stu-id="88e05-273">"s"</span></span>|<span data-ttu-id="88e05-274">Second</span><span class="sxs-lookup"><span data-stu-id="88e05-274">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="88e05-275">"w"</span><span class="sxs-lookup"><span data-stu-id="88e05-275">"w"</span></span>|<span data-ttu-id="88e05-276">週</span><span class="sxs-lookup"><span data-stu-id="88e05-276">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="88e05-277">"ww"</span><span class="sxs-lookup"><span data-stu-id="88e05-277">"ww"</span></span>|<span data-ttu-id="88e05-278">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="88e05-278">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="88e05-279">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="88e05-279">"yyyy"</span></span>|<span data-ttu-id="88e05-280">Year</span><span class="sxs-lookup"><span data-stu-id="88e05-280">Year</span></span>|  
  
 <span data-ttu-id="88e05-281">`DayOfWeek`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-281">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-282">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-282">Enumeration value</span></span>|<span data-ttu-id="88e05-283">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-283">Value</span></span>|<span data-ttu-id="88e05-284">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-284">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="88e05-285">0</span><span class="sxs-lookup"><span data-stu-id="88e05-285">0</span></span>|<span data-ttu-id="88e05-286">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="88e05-286">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="88e05-287">1</span><span class="sxs-lookup"><span data-stu-id="88e05-287">1</span></span>|<span data-ttu-id="88e05-288">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-288">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="88e05-289">2</span><span class="sxs-lookup"><span data-stu-id="88e05-289">2</span></span>|<span data-ttu-id="88e05-290">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="88e05-290">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="88e05-291">3</span><span class="sxs-lookup"><span data-stu-id="88e05-291">3</span></span>|<span data-ttu-id="88e05-292">火曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-292">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="88e05-293">4</span><span class="sxs-lookup"><span data-stu-id="88e05-293">4</span></span>|<span data-ttu-id="88e05-294">水曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-294">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="88e05-295">5</span><span class="sxs-lookup"><span data-stu-id="88e05-295">5</span></span>|<span data-ttu-id="88e05-296">木曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-296">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="88e05-297">6</span><span class="sxs-lookup"><span data-stu-id="88e05-297">6</span></span>|<span data-ttu-id="88e05-298">金曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-298">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="88e05-299">7</span><span class="sxs-lookup"><span data-stu-id="88e05-299">7</span></span>|<span data-ttu-id="88e05-300">土曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-300">Saturday</span></span>|  
  
 <span data-ttu-id="88e05-301">`WeekOfYear`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-301">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-302">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-302">Enumeration value</span></span>|<span data-ttu-id="88e05-303">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-303">Value</span></span>|<span data-ttu-id="88e05-304">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-304">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="88e05-305">0</span><span class="sxs-lookup"><span data-stu-id="88e05-305">0</span></span>|<span data-ttu-id="88e05-306">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-306">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="88e05-307">1</span><span class="sxs-lookup"><span data-stu-id="88e05-307">1</span></span>|<span data-ttu-id="88e05-308">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-308">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="88e05-309">2</span><span class="sxs-lookup"><span data-stu-id="88e05-309">2</span></span>|<span data-ttu-id="88e05-310">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-310">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="88e05-311">3</span><span class="sxs-lookup"><span data-stu-id="88e05-311">3</span></span>|<span data-ttu-id="88e05-312">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="88e05-312">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-313">この例では、`DateDiff`の特定の日から今日までの日数を表示する関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-313">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-314">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="88e05-314"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-315"><paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="88e05-315"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-316">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-316">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="88e05-317">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-317">Required.</span></span> <span data-ttu-id="88e05-318"><paramref name="Date1" /> と <paramref name="Date2" /> の差分の単位として使用する時間間隔を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-318">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the time interval you want to use as the unit of difference between <paramref name="Date1" /> and <paramref name="Date2" />.</span></span></param>
        <param name="Date1"><span data-ttu-id="88e05-319">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-319">Required.</span></span> <span data-ttu-id="88e05-320">計算で使用する 1 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-320">The first date/time value you want to use in the calculation.</span></span></param>
        <param name="Date2"><span data-ttu-id="88e05-321">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-321">Required.</span></span> <span data-ttu-id="88e05-322">計算で使用する 2 番目の日付/時刻の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-322">The second date/time value you want to use in the calculation.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="88e05-323">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-323">Optional.</span></span> <span data-ttu-id="88e05-324">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-324">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="88e05-325">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-325">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="88e05-326">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-326">Optional.</span></span> <span data-ttu-id="88e05-327">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-327">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="88e05-328">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-328">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="88e05-329">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-329">Returns a long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></summary>
        <returns><span data-ttu-id="88e05-330">2 つの <see langword="Date" /> 値の間に含まれる時間間隔の数を指定する long 型の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-330">A long value specifying the number of time intervals between two <see langword="Date" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-331">使用することができます、`DateDiff`関数を指定した時間間隔の数が 2 つの日付/時刻値の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="88e05-331">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="88e05-332">たとえば、使用する場合があります`DateDiff`して 2 つの日付または今日から年の終わりまでの週の数までの日数の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="88e05-332">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="88e05-333">動作</span><span class="sxs-lookup"><span data-stu-id="88e05-333">Behavior</span></span>  
  
-   <span data-ttu-id="88e05-334">**パラメーターの処理を行う。**</span><span class="sxs-lookup"><span data-stu-id="88e05-334">**Treatment of Parameters.**</span></span> <span data-ttu-id="88e05-335">`DateDiff` 値を減算`Date1`の値から`Date2`の違いを生成するためにします。</span><span class="sxs-lookup"><span data-stu-id="88e05-335">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="88e05-336">どちらの値は、呼び出し元のプログラムで変更されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-336">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="88e05-337">**値を返します。**</span><span class="sxs-lookup"><span data-stu-id="88e05-337">**Return Values.**</span></span> <span data-ttu-id="88e05-338">`Date1`と`Date2`は、`Date`データ型、日付と時刻の値が格納精度は 100 ナノ秒タイマー刻みシステム タイマー。</span><span class="sxs-lookup"><span data-stu-id="88e05-338">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="88e05-339">ただし、`DateDiff`常として、時間間隔の数、`Long`値。</span><span class="sxs-lookup"><span data-stu-id="88e05-339">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="88e05-340">場合`Date1`以降の日付と時間よりも表します`Date2`、`DateDiff`負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-340">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="88e05-341">**日の間隔。**</span><span class="sxs-lookup"><span data-stu-id="88e05-341">**Day Intervals.**</span></span> <span data-ttu-id="88e05-342">場合`Interval`に設定されている`DateInterval.DayOfYear`、扱われますと同じ`DateInterval.Day`ため、`DayOfYear`の時間間隔の意味のある単位でないです。</span><span class="sxs-lookup"><span data-stu-id="88e05-342">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="88e05-343">**週の間隔。**</span><span class="sxs-lookup"><span data-stu-id="88e05-343">**Week Intervals.**</span></span> <span data-ttu-id="88e05-344">場合`Interval`に設定されている`DateInterval.WeekOfYear`、戻り値が格納されている週の最初の日の週数を表す`Date1`と格納されている週の初日`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-344">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="88e05-345">次の例は、どのように異なる結果が生成されます`DateInterval.Weekday`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-345">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="88e05-346">前の例では、`DateDiff`に 0 を返します`wD`に 1 を返します 2 つの日付間の差は 7 日間より小さいため`wY`それぞれのカレンダーの最初の日の間で 7 日間の相違があるため、数週間です。</span><span class="sxs-lookup"><span data-stu-id="88e05-346">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="88e05-347">**間隔を長くします。**</span><span class="sxs-lookup"><span data-stu-id="88e05-347">**Larger Intervals.**</span></span> <span data-ttu-id="88e05-348">場合`Interval`に設定されている`DateInterval.Year`、戻り値の年の部分から純粋な計算`Date1`と`Date2`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-348">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="88e05-349">同様に、戻り値`DateInterval.Month`、引数の年と月の部分から純粋な計算が`DateInterval.Quarter`四半期の 2 つの日付を格納しているからです。</span><span class="sxs-lookup"><span data-stu-id="88e05-349">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="88e05-350">たとえば、次の年の 1 月 1 日に 12 月 31 日を比較するときに`DateDiff`1 を返します`DateInterval.Year`、 `DateInterval.Quarter`、または`DateInterval.Month`最大で 1 日が経過した場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="88e05-350">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="88e05-351">持つ複数時代 (年号)、日本語などのカルチャ、`DateDiff`違いは、2 つまたは複数の時代 (年号) にまたがる場合メソッドは、年の差分を返しません。</span><span class="sxs-lookup"><span data-stu-id="88e05-351">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="88e05-352">によって返される値の差を計算する代わりに、<xref:System.DateTime.Year%2A>プロパティ、次の例で示した:`date2.Year - date1.Year`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-352">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="88e05-353">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="88e05-353">**Other Intervals.**</span></span> <span data-ttu-id="88e05-354">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する時間間隔の検索の追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="88e05-354">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="88e05-355">たとえば、使用することができます、`Subtract`オーバー ロードされた形式のいずれかでメソッド:<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、<xref:System.TimeSpan>から、`Date`を返す別の変数`Date`値と<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、`Date`値返す、<xref:System.TimeSpan>します。</span><span class="sxs-lookup"><span data-stu-id="88e05-355">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="88e05-356">次の例に示すようにかかる時間をミリ秒単位を確認するプロセスの時間を測定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-356">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="88e05-357">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-357">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-358">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-358">Enumeration value</span></span>|<span data-ttu-id="88e05-359">文字列値</span><span class="sxs-lookup"><span data-stu-id="88e05-359">String value</span></span>|<span data-ttu-id="88e05-360">時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="88e05-360">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="88e05-361">"d"</span><span class="sxs-lookup"><span data-stu-id="88e05-361">"d"</span></span>|<span data-ttu-id="88e05-362">Day</span><span class="sxs-lookup"><span data-stu-id="88e05-362">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="88e05-363">"y"</span><span class="sxs-lookup"><span data-stu-id="88e05-363">"y"</span></span>|<span data-ttu-id="88e05-364">Day</span><span class="sxs-lookup"><span data-stu-id="88e05-364">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="88e05-365">"h"</span><span class="sxs-lookup"><span data-stu-id="88e05-365">"h"</span></span>|<span data-ttu-id="88e05-366">Hour</span><span class="sxs-lookup"><span data-stu-id="88e05-366">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="88e05-367">"n"</span><span class="sxs-lookup"><span data-stu-id="88e05-367">"n"</span></span>|<span data-ttu-id="88e05-368">Minute</span><span class="sxs-lookup"><span data-stu-id="88e05-368">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="88e05-369">"m"</span><span class="sxs-lookup"><span data-stu-id="88e05-369">"m"</span></span>|<span data-ttu-id="88e05-370">月</span><span class="sxs-lookup"><span data-stu-id="88e05-370">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="88e05-371">"q"</span><span class="sxs-lookup"><span data-stu-id="88e05-371">"q"</span></span>|<span data-ttu-id="88e05-372">四半期</span><span class="sxs-lookup"><span data-stu-id="88e05-372">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="88e05-373">"s"</span><span class="sxs-lookup"><span data-stu-id="88e05-373">"s"</span></span>|<span data-ttu-id="88e05-374">Second</span><span class="sxs-lookup"><span data-stu-id="88e05-374">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="88e05-375">"w"</span><span class="sxs-lookup"><span data-stu-id="88e05-375">"w"</span></span>|<span data-ttu-id="88e05-376">週</span><span class="sxs-lookup"><span data-stu-id="88e05-376">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="88e05-377">"ww"</span><span class="sxs-lookup"><span data-stu-id="88e05-377">"ww"</span></span>|<span data-ttu-id="88e05-378">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="88e05-378">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="88e05-379">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="88e05-379">"yyyy"</span></span>|<span data-ttu-id="88e05-380">Year</span><span class="sxs-lookup"><span data-stu-id="88e05-380">Year</span></span>|  
  
 <span data-ttu-id="88e05-381">`DayOfWeek`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-381">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-382">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-382">Enumeration value</span></span>|<span data-ttu-id="88e05-383">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-383">Value</span></span>|<span data-ttu-id="88e05-384">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-384">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="88e05-385">0</span><span class="sxs-lookup"><span data-stu-id="88e05-385">0</span></span>|<span data-ttu-id="88e05-386">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="88e05-386">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="88e05-387">1</span><span class="sxs-lookup"><span data-stu-id="88e05-387">1</span></span>|<span data-ttu-id="88e05-388">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-388">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="88e05-389">2</span><span class="sxs-lookup"><span data-stu-id="88e05-389">2</span></span>|<span data-ttu-id="88e05-390">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="88e05-390">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="88e05-391">3</span><span class="sxs-lookup"><span data-stu-id="88e05-391">3</span></span>|<span data-ttu-id="88e05-392">火曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-392">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="88e05-393">4</span><span class="sxs-lookup"><span data-stu-id="88e05-393">4</span></span>|<span data-ttu-id="88e05-394">水曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-394">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="88e05-395">5</span><span class="sxs-lookup"><span data-stu-id="88e05-395">5</span></span>|<span data-ttu-id="88e05-396">木曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-396">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="88e05-397">6</span><span class="sxs-lookup"><span data-stu-id="88e05-397">6</span></span>|<span data-ttu-id="88e05-398">金曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-398">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="88e05-399">7</span><span class="sxs-lookup"><span data-stu-id="88e05-399">7</span></span>|<span data-ttu-id="88e05-400">土曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-400">Saturday</span></span>|  
  
 <span data-ttu-id="88e05-401">`WeekOfYear`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-401">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-402">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-402">Enumeration value</span></span>|<span data-ttu-id="88e05-403">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-403">Value</span></span>|<span data-ttu-id="88e05-404">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-404">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="88e05-405">0</span><span class="sxs-lookup"><span data-stu-id="88e05-405">0</span></span>|<span data-ttu-id="88e05-406">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-406">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="88e05-407">1</span><span class="sxs-lookup"><span data-stu-id="88e05-407">1</span></span>|<span data-ttu-id="88e05-408">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-408">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="88e05-409">2</span><span class="sxs-lookup"><span data-stu-id="88e05-409">2</span></span>|<span data-ttu-id="88e05-410">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-410">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="88e05-411">3</span><span class="sxs-lookup"><span data-stu-id="88e05-411">3</span></span>|<span data-ttu-id="88e05-412">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="88e05-412">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-413">この例では、`DateDiff`の特定の日から今日までの日数を表示する関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-413">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-414">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="88e05-414"><paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-415"><paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="88e05-415"><paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-416">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-416">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88e05-417">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-417">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="88e05-418">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-418">Required.</span></span> <span data-ttu-id="88e05-419">返される日付/時刻値の一部を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-419">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="88e05-420">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-420">Required.</span></span> <span data-ttu-id="88e05-421">評価する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-421">The <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="88e05-422">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-422">Optional.</span></span> <span data-ttu-id="88e05-423">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-423">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="88e05-424">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-424">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="FirstWeekOfYearValue"><span data-ttu-id="88e05-425">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-425">Optional.</span></span> <span data-ttu-id="88e05-426">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-426">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="88e05-427">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-427">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="88e05-428">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-428">Returns an integer value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="88e05-429">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-429">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-430">使用することができます、`DatePart`を日付/時刻値を評価し、特定のコンポーネントを返す関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-430">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="88e05-431">たとえば、使用する場合があります`DatePart`日曜日、または現在の時間を計算します。</span><span class="sxs-lookup"><span data-stu-id="88e05-431">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="88e05-432">選択した場合`DateInterval.Weekday`の`Interval`引数、戻り値の値と矛盾、`FirstDayOfWeek`列挙体。</span><span class="sxs-lookup"><span data-stu-id="88e05-432">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="88e05-433">選択した場合`DateInterval.WeekOfYear`、`DatePart`を使用して、<xref:System.Globalization.Calendar>と<xref:System.Globalization.CultureInfo>のクラス、<xref:System.Globalization>名前空間を現在の設定を確認します。</span><span class="sxs-lookup"><span data-stu-id="88e05-433">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="88e05-434">`FirstDayOfWeekValue`引数を使用する計算に影響を与えます、`DateInterval.Weekday`と`DateInterval.WeekOfYear``Interval`設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-434">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="88e05-435">`FirstWeekOfYearValue`引数を指定する計算に影響を与えます`DateInterval.WeekOfYear`の`Interval`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-435">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="88e05-436">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する日付/時刻の部分を取得する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="88e05-436">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="88e05-437">などの全体の日付値を取得できます、`Date`時刻値の変数は次のように、午前 0 時に設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-437">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="88e05-438">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-438">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-439">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-439">Enumeration value</span></span>|<span data-ttu-id="88e05-440">String</span><span class="sxs-lookup"><span data-stu-id="88e05-440">String</span></span>|<span data-ttu-id="88e05-441">日付/時刻値を返す部分</span><span class="sxs-lookup"><span data-stu-id="88e05-441">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="88e05-442">d</span><span class="sxs-lookup"><span data-stu-id="88e05-442">d</span></span>|<span data-ttu-id="88e05-443">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="88e05-443">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="88e05-444">Y</span><span class="sxs-lookup"><span data-stu-id="88e05-444">y</span></span>|<span data-ttu-id="88e05-445">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="88e05-445">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="88e05-446">h</span><span class="sxs-lookup"><span data-stu-id="88e05-446">h</span></span>|<span data-ttu-id="88e05-447">Hour</span><span class="sxs-lookup"><span data-stu-id="88e05-447">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="88e05-448">n</span><span class="sxs-lookup"><span data-stu-id="88e05-448">n</span></span>|<span data-ttu-id="88e05-449">Minute</span><span class="sxs-lookup"><span data-stu-id="88e05-449">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="88e05-450">m</span><span class="sxs-lookup"><span data-stu-id="88e05-450">m</span></span>|<span data-ttu-id="88e05-451">月</span><span class="sxs-lookup"><span data-stu-id="88e05-451">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="88e05-452">q</span><span class="sxs-lookup"><span data-stu-id="88e05-452">q</span></span>|<span data-ttu-id="88e05-453">四半期</span><span class="sxs-lookup"><span data-stu-id="88e05-453">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="88e05-454">s</span><span class="sxs-lookup"><span data-stu-id="88e05-454">s</span></span>|<span data-ttu-id="88e05-455">Second</span><span class="sxs-lookup"><span data-stu-id="88e05-455">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="88e05-456">週</span><span class="sxs-lookup"><span data-stu-id="88e05-456">w</span></span>|<span data-ttu-id="88e05-457">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="88e05-457">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="88e05-458">ww</span><span class="sxs-lookup"><span data-stu-id="88e05-458">ww</span></span>|<span data-ttu-id="88e05-459">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="88e05-459">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="88e05-460">yyyy</span><span class="sxs-lookup"><span data-stu-id="88e05-460">yyyy</span></span>|<span data-ttu-id="88e05-461">Year</span><span class="sxs-lookup"><span data-stu-id="88e05-461">Year</span></span>|  
  
 <span data-ttu-id="88e05-462">`FirstDayOfWeekValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-462">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-463">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-463">Enumeration value</span></span>|<span data-ttu-id="88e05-464">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-464">Value</span></span>|<span data-ttu-id="88e05-465">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-465">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="88e05-466">0</span><span class="sxs-lookup"><span data-stu-id="88e05-466">0</span></span>|<span data-ttu-id="88e05-467">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="88e05-467">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="88e05-468">1</span><span class="sxs-lookup"><span data-stu-id="88e05-468">1</span></span>|<span data-ttu-id="88e05-469">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-469">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="88e05-470">2</span><span class="sxs-lookup"><span data-stu-id="88e05-470">2</span></span>|<span data-ttu-id="88e05-471">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="88e05-471">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="88e05-472">3</span><span class="sxs-lookup"><span data-stu-id="88e05-472">3</span></span>|<span data-ttu-id="88e05-473">火曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-473">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="88e05-474">4</span><span class="sxs-lookup"><span data-stu-id="88e05-474">4</span></span>|<span data-ttu-id="88e05-475">水曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-475">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="88e05-476">5</span><span class="sxs-lookup"><span data-stu-id="88e05-476">5</span></span>|<span data-ttu-id="88e05-477">木曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-477">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="88e05-478">6</span><span class="sxs-lookup"><span data-stu-id="88e05-478">6</span></span>|<span data-ttu-id="88e05-479">金曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-479">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="88e05-480">7</span><span class="sxs-lookup"><span data-stu-id="88e05-480">7</span></span>|<span data-ttu-id="88e05-481">土曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-481">Saturday</span></span>|  
  
 <span data-ttu-id="88e05-482">`FirstWeekOfYearValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-482">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-483">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-483">Enumeration value</span></span>|<span data-ttu-id="88e05-484">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-484">Value</span></span>|<span data-ttu-id="88e05-485">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-485">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="88e05-486">0</span><span class="sxs-lookup"><span data-stu-id="88e05-486">0</span></span>|<span data-ttu-id="88e05-487">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-487">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="88e05-488">1</span><span class="sxs-lookup"><span data-stu-id="88e05-488">1</span></span>|<span data-ttu-id="88e05-489">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-489">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="88e05-490">2</span><span class="sxs-lookup"><span data-stu-id="88e05-490">2</span></span>|<span data-ttu-id="88e05-491">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-491">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="88e05-492">3</span><span class="sxs-lookup"><span data-stu-id="88e05-492">3</span></span>|<span data-ttu-id="88e05-493">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="88e05-493">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-494">この例では、日付と、使用、`DatePart`関数をそれが出現する年の四半期が表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-494">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-495"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="88e05-495"><paramref name="Interval" /> is not valid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-496"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="88e05-496"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-497">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-497">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval"><span data-ttu-id="88e05-498">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-498">Required.</span></span> <span data-ttu-id="88e05-499">返される日付/時刻値の一部を表す <see cref="T:Microsoft.VisualBasic.DateInterval" /> 列挙値または文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-499">A <see cref="T:Microsoft.VisualBasic.DateInterval" /> enumeration value or a string expression representing the part of the date/time value you want to return.</span></span></param>
        <param name="DateValue"><span data-ttu-id="88e05-500">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-500">Required.</span></span> <span data-ttu-id="88e05-501">評価する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-501">A <see langword="Date" /> value that you want to evaluate.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="88e05-502">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-502">Optional.</span></span> <span data-ttu-id="88e05-503">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-503">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="88e05-504">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-504">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <param name="WeekOfYear"><span data-ttu-id="88e05-505">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-505">Optional.</span></span> <span data-ttu-id="88e05-506">年の最初の週を指定する <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-506">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span></span> <span data-ttu-id="88e05-507">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-507">If not specified, <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" /> is used.</span></span></param>
        <summary><span data-ttu-id="88e05-508">特定の <see langword="Date" /> 型値の中の指定された要素を含む値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-508">Returns an value containing the specified component of a given <see langword="Date" /> value.</span></span></summary>
        <returns><span data-ttu-id="88e05-509">特定の <see langword="Date" /> 型値の中の指定されたコンポーネントを含む整数値の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-509">An integer value containing the specified component of a given <see langword="Date" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-510">使用することができます、`DatePart`を日付/時刻値を評価し、特定のコンポーネントを返す関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-510">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="88e05-511">たとえば、使用する場合があります`DatePart`日曜日、または現在の時間を計算します。</span><span class="sxs-lookup"><span data-stu-id="88e05-511">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="88e05-512">選択した場合`DateInterval.Weekday`の`Interval`引数、戻り値の値と矛盾、`FirstDayOfWeek`列挙体。</span><span class="sxs-lookup"><span data-stu-id="88e05-512">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="88e05-513">選択した場合`DateInterval.WeekOfYear`、`DatePart`を使用して、<xref:System.Globalization.Calendar>と<xref:System.Globalization.CultureInfo>のクラス、<xref:System.Globalization>名前空間を現在の設定を確認します。</span><span class="sxs-lookup"><span data-stu-id="88e05-513">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="88e05-514">`FirstDayOfWeekValue`引数を使用する計算に影響を与えます、`DateInterval.Weekday`と`DateInterval.WeekOfYear``Interval`設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-514">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="88e05-515">`FirstWeekOfYearValue`引数を指定する計算に影響を与えます`DateInterval.WeekOfYear`の`Interval`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-515">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="88e05-516">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用する日付/時刻の部分を取得する追加のオプション。</span><span class="sxs-lookup"><span data-stu-id="88e05-516">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="88e05-517">などの全体の日付値を取得できます、`Date`時刻値の変数は次のように、午前 0 時に設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-517">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="88e05-518">`Interval`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-518">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-519">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-519">Enumeration value</span></span>|<span data-ttu-id="88e05-520">String</span><span class="sxs-lookup"><span data-stu-id="88e05-520">String</span></span>|<span data-ttu-id="88e05-521">日付/時刻値を返す部分</span><span class="sxs-lookup"><span data-stu-id="88e05-521">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="88e05-522">d</span><span class="sxs-lookup"><span data-stu-id="88e05-522">d</span></span>|<span data-ttu-id="88e05-523">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="88e05-523">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="88e05-524">Y</span><span class="sxs-lookup"><span data-stu-id="88e05-524">y</span></span>|<span data-ttu-id="88e05-525">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="88e05-525">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="88e05-526">h</span><span class="sxs-lookup"><span data-stu-id="88e05-526">h</span></span>|<span data-ttu-id="88e05-527">Hour</span><span class="sxs-lookup"><span data-stu-id="88e05-527">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="88e05-528">n</span><span class="sxs-lookup"><span data-stu-id="88e05-528">n</span></span>|<span data-ttu-id="88e05-529">Minute</span><span class="sxs-lookup"><span data-stu-id="88e05-529">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="88e05-530">m</span><span class="sxs-lookup"><span data-stu-id="88e05-530">m</span></span>|<span data-ttu-id="88e05-531">月</span><span class="sxs-lookup"><span data-stu-id="88e05-531">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="88e05-532">q</span><span class="sxs-lookup"><span data-stu-id="88e05-532">q</span></span>|<span data-ttu-id="88e05-533">四半期</span><span class="sxs-lookup"><span data-stu-id="88e05-533">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="88e05-534">s</span><span class="sxs-lookup"><span data-stu-id="88e05-534">s</span></span>|<span data-ttu-id="88e05-535">Second</span><span class="sxs-lookup"><span data-stu-id="88e05-535">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="88e05-536">週</span><span class="sxs-lookup"><span data-stu-id="88e05-536">w</span></span>|<span data-ttu-id="88e05-537">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="88e05-537">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="88e05-538">ww</span><span class="sxs-lookup"><span data-stu-id="88e05-538">ww</span></span>|<span data-ttu-id="88e05-539">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="88e05-539">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="88e05-540">yyyy</span><span class="sxs-lookup"><span data-stu-id="88e05-540">yyyy</span></span>|<span data-ttu-id="88e05-541">Year</span><span class="sxs-lookup"><span data-stu-id="88e05-541">Year</span></span>|  
  
 <span data-ttu-id="88e05-542">`FirstDayOfWeekValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-542">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-543">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-543">Enumeration value</span></span>|<span data-ttu-id="88e05-544">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-544">Value</span></span>|<span data-ttu-id="88e05-545">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-545">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="88e05-546">0</span><span class="sxs-lookup"><span data-stu-id="88e05-546">0</span></span>|<span data-ttu-id="88e05-547">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="88e05-547">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="88e05-548">1</span><span class="sxs-lookup"><span data-stu-id="88e05-548">1</span></span>|<span data-ttu-id="88e05-549">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-549">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="88e05-550">2</span><span class="sxs-lookup"><span data-stu-id="88e05-550">2</span></span>|<span data-ttu-id="88e05-551">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="88e05-551">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="88e05-552">3</span><span class="sxs-lookup"><span data-stu-id="88e05-552">3</span></span>|<span data-ttu-id="88e05-553">火曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-553">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="88e05-554">4</span><span class="sxs-lookup"><span data-stu-id="88e05-554">4</span></span>|<span data-ttu-id="88e05-555">水曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-555">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="88e05-556">5</span><span class="sxs-lookup"><span data-stu-id="88e05-556">5</span></span>|<span data-ttu-id="88e05-557">木曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-557">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="88e05-558">6</span><span class="sxs-lookup"><span data-stu-id="88e05-558">6</span></span>|<span data-ttu-id="88e05-559">金曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-559">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="88e05-560">7</span><span class="sxs-lookup"><span data-stu-id="88e05-560">7</span></span>|<span data-ttu-id="88e05-561">土曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-561">Saturday</span></span>|  
  
 <span data-ttu-id="88e05-562">`FirstWeekOfYearValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-562">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-563">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-563">Enumeration value</span></span>|<span data-ttu-id="88e05-564">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-564">Value</span></span>|<span data-ttu-id="88e05-565">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-565">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="88e05-566">0</span><span class="sxs-lookup"><span data-stu-id="88e05-566">0</span></span>|<span data-ttu-id="88e05-567">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-567">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="88e05-568">1</span><span class="sxs-lookup"><span data-stu-id="88e05-568">1</span></span>|<span data-ttu-id="88e05-569">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-569">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="88e05-570">2</span><span class="sxs-lookup"><span data-stu-id="88e05-570">2</span></span>|<span data-ttu-id="88e05-571">(ISO 8601 の標準的な 3.17 に準拠している) が新しい年に少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="88e05-571">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="88e05-572">3</span><span class="sxs-lookup"><span data-stu-id="88e05-572">3</span></span>|<span data-ttu-id="88e05-573">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="88e05-573">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-574">この例では、日付と、使用、`DatePart`関数をそれが出現する年の四半期が表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-574">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-575"><paramref name="Interval" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="88e05-575"><paramref name="Interval" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-576"><paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span><span class="sxs-lookup"><span data-stu-id="88e05-576"><paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-577">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-577">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year"><span data-ttu-id="88e05-578">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-578">Required.</span></span> <span data-ttu-id="88e05-579">1 から 9999 の整数式。</span><span class="sxs-lookup"><span data-stu-id="88e05-579">Integer expression from 1 through 9999.</span></span> <span data-ttu-id="88e05-580">ただし、この範囲より小さい値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="88e05-580">However, values below this range are also accepted.</span></span> <span data-ttu-id="88e05-581"><paramref name="Year" /> が 0 ～ 99 の場合、下の「解説」で説明しているように、1930 ～ 2029 年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-581">If <paramref name="Year" /> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span></span> <span data-ttu-id="88e05-582"><paramref name="Year" /> が 1 未満の場合、現在の年からその値が減算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-582">If <paramref name="Year" /> is less than 1, it is subtracted from the current year.</span></span></param>
        <param name="Month"><span data-ttu-id="88e05-583">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-583">Required.</span></span> <span data-ttu-id="88e05-584">1 から 12 の整数式。</span><span class="sxs-lookup"><span data-stu-id="88e05-584">Integer expression from 1 through 12.</span></span> <span data-ttu-id="88e05-585">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="88e05-585">However, values outside this range are also accepted.</span></span> <span data-ttu-id="88e05-586"><paramref name="Month" /> の値は 1 だけオフセットされた後、計算対象の年の 1 月に加算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-586">The value of <paramref name="Month" /> is offset by 1 and applied to January of the calculated year.</span></span> <span data-ttu-id="88e05-587">つまり、(<paramref name="Month" /> - 1) が 1 月に加算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-587">In other words, (<paramref name="Month" /> - 1) is added to January.</span></span> <span data-ttu-id="88e05-588">年は必要に応じて再計算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-588">The year is recalculated if necessary.</span></span> <span data-ttu-id="88e05-589">この処理による結果の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-589">The following results illustrate this effect:</span></span> 
<span data-ttu-id="88e05-590"><paramref name="Month" /> が 1 の場合、結果は計算対象の年の 1 月になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-590">If <paramref name="Month" /> is 1, the result is January of the calculated year.</span></span>  
  
<span data-ttu-id="88e05-591"><paramref name="Month" /> が 0 の場合、結果は前年の 12 月になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-591">If <paramref name="Month" /> is 0, the result is December of the previous year.</span></span>  
  
<span data-ttu-id="88e05-592">If <paramref name="Month" /> が -1 の場合、結果は前年の 11 月になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-592">If <paramref name="Month" /> is -1, the result is November of the previous year.</span></span>  
  
<span data-ttu-id="88e05-593"><paramref name="Month" /> が 13 の場合、結果は翌年の 1 月になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-593">If <paramref name="Month" /> is 13, the result is January of the following year.</span></span></param>
        <param name="Day"><span data-ttu-id="88e05-594">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-594">Required.</span></span> <span data-ttu-id="88e05-595">1 から 31 の整数式。</span><span class="sxs-lookup"><span data-stu-id="88e05-595">Integer expression from 1 through 31.</span></span> <span data-ttu-id="88e05-596">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="88e05-596">However, values outside this range are also accepted.</span></span> <span data-ttu-id="88e05-597"><paramref name="Day" /> の値は 1 だけオフセットされた後、計算対象の月の最初の日に加算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-597">The value of <paramref name="Day" /> is offset by 1 and applied to the first day of the calculated month.</span></span> <span data-ttu-id="88e05-598">つまり、(<paramref name="Day" /> - 1) がその月の最初の日に加算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-598">In other words, (<paramref name="Day" /> - 1) is added to the first of the month.</span></span> <span data-ttu-id="88e05-599">必要に応じて月と年が再計算されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-599">The month and year are recalculated if necessary.</span></span> <span data-ttu-id="88e05-600">この処理による結果の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-600">The following results illustrate this effect:</span></span> 
<span data-ttu-id="88e05-601"><paramref name="Day" /> が 1 の場合、結果は計算対象の月の最初の日になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-601">If <paramref name="Day" /> is 1, the result is the first day of the calculated month.</span></span>  
  
<span data-ttu-id="88e05-602"><paramref name="Day" /> が 0 の場合、結果は前月の末日になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-602">If <paramref name="Day" /> is 0, the result is the last day of the previous month.</span></span>  
  
<span data-ttu-id="88e05-603"><paramref name="Day" /> が -1 の場合、結果は前月の末日の前日になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-603">If <paramref name="Day" /> is -1, the result is the penultimate day of the previous month.</span></span>  
  
<span data-ttu-id="88e05-604"><paramref name="Day" /> が現在の月の末日を過ぎている場合、結果は翌月の適切な日になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-604">If <paramref name="Day" /> is past the end of the current month, the result is the appropriate day of the following month.</span></span> <span data-ttu-id="88e05-605">たとえば、<paramref name="Month" /> が 4 で <paramref name="Day" /> が 31 の場合、結果は 5 月 1 日になります。</span><span class="sxs-lookup"><span data-stu-id="88e05-605">For example, if <paramref name="Month" /> is 4 and <paramref name="Day" /> is 31, the result is May 1.</span></span></param>
        <summary><span data-ttu-id="88e05-606">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-606">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="88e05-607">指定された年、月、日を表す <see langword="Date" /> 値であり、時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-607">A <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-608">Windows 98 または Windows 2000 では、下 2 桁の年、`Year`引数は、コンピューターのユーザー定義の設定に基づいて解釈されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-608">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="88e05-609">既定の設定では 0 から 29 までの値は 2000-2029 年 30 ~ 99 の値がように、1930 1999 年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-609">The default settings are that values from 0 through 29 are interpreted as the years 2000-2029, and values from 30 through 99 are interpreted as the years 1930-1999.</span></span> <span data-ttu-id="88e05-610">他のすべての`Year`引数を使用して、4 桁の年。 たとえば、1924 します。</span><span class="sxs-lookup"><span data-stu-id="88e05-610">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="88e05-611">以前のバージョンの Windows には、前に説明した既定値に基づく 2 桁の年が解釈されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-611">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="88e05-612">関数が正しい値を返すことを確認、4 桁を使用して、`Year`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-612">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="88e05-613">次の例は、負の値は 0、および引数の正の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-613">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="88e05-614">ここでは、`DateSerial`関数が返される、`Date`年 10 年前の現在の年に、の最初の日の前日を表す 10 年 2 月の最終日つまり、します。</span><span class="sxs-lookup"><span data-stu-id="88e05-614">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="88e05-615">いずれか`Month`または`Day`正常な範囲を超える場合、単位に繰り上げに適用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-615">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="88e05-616">たとえば、32 日を指定すると、評価されますと 1 の値に応じて、次の 4 つの日に 1 か月として`Month`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-616">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="88e05-617">場合`Year`が 9999 より大きいか、いずれかの引数が-2,147, 483,648 ~ 2,147, 483,647、範囲外の場合、<xref:System.ArgumentException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="88e05-617">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="88e05-618">3 つの引数で指定された日より早い場合は 1、または年 12 月 31 日 23時 59分: 59 より後の年 1 月 1 日 00時 00分: 00 から 9999 場合、<xref:System.ArgumentOutOfRangeException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="88e05-618">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="88e05-619">`Date`データ型には、時間のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-619">The `Date` data type includes time components.</span></span> <span data-ttu-id="88e05-620">`DateSerial` 返される値が計算された日の開始を表しますようは、0 の場合にこれらすべてを設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-620">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="88e05-621">すべて`Date`値でサポートされて、<xref:System.DateTime>構造、そのメソッドを使用をアセンブリの追加のオプション、`Date`値。</span><span class="sxs-lookup"><span data-stu-id="88e05-621">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="88e05-622">オーバー ロードされたのいずれかを使用するなど、<xref:System.DateTime.%23ctor%2A>を設定するコンス トラクター、`Date`コンポーネントの目的の組み合わせを使用して変数。</span><span class="sxs-lookup"><span data-stu-id="88e05-622">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="88e05-623">次の例のセット`NewDateTime`1978 年 5 月 6日 8:30 の前に 2 つ目の 10 分の 1 にします。</span><span class="sxs-lookup"><span data-stu-id="88e05-623">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="88e05-624">この例では、`DateSerial`関数を指定した年、月、日の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-624">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-625">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-625">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e05-626">システムの現在の日付を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-626">Returns or sets a string value representing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="88e05-627">システムの現在の日付を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-627">Returns or sets a string value representing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-628">`DateString` システム日付を月の省略名を使用して年-月-日形式で返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-628">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="88e05-629">日付の許容される形式は M-d yyyy, M-y d、m/d/yyyy、および M/d/y です。</span><span class="sxs-lookup"><span data-stu-id="88e05-629">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="88e05-630">これは 2 バイト文字セット (DBCS) を使用するものを除くすべてのシステム ロケールに当てはまります。</span><span class="sxs-lookup"><span data-stu-id="88e05-630">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="88e05-631">システム ロケールは、2 バイト文字セットを使用している場合`DateString`システム日付を yyyy-mm-dd の形式で返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-631">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="88e05-632">システムのロケールの設定を使用して、**時計、言語および地域**内の項目**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="88e05-632">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="88e05-633">**注**、`DateString`プロパティでは、システムの日付を返します - yyyy-mm-dd の形式でのみ、 `zh` (中国語簡体字)、 `ko` (韓国語)、および`ja`(日本語版) システム ロケールで Visual Basic を実行している場合Silverlight です。</span><span class="sxs-lookup"><span data-stu-id="88e05-633">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="88e05-634">取得または設定としては、現在のシステム時刻を`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-634">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="88e05-635">現在のロケールの形式で、またはカスタムの形式では、現在のシステム日付または時刻を取得を指定、<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数、またはユーザー定義の定義済み日付/時刻形式の指定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-635">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="88e05-636">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-636">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="88e05-637">として現在のシステム日付へのアクセスに、`Date`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-637">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="88e05-638">システム日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="88e05-638">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="88e05-639">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="88e05-639">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-640">次の例では、`DateString`プロパティを現在のシステム日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-640">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-641"><see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" /> の値を設定するのに使用する無効な形式。</span><span class="sxs-lookup"><span data-stu-id="88e05-641">Invalid format used to set the value of <see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate"><span data-ttu-id="88e05-642">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-642">Required.</span></span> <span data-ttu-id="88e05-643">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-643">string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="88e05-644">文字列で表した日付情報を含む <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-644">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></summary>
        <returns><span data-ttu-id="88e05-645">文字列で表した日付情報を含む <see langword="Date" /> 値であり、時刻情報は午前 0 時 (00:00:00) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-645">A <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-646">場合`StringDate`1 ~ 12 の有効な日付の区切り記号で区切られた数字だけを含む`DateValue`は月、日、お使いのシステム指定の短い日付形式に従って年の順序を認識します。</span><span class="sxs-lookup"><span data-stu-id="88e05-646">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="88e05-647">`DateValue` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-647">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="88e05-648">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-648">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="88e05-649">短い日付形式を設定して上書きできます、<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>のプロパティ、<xref:System.Globalization.DateTimeFormatInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-649">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="88e05-650">`DateValue` 長、省略、および数値の形式で月の名前を認識します。</span><span class="sxs-lookup"><span data-stu-id="88e05-650">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="88e05-651">12/30/1991 と 12/30/91 を認識するだけでなく、 `DateValue` 1991 年 12 月 30 日と 1991 年 12 月 30 日にも認識します。</span><span class="sxs-lookup"><span data-stu-id="88e05-651">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="88e05-652">場合の年の部分`StringDate`を省略すると、`DateValue`は、コンピューターのシステム日付から現在の年を使用します。</span><span class="sxs-lookup"><span data-stu-id="88e05-652">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="88e05-653">場合、`StringDate`引数には、時刻の情報が含まれています。`DateValue`で返される値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="88e05-653">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="88e05-654">ただし場合、 `StringDate` 「89: 98」などの無効な時刻の情報が含まれています、<xref:System.InvalidCastException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="88e05-654">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-655">この例では、`DateValue`日付を文字列に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-655">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="88e05-656">する日付を直接割り当てる日付リテラルを使用することも、`Object`または`Date`変数、たとえば、`oldDate = #2/12/69#`します。</span><span class="sxs-lookup"><span data-stu-id="88e05-656">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-657"><paramref name="StringDate" /> に無効な時刻情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-657"><paramref name="StringDate" /> includes invalid time information.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="88e05-658">データ型の概要 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="88e05-658">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="88e05-659">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-659">Required.</span></span> <span data-ttu-id="88e05-660">日を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-660">A <see langword="Date" /> value from which you want to extract the day.</span></span></param>
        <summary><span data-ttu-id="88e05-661">日付を表す 1 から 31 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-661">Returns an integer value from 1 through 31 representing the day of the month.</span></span></summary>
        <returns><span data-ttu-id="88e05-662">日付を表す 1 から 31 の整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-662">An integer value from 1 through 31 representing the day of the month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-663">使用する場合、`Day`で修飾する必要があります、関数、`Microsoft.VisualBasic`名前空間、ため、<xref:System.Windows.Forms>名前空間を定義<xref:System.Windows.Forms.Day>列挙として。</span><span class="sxs-lookup"><span data-stu-id="88e05-663">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="88e05-664">次の例はどのように条件を満たす`Day`このあいまいさの解決。</span><span class="sxs-lookup"><span data-stu-id="88e05-664">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="88e05-665">呼び出すことによって、1 か月の日を取得することも`DatePart`を指定して`DateInterval.Day`の*間隔*引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-665">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-666">次の例では、`Day`指定された日付の月の日を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-666">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="88e05-667">開発環境では、コードのロケール設定を使用して標準の短い形式 (「02/12/1969」) などのリテラルの日付が表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-667">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="88e05-668">`Day` 修飾から区別するためには、<xref:System.Windows.Forms.Day?displayProperty=nameWithType>列挙体。</span><span class="sxs-lookup"><span data-stu-id="88e05-668">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="88e05-669">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-669">Required.</span></span> <span data-ttu-id="88e05-670">時を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-670">A <see langword="Date" /> value from which you want to extract the hour.</span></span></param>
        <summary><span data-ttu-id="88e05-671">時刻を表す 0 から 23 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-671">Returns an integer value from 0 through 23 representing the hour of the day.</span></span></summary>
        <returns><span data-ttu-id="88e05-672">時刻を表す 0 から 23 の整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-672">An integer value from 0 through 23 representing the hour of the day.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-673">呼び出すことによって、1 日の時間を取得することも`DatePart`を指定して`DateInterval.Hour`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-673">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-674">この例では、`Hour`指定された時間から 1 時間を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-674">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="88e05-675">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-675">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="88e05-676">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-676">Required.</span></span> <span data-ttu-id="88e05-677">分を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-677">A <see langword="Date" /> value from which you want to extract the minute.</span></span></param>
        <summary><span data-ttu-id="88e05-678">分を表す 0 から 59 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-678">Returns an integer value from 0 through 59 representing the minute of the hour.</span></span></summary>
        <returns><span data-ttu-id="88e05-679">分を表す 0 から 59 の整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-679">An integer value from 0 through 59 representing the minute of the hour.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-680">呼び出すことによって、時間の分を取得することも`DatePart`を指定して`DateInterval.Minute`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-680">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-681">この例では、`Minute`指定された時間から 1 時間の分を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-681">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="88e05-682">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-682">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="88e05-683">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-683">Required.</span></span> <span data-ttu-id="88e05-684">月を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-684">A <see langword="Date" /> value from which you want to extract the month.</span></span></param>
        <summary><span data-ttu-id="88e05-685">月を表す 1 から 12 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-685">Returns an integer value from 1 through 12 representing the month of the year.</span></span></summary>
        <returns><span data-ttu-id="88e05-686">月を表す 1 から 12 の整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-686">An integer value from 1 through 12 representing the month of the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-687">呼び出すことによって、年の月を取得することも`DatePart`を指定して`DateInterval.Month`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-687">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-688">この例では、`Month`指定された日付の月を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-688">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="88e05-689">開発環境で、日付リテラルが表示されます短い日付形式で、コードのロケール設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="88e05-689">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month"><span data-ttu-id="88e05-690">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-690">Required.</span></span> <span data-ttu-id="88e05-691">数値 (1 ～ 13) による月の指定です。1 は 1 月を示し、12 は 12 月を示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-691">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span></span> <span data-ttu-id="88e05-692">13 か月カレンダーでは値 13 を使用できます。</span><span class="sxs-lookup"><span data-stu-id="88e05-692">You can use the value 13 with a 13-month calendar.</span></span> <span data-ttu-id="88e05-693">システムで 12 か月カレンダーを使用しているとき、<paramref name="Month" /> に 13 を指定すると、<c>MonthName</c> からは空の文字列が返されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-693">If your system is using a 12-month calendar and <paramref name="Month" /> is 13, <c>MonthName</c> returns an empty string.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="88e05-694">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-694">Optional.</span></span> <span data-ttu-id="88e05-695">月の名前を省略する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="88e05-695"><see langword="True" /> to abbreviate the month name; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="88e05-696">既定値は、<see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="88e05-696">The default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="88e05-697">指定された月の名前を含む文字列値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-697">Returns a string value containing the name of the specified month.</span></span></summary>
        <returns><span data-ttu-id="88e05-698">指定された月の名前を含む文字列値。</span><span class="sxs-lookup"><span data-stu-id="88e05-698">A string value containing the name of the specified month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-699">によって返される文字列`MonthName`上だけでなく、入力引数にも依存して、**地域のオプション**、Windows で指定された設定**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="88e05-699">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88e05-700">`MonthName` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-700">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="88e05-701">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-701">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-702">この例では、`MonthName`指定された整数 1 か月の名前を決定する関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-702">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="88e05-703">ブール値が決まるかどうか、完全な名前 (`False`) または省略名 (`True`) が表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-703">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-704"><paramref name="Month" /> が 1 より小さいか、または 13 を超えています。</span><span class="sxs-lookup"><span data-stu-id="88e05-704"><paramref name="Month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e05-705">ご利用のシステムに従った現在の日付と時刻を含む日付型の値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-705">Returns a value containing the current date and time according to your system.</span></span></summary>
        <value><span data-ttu-id="88e05-706">現在の日付と時間をシステムに従ったします。</span><span class="sxs-lookup"><span data-stu-id="88e05-706">The current date and time according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-707">システム日付を設定するには、使用、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-707">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="88e05-708">システム時刻を設定するには、使用、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-708">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-709">次の例では、`Now`を現在のシステム日付と時刻を返すプロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-709">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue"><span data-ttu-id="88e05-710">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-710">Required.</span></span> <span data-ttu-id="88e05-711">秒を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-711">A <see langword="Date" /> value from which you want to extract the second.</span></span></param>
        <summary><span data-ttu-id="88e05-712">秒を表す 0 から 59 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-712">Returns an integer value from 0 through 59 representing the second of the minute.</span></span></summary>
        <returns><span data-ttu-id="88e05-713">秒を表す 0 から 59 の整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-713">An integer value from 0 through 59 representing the second of the minute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-714">呼び出すことによって、1 分の 2 つ目を取得することも`DatePart`を指定して`DateInterval.Second`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-714">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-715">次の例では、`Second`指定した時間から分の 2 つ目を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-715">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="88e05-716">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-716">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e05-717">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-717">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="88e05-718">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-718">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-719">`Date`データ型には、日付のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-719">The `Date` data type includes date components.</span></span> <span data-ttu-id="88e05-720">システム時刻を返すときに`TimeOfDay`返される値は 1 年の最初の曜日を表すために、これらすべてを 1 を設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-720">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="88e05-721">システム時刻を設定するときに`TimeOfDay`日付の構成要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-721">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="88e05-722">として現在のシステム時刻にアクセスする、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-722">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="88e05-723">取得または設定の現在のシステム日付を使用、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-723">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="88e05-724">システム日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="88e05-724">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="88e05-725">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="88e05-725">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-726">この例では、`TimeOfDay`を現在のシステム時刻を返すプロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-726">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e05-727">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see cref="T:System.Double" />) の値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-727">Returns a <see cref="T:System.Double" /> value representing the number of seconds elapsed since midnight.</span></span></summary>
        <value><span data-ttu-id="88e05-728">午前 0 時からの経過秒数を表す値。</span><span class="sxs-lookup"><span data-stu-id="88e05-728">A value representing the number of seconds elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-729">`Timer`プロパティは、最新の午前 0 時以降、秒とミリ秒の両方を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-729">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="88e05-730">戻り値の整数部分で、秒、小数部がミリ秒。</span><span class="sxs-lookup"><span data-stu-id="88e05-730">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-731">この例では、`Timer`プロパティをアプリケーションを一時停止します。</span><span class="sxs-lookup"><span data-stu-id="88e05-731">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="88e05-732">一時停止中に他の処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="88e05-732">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="88e05-733">修飾する必要がありますに注意してください、`Timer`プロパティを<xref:Microsoft.VisualBasic?displayProperty=nameWithType>名前空間、ため`Timer`はで定義されたクラスでも、 <xref:System.Threading?displayProperty=nameWithType>、 <xref:System.Timers?displayProperty=nameWithType>、および<xref:System.Windows.Forms?displayProperty=nameWithType>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-733">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour"><span data-ttu-id="88e05-734">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-734">Required.</span></span> <span data-ttu-id="88e05-735">0 から 23 の整数式。</span><span class="sxs-lookup"><span data-stu-id="88e05-735">Integer expression from 0 through 23.</span></span> <span data-ttu-id="88e05-736">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="88e05-736">However, values outside this range are also accepted.</span></span></param>
        <param name="Minute"><span data-ttu-id="88e05-737">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-737">Required.</span></span> <span data-ttu-id="88e05-738">0 から 59 の整数式。</span><span class="sxs-lookup"><span data-stu-id="88e05-738">Integer expression from 0 through 59.</span></span> <span data-ttu-id="88e05-739">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="88e05-739">However, values outside this range are also accepted.</span></span> <span data-ttu-id="88e05-740">計算される時には <paramref name="Minute" />  の値が加算されるため、負の値を指定するとその時からさかのぼる分数が指定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-740">The value of <paramref name="Minute" /> is added to the calculated hour, so a negative value specifies minutes before that hour.</span></span></param>
        <param name="Second"><span data-ttu-id="88e05-741">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-741">Required.</span></span> <span data-ttu-id="88e05-742">0 から 59 の整数式。</span><span class="sxs-lookup"><span data-stu-id="88e05-742">Integer expression from 0 through 59.</span></span> <span data-ttu-id="88e05-743">ただし、この範囲外の値も受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="88e05-743">However, values outside this range are also accepted.</span></span> <span data-ttu-id="88e05-744">算出される分には <paramref name="Second" />  の値が加算されるため、負の値を指定するとその分からさかのぼる秒数が指定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-744">The value of <paramref name="Second" /> is added to the calculated minute, so a negative value specifies seconds before that minute.</span></span></param>
        <summary><span data-ttu-id="88e05-745">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-745">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="88e05-746">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-746">A <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-747">次の例は、負の値は 0、および引数の正の値。</span><span class="sxs-lookup"><span data-stu-id="88e05-747">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="88e05-748">`TimeSerial`まで正午、または 8時 45分: 00 AM までの 3 つの時間に 15 分を表す時間を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-748">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="88e05-749">いずれか`Minute`または`Second`正常な範囲を超える場合、単位に繰り上げに適用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-749">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="88e05-750">たとえば、75 分を指定する場合は 1 時間 15 分として評価されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-750">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="88e05-751">`TimeSerial` 1 日の秒数である 86,400、剰余合計秒数が減少します。</span><span class="sxs-lookup"><span data-stu-id="88e05-751">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="88e05-752">そのため、返される時刻には 00時 00分: 00 ~ 23時 59分: 59 常にします。</span><span class="sxs-lookup"><span data-stu-id="88e05-752">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="88e05-753">`Date`データ型には、日付のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-753">The `Date` data type includes date components.</span></span> <span data-ttu-id="88e05-754">`TimeSerial` 返される値は 1 年の最初の曜日を表すためすべてを 1 にこれらのオプションを設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-754">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="88e05-755">ただし、引数の値によって計算された時刻が 24 時間を超える場合、1 日は、必要に応じてが増加します。</span><span class="sxs-lookup"><span data-stu-id="88e05-755">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="88e05-756">次の例の値で`Hour`と`Minute`24 時間以上の時間の合計が発生します。</span><span class="sxs-lookup"><span data-stu-id="88e05-756">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="88e05-757">引数の値は、負の値の計算時間になる、日付情報は 1/1/0001 を設定し、時刻情報は 00時 00分: 00 ~ 23時 59分: 59 に調整されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-757">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="88e05-758">ただし、計算された時間がより小さい負の 24 時間場合、<xref:System.ArgumentOutOfRangeException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="88e05-758">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="88e05-759">すべて`Date`値でサポートされて、<xref:System.DateTime?displayProperty=nameWithType>構造、そのメソッドを使用をアセンブリの追加のオプション、`Date`値。</span><span class="sxs-lookup"><span data-stu-id="88e05-759">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="88e05-760">オーバー ロードされたのいずれかを使用するなど、<xref:System.DateTime.%23ctor%2A>を設定するコンス トラクター、`Date`コンポーネントの目的の組み合わせを使用して変数。</span><span class="sxs-lookup"><span data-stu-id="88e05-760">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="88e05-761">次の例のセット`newDateTime`1978 年 5 月 6日 8:30 の前に 2 つ目の 10 分の 1 にします。</span><span class="sxs-lookup"><span data-stu-id="88e05-761">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="88e05-762">次の例では、`TimeSerial`関数を指定した時間、分、および秒の時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-762">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-763">引数が -2,147,483,648 ～ 2,147,483,647 の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="88e05-763">An argument is outside the range -2,147,483,648 through 2,147,483,647</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="88e05-764">計算された時刻が負の 24 時間より小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="88e05-764">Calculated time is less than negative 24 hours.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e05-765">システムの現在の時刻を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-765">Returns or sets a string value representing the current time of day according to your system.</span></span></summary>
        <value><span data-ttu-id="88e05-766">システムの現在の時刻を表す文字列値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-766">Returns or sets a string value representing the current time of day according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-767">`TimeString` 常に 24 時間形式は"hh:mm:ss"のシステム時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-767">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="88e05-768">この形式はカルチャに依存しない、つまり、変更した場合でも、変わりません、**地域のオプション**で**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="88e05-768">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="88e05-769">取得または設定としては、現在のシステム日付を`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-769">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="88e05-770">現在のロケールの形式で、またはカスタムの形式では、現在のシステム日付または時刻を取得を指定、<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数、またはユーザー定義の定義済み日付/時刻形式の指定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-770">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="88e05-771">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-771">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="88e05-772">として現在のシステム時刻にアクセスする、`Date`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-772">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="88e05-773">システムの日付または時刻を設定すると、部分信頼の状況では、その実行に影響を与える可能性がありますアンマネージ コードのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="88e05-773">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="88e05-774">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="88e05-774">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-775">この例では、`TimeString`プロパティを現在のシステム時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="88e05-775">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-776"><see langword="TimeString" /> の値を設定するのに使用する無効な形式。</span><span class="sxs-lookup"><span data-stu-id="88e05-776">Invalid format used to set the value of <see langword="TimeString" />.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime"><span data-ttu-id="88e05-777">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-777">Required.</span></span> <span data-ttu-id="88e05-778">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す文字列式。</span><span class="sxs-lookup"><span data-stu-id="88e05-778">A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span></span></param>
        <summary><span data-ttu-id="88e05-779">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-779">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></summary>
        <returns><span data-ttu-id="88e05-780">文字列で表した時刻情報を含む <see langword="Date" /> 値であり、日付情報は 1 年 1 月 1 日に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-780">A <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-781">有効な時刻を入力する 12 時間制または 24 時間制を使用します。</span><span class="sxs-lookup"><span data-stu-id="88e05-781">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="88e05-782">たとえば、`"2:24 P.M."`と`"14:24"`はどちらも有効な`StringTime`引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-782">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="88e05-783">場合、`StringTime`引数には、日付の情報が含まれています。`TimeValue`で返される値は含まれません。</span><span class="sxs-lookup"><span data-stu-id="88e05-783">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="88e05-784">ただし場合、`StringTime`無効な日付は、"年 32年 1 月"など、情報、<xref:System.InvalidCastException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="88e05-784">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-785">次の例では、`TimeValue`の時刻に、文字列を変換する関数。</span><span class="sxs-lookup"><span data-stu-id="88e05-785">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="88e05-786">すると、時間を直接割り当てる日付リテラルを使用することも、`Date`変数。</span><span class="sxs-lookup"><span data-stu-id="88e05-786">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="88e05-787"><paramref name="StringTime" /> に無効な日付情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-787"><paramref name="StringTime" /> includes invalid date information.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e05-788">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-788">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></summary>
        <value><span data-ttu-id="88e05-789">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-789">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-790">`Date`データ型には、時間のコンポーネントが含まれています。</span><span class="sxs-lookup"><span data-stu-id="88e05-790">The `Date` data type includes time components.</span></span> <span data-ttu-id="88e05-791">システムの日付を返すときに`Today`を 0 にこれらのすべて設定するため、返される値は午前 0 時を表します (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="88e05-791">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="88e05-792">システムの日付を設定するときに`Today`時コンポーネントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-792">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="88e05-793">として現在のシステム日付へのアクセスに、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-793">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="88e05-794">取得または設定の現在のシステム時刻を使用、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="88e05-794">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="88e05-795">システム日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="88e05-795">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="88e05-796">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)します。</span><span class="sxs-lookup"><span data-stu-id="88e05-796">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-797">この例では、`Today`プロパティの現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-797">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="88e05-798">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-798">Required.</span></span> <span data-ttu-id="88e05-799">曜日を調べる <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-799">A <see langword="Date" /> value for which you want to determine the day of the week.</span></span></param>
        <param name="DayOfWeek"><span data-ttu-id="88e05-800">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-800">Optional.</span></span> <span data-ttu-id="88e05-801">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-801">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="88e05-802">指定しない場合は、<see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-802">If not specified, <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" /> is used.</span></span></param>
        <summary><span data-ttu-id="88e05-803">曜日を表す数値を含む整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-803">Returns an integer value containing a number representing the day of the week.</span></span></summary>
        <returns><span data-ttu-id="88e05-804">曜日を表す数値を含む整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-804">An integer value containing a number representing the day of the week.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-805">によって返される値、`Weekday`の値に対応する関数、`FirstDayOfWeek`列挙; は、1 は日曜日を表し、7 が土曜日を表します。</span><span class="sxs-lookup"><span data-stu-id="88e05-805">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88e05-806">`Weekday` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-806">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="88e05-807">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-807">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="88e05-808">`DayOfWeek`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-808">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-809">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-809">Enumeration value</span></span>|<span data-ttu-id="88e05-810">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-810">Value</span></span>|<span data-ttu-id="88e05-811">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-811">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="88e05-812">0</span><span class="sxs-lookup"><span data-stu-id="88e05-812">0</span></span>|<span data-ttu-id="88e05-813">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="88e05-813">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="88e05-814">1</span><span class="sxs-lookup"><span data-stu-id="88e05-814">1</span></span>|<span data-ttu-id="88e05-815">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="88e05-815">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="88e05-816">2</span><span class="sxs-lookup"><span data-stu-id="88e05-816">2</span></span>|<span data-ttu-id="88e05-817">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="88e05-817">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="88e05-818">3</span><span class="sxs-lookup"><span data-stu-id="88e05-818">3</span></span>|<span data-ttu-id="88e05-819">火曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-819">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="88e05-820">4</span><span class="sxs-lookup"><span data-stu-id="88e05-820">4</span></span>|<span data-ttu-id="88e05-821">水曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-821">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="88e05-822">5</span><span class="sxs-lookup"><span data-stu-id="88e05-822">5</span></span>|<span data-ttu-id="88e05-823">木曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-823">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="88e05-824">6</span><span class="sxs-lookup"><span data-stu-id="88e05-824">6</span></span>|<span data-ttu-id="88e05-825">金曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-825">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="88e05-826">7</span><span class="sxs-lookup"><span data-stu-id="88e05-826">7</span></span>|<span data-ttu-id="88e05-827">土曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-827">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-828">次の例では、`Weekday`指定した日付から、曜日を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-828">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-829"><paramref name="DayOfWeek" /> が 0 より小さいか、または 7 を超えています。</span><span class="sxs-lookup"><span data-stu-id="88e05-829"><paramref name="DayOfWeek" /> is less than 0 or more than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday"><span data-ttu-id="88e05-830">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-830">Required.</span></span> <span data-ttu-id="88e05-831">Integer。</span><span class="sxs-lookup"><span data-stu-id="88e05-831">Integer.</span></span> <span data-ttu-id="88e05-832">曜日を指定する 1 ～ 7 の数値。1 は週の最初の曜日を表し、7 は週の最後の曜日を表します。</span><span class="sxs-lookup"><span data-stu-id="88e05-832">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span></span> <span data-ttu-id="88e05-833">最初と最後の曜日は、<paramref name="FirstDayOfWeekValue" /> の設定により決まります。</span><span class="sxs-lookup"><span data-stu-id="88e05-833">The identities of the first and last days depend on the setting of <paramref name="FirstDayOfWeekValue" />.</span></span></param>
        <param name="Abbreviate"><span data-ttu-id="88e05-834">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-834">Optional.</span></span> <span data-ttu-id="88e05-835">曜日の名前を省略するかどうかを示す <see langword="Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-835"><see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span></span> <span data-ttu-id="88e05-836">省略した場合、既定値の <see langword="False" /> が使用され、曜日の名前は省略されません。</span><span class="sxs-lookup"><span data-stu-id="88e05-836">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span></span></param>
        <param name="FirstDayOfWeekValue"><span data-ttu-id="88e05-837">任意。</span><span class="sxs-lookup"><span data-stu-id="88e05-837">Optional.</span></span> <span data-ttu-id="88e05-838">週の最初の曜日を指定する <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 列挙体から選択する値。</span><span class="sxs-lookup"><span data-stu-id="88e05-838">A value chosen from the <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span></span> <span data-ttu-id="88e05-839">指定しない場合は、<see langword="FirstDayOfWeek.System" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88e05-839">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span></span></param>
        <summary><span data-ttu-id="88e05-840">指定された曜日の名前を含んでいる文字列値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-840">Returns a string value containing the name of the specified weekday.</span></span></summary>
        <returns><span data-ttu-id="88e05-841">指定された曜日の名前を含んでいる文字列値。</span><span class="sxs-lookup"><span data-stu-id="88e05-841">A string value containing the name of the specified weekday.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-842">によって返される文字列`WeekdayName`上だけでなく、入力引数にも依存して、**地域のオプション**、Windows で指定された設定**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="88e05-842">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88e05-843">`WeekdayName` 現在のカレンダーの設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="88e05-843">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="88e05-844">既定の<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの** 設定します。</span><span class="sxs-lookup"><span data-stu-id="88e05-844">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="88e05-845">`FirstDayOfWeekValue`引数は、次の設定のいずれかであることができます。</span><span class="sxs-lookup"><span data-stu-id="88e05-845">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="88e05-846">列挙値</span><span class="sxs-lookup"><span data-stu-id="88e05-846">Enumeration value</span></span>|<span data-ttu-id="88e05-847">[値]</span><span class="sxs-lookup"><span data-stu-id="88e05-847">Value</span></span>|<span data-ttu-id="88e05-848">説明</span><span class="sxs-lookup"><span data-stu-id="88e05-848">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="88e05-849">0</span><span class="sxs-lookup"><span data-stu-id="88e05-849">0</span></span>|<span data-ttu-id="88e05-850">システムで指定された週の最初の日 (既定値) の設定</span><span class="sxs-lookup"><span data-stu-id="88e05-850">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="88e05-851">1</span><span class="sxs-lookup"><span data-stu-id="88e05-851">1</span></span>|<span data-ttu-id="88e05-852">日曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-852">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="88e05-853">2</span><span class="sxs-lookup"><span data-stu-id="88e05-853">2</span></span>|<span data-ttu-id="88e05-854">月曜日 (ISO 8601 の標準的な 3.17 に準拠)</span><span class="sxs-lookup"><span data-stu-id="88e05-854">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="88e05-855">3</span><span class="sxs-lookup"><span data-stu-id="88e05-855">3</span></span>|<span data-ttu-id="88e05-856">火曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-856">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="88e05-857">4</span><span class="sxs-lookup"><span data-stu-id="88e05-857">4</span></span>|<span data-ttu-id="88e05-858">水曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-858">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="88e05-859">5</span><span class="sxs-lookup"><span data-stu-id="88e05-859">5</span></span>|<span data-ttu-id="88e05-860">木曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-860">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="88e05-861">6</span><span class="sxs-lookup"><span data-stu-id="88e05-861">6</span></span>|<span data-ttu-id="88e05-862">金曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-862">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="88e05-863">7</span><span class="sxs-lookup"><span data-stu-id="88e05-863">7</span></span>|<span data-ttu-id="88e05-864">土曜日</span><span class="sxs-lookup"><span data-stu-id="88e05-864">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="88e05-865">次の例では、`Weekday`から指定した日付、週の曜日を取得する関数をクリックし、`WeekDayName`番号から、曜日の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-865">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="88e05-866"><paramref name="Weekday" /> が 1 より小さいか 7 を超えています。または <paramref name="FirstDayOfWeekValue" /> が 0 より小さいか 7 を超えています。</span><span class="sxs-lookup"><span data-stu-id="88e05-866"><paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue"><span data-ttu-id="88e05-867">必須です。</span><span class="sxs-lookup"><span data-stu-id="88e05-867">Required.</span></span> <span data-ttu-id="88e05-868">年を抽出する <see langword="Date" /> 値。</span><span class="sxs-lookup"><span data-stu-id="88e05-868">A <see langword="Date" /> value from which you want to extract the year.</span></span></param>
        <summary><span data-ttu-id="88e05-869">年を表す 1 から 9999 の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="88e05-869">Returns an integer value from 1 through 9999 representing the year.</span></span></summary>
        <returns><span data-ttu-id="88e05-870">年を表す 1 から 9999 の整数値。</span><span class="sxs-lookup"><span data-stu-id="88e05-870">An integer value from 1 through 9999 representing the year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e05-871">呼び出すことによって、年を取得することも`DatePart`を指定して`DateInterval.Year`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="88e05-871">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88e05-872">次の例では、`Year`指定された日付の年を取得します。</span><span class="sxs-lookup"><span data-stu-id="88e05-872">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="88e05-873">開発環境で、日付リテラルが表示されます短い日付形式で、コードのロケール設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="88e05-873">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>