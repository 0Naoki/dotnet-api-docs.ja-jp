<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bcab36c526f167b1006dd57ff76cae18493556b" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="65fd4-101">
        <see langword="DateAndTime" /> モジュールには、日付と時刻の操作に使用されるプロシージャとプロパティが含まれています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="65fd4-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-102">このモジュールは、Visual Basic 言語のキーワードとランタイム ライブラリ メンバーを現在の日付または時刻の取得、日付計算の実行、日付または時刻を返す、日付または時刻を設定または処理の期間を時間をサポートします。</span><span class="sxs-lookup"><span data-stu-id="65fd4-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-103">この例では、`Today`プロパティの現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-104">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-104">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="65fd4-105">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-105">Required.</span>
          </span>
          <span data-ttu-id="65fd4-106">加算する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-106">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="65fd4-107">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-107">Required.</span>
          </span>
          <span data-ttu-id="65fd4-108">
            <see langword="Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-108">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="65fd4-109">加算する時間間隔を表す浮動小数点式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-109">Floating-point expression representing the number of intervals you want to add.</span>
          </span>
          <span data-ttu-id="65fd4-110">
            <c>Number</c> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-110">
              <c>Number</c> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span>
          </span>
          <span data-ttu-id="65fd4-111">
            <c>Interval</c> で時、分、または秒を指定する場合、小数部を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-111">It can contain a fractional part when <c>Interval</c> specifies hours, minutes, or seconds.</span>
          </span>
          <span data-ttu-id="65fd4-112">その他の値を <c>Interval</c> で指定する場合、<c>Number</c> の小数部は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-112">For other values of <c>Interval</c>, any fractional part of <c>Number</c> is ignored.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="65fd4-113">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-113">Required.</span>
          </span>
          <span data-ttu-id="65fd4-114">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-114">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="65fd4-115">時間間隔を加算する日時を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-115">An expression representing the date and time to which the interval is to be added.</span>
          </span>
          <span data-ttu-id="65fd4-116">
            <c>DateValue</c> 自体は、呼び出し元のプログラムでは変更されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-116">
              <c>DateValue</c> itself is not changed in the calling program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-117">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-117">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-118">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-118">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-119">使用することができます、`DateAdd`関数を追加または特定の日付の指定した時間間隔を減算します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-119">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="65fd4-120">たとえば、今すぐ今日または時 45 分前に、から 30 日の日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-120">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="65fd4-121">日数を加算する`DateValue`、使用することができます`DateInterval.Day`、 `DateInterval.DayOfYear`、または`DateInterval.Weekday`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-121">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="65fd4-122">これらとして扱われますと同じのため`DayOfYear`と`Weekday`意味のある時間間隔ではありません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-122">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="65fd4-123">`DateAdd`関数が無効な日付を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-123">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="65fd4-124">必要に応じて、その年の月の最終日を結果として得られる日付の日の部分は下方調整されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-124">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="65fd4-125">次の例では、1 月 31 日に 1 か月を追加します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-125">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="65fd4-126">この例では`DateAdd`返します`#2/28/1995#`ではなく、`#2/31/1995#`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-126">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="65fd4-127">場合`DateValue`は`#1/31/1996#`、返します`#2/29/1996#`1996 が閏年であるのためです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-127">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65fd4-128">`DateAdd` 現在の予定表の設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-128">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="65fd4-129">既定値<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの **設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-129">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="65fd4-130">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを与える時間間隔を加算する追加のオプションです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-130">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="65fd4-131">たとえば、小数の日付をミリ秒単位に丸められますを追加することができます、`Date`次のように変数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-131">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="65fd4-132">`Interval`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-132">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-133">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-133">Enumeration value</span></span>|<span data-ttu-id="65fd4-134">String</span><span class="sxs-lookup"><span data-stu-id="65fd4-134">String</span></span>|<span data-ttu-id="65fd4-135">追加する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="65fd4-135">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="65fd4-136">d</span><span class="sxs-lookup"><span data-stu-id="65fd4-136">d</span></span>|<span data-ttu-id="65fd4-137">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-137">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="65fd4-138">Y</span><span class="sxs-lookup"><span data-stu-id="65fd4-138">y</span></span>|<span data-ttu-id="65fd4-139">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-139">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="65fd4-140">h</span><span class="sxs-lookup"><span data-stu-id="65fd4-140">h</span></span>|<span data-ttu-id="65fd4-141">1 時間です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="65fd4-141">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="65fd4-142">n</span><span class="sxs-lookup"><span data-stu-id="65fd4-142">n</span></span>|<span data-ttu-id="65fd4-143">1 分です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="65fd4-143">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="65fd4-144">m</span><span class="sxs-lookup"><span data-stu-id="65fd4-144">m</span></span>|<span data-ttu-id="65fd4-145">月です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-145">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="65fd4-146">q</span><span class="sxs-lookup"><span data-stu-id="65fd4-146">q</span></span>|<span data-ttu-id="65fd4-147">四半期です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-147">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="65fd4-148">s</span><span class="sxs-lookup"><span data-stu-id="65fd4-148">s</span></span>|<span data-ttu-id="65fd4-149">秒です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="65fd4-149">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="65fd4-150">週</span><span class="sxs-lookup"><span data-stu-id="65fd4-150">w</span></span>|<span data-ttu-id="65fd4-151">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-151">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="65fd4-152">ww</span><span class="sxs-lookup"><span data-stu-id="65fd4-152">ww</span></span>|<span data-ttu-id="65fd4-153">1 週間です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-153">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="65fd4-154">yyyy</span><span class="sxs-lookup"><span data-stu-id="65fd4-154">yyyy</span></span>|<span data-ttu-id="65fd4-155">年。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-155">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-156">この例では、日付と、使用、`DateAdd`関数を指定した数か月間、将来の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-156">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-157">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-157">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-158">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-158">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="65fd4-159">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-159">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="65fd4-160">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-160">Required.</span>
          </span>
          <span data-ttu-id="65fd4-161">加算する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-161">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="65fd4-162">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-162">Required.</span>
          </span>
          <span data-ttu-id="65fd4-163">
            <see langword="Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-163">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="65fd4-164">加算する時間間隔を表す浮動小数点式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-164">Floating-point expression representing the number of intervals you want to add.</span>
          </span>
          <span data-ttu-id="65fd4-165">
            <c>Number</c> には正の値 (未来の日付/時刻の値を取得する場合) または負の値 (過去の日付/時刻の値を取得する場合) を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-165">
              <c>Number</c> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span>
          </span>
          <span data-ttu-id="65fd4-166">
            <c>Interval</c> で時、分、または秒を指定する場合、小数部を含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-166">It can contain a fractional part when <c>Interval</c> specifies hours, minutes, or seconds.</span>
          </span>
          <span data-ttu-id="65fd4-167">その他の値を <c>Interval</c> で指定する場合、<c>Number</c> の小数部は無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-167">For other values of <c>Interval</c>, any fractional part of <c>Number</c> is ignored.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="65fd4-168">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-168">Required.</span>
          </span>
          <span data-ttu-id="65fd4-169">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-169">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="65fd4-170">時間間隔を加算する日時を表す式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-170">An expression representing the date and time to which the interval is to be added.</span>
          </span>
          <span data-ttu-id="65fd4-171">
            <c>DateValue</c> 自体は、呼び出し元のプログラムでは変更されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-171">
              <c>DateValue</c> itself is not changed in the calling program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-172">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-172">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-173">指定された時間間隔を加算した日付と時刻を含む <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-173">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-174">使用することができます、`DateAdd`関数を追加または特定の日付の指定した時間間隔を減算します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-174">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="65fd4-175">たとえば、今すぐ今日または時 45 分前に、から 30 日の日付を計算できます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-175">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="65fd4-176">日数を加算する`DateValue`、使用することができます`DateInterval.Day`、 `DateInterval.DayOfYear`、または`DateInterval.Weekday`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-176">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="65fd4-177">これらとして扱われますと同じのため`DayOfYear`と`Weekday`意味のある時間間隔ではありません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-177">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="65fd4-178">`DateAdd`関数が無効な日付を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-178">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="65fd4-179">必要に応じて、その年の月の最終日を結果として得られる日付の日の部分は下方調整されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-179">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="65fd4-180">次の例では、1 月 31 日に 1 か月を追加します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-180">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="65fd4-181">この例では`DateAdd`返します`#2/28/1995#`ではなく、`#2/31/1995#`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-181">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="65fd4-182">場合`DateValue`は`#1/31/1996#`、返します`#2/29/1996#`1996 が閏年であるのためです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-182">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65fd4-183">`DateAdd` 現在の予定表の設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-183">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="65fd4-184">既定値<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの **設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-184">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="65fd4-185">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを与える時間間隔を加算する追加のオプションです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-185">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="65fd4-186">たとえば、小数の日付をミリ秒単位に丸められますを追加することができます、`Date`次のように変数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-186">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="65fd4-187">`Interval`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-187">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-188">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-188">Enumeration value</span></span>|<span data-ttu-id="65fd4-189">String</span><span class="sxs-lookup"><span data-stu-id="65fd4-189">String</span></span>|<span data-ttu-id="65fd4-190">追加する時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="65fd4-190">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="65fd4-191">d</span><span class="sxs-lookup"><span data-stu-id="65fd4-191">d</span></span>|<span data-ttu-id="65fd4-192">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-192">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="65fd4-193">Y</span><span class="sxs-lookup"><span data-stu-id="65fd4-193">y</span></span>|<span data-ttu-id="65fd4-194">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-194">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="65fd4-195">h</span><span class="sxs-lookup"><span data-stu-id="65fd4-195">h</span></span>|<span data-ttu-id="65fd4-196">1 時間です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="65fd4-196">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="65fd4-197">n</span><span class="sxs-lookup"><span data-stu-id="65fd4-197">n</span></span>|<span data-ttu-id="65fd4-198">1 分です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="65fd4-198">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="65fd4-199">m</span><span class="sxs-lookup"><span data-stu-id="65fd4-199">m</span></span>|<span data-ttu-id="65fd4-200">月です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-200">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="65fd4-201">q</span><span class="sxs-lookup"><span data-stu-id="65fd4-201">q</span></span>|<span data-ttu-id="65fd4-202">四半期です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-202">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="65fd4-203">s</span><span class="sxs-lookup"><span data-stu-id="65fd4-203">s</span></span>|<span data-ttu-id="65fd4-204">秒です。ミリ秒単位に丸められます</span><span class="sxs-lookup"><span data-stu-id="65fd4-204">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="65fd4-205">週</span><span class="sxs-lookup"><span data-stu-id="65fd4-205">w</span></span>|<span data-ttu-id="65fd4-206">1 日です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-206">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="65fd4-207">ww</span><span class="sxs-lookup"><span data-stu-id="65fd4-207">ww</span></span>|<span data-ttu-id="65fd4-208">1 週間です。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-208">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="65fd4-209">yyyy</span><span class="sxs-lookup"><span data-stu-id="65fd4-209">yyyy</span></span>|<span data-ttu-id="65fd4-210">年。整数値に切り捨てられます</span><span class="sxs-lookup"><span data-stu-id="65fd4-210">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-211">この例では、日付と、使用、`DateAdd`関数を指定した数か月間、将来の日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-211">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-212">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-212">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-213">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-213">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="65fd4-214">計算された日付が西暦 1 年 1 月 1 日 00:00:00 より前であるか、西暦 9999 年 12 月 31 日 23:59:59 より後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-214">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-215">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-215">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="65fd4-216">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-216">Required.</span>
          </span>
          <span data-ttu-id="65fd4-217">
            <c>Date1</c> と <c>Date2</c> の差分の単位として使用する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-217">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <c>Date1</c> and <c>Date2</c>.</span>
          </span>
        </param>
        <param name="Date1">
          <span data-ttu-id="65fd4-218">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-218">Required.</span>
          </span>
          <span data-ttu-id="65fd4-219">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-219">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="65fd4-220">計算で使用する 1 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-220">The first date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="Date2">
          <span data-ttu-id="65fd4-221">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-221">Required.</span>
          </span>
          <span data-ttu-id="65fd4-222">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-222">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="65fd4-223">計算で使用する 2 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-223">The second date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="65fd4-224">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-224">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-225">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-225">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-226">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-226">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="65fd4-227">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-227">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-228">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-228">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="65fd4-229">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-229">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-230">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-230">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-231">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-231">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-232">使用することができます、`DateDiff`関数を指定した時間間隔の数が 2 つの日付/時刻値の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-232">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="65fd4-233">たとえば、使用する場合があります`DateDiff`を 2 つの日付または現在および年の終わりまでの週の数までの日数の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-233">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="65fd4-234">動作</span><span class="sxs-lookup"><span data-stu-id="65fd4-234">Behavior</span></span>  
  
-   <span data-ttu-id="65fd4-235">**パラメーターの扱いです。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-235">**Treatment of Parameters.**</span></span> <span data-ttu-id="65fd4-236">`DateDiff` 値を減算`Date1`の値から`Date2`の違いを生成するためにします。</span><span class="sxs-lookup"><span data-stu-id="65fd4-236">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="65fd4-237">どちらの値は、呼び出し元のプログラムで変更されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-237">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="65fd4-238">**値を返します。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-238">**Return Values.**</span></span> <span data-ttu-id="65fd4-239">`Date1`と`Date2`は、`Date`データ型、日付と時刻の値が格納精度は 100 ナノ秒タイマー刻みシステム タイマーです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-239">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="65fd4-240">ただし、`DateDiff`として時間間隔の数を常に返します、`Long`値。</span><span class="sxs-lookup"><span data-stu-id="65fd4-240">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="65fd4-241">場合`Date1`以降の日付とよりも時間を表します`Date2`、`DateDiff`負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-241">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="65fd4-242">**日の間隔。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-242">**Day Intervals.**</span></span> <span data-ttu-id="65fd4-243">場合`Interval`に設定されている`DateInterval.DayOfYear`、扱われますと同じ`DateInterval.Day`ので、`DayOfYear`の時間間隔の意味のある単体ではありません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-243">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="65fd4-244">**週の間隔。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-244">**Week Intervals.**</span></span> <span data-ttu-id="65fd4-245">場合`Interval`に設定されている`DateInterval.WeekOfYear`、戻り値が含まれている週の最初の日までの週の数を表す`Date1`とを含む週の最初の日`Date2`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-245">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="65fd4-246">次の例は、異なる結果がどのように生成`DateInterval.Weekday`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-246">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="65fd4-247">この例では、`DateDiff`に 0 を返します`wD`であるため、2 つの日付の差未満である 7 日間に 1 を返します`wY`それぞれのカレンダーの週の最初の日の間で 7 日間の相違があるためです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-247">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="65fd4-248">**間隔を長くします。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-248">**Larger Intervals.**</span></span> <span data-ttu-id="65fd4-249">場合`Interval`に設定されている`DateInterval.Year`、純粋、年の部分からの戻り値が計算される`Date1`と`Date2`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-249">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="65fd4-250">同様に、戻り値`DateInterval.Month`は、引数の年と月の部分から純粋な計算`DateInterval.Quarter`2 つの日付を含む四半期からです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-250">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="65fd4-251">たとえば、次の年の 1 月 1 日に 12 月 31 日を比較するときに`DateDiff`に 1 を返します`DateInterval.Year`、 `DateInterval.Quarter`、または`DateInterval.Month`多くて 1 日が経過した場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-251">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="65fd4-252">持つ複数時代 (年号)、日本語などのカルチャ、`DateDiff`違いは、次の 2 つまたは複数の時代 (年号) にまたがる場合に、メソッドで年の差分が返されません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-252">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="65fd4-253">によって返される値の差を計算する代わりに、<xref:System.DateTime.Year%2A>プロパティ、次の例のように:`date2.Year - date1.Year`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-253">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="65fd4-254">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-254">**Other Intervals.**</span></span> <span data-ttu-id="65fd4-255">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを与える時間間隔を検索する追加のオプションです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-255">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="65fd4-256">たとえば、使用することができます、`Subtract`メソッド オーバー ロードされた形式のいずれかで:<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、<xref:System.TimeSpan>から、`Date`を返す別の変数`Date`値、および<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、`Date`に返す値、<xref:System.TimeSpan>です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-256">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="65fd4-257">次の例のようににかかる時間をミリ秒単位を調べるには処理時間の計測することができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-257">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="65fd4-258">`Interval`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-258">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-259">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-259">Enumeration value</span></span>|<span data-ttu-id="65fd4-260">文字列値</span><span class="sxs-lookup"><span data-stu-id="65fd4-260">String value</span></span>|<span data-ttu-id="65fd4-261">時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="65fd4-261">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="65fd4-262">"d"</span><span class="sxs-lookup"><span data-stu-id="65fd4-262">"d"</span></span>|<span data-ttu-id="65fd4-263">Day</span><span class="sxs-lookup"><span data-stu-id="65fd4-263">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="65fd4-264">"y"</span><span class="sxs-lookup"><span data-stu-id="65fd4-264">"y"</span></span>|<span data-ttu-id="65fd4-265">Day</span><span class="sxs-lookup"><span data-stu-id="65fd4-265">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="65fd4-266">"h"</span><span class="sxs-lookup"><span data-stu-id="65fd4-266">"h"</span></span>|<span data-ttu-id="65fd4-267">Hour</span><span class="sxs-lookup"><span data-stu-id="65fd4-267">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="65fd4-268">"n"</span><span class="sxs-lookup"><span data-stu-id="65fd4-268">"n"</span></span>|<span data-ttu-id="65fd4-269">Minute</span><span class="sxs-lookup"><span data-stu-id="65fd4-269">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="65fd4-270">"m"</span><span class="sxs-lookup"><span data-stu-id="65fd4-270">"m"</span></span>|<span data-ttu-id="65fd4-271">月</span><span class="sxs-lookup"><span data-stu-id="65fd4-271">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="65fd4-272">"q"</span><span class="sxs-lookup"><span data-stu-id="65fd4-272">"q"</span></span>|<span data-ttu-id="65fd4-273">四半期</span><span class="sxs-lookup"><span data-stu-id="65fd4-273">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="65fd4-274">"s"</span><span class="sxs-lookup"><span data-stu-id="65fd4-274">"s"</span></span>|<span data-ttu-id="65fd4-275">Second</span><span class="sxs-lookup"><span data-stu-id="65fd4-275">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="65fd4-276">"w"</span><span class="sxs-lookup"><span data-stu-id="65fd4-276">"w"</span></span>|<span data-ttu-id="65fd4-277">週</span><span class="sxs-lookup"><span data-stu-id="65fd4-277">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="65fd4-278">"ww"</span><span class="sxs-lookup"><span data-stu-id="65fd4-278">"ww"</span></span>|<span data-ttu-id="65fd4-279">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="65fd4-279">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="65fd4-280">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="65fd4-280">"yyyy"</span></span>|<span data-ttu-id="65fd4-281">Year</span><span class="sxs-lookup"><span data-stu-id="65fd4-281">Year</span></span>|  
  
 <span data-ttu-id="65fd4-282">`DayOfWeek`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-282">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-283">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-283">Enumeration value</span></span>|<span data-ttu-id="65fd4-284">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-284">Value</span></span>|<span data-ttu-id="65fd4-285">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-285">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="65fd4-286">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-286">0</span></span>|<span data-ttu-id="65fd4-287">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="65fd4-287">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="65fd4-288">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-288">1</span></span>|<span data-ttu-id="65fd4-289">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-289">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="65fd4-290">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-290">2</span></span>|<span data-ttu-id="65fd4-291">月曜日 (ISO 8601 の標準的な 3.17 に準拠している)</span><span class="sxs-lookup"><span data-stu-id="65fd4-291">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="65fd4-292">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-292">3</span></span>|<span data-ttu-id="65fd4-293">火曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-293">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="65fd4-294">4</span><span class="sxs-lookup"><span data-stu-id="65fd4-294">4</span></span>|<span data-ttu-id="65fd4-295">水曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-295">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="65fd4-296">5</span><span class="sxs-lookup"><span data-stu-id="65fd4-296">5</span></span>|<span data-ttu-id="65fd4-297">木曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-297">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="65fd4-298">6</span><span class="sxs-lookup"><span data-stu-id="65fd4-298">6</span></span>|<span data-ttu-id="65fd4-299">金曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-299">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="65fd4-300">7</span><span class="sxs-lookup"><span data-stu-id="65fd4-300">7</span></span>|<span data-ttu-id="65fd4-301">土曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-301">Saturday</span></span>|  
  
 <span data-ttu-id="65fd4-302">`WeekOfYear`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-302">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-303">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-303">Enumeration value</span></span>|<span data-ttu-id="65fd4-304">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-304">Value</span></span>|<span data-ttu-id="65fd4-305">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-305">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="65fd4-306">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-306">0</span></span>|<span data-ttu-id="65fd4-307">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-307">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="65fd4-308">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-308">1</span></span>|<span data-ttu-id="65fd4-309">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-309">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="65fd4-310">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-310">2</span></span>|<span data-ttu-id="65fd4-311">(ISO 8601 の標準的な 3.17 に準拠している) 新しい年には、少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-311">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="65fd4-312">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-312">3</span></span>|<span data-ttu-id="65fd4-313">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="65fd4-313">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-314">この例では、`DateDiff`関数を指定した日から今日までの日数の数を表示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-314">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-315">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-315">
              <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-316">
            <paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-316">
              <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="65fd4-317">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-317">Required.</span>
          </span>
          <span data-ttu-id="65fd4-318">
            <c>Date1</c> と <c>Date2</c> の差分の単位として使用する時間間隔を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-318">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <c>Date1</c> and <c>Date2</c>.</span>
          </span>
        </param>
        <param name="Date1">
          <span data-ttu-id="65fd4-319">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-319">Required.</span>
          </span>
          <span data-ttu-id="65fd4-320">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-320">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="65fd4-321">計算で使用する 1 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-321">The first date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="Date2">
          <span data-ttu-id="65fd4-322">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-322">Required.</span>
          </span>
          <span data-ttu-id="65fd4-323">
            <see langword="Date" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-323">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="65fd4-324">計算で使用する 2 番目の日付/時刻の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-324">The second date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="65fd4-325">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-325">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-326">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-326">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-327">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-327">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="65fd4-328">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-328">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-329">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-329">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="65fd4-330">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-330">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-331">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-331">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-332">2 つの <see langword="Long" /> 値の間に含まれる時間間隔の数を指定する <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-332">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-333">使用することができます、`DateDiff`関数を指定した時間間隔の数が 2 つの日付/時刻値の存在を確認します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-333">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="65fd4-334">たとえば、使用する場合があります`DateDiff`を 2 つの日付または現在および年の終わりまでの週の数までの日数の数を計算します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-334">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="65fd4-335">動作</span><span class="sxs-lookup"><span data-stu-id="65fd4-335">Behavior</span></span>  
  
-   <span data-ttu-id="65fd4-336">**パラメーターの扱いです。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-336">**Treatment of Parameters.**</span></span> <span data-ttu-id="65fd4-337">`DateDiff` 値を減算`Date1`の値から`Date2`の違いを生成するためにします。</span><span class="sxs-lookup"><span data-stu-id="65fd4-337">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="65fd4-338">どちらの値は、呼び出し元のプログラムで変更されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-338">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="65fd4-339">**値を返します。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-339">**Return Values.**</span></span> <span data-ttu-id="65fd4-340">`Date1`と`Date2`は、`Date`データ型、日付と時刻の値が格納精度は 100 ナノ秒タイマー刻みシステム タイマーです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-340">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="65fd4-341">ただし、`DateDiff`として時間間隔の数を常に返します、`Long`値。</span><span class="sxs-lookup"><span data-stu-id="65fd4-341">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="65fd4-342">場合`Date1`以降の日付とよりも時間を表します`Date2`、`DateDiff`負の数を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-342">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="65fd4-343">**日の間隔。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-343">**Day Intervals.**</span></span> <span data-ttu-id="65fd4-344">場合`Interval`に設定されている`DateInterval.DayOfYear`、扱われますと同じ`DateInterval.Day`ので、`DayOfYear`の時間間隔の意味のある単体ではありません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-344">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="65fd4-345">**週の間隔。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-345">**Week Intervals.**</span></span> <span data-ttu-id="65fd4-346">場合`Interval`に設定されている`DateInterval.WeekOfYear`、戻り値が含まれている週の最初の日までの週の数を表す`Date1`とを含む週の最初の日`Date2`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-346">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="65fd4-347">次の例は、異なる結果がどのように生成`DateInterval.Weekday`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-347">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="65fd4-348">この例では、`DateDiff`に 0 を返します`wD`であるため、2 つの日付の差未満である 7 日間に 1 を返します`wY`それぞれのカレンダーの週の最初の日の間で 7 日間の相違があるためです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-348">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="65fd4-349">**間隔を長くします。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-349">**Larger Intervals.**</span></span> <span data-ttu-id="65fd4-350">場合`Interval`に設定されている`DateInterval.Year`、純粋、年の部分からの戻り値が計算される`Date1`と`Date2`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-350">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="65fd4-351">同様に、戻り値`DateInterval.Month`は、引数の年と月の部分から純粋な計算`DateInterval.Quarter`2 つの日付を含む四半期からです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-351">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="65fd4-352">たとえば、次の年の 1 月 1 日に 12 月 31 日を比較するときに`DateDiff`に 1 を返します`DateInterval.Year`、 `DateInterval.Quarter`、または`DateInterval.Month`多くて 1 日が経過した場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-352">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="65fd4-353">持つ複数時代 (年号)、日本語などのカルチャ、`DateDiff`違いは、次の 2 つまたは複数の時代 (年号) にまたがる場合に、メソッドで年の差分が返されません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-353">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="65fd4-354">によって返される値の差を計算する代わりに、<xref:System.DateTime.Year%2A>プロパティ、次の例のように:`date2.Year - date1.Year`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-354">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="65fd4-355">**その他の間隔。**</span><span class="sxs-lookup"><span data-stu-id="65fd4-355">**Other Intervals.**</span></span> <span data-ttu-id="65fd4-356">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを与える時間間隔を検索する追加のオプションです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-356">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="65fd4-357">たとえば、使用することができます、`Subtract`メソッド オーバー ロードされた形式のいずれかで:<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、<xref:System.TimeSpan>から、`Date`を返す別の変数`Date`値、および<xref:System.DateTime.Subtract%2A?displayProperty=nameWithType>減算、`Date`に返す値、<xref:System.TimeSpan>です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-357">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="65fd4-358">次の例のようににかかる時間をミリ秒単位を調べるには処理時間の計測することができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-358">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="65fd4-359">`Interval`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-359">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-360">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-360">Enumeration value</span></span>|<span data-ttu-id="65fd4-361">文字列値</span><span class="sxs-lookup"><span data-stu-id="65fd4-361">String value</span></span>|<span data-ttu-id="65fd4-362">時間間隔の単位</span><span class="sxs-lookup"><span data-stu-id="65fd4-362">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="65fd4-363">"d"</span><span class="sxs-lookup"><span data-stu-id="65fd4-363">"d"</span></span>|<span data-ttu-id="65fd4-364">Day</span><span class="sxs-lookup"><span data-stu-id="65fd4-364">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="65fd4-365">"y"</span><span class="sxs-lookup"><span data-stu-id="65fd4-365">"y"</span></span>|<span data-ttu-id="65fd4-366">Day</span><span class="sxs-lookup"><span data-stu-id="65fd4-366">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="65fd4-367">"h"</span><span class="sxs-lookup"><span data-stu-id="65fd4-367">"h"</span></span>|<span data-ttu-id="65fd4-368">Hour</span><span class="sxs-lookup"><span data-stu-id="65fd4-368">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="65fd4-369">"n"</span><span class="sxs-lookup"><span data-stu-id="65fd4-369">"n"</span></span>|<span data-ttu-id="65fd4-370">Minute</span><span class="sxs-lookup"><span data-stu-id="65fd4-370">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="65fd4-371">"m"</span><span class="sxs-lookup"><span data-stu-id="65fd4-371">"m"</span></span>|<span data-ttu-id="65fd4-372">月</span><span class="sxs-lookup"><span data-stu-id="65fd4-372">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="65fd4-373">"q"</span><span class="sxs-lookup"><span data-stu-id="65fd4-373">"q"</span></span>|<span data-ttu-id="65fd4-374">四半期</span><span class="sxs-lookup"><span data-stu-id="65fd4-374">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="65fd4-375">"s"</span><span class="sxs-lookup"><span data-stu-id="65fd4-375">"s"</span></span>|<span data-ttu-id="65fd4-376">Second</span><span class="sxs-lookup"><span data-stu-id="65fd4-376">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="65fd4-377">"w"</span><span class="sxs-lookup"><span data-stu-id="65fd4-377">"w"</span></span>|<span data-ttu-id="65fd4-378">週</span><span class="sxs-lookup"><span data-stu-id="65fd4-378">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="65fd4-379">"ww"</span><span class="sxs-lookup"><span data-stu-id="65fd4-379">"ww"</span></span>|<span data-ttu-id="65fd4-380">カレンダーの週</span><span class="sxs-lookup"><span data-stu-id="65fd4-380">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="65fd4-381">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="65fd4-381">"yyyy"</span></span>|<span data-ttu-id="65fd4-382">Year</span><span class="sxs-lookup"><span data-stu-id="65fd4-382">Year</span></span>|  
  
 <span data-ttu-id="65fd4-383">`DayOfWeek`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-383">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-384">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-384">Enumeration value</span></span>|<span data-ttu-id="65fd4-385">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-385">Value</span></span>|<span data-ttu-id="65fd4-386">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-386">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="65fd4-387">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-387">0</span></span>|<span data-ttu-id="65fd4-388">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="65fd4-388">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="65fd4-389">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-389">1</span></span>|<span data-ttu-id="65fd4-390">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-390">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="65fd4-391">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-391">2</span></span>|<span data-ttu-id="65fd4-392">月曜日 (ISO 8601 の標準的な 3.17 に準拠している)</span><span class="sxs-lookup"><span data-stu-id="65fd4-392">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="65fd4-393">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-393">3</span></span>|<span data-ttu-id="65fd4-394">火曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-394">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="65fd4-395">4</span><span class="sxs-lookup"><span data-stu-id="65fd4-395">4</span></span>|<span data-ttu-id="65fd4-396">水曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-396">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="65fd4-397">5</span><span class="sxs-lookup"><span data-stu-id="65fd4-397">5</span></span>|<span data-ttu-id="65fd4-398">木曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-398">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="65fd4-399">6</span><span class="sxs-lookup"><span data-stu-id="65fd4-399">6</span></span>|<span data-ttu-id="65fd4-400">金曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-400">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="65fd4-401">7</span><span class="sxs-lookup"><span data-stu-id="65fd4-401">7</span></span>|<span data-ttu-id="65fd4-402">土曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-402">Saturday</span></span>|  
  
 <span data-ttu-id="65fd4-403">`WeekOfYear`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-403">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-404">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-404">Enumeration value</span></span>|<span data-ttu-id="65fd4-405">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-405">Value</span></span>|<span data-ttu-id="65fd4-406">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-406">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="65fd4-407">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-407">0</span></span>|<span data-ttu-id="65fd4-408">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-408">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="65fd4-409">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-409">1</span></span>|<span data-ttu-id="65fd4-410">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-410">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="65fd4-411">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-411">2</span></span>|<span data-ttu-id="65fd4-412">(ISO 8601 の標準的な 3.17 に準拠している) 新しい年には、少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-412">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="65fd4-413">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-413">3</span></span>|<span data-ttu-id="65fd4-414">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="65fd4-414">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-415">この例では、`DateDiff`関数を指定した日から今日までの日数の数を表示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-415">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-416">該当する <paramref name="Date1" />、<paramref name="Date2" />、<paramref name="DayofWeek" /> がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-416">
              <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-417">
            <paramref name="Date1" /> または <paramref name="Date2" /> が無効な型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-417">
              <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-418">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-418">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="65fd4-419">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-419">Required.</span>
          </span>
          <span data-ttu-id="65fd4-420">返される日付/時刻値の一部を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-420">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="65fd4-421">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-421">Required.</span>
          </span>
          <span data-ttu-id="65fd4-422">評価する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-422">
              <see langword="Date" /> value that you want to evaluate.</span>
          </span>
        </param>
        <param name="FirstDayOfWeekValue">
          <span data-ttu-id="65fd4-423">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-423">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-424">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-424">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-425">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-425">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="FirstWeekOfYearValue">
          <span data-ttu-id="65fd4-426">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-426">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-427">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-427">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="65fd4-428">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-428">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-429">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-429">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-430">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-430">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-431">使用することができます、`DatePart`を日付/時刻値を評価し、特定のコンポーネントを返す関数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-431">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="65fd4-432">たとえば、使用する場合があります`DatePart`週や現在の時刻の日を計算します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-432">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="65fd4-433">選択した場合`DateInterval.Weekday`の`Interval`引数、戻り値の値と矛盾して、`FirstDayOfWeek`列挙します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-433">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="65fd4-434">選択した場合`DateInterval.WeekOfYear`、`DatePart`を使用して、<xref:System.Globalization.Calendar>と<xref:System.Globalization.CultureInfo>クラスの<xref:System.Globalization>名前空間を現在の設定を決定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-434">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="65fd4-435">`FirstDayOfWeekValue`引数を使用する計算に影響を与える、`DateInterval.Weekday`と`DateInterval.WeekOfYear``Interval`設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-435">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="65fd4-436">`FirstWeekOfYearValue`引数を指定する計算に影響を与える`DateInterval.WeekOfYear`の`Interval`します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-436">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="65fd4-437">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを使う日付/時刻の部分を取得する追加のオプションです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-437">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="65fd4-438">全体の日付の値を取得するなど、`Date`時刻値で、変数が次のように、午前 0 時に設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-438">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="65fd4-439">`Interval`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-439">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-440">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-440">Enumeration value</span></span>|<span data-ttu-id="65fd4-441">String</span><span class="sxs-lookup"><span data-stu-id="65fd4-441">String</span></span>|<span data-ttu-id="65fd4-442">返す日付/時刻値の一部</span><span class="sxs-lookup"><span data-stu-id="65fd4-442">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="65fd4-443">d</span><span class="sxs-lookup"><span data-stu-id="65fd4-443">d</span></span>|<span data-ttu-id="65fd4-444">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="65fd4-444">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="65fd4-445">Y</span><span class="sxs-lookup"><span data-stu-id="65fd4-445">y</span></span>|<span data-ttu-id="65fd4-446">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="65fd4-446">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="65fd4-447">h</span><span class="sxs-lookup"><span data-stu-id="65fd4-447">h</span></span>|<span data-ttu-id="65fd4-448">Hour</span><span class="sxs-lookup"><span data-stu-id="65fd4-448">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="65fd4-449">n</span><span class="sxs-lookup"><span data-stu-id="65fd4-449">n</span></span>|<span data-ttu-id="65fd4-450">Minute</span><span class="sxs-lookup"><span data-stu-id="65fd4-450">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="65fd4-451">m</span><span class="sxs-lookup"><span data-stu-id="65fd4-451">m</span></span>|<span data-ttu-id="65fd4-452">月</span><span class="sxs-lookup"><span data-stu-id="65fd4-452">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="65fd4-453">q</span><span class="sxs-lookup"><span data-stu-id="65fd4-453">q</span></span>|<span data-ttu-id="65fd4-454">四半期</span><span class="sxs-lookup"><span data-stu-id="65fd4-454">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="65fd4-455">s</span><span class="sxs-lookup"><span data-stu-id="65fd4-455">s</span></span>|<span data-ttu-id="65fd4-456">Second</span><span class="sxs-lookup"><span data-stu-id="65fd4-456">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="65fd4-457">週</span><span class="sxs-lookup"><span data-stu-id="65fd4-457">w</span></span>|<span data-ttu-id="65fd4-458">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="65fd4-458">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="65fd4-459">ww</span><span class="sxs-lookup"><span data-stu-id="65fd4-459">ww</span></span>|<span data-ttu-id="65fd4-460">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="65fd4-460">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="65fd4-461">yyyy</span><span class="sxs-lookup"><span data-stu-id="65fd4-461">yyyy</span></span>|<span data-ttu-id="65fd4-462">Year</span><span class="sxs-lookup"><span data-stu-id="65fd4-462">Year</span></span>|  
  
 <span data-ttu-id="65fd4-463">`FirstDayOfWeekValue`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-463">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-464">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-464">Enumeration value</span></span>|<span data-ttu-id="65fd4-465">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-465">Value</span></span>|<span data-ttu-id="65fd4-466">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-466">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="65fd4-467">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-467">0</span></span>|<span data-ttu-id="65fd4-468">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="65fd4-468">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="65fd4-469">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-469">1</span></span>|<span data-ttu-id="65fd4-470">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-470">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="65fd4-471">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-471">2</span></span>|<span data-ttu-id="65fd4-472">月曜日 (ISO 8601 の標準的な 3.17 に準拠している)</span><span class="sxs-lookup"><span data-stu-id="65fd4-472">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="65fd4-473">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-473">3</span></span>|<span data-ttu-id="65fd4-474">火曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-474">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="65fd4-475">4</span><span class="sxs-lookup"><span data-stu-id="65fd4-475">4</span></span>|<span data-ttu-id="65fd4-476">水曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-476">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="65fd4-477">5</span><span class="sxs-lookup"><span data-stu-id="65fd4-477">5</span></span>|<span data-ttu-id="65fd4-478">木曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-478">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="65fd4-479">6</span><span class="sxs-lookup"><span data-stu-id="65fd4-479">6</span></span>|<span data-ttu-id="65fd4-480">金曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-480">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="65fd4-481">7</span><span class="sxs-lookup"><span data-stu-id="65fd4-481">7</span></span>|<span data-ttu-id="65fd4-482">土曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-482">Saturday</span></span>|  
  
 <span data-ttu-id="65fd4-483">`FirstWeekOfYearValue`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-483">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-484">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-484">Enumeration value</span></span>|<span data-ttu-id="65fd4-485">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-485">Value</span></span>|<span data-ttu-id="65fd4-486">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-486">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="65fd4-487">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-487">0</span></span>|<span data-ttu-id="65fd4-488">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-488">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="65fd4-489">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-489">1</span></span>|<span data-ttu-id="65fd4-490">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-490">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="65fd4-491">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-491">2</span></span>|<span data-ttu-id="65fd4-492">(ISO 8601 の標準的な 3.17 に準拠している) 新しい年には、少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-492">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="65fd4-493">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-493">3</span></span>|<span data-ttu-id="65fd4-494">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="65fd4-494">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-495">この例では、日付と、使用、`DatePart`関数をそれが発生した年度の四半期が表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-495">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-496">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-496">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-497">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-497">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="65fd4-498">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-498">Required.</span>
          </span>
          <span data-ttu-id="65fd4-499">返される日付/時刻値の一部を表す <see langword="DateInterval" /> 列挙値または <see langword="String" /> 式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-499">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="65fd4-500">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-500">Required.</span>
          </span>
          <span data-ttu-id="65fd4-501">評価する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-501">
              <see langword="Date" /> value that you want to evaluate.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="65fd4-502">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-502">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-503">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-503">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-504">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-504">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="65fd4-505">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-505">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-506">年の最初の週を指定する <see langword="FirstWeekOfYear" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-506">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="65fd4-507">指定しない場合は、<see langword="FirstWeekOfYear.Jan1" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-507">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-508">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-508">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-509">特定の <see langword="Integer" /> 型の値の指定要素を含む <see langword="Date" /> 型の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-509">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-510">使用することができます、`DatePart`を日付/時刻値を評価し、特定のコンポーネントを返す関数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-510">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="65fd4-511">たとえば、使用する場合があります`DatePart`週や現在の時刻の日を計算します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-511">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="65fd4-512">選択した場合`DateInterval.Weekday`の`Interval`引数、戻り値の値と矛盾して、`FirstDayOfWeek`列挙します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-512">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="65fd4-513">選択した場合`DateInterval.WeekOfYear`、`DatePart`を使用して、<xref:System.Globalization.Calendar>と<xref:System.Globalization.CultureInfo>クラスの<xref:System.Globalization>名前空間を現在の設定を決定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-513">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="65fd4-514">`FirstDayOfWeekValue`引数を使用する計算に影響を与える、`DateInterval.Weekday`と`DateInterval.WeekOfYear``Interval`設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-514">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="65fd4-515">`FirstWeekOfYearValue`引数を指定する計算に影響を与える`DateInterval.WeekOfYear`の`Interval`します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-515">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="65fd4-516">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを使う日付/時刻の部分を取得する追加のオプションです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-516">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="65fd4-517">全体の日付の値を取得するなど、`Date`時刻値で、変数が次のように、午前 0 時に設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-517">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="65fd4-518">`Interval`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-518">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-519">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-519">Enumeration value</span></span>|<span data-ttu-id="65fd4-520">String</span><span class="sxs-lookup"><span data-stu-id="65fd4-520">String</span></span>|<span data-ttu-id="65fd4-521">返す日付/時刻値の一部</span><span class="sxs-lookup"><span data-stu-id="65fd4-521">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="65fd4-522">d</span><span class="sxs-lookup"><span data-stu-id="65fd4-522">d</span></span>|<span data-ttu-id="65fd4-523">日 (1 ～ 31)</span><span class="sxs-lookup"><span data-stu-id="65fd4-523">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="65fd4-524">Y</span><span class="sxs-lookup"><span data-stu-id="65fd4-524">y</span></span>|<span data-ttu-id="65fd4-525">年間通算日 (1 ～ 366)</span><span class="sxs-lookup"><span data-stu-id="65fd4-525">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="65fd4-526">h</span><span class="sxs-lookup"><span data-stu-id="65fd4-526">h</span></span>|<span data-ttu-id="65fd4-527">Hour</span><span class="sxs-lookup"><span data-stu-id="65fd4-527">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="65fd4-528">n</span><span class="sxs-lookup"><span data-stu-id="65fd4-528">n</span></span>|<span data-ttu-id="65fd4-529">Minute</span><span class="sxs-lookup"><span data-stu-id="65fd4-529">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="65fd4-530">m</span><span class="sxs-lookup"><span data-stu-id="65fd4-530">m</span></span>|<span data-ttu-id="65fd4-531">月</span><span class="sxs-lookup"><span data-stu-id="65fd4-531">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="65fd4-532">q</span><span class="sxs-lookup"><span data-stu-id="65fd4-532">q</span></span>|<span data-ttu-id="65fd4-533">四半期</span><span class="sxs-lookup"><span data-stu-id="65fd4-533">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="65fd4-534">s</span><span class="sxs-lookup"><span data-stu-id="65fd4-534">s</span></span>|<span data-ttu-id="65fd4-535">Second</span><span class="sxs-lookup"><span data-stu-id="65fd4-535">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="65fd4-536">週</span><span class="sxs-lookup"><span data-stu-id="65fd4-536">w</span></span>|<span data-ttu-id="65fd4-537">曜日 (1 ～ 7)</span><span class="sxs-lookup"><span data-stu-id="65fd4-537">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="65fd4-538">ww</span><span class="sxs-lookup"><span data-stu-id="65fd4-538">ww</span></span>|<span data-ttu-id="65fd4-539">週 (1 ～ 53)</span><span class="sxs-lookup"><span data-stu-id="65fd4-539">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="65fd4-540">yyyy</span><span class="sxs-lookup"><span data-stu-id="65fd4-540">yyyy</span></span>|<span data-ttu-id="65fd4-541">Year</span><span class="sxs-lookup"><span data-stu-id="65fd4-541">Year</span></span>|  
  
 <span data-ttu-id="65fd4-542">`FirstDayOfWeekValue`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-542">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-543">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-543">Enumeration value</span></span>|<span data-ttu-id="65fd4-544">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-544">Value</span></span>|<span data-ttu-id="65fd4-545">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-545">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="65fd4-546">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-546">0</span></span>|<span data-ttu-id="65fd4-547">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="65fd4-547">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="65fd4-548">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-548">1</span></span>|<span data-ttu-id="65fd4-549">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-549">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="65fd4-550">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-550">2</span></span>|<span data-ttu-id="65fd4-551">月曜日 (ISO 8601 の標準的な 3.17 に準拠している)</span><span class="sxs-lookup"><span data-stu-id="65fd4-551">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="65fd4-552">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-552">3</span></span>|<span data-ttu-id="65fd4-553">火曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-553">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="65fd4-554">4</span><span class="sxs-lookup"><span data-stu-id="65fd4-554">4</span></span>|<span data-ttu-id="65fd4-555">水曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-555">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="65fd4-556">5</span><span class="sxs-lookup"><span data-stu-id="65fd4-556">5</span></span>|<span data-ttu-id="65fd4-557">木曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-557">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="65fd4-558">6</span><span class="sxs-lookup"><span data-stu-id="65fd4-558">6</span></span>|<span data-ttu-id="65fd4-559">金曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-559">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="65fd4-560">7</span><span class="sxs-lookup"><span data-stu-id="65fd4-560">7</span></span>|<span data-ttu-id="65fd4-561">土曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-561">Saturday</span></span>|  
  
 <span data-ttu-id="65fd4-562">`FirstWeekOfYearValue`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-562">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-563">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-563">Enumeration value</span></span>|<span data-ttu-id="65fd4-564">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-564">Value</span></span>|<span data-ttu-id="65fd4-565">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-565">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="65fd4-566">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-566">0</span></span>|<span data-ttu-id="65fd4-567">システムの設定で指定された年の最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-567">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="65fd4-568">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-568">1</span></span>|<span data-ttu-id="65fd4-569">週を月 1 日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-569">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="65fd4-570">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-570">2</span></span>|<span data-ttu-id="65fd4-571">(ISO 8601 の標準的な 3.17 に準拠している) 新しい年には、少なくとも 4 日間にある最初の週</span><span class="sxs-lookup"><span data-stu-id="65fd4-571">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="65fd4-572">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-572">3</span></span>|<span data-ttu-id="65fd4-573">新しい年の第 1 週</span><span class="sxs-lookup"><span data-stu-id="65fd4-573">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-574">この例では、日付と、使用、`DatePart`関数をそれが発生した年度の四半期が表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-574">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-575">
            <paramref name="Interval" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-575">
              <paramref name="Interval" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-576">
            <paramref name="DateValue" /> を日付型 (<see langword="Date" />) に強制変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-576">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year">
          <span data-ttu-id="65fd4-577">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-577">Required.</span>
          </span>
          <span data-ttu-id="65fd4-578">1 ～ 9999 の <see langword="Integer" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-578">
              <see langword="Integer" /> expression from 1 through 9999.</span>
          </span>
          <span data-ttu-id="65fd4-579">ただし、この範囲より小さい値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-579">However, values below this range are also accepted.</span>
          </span>
          <span data-ttu-id="65fd4-580">
            <c>Year</c> が 0 ～ 99 の場合、下の「解説」で説明しているように、1930 ～ 2029 年として解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-580">If <c>Year</c> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span>
          </span>
          <span data-ttu-id="65fd4-581">
            <c>Year</c> が 1 未満の場合、現在の年からその値が減算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-581">If <c>Year</c> is less than 1, it is subtracted from the current year.</span>
          </span>
        </param>
        <param name="Month">
          <span data-ttu-id="65fd4-582">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-582">Required.</span>
          </span>
          <span data-ttu-id="65fd4-583">1 ～ 12 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-583">
              <see langword="Integer" /> expression from 1 through 12.</span>
          </span>
          <span data-ttu-id="65fd4-584">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-584">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="65fd4-585">
            <c>Month</c> の値は 1 だけオフセットされた後、計算対象の年の 1 月に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-585">The value of <c>Month</c> is offset by 1 and applied to January of the calculated year.</span>
          </span>
          <span data-ttu-id="65fd4-586">つまり、(<c>Month</c> - 1) が 1 月に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-586">In other words, (<c>Month</c> - 1) is added to January.</span>
          </span>
          <span data-ttu-id="65fd4-587">年は必要に応じて再計算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-587">The year is recalculated if necessary.</span>
          </span>
          <span data-ttu-id="65fd4-588">この処理による結果の例を次に示します。<c>Month</c> が 1 の場合、結果は計算対象の年の 1 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-588">The following results illustrate this effect:  If <c>Month</c> is 1, the result is January of the calculated year.</span>
          </span>
          <span data-ttu-id="65fd4-589">
            <c>Month</c> が 0 の場合、結果は前年の 12 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-589">If <c>Month</c> is 0, the result is December of the previous year.</span>
          </span>
          <span data-ttu-id="65fd4-590">If <c>Month</c> が -1 の場合、結果は前年の 11 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-590">If <c>Month</c> is -1, the result is November of the previous year.</span>
          </span>
          <span data-ttu-id="65fd4-591">
            <c>Month</c> が 13 の場合、結果は翌年の 1 月になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-591">If <c>Month</c> is 13, the result is January of the following year.</span>
          </span>
        </param>
        <param name="Day">
          <span data-ttu-id="65fd4-592">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-592">Required.</span>
          </span>
          <span data-ttu-id="65fd4-593">1 ～ 31 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-593">
              <see langword="Integer" /> expression from 1 through 31.</span>
          </span>
          <span data-ttu-id="65fd4-594">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-594">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="65fd4-595">
            <c>Day</c> の値は 1 だけオフセットされた後、計算対象の月の最初の日に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-595">The value of <c>Day</c> is offset by 1 and applied to the first day of the calculated month.</span>
          </span>
          <span data-ttu-id="65fd4-596">つまり、(<c>Day</c> - 1) がその月の最初の日に加算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-596">In other words, (<c>Day</c> - 1) is added to the first of the month.</span>
          </span>
          <span data-ttu-id="65fd4-597">必要に応じて月と年が再計算されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-597">The month and year are recalculated if necessary.</span>
          </span>
          <span data-ttu-id="65fd4-598">この処理による結果の例を次に示します。<c>Day</c> が 1 の場合、結果は計算対象の月の最初の日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-598">The following results illustrate this effect:  If <c>Day</c> is 1, the result is the first day of the calculated month.</span>
          </span>
          <span data-ttu-id="65fd4-599">
            <c>Day</c> が 0 の場合、結果は前月の末日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-599">If <c>Day</c> is 0, the result is the last day of the previous month.</span>
          </span>
          <span data-ttu-id="65fd4-600">
            <c>Day</c> が -1 の場合、結果は前月の末日の前日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-600">If <c>Day</c> is -1, the result is the penultimate day of the previous month.</span>
          </span>
          <span data-ttu-id="65fd4-601">
            <c>Day</c> が現在の月の末日を過ぎている場合、結果は翌月の適切な日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-601">If <c>Day</c> is past the end of the current month, the result is the appropriate day of the following month.</span>
          </span>
          <span data-ttu-id="65fd4-602">たとえば、<c>Month</c> が 4 で <c>Day</c> が 31 の場合、結果は 5 月 1 日になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-602">For example, if <c>Month</c> is 4 and <c>Day</c> is 31, the result is May 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-603">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-603">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-604">指定された年、月、日を表す <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-604">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-605">Windows 98 または Windows 2000 では、下 2 桁の年、`Year`引数は、コンピューターのユーザー定義の設定に基づいて解釈されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-605">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="65fd4-606">既定の設定では 0 から 29 までの値は 2000 – 2029 年、30 ~ 99 の値が 1930 – 1999 年として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-606">The default settings are that values from 0 through 29 are interpreted as the years 2000–2029, and values from 30 through 99 are interpreted as the years 1930–1999.</span></span> <span data-ttu-id="65fd4-607">他のすべての`Year`引数を使用して、4 桁の年、たとえば 1924 です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-607">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="65fd4-608">以前のバージョンの Windows には、前述の既定値に基づいて 2 桁の年が解釈されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-608">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="65fd4-609">関数が正しい値を返すことを確認、4 桁を使用して`Year`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-609">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="65fd4-610">次の例で負の場合、0、および引数の正の値。</span><span class="sxs-lookup"><span data-stu-id="65fd4-610">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="65fd4-611">ここでは、`DateSerial`関数が返される、 `Date` 10 年前です。 現在の年に、3 月の最初の日の前日を表す 10 年 2 月の最終日つまり、します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-611">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="65fd4-612">いずれか`Month`または`Day`の通常の範囲を超えた場合、単位に適切に適用されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-612">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="65fd4-613">たとえば、32 日を指定すると、評価されますと 1 の値に応じて、次の 4 つの日に 1 か月として`Month`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-613">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="65fd4-614">場合`Year`が 9999 より大きい場合、または-2,147, 483,648 ~ 2,147, 483,647、範囲外のいずれかの引数が、<xref:System.ArgumentException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-614">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="65fd4-615">3 つの引数で指定された日付よりも前か 1 の場合、または年 12 月 31 日 23時 59分: 59 より後の年 1 月 1 日 00時 00分: 00 ~ 9999 場合、<xref:System.ArgumentOutOfRangeException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-615">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="65fd4-616">`Date`データ型には、時間のコンポーネントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-616">The `Date` data type includes time components.</span></span> <span data-ttu-id="65fd4-617">`DateSerial` すべて設定する 0 にこれらのため、返される値が計算された日の開始を表します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-617">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="65fd4-618">すべて`Date`値でサポートされて、<xref:System.DateTime>構造体、そのメソッドを使う追加のオプションをまとめることで、`Date`値。</span><span class="sxs-lookup"><span data-stu-id="65fd4-618">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="65fd4-619">オーバー ロードされたいずれかを使用するなど、<xref:System.DateTime.%23ctor%2A>を設定するコンス トラクター、`Date`コンポーネントの目的の組み合わせを使用して変数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-619">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="65fd4-620">次の例のセット`NewDateTime`1978 月 6日 10 分の 1 秒 8:30 の前に。</span><span class="sxs-lookup"><span data-stu-id="65fd4-620">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-621">この例では、`DateSerial`関数を指定した年、月、および日の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-621">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-622">システムに従った現在の日付を表す文字列型 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-622">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65fd4-623">システムに従った現在の日付を表す文字列型 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-623">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-624">`DateString` システム日付を月の省略名を使用して年-月-日形式で返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-624">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="65fd4-625">日付の許容される形式は、M-d yyyy, M-y d、m/d/yyyy、および M/d/y です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-625">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="65fd4-626">これは、2 バイト文字セット (DBCS) を使用するものを除くすべてのシステム ロケールの場合は true です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-626">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="65fd4-627">システムのロケールが、2 バイト文字セットを使用している場合`DateString`-yyyy-mm-dd の形式で、システムの日付を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-627">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="65fd4-628">使用して、システムのロケールを設定、**時計、言語および地域**内の項目**コントロール パネルの **です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-628">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="65fd4-629">**注**、`DateString`プロパティでは、システムの日付を返します - yyyy-mm-dd の形式でのみ、 `zh` (中国語簡体字)、 `ko` (韓国語)、および`ja`(日本語) システム ロケール内での Visual Basic を実行している場合Silverlight です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-629">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="65fd4-630">取得または設定の現在のシステム時刻として、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-630">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="65fd4-631">現在のロケールの形式またはカスタム形式では、現在のシステム日付または時刻を取得、指定、<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数、またはユーザー定義の定義済み日付/時刻形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-631">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="65fd4-632">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-632">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="65fd4-633">現在のシステム日付にアクセスする、`Date`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-633">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="65fd4-634">システムの日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-634">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="65fd4-635">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-635">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-636">次の例では、`DateString`プロパティを現在のシステム日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-636">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-637">
            <see langword="DateString" /> の値を設定するのに使用する無効な形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-637">Invalid format used to set the value of <see langword="DateString" />.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate">
          <span data-ttu-id="65fd4-638">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-638">Required.</span>
          </span>
          <span data-ttu-id="65fd4-639">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す <see langword="String" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-639">
              <see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-640">文字列で表した日付情報を含む <see langword="Date" /> 値を返します。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-640">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-641">文字列で表した日付情報を含む <see langword="Date" /> 値。時刻情報は午前 0 時 (00:00:00) に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-641">
              <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-642">場合`StringDate`1 ~ 12 の有効な日付の区切り記号で区切られた数字だけを含む`DateValue`月、日、およびシステムに指定された短い日付形式に従って年の順で認識します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-642">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="65fd4-643">`DateValue` 現在の予定表の設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-643">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="65fd4-644">既定値<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの **設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-644">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="65fd4-645">短い日付形式を上書きするには、設定して、<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>のプロパティ、<xref:System.Globalization.DateTimeFormatInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-645">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="65fd4-646">`DateValue` 長、省略形、および数値の形式での月の名前を認識します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-646">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="65fd4-647">12/30/1991 と 12/30/91 を認識するだけでなく、 `DateValue` 1991 年 12 月 30 日と 1991 年 12 月 30 日にも認識します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-647">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="65fd4-648">場合の年の部分`StringDate`を省略すると、`DateValue`コンピューターのシステムの日付から現在の年を使用します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-648">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="65fd4-649">場合、`StringDate`引数には、時刻の情報が含まれています。 `DateValue` 、返される値には含まれません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-649">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="65fd4-650">ただし場合、 `StringDate` 「89: 98」などの無効な時刻の情報が含まれています、<xref:System.InvalidCastException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-650">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-651">この例では、`DateValue`文字列を日付に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-651">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="65fd4-652">日付リテラルの日付を直接割り当てるためも使用できます、`Object`または`Date`変数、たとえば、`oldDate = #2/12/69#`です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-652">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-653">
            <paramref name="StringDate" /> に無効な時刻情報が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-653">
              <paramref name="StringDate" /> includes invalid time information.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="65fd4-654">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-654">Required.</span>
          </span>
          <span data-ttu-id="65fd4-655">日を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-655">
              <see langword="Date" /> value from which you want to extract the day.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-656">月内の通算日を表す 1 ～ 31 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-656">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-657">月内の通算日を表す 1 ～ 31 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-657">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-658">使用する場合、`Day`関数で修飾する必要があります、`Microsoft.VisualBasic`名前空間、ため、<xref:System.Windows.Forms>名前空間を定義<xref:System.Windows.Forms.Day>列挙体として。</span><span class="sxs-lookup"><span data-stu-id="65fd4-658">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="65fd4-659">例を次にどのように適合`Day`このあいまいさの解決。</span><span class="sxs-lookup"><span data-stu-id="65fd4-659">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="65fd4-660">呼び出して、月の日を取得することも`DatePart`を指定して`DateInterval.Day`の*間隔*引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-660">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-661">次の例では、`Day`指定された日付の月の日を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-661">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="65fd4-662">開発環境では、日付リテラルは、コードのロケール設定を使用して標準の短い形式 (「02/12/1969」) などに表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-662">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="65fd4-663">`Day` 修飾から区別するためには、<xref:System.Windows.Forms.Day?displayProperty=nameWithType>列挙します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-663">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="65fd4-664">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-664">Required.</span>
          </span>
          <span data-ttu-id="65fd4-665">時を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-665">
              <see langword="Date" /> value from which you want to extract the hour.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-666">時を表す 0 ～ 23 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-666">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-667">時を表す 0 ～ 23 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-667">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-668">呼び出して、1 日の時間を取得することも`DatePart`を指定して`DateInterval.Hour`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-668">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-669">この例では、`Hour`指定された時間から 1 時間を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-669">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="65fd4-670">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-670">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="65fd4-671">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-671">Required.</span>
          </span>
          <span data-ttu-id="65fd4-672">分を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-672">
              <see langword="Date" /> value from which you want to extract the minute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-673">分を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-673">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-674">分を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-674">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-675">呼び出して、分を取得することも`DatePart`を指定して`DateInterval.Minute`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-675">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-676">この例では、 `Minute` 、指定された時間から、分を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-676">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="65fd4-677">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-677">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="65fd4-678">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-678">Required.</span>
          </span>
          <span data-ttu-id="65fd4-679">月を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-679">
              <see langword="Date" /> value from which you want to extract the month.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-680">月を表す 1 ～ 12 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-680">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-681">月を表す 1 ～ 12 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-681">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-682">呼び出して、年の月を取得することも`DatePart`を指定して`DateInterval.Month`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-682">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-683">この例では、`Month`指定された日付の月を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-683">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="65fd4-684">開発環境で、日付リテラルが表示されます短い日付形式で、コードのロケール設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-684">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month">
          <span data-ttu-id="65fd4-685">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-685">Required.</span>
          </span>
          <span data-ttu-id="65fd4-686">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-686">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="65fd4-687">数値 (1 ～ 13) による月の指定です。1 は 1 月を示し、12 は 12 月を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-687">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span>
          </span>
          <span data-ttu-id="65fd4-688">13 か月カレンダーでは値 13 を使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-688">You can use the value 13 with a 13-month calendar.</span>
          </span>
          <span data-ttu-id="65fd4-689">システムで 12 か月カレンダーを使用しているとき、<c>Month</c> に 13 を指定すると、<see langword="MonthName" /> は空の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-689">If your system is using a 12-month calendar and <c>Month</c> is 13, <see langword="MonthName" /> returns an empty string.</span>
          </span>
        </param>
        <param name="Abbreviate">
          <span data-ttu-id="65fd4-690">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-690">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-691">月名を省略するかどうかを示す <see langword="Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-691">
              <see langword="Boolean" /> value that indicates if the month name is to be abbreviated.</span>
          </span>
          <span data-ttu-id="65fd4-692">省略した場合、既定値の <see langword="False" /> が使用され、月名は省略されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-692">If omitted, the default is <see langword="False" />, which means the month name is not abbreviated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-693">指定した月の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-693">Returns a <see langword="String" /> value containing the name of the specified month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-694">指定した月の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-694">Returns a <see langword="String" /> value containing the name of the specified month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-695">によって返される文字列`MonthName`異なりますだけでなく、入力引数以外にも、**地域のオプション**、Windows で指定された設定**コントロール パネルの **です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-695">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65fd4-696">`MonthName` 現在の予定表の設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-696">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="65fd4-697">既定値<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの **設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-697">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-698">この例では、`MonthName`指定された整数の月の名前を判断する関数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-698">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="65fd4-699">ブール値が決定されるかどうか完全名 (`False`) または省略名 (`True`) が表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-699">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-700">
            <paramref name="Month" /> が 1 より小さいか、または 13 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-700">
              <paramref name="Month" /> is less than 1 or greater than 13.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-701">システムに従った現在の日付と時刻を含む日付型 (<see langword="Date" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-701">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65fd4-702">システムに従った現在の日付と時刻を含む日付型 (<see langword="Date" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-702">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-703">システム日付を設定するには、使用、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-703">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="65fd4-704">システム時刻を設定するには、使用、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-704">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-705">次の例では、`Now`プロパティ、現在のシステム日付と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-705">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="65fd4-706">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-706">Required.</span>
          </span>
          <span data-ttu-id="65fd4-707">秒を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-707">
              <see langword="Date" /> value from which you want to extract the second.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-708">秒を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-708">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-709">秒を表す 0 ～ 59 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-709">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-710">呼び出して、1 分間の秒を取得することも`DatePart`を指定して`DateInterval.Second`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-710">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-711">次の例では、`Second`分の 2 番目の指定した時刻を取得する関数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-711">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="65fd4-712">開発環境では、時刻リテラルは、コードのロケール設定を使用して短い時刻形式で表示されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-712">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-713">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-713">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65fd4-714">システムに従った現在の時刻を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-714">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-715">`Date`データ型には、日付のコンポーネントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-715">The `Date` data type includes date components.</span></span> <span data-ttu-id="65fd4-716">システム時刻を返す場合`TimeOfDay`返される値は 1 年の最初の日を表すために、これらすべてを 1 を設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-716">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="65fd4-717">システム時刻を設定するときに`TimeOfDay`日付の構成要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-717">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="65fd4-718">現在のシステム時刻としてにアクセスする、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-718">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="65fd4-719">取得または現在のシステム日付を設定を使用して、<xref:Microsoft.VisualBasic.DateAndTime.Today%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-719">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="65fd4-720">システムの日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-720">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="65fd4-721">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-721">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-722">この例では、`TimeOfDay`プロパティを現在のシステム時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-722">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-723">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see langword="Double" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-723">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65fd4-724">午前 0 時から経過した秒数を表す倍精度浮動小数点数型 (<see langword="Double" />) の値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-724">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-725">`Timer`プロパティは、最新の午前 0 時から秒とミリ秒数の両方を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-725">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="65fd4-726">秒は、戻り値の整数部分にあり、小数部がミリ秒。</span><span class="sxs-lookup"><span data-stu-id="65fd4-726">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-727">この例では、`Timer`プロパティをアプリケーションを一時停止します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-727">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="65fd4-728">一時停止中に他の処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-728">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="65fd4-729">修飾する必要がありますに注意してください、`Timer`を持つプロパティ、<xref:Microsoft.VisualBasic?displayProperty=nameWithType>名前空間、ため`Timer`で定義されたクラスではまた、 <xref:System.Threading?displayProperty=nameWithType>、 <xref:System.Timers?displayProperty=nameWithType>、および<xref:System.Windows.Forms?displayProperty=nameWithType>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-729">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour">
          <span data-ttu-id="65fd4-730">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-730">Required.</span>
          </span>
          <span data-ttu-id="65fd4-731">0 ～ 23 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-731">
              <see langword="Integer" /> expression from 0 through 23.</span>
          </span>
          <span data-ttu-id="65fd4-732">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-732">However, values outside this range are also accepted.</span>
          </span>
        </param>
        <param name="Minute">
          <span data-ttu-id="65fd4-733">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-733">Required.</span>
          </span>
          <span data-ttu-id="65fd4-734">0 ～ 59 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-734">
              <see langword="Integer" /> expression from 0 through 59.</span>
          </span>
          <span data-ttu-id="65fd4-735">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-735">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="65fd4-736">計算される時には <c>Minute</c> の値が加算されるため、負の値を指定するとその時からさかのぼる分数が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-736">The value of <c>Minute</c> is added to the calculated hour, so a negative value specifies minutes before that hour.</span>
          </span>
        </param>
        <param name="Second">
          <span data-ttu-id="65fd4-737">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-737">Required.</span>
          </span>
          <span data-ttu-id="65fd4-738">0 ～ 59 の <see langword="Integer" /> の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-738">
              <see langword="Integer" /> expression from 0 through 59.</span>
          </span>
          <span data-ttu-id="65fd4-739">ただし、この範囲外の値も受け入れられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-739">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="65fd4-740">算出される分には <c>Second</c> の値が加算されるため、負の値を指定するとその分からさかのぼる秒数が指定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-740">The value of <c>Second</c> is added to the calculated minute, so a negative value specifies seconds before that minute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-741">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-741">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-742">1 年 1 月 1 日を基準に設定された日付情報を使用して、指定された時、分、秒を表す <see langword="Date" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-742">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-743">次の例で負の場合、0、および引数の正の値。</span><span class="sxs-lookup"><span data-stu-id="65fd4-743">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="65fd4-744">`TimeSerial`正午、または 8時 45分: 00 AM まで 3 時間まで 15 分を表す時間を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-744">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="65fd4-745">いずれか`Minute`または`Second`の通常の範囲を超えた場合、単位に適切に適用されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-745">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="65fd4-746">たとえば、75 分を指定する場合は 1 時間 15 分として評価されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-746">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="65fd4-747">`TimeSerial` 1 日の秒数である 86,400、剰余合計秒数が減少します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-747">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="65fd4-748">そのため、返される時刻には 00時 00分: 00 ~ 23時 59分: 59 常にします。</span><span class="sxs-lookup"><span data-stu-id="65fd4-748">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="65fd4-749">`Date`データ型には、日付のコンポーネントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-749">The `Date` data type includes date components.</span></span> <span data-ttu-id="65fd4-750">`TimeSerial` 返される値は 1 年の最初の日を表すために、これらすべてを 1 を設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-750">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="65fd4-751">ただし、引数の値によって計算された時刻が 24 時間を超える場合、1 日は、必要に応じてが増加します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-751">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="65fd4-752">次の例では、値で`Hour`と`Minute`合計時間は 24 時間以上が発生します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-752">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="65fd4-753">引数の値は、負の値の計算される時間間隔で結果、日付情報は 1/1/0001 を設定し、時刻情報は 00時 00分: 00 ~ 23時 59分: 59 にするのに調整します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-753">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="65fd4-754">ただし、計算される時間が負の値 24 時間未満の場合、<xref:System.ArgumentOutOfRangeException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-754">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="65fd4-755">すべて`Date`値でサポートされて、<xref:System.DateTime?displayProperty=nameWithType>構造体、そのメソッドを使う追加のオプションをまとめることで、`Date`値。</span><span class="sxs-lookup"><span data-stu-id="65fd4-755">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="65fd4-756">オーバー ロードされたいずれかを使用するなど、<xref:System.DateTime.%23ctor%2A>を設定するコンス トラクター、`Date`コンポーネントの目的の組み合わせを使用して変数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-756">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="65fd4-757">次の例のセット`newDateTime`1978 月 6日 10 分の 1 秒 8:30 の前に。</span><span class="sxs-lookup"><span data-stu-id="65fd4-757">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-758">次の例では、`TimeSerial`関数を指定した時間、分、および秒の時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-758">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-759">引数が -2,147,483,648 ～ 2,147,483,647 の範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-759">An argument is outside the range -2,147,483,648 through 2,147,483,647</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="65fd4-760">計算された時刻が負の 24 時間より小さくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-760">Calculated time is less than negative 24 hours.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-761">システムにおける現在の時刻を表す文字列 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-761">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65fd4-762">システムにおける現在の時刻を表す文字列 (<see langword="String" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-762">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-763">`TimeString` 常に 24 時間形式は"HH:mm:ss"としてのシステム時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-763">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="65fd4-764">この形式はカルチャに依存しない、変更した場合でもは変わらないため、**地域のオプション**で**コントロール パネルの **です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-764">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="65fd4-765">取得またはとして現在のシステム日付を設定する、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-765">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="65fd4-766">現在のロケールの形式またはカスタム形式では、現在のシステム日付または時刻を取得、指定、<xref:Microsoft.VisualBasic.DateAndTime.Now%2A>プロパティを<xref:Microsoft.VisualBasic.Strings.Format%2A>関数、またはユーザー定義の定義済み日付/時刻形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-766">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="65fd4-767">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-767">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="65fd4-768">現在のシステム時刻としてにアクセスする、`Date`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-768">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="65fd4-769">システムの日付または時刻を設定すると、部分的な信頼されている状況での実行に影響を与える可能性がありますアンマネージ コードのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-769">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="65fd4-770">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-770">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-771">この例では、`TimeString`プロパティを現在のシステム時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-771">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-772">
            <see langword="TimeString" /> の値を設定するのに使用する無効な形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-772">Invalid format used to set the value of <see langword="TimeString" />.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime">
          <span data-ttu-id="65fd4-773">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-773">Required.</span>
          </span>
          <span data-ttu-id="65fd4-774">1 年 1 月 1 日の 00:00:00 から、9999 年 12 月 31 日の 23:59:59 までの日付/時刻値を表す <see langword="String" /> 型の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-774">
              <see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-775">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-775">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-776">文字列で表した時刻情報を含む <see langword="Date" /> 値を返します。日付情報は 1 年 1 月 1 日に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-776">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-777">有効な時刻を入力する 12 時間制または 24 時間制を使用しています。</span><span class="sxs-lookup"><span data-stu-id="65fd4-777">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="65fd4-778">たとえば、`"2:24 P.M."`と`"14:24"`が両方とも有効な`StringTime`引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-778">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="65fd4-779">場合、`StringTime`引数には、日付情報が含まれています。 `TimeValue` 、返される値には含まれません。</span><span class="sxs-lookup"><span data-stu-id="65fd4-779">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="65fd4-780">ただし場合、`StringTime`無効な日付についてには、たとえば"年 32年 1 月"が含まれています、<xref:System.InvalidCastException>エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-780">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-781">次の例では、`TimeValue`時刻を文字列に変換する関数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-781">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="65fd4-782">直接割り当てるには時間、日付リテラルを使用することができますも、`Date`変数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-782">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65fd4-783">
            <paramref name="StringTime" /> に無効な日付情報が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-783">
              <paramref name="StringTime" /> includes invalid date information.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65fd4-784">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-784">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65fd4-785">システムに従った現在の日付を含む日付型 (<see langword="Date" />) の値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-785">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-786">`Date`データ型には、時間のコンポーネントが含まれます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-786">The `Date` data type includes time components.</span></span> <span data-ttu-id="65fd4-787">システム日付を返す場合`Today`を 0 にこれらのすべて設定するため、返される値が午前 0 時を表します (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="65fd4-787">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="65fd4-788">システム日付を設定するときに`Today`時コンポーネントは無視されます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-788">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="65fd4-789">現在のシステム日付にアクセスする、`String`を使用して、<xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-789">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="65fd4-790">取得または現在のシステム時刻を設定を使用して、<xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="65fd4-790">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="65fd4-791">システムの日付または時刻を設定すると、アンマネージ コード アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-791">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="65fd4-792">詳細については、次を参照してください。<xref:System.Security.Permissions.SecurityPermission>と[コード アクセス許可](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-792">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-793">この例では、`Today`プロパティの現在のシステム日付を返します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-793">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="65fd4-794">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-794">Required.</span>
          </span>
          <span data-ttu-id="65fd4-795">曜日を調べる <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-795">
              <see langword="Date" /> value for which you want to determine the day of the week.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="65fd4-796">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-796">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-797">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-797">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-798">指定しない場合は、<see langword="FirstDayOfWeek.Sunday" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-798">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-799">曜日を表す数値を含む <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-799">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-800">曜日を表す数値を含む <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-800">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-801">によって返される値、`Weekday`の値に対応する関数、`FirstDayOfWeek`列挙体です。 つまり、1 は日曜日を表し、7 は土曜日を表します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-801">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65fd4-802">`Weekday` 現在の予定表の設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-802">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="65fd4-803">既定値<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの **設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-803">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="65fd4-804">`DayOfWeek`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-804">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-805">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-805">Enumeration value</span></span>|<span data-ttu-id="65fd4-806">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-806">Value</span></span>|<span data-ttu-id="65fd4-807">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-807">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="65fd4-808">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-808">0</span></span>|<span data-ttu-id="65fd4-809">システム設定で指定された週の最初の日</span><span class="sxs-lookup"><span data-stu-id="65fd4-809">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="65fd4-810">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-810">1</span></span>|<span data-ttu-id="65fd4-811">日曜日 (既定値)</span><span class="sxs-lookup"><span data-stu-id="65fd4-811">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="65fd4-812">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-812">2</span></span>|<span data-ttu-id="65fd4-813">月曜日 (ISO 8601 の標準的な 3.17 に準拠している)</span><span class="sxs-lookup"><span data-stu-id="65fd4-813">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="65fd4-814">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-814">3</span></span>|<span data-ttu-id="65fd4-815">火曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-815">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="65fd4-816">4</span><span class="sxs-lookup"><span data-stu-id="65fd4-816">4</span></span>|<span data-ttu-id="65fd4-817">水曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-817">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="65fd4-818">5</span><span class="sxs-lookup"><span data-stu-id="65fd4-818">5</span></span>|<span data-ttu-id="65fd4-819">木曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-819">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="65fd4-820">6</span><span class="sxs-lookup"><span data-stu-id="65fd4-820">6</span></span>|<span data-ttu-id="65fd4-821">金曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-821">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="65fd4-822">7</span><span class="sxs-lookup"><span data-stu-id="65fd4-822">7</span></span>|<span data-ttu-id="65fd4-823">土曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-823">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-824">次の例では、`Weekday`指定された日付、週の曜日を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-824">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-825">
            <paramref name="DayOfWeek" /> が 0 より小さいか、または 7 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-825">
              <paramref name="DayOfWeek" /> is less than 0 or more than 7.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday">
          <span data-ttu-id="65fd4-826">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-826">Required.</span>
          </span>
          <span data-ttu-id="65fd4-827">
            <see langword="Integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-827">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="65fd4-828">曜日を指定する 1 ～ 7 の数値。1 は週の最初の曜日を表し、7 は週の最後の曜日を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-828">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-829">最初と最後の曜日は、<c>FirstDayOfWeekValue</c> の設定により決まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-829">The identities of the first and last days depend on the setting of <c>FirstDayOfWeekValue</c>.</span>
          </span>
        </param>
        <param name="Abbreviate">
          <span data-ttu-id="65fd4-830">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-830">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-831">曜日の名前を省略するかどうかを示す <see langword="Boolean" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-831">
              <see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span>
          </span>
          <span data-ttu-id="65fd4-832">省略した場合、既定値の <see langword="False" /> が使用され、曜日の名前は省略されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-832">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span>
          </span>
        </param>
        <param name="FirstDayOfWeekValue">
          <span data-ttu-id="65fd4-833">任意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-833">Optional.</span>
          </span>
          <span data-ttu-id="65fd4-834">週の最初の曜日を指定する <see langword="FirstDayOfWeek" /> 列挙体から選択する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-834">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="65fd4-835">指定しない場合は、<see langword="FirstDayOfWeek.System" /> が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-835">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-836">指定した曜日の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-836">Returns a <see langword="String" /> value containing the name of the specified weekday.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-837">指定した曜日の名前を含む <see langword="String" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-837">Returns a <see langword="String" /> value containing the name of the specified weekday.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-838">によって返される文字列`WeekdayName`異なりますだけでなく、入力引数以外にも、**地域のオプション**、Windows で指定された設定**コントロール パネルの **です。</span><span class="sxs-lookup"><span data-stu-id="65fd4-838">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65fd4-839">`WeekdayName` 現在の予定表の設定を使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>のプロパティ、<xref:System.Globalization.CultureInfo>クラス内で、<xref:System.Globalization>名前空間。</span><span class="sxs-lookup"><span data-stu-id="65fd4-839">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="65fd4-840">既定値<xref:System.Globalization.CultureInfo.CurrentCulture%2A>値によって決まります**コントロール パネルの **設定します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-840">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="65fd4-841">`FirstDayOfWeekValue`引数は、次の設定のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="65fd4-841">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="65fd4-842">列挙値</span><span class="sxs-lookup"><span data-stu-id="65fd4-842">Enumeration value</span></span>|<span data-ttu-id="65fd4-843">[値]</span><span class="sxs-lookup"><span data-stu-id="65fd4-843">Value</span></span>|<span data-ttu-id="65fd4-844">説明</span><span class="sxs-lookup"><span data-stu-id="65fd4-844">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="65fd4-845">0</span><span class="sxs-lookup"><span data-stu-id="65fd4-845">0</span></span>|<span data-ttu-id="65fd4-846">システムで指定された週の最初の日 (既定値) の設定</span><span class="sxs-lookup"><span data-stu-id="65fd4-846">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="65fd4-847">1</span><span class="sxs-lookup"><span data-stu-id="65fd4-847">1</span></span>|<span data-ttu-id="65fd4-848">日曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-848">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="65fd4-849">2</span><span class="sxs-lookup"><span data-stu-id="65fd4-849">2</span></span>|<span data-ttu-id="65fd4-850">月曜日 (ISO 8601 の標準的な 3.17 に準拠している)</span><span class="sxs-lookup"><span data-stu-id="65fd4-850">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="65fd4-851">3</span><span class="sxs-lookup"><span data-stu-id="65fd4-851">3</span></span>|<span data-ttu-id="65fd4-852">火曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-852">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="65fd4-853">4</span><span class="sxs-lookup"><span data-stu-id="65fd4-853">4</span></span>|<span data-ttu-id="65fd4-854">水曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-854">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="65fd4-855">5</span><span class="sxs-lookup"><span data-stu-id="65fd4-855">5</span></span>|<span data-ttu-id="65fd4-856">木曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-856">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="65fd4-857">6</span><span class="sxs-lookup"><span data-stu-id="65fd4-857">6</span></span>|<span data-ttu-id="65fd4-858">金曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-858">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="65fd4-859">7</span><span class="sxs-lookup"><span data-stu-id="65fd4-859">7</span></span>|<span data-ttu-id="65fd4-860">土曜日</span><span class="sxs-lookup"><span data-stu-id="65fd4-860">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-861">次の例では、`Weekday`を指定された日付、週の曜日を取得する関数し、`WeekDayName`番号から、曜日の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-861">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65fd4-862">
            <paramref name="Weekday" /> が 1 より小さいか 7 を超えています。または <paramref name="FirstDayOfWeekValue" /> が 0 より小さいか 7 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-862">
              <paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="65fd4-863">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-863">Required.</span>
          </span>
          <span data-ttu-id="65fd4-864">年を抽出する <see langword="Date" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-864">
              <see langword="Date" /> value from which you want to extract the year.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65fd4-865">年を表す 1 ～ 9999 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-865">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65fd4-866">年を表す 1 ～ 9999 の <see langword="Integer" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65fd4-866">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65fd4-867">呼び出して、年を取得することも`DatePart`を指定して`DateInterval.Year`の`Interval`引数。</span><span class="sxs-lookup"><span data-stu-id="65fd4-867">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65fd4-868">次の例では、`Year`指定された日付の年を取得します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-868">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="65fd4-869">開発環境で、日付リテラルが表示されます短い日付形式で、コードのロケール設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="65fd4-869">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>