<Type Name="Constants" FullName="Microsoft.VisualBasic.Constants">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7537ebb17fdf5f11f75818005376fc41dd43f70f" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244158" /></Metadata><TypeSignature Language="C#" Value="public sealed class Constants" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Constants extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Constants" />
  <TypeSignature Language="VB.NET" Value="Public Module Constants" />
  <TypeSignature Language="C++ CLI" Value="public ref class Constants sealed" />
  <TypeSignature Language="F#" Value="type Constants = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a67d6-101"><see langword="Constants" /> モジュールには、さまざまな定数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a67d6-101">The <see langword="Constants" /> module contains miscellaneous constants.</span></span> <span data-ttu-id="a67d6-102">この定数は、コード内のどこにでも使用できます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-102">These constants can be used anywhere in your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-103">このモジュールは、多くの Visual Basic の列挙体のメンバーに対応する Visual Basic 言語の定数をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a67d6-103">This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-104">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-104">Constants and Enumerations (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="a67d6-105">キーワード (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="a67d6-106">Visual Basic ランタイム ライブラリ メンバー</span><span class="sxs-lookup"><span data-stu-id="a67d6-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="vbAbort">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbAbort = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbort As MsgBoxResult  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbAbort = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbAbort : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbAbort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-107">メッセージ ボックスで [<see langword="Abort" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-107">Indicates that the <see langword="Abort" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-108"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-108">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-109">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-109">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-110">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-110">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-111">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-111">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-112">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-112">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-113">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-113">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbAbortRetryIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbAbortRetryIgnore = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbAbortRetryIgnore As MsgBoxStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbAbortRetryIgnore = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbAbortRetryIgnore : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbAbortRetryIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-114"><see langword="Abort" /> 関数を呼び出すときに、[<see langword="Retry" />]、[<see langword="Ignore" />]、および [<see langword="MsgBox" />] の各ボタンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-114">Indicates that the <see langword="Abort" />, <see langword="Retry" />, and <see langword="Ignore" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-115">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-115">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-116">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-116">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-117">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-117">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-118">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-118">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-119">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-119">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbApplicationModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbApplicationModal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbApplicationModal As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbApplicationModal = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbApplicationModal : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbApplicationModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-120"><see langword="MsgBox" /> 関数を呼び出すときに、メッセージ ボックスがモーダル ダイアログ ボックスとして表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-120">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-121">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-121">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-122">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-122">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-123">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-123">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-124">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-124">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-125">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-125">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbArchive">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbArchive = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbArchive = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArchive As FileAttribute  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbArchive = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbArchive : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbArchive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-126">ファイル アクセス関数において、ファイルが前回のバックアップ操作以降に変更されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-126">Indicates that the file has changed since the last backup operation for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-127">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-127">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-128">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-128">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-129">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-129">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-130">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-130">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-131">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-131">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-132">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-132">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-133">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-133">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbArray">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbArray = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbArray = (8192)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbArray" />
      <MemberSignature Language="VB.NET" Value="Public Const vbArray As VariantType  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbArray = 8192;" />
      <MemberSignature Language="F#" Value="val mutable vbArray : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbArray" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-134">バリアント オブジェクトの型が配列であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-134">Indicates that the type of a variant object is an array.</span></span> <span data-ttu-id="a67d6-135"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-135">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-136">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-136">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-137">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-137">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-138">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-138">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-139">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-139">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-140">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-140">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-141">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-141">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbBack">
      <MemberSignature Language="C#" Value="public const string vbBack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbBack" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBack" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBack As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbBack;" />
      <MemberSignature Language="F#" Value="val mutable vbBack : string" Usage="Microsoft.VisualBasic.Constants.vbBack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-142">印刷機能および表示機能のためのバックスペース文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-142">Represents a backspace character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-143">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-143">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-144">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-144">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbBinaryCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbBinaryCompare = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBinaryCompare As CompareMethod  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbBinaryCompare = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbBinaryCompare : Microsoft.VisualBasic.CompareMethod" Usage="Microsoft.VisualBasic.Constants.vbBinaryCompare" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-145">比較関数を呼び出すときに、バイナリ比較を実行するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-145">Specifies that a binary comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-146">比較関数を呼び出すときに使用できます、<xref:Microsoft.VisualBasic.CompareMethod>実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-146">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-147">`Compare`引数は、`CompareMethod`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-147">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-148">バイナリとテキストの比較では、次を参照してください。 [Option Compare ステートメント](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-148">For binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-149">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-149">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-150">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-150">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-151">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-151">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbBoolean">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbBoolean = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbBoolean = (11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Const vbBoolean As VariantType  = 11" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbBoolean = 11;" />
      <MemberSignature Language="F#" Value="val mutable vbBoolean : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbBoolean" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-152">バリアント オブジェクトの型が <see langword="Boolean" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-152">Indicates that the type of a variant object is <see langword="Boolean" />.</span></span> <span data-ttu-id="a67d6-153"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-153">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-154">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-154">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-155">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-155">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-156">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-156">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-157">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-157">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-158">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-158">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-159">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-159">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbByte">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbByte = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbByte = (17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbByte" />
      <MemberSignature Language="VB.NET" Value="Public Const vbByte As VariantType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbByte = 17;" />
      <MemberSignature Language="F#" Value="val mutable vbByte : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbByte" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-160">バリアント オブジェクトの型が <see langword="Byte" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-160">Indicates that the type of a variant object is <see langword="Byte" />.</span></span> <span data-ttu-id="a67d6-161"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-161">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-162">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-162">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-163">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-163">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-164">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-164">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-165">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-165">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-166">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-166">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-167">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-167">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbCancel = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCancel As MsgBoxResult  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbCancel = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbCancel : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-168">メッセージ ボックスで [<see langword="Cancel" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-168">Indicates that the <see langword="Cancel" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-169"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-169">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-170">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-170">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-171">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-171">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-172">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-172">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-173">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-173">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-174">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-174">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCr">
      <MemberSignature Language="C#" Value="public const string vbCr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCr" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCr" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCr As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCr;" />
      <MemberSignature Language="F#" Value="val mutable vbCr : string" Usage="Microsoft.VisualBasic.Constants.vbCr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-175">印刷機能および表示機能のための復帰文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-175">Represents a carriage-return character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-176">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-176">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-177">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-177">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCritical">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbCritical = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCritical As MsgBoxStyle  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbCritical = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbCritical : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbCritical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-178"><see langword="MsgBox" /> 関数を呼び出すときに、警告メッセージ アイコンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-178">Indicates that the critical message icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-179">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-179">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-180">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-180">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-181">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-181">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-182">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-182">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-183">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-183">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCrLf">
      <MemberSignature Language="C#" Value="public const string vbCrLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbCrLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCrLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbCrLf;" />
      <MemberSignature Language="F#" Value="val mutable vbCrLf : string" Usage="Microsoft.VisualBasic.Constants.vbCrLf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-184">印刷機能および表示機能のためのライン フィード文字と組み合わされた復帰文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-184">Represents a carriage-return character combined with a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-185">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-185">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-186">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-186">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbCurrency">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbCurrency = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbCurrency = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberSignature Language="VB.NET" Value="Public Const vbCurrency As VariantType  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbCurrency = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbCurrency : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbCurrency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-187">バリアント オブジェクトの型が <see langword="Currency" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-187">Indicates that the type of a variant object is <see langword="Currency" />.</span></span> <span data-ttu-id="a67d6-188"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-188">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-189">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-189">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-190">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-190">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-191">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-191">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-192">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-192">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-193">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-193">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-194">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-194">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDate = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDate = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDate As VariantType  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDate = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbDate : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-195">バリアント オブジェクトの型が <see langword="Date" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-195">Indicates that the type of a variant object is <see langword="Date" />.</span></span> <span data-ttu-id="a67d6-196"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-196">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-197">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-197">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-198">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-198">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-199">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-199">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-200">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-200">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-201">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-201">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-202">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-202">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDecimal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDecimal = 14;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDecimal = (14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDecimal As VariantType  = 14" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDecimal = 14;" />
      <MemberSignature Language="F#" Value="val mutable vbDecimal : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDecimal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-203">バリアント オブジェクトの型が <see langword="Decimal" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-203">Indicates that the type of a variant object is <see langword="Decimal" />.</span></span> <span data-ttu-id="a67d6-204"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-204">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-205">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-205">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-206">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-206">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-207">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-207">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-208">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-208">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-209">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-209">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-210">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-210">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton1 = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton1 As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton1 = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton1 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-211">メッセージ ボックスが表示されるときに、左端のボタンが既定のボタンとして選択されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-211">Indicates that the leftmost button is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-212">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-212">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-213">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-213">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-214">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-214">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-215">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-215">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-216">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-216">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton2">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton2 = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton2 As MsgBoxStyle  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton2 = 256;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton2 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-217">メッセージ ボックスが表示されるときに、左から 2 番目のボタンが既定のボタンとして選択されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-217">Indicates that the second button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-218">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-218">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-219">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-219">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-220">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-220">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-221">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-221">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-222">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-222">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDefaultButton3">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbDefaultButton3 = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDefaultButton3 As MsgBoxStyle  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbDefaultButton3 = 512;" />
      <MemberSignature Language="F#" Value="val mutable vbDefaultButton3 : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbDefaultButton3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-223">メッセージ ボックスが表示されるときに、左から 3 番目のボタンが既定のボタンとして選択されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-223">Indicates that the third button from the left is selected as the default button when the message box appears.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-224">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-224">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-225">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-225">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrConstants#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrConstants/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-226">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-226">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-227">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-227">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-228">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-228">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDirectory">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbDirectory = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDirectory As FileAttribute  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbDirectory = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbDirectory : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbDirectory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-229">ファイル アクセス関数において、ファイルがディレクトリまたはフォルダーであることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-229">Indicates that the file is a directory or folder for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-230">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-230">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-231">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-231">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-232">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-232">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-233">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-233">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-234">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-234">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-235">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-235">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-236">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-236">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbDouble">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbDouble = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbDouble = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberSignature Language="VB.NET" Value="Public Const vbDouble As VariantType  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbDouble = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbDouble : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbDouble" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-237">バリアント オブジェクトの型が <see langword="Double" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-237">Indicates that the type of a variant object is <see langword="Double" />.</span></span> <span data-ttu-id="a67d6-238"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-238">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-239">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-239">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-240">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-240">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-241">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-241">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-242">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-242">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-243">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-243">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-244">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-244">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbEmpty">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbEmpty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbEmpty = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Const vbEmpty As VariantType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbEmpty = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbEmpty : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-245">バリアント オブジェクトの型が <see langword="Empty" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-245">Indicates that the type of a variant object is <see langword="Empty" />.</span></span> <span data-ttu-id="a67d6-246"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-246">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-247">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-247">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-248">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-248">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-249">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-249">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-250">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-250">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-251">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-251">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-252">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-252">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbExclamation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbExclamation = (48)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbExclamation As MsgBoxStyle  = 48" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbExclamation = 48;" />
      <MemberSignature Language="F#" Value="val mutable vbExclamation : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbExclamation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-253"><see langword="MsgBox" /> 関数を呼び出すときに、感嘆符アイコンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-253">Indicates that the exclamation icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-254">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-254">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-255">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-255">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-256">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-256">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-257">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-257">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-258">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-258">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFalse">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbFalse = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbFalse = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFalse As TriState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbFalse = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbFalse : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbFalse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-259">数値書式指定関数を呼び出すときに <see langword="Boolean" /> 値 <see langword="False" /> が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-259">Indicates that a <see langword="Boolean" /> value of <see langword="False" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-260">いつ関数の呼び出しの数の書式設定を使用できる実際の値の代わりに、コードでは、次の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-260">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-261">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-261">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-262">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-262">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFirstFourDays">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFourDays = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFourDays As FirstWeekOfYear  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFourDays = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstFourDays : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstFourDays" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-263">日付関連の関数を呼び出すときに、年の最初の週として、少なくとも 4 日の日数を含む週が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-263">Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-264">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-264">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-265">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-265">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-266">`FirstWeekOfYear`列挙体の有効な値を指定する、`WeekOfYear`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-266">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-267">`WeekOfYear`引数は、`FirstWeekOfYear`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-267">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-268">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-268">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-269">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-269">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-270">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-270">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFirstFullWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstFullWeek = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstFullWeek As FirstWeekOfYear  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstFullWeek = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstFullWeek : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstFullWeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-271">日付関連の関数を呼び出すときに、年の最初の週として、1 週間全体を含む週が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-271">Indicates that the first full week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-272">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-272">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-273">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-273">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-274">`FirstWeekOfYear`列挙体の有効な値を指定する、`WeekOfYear`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-274">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-275">`WeekOfYear`引数は、`FirstWeekOfYear`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-275">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-276">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-276">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-277">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-277">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-278">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-278">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFirstJan1">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbFirstJan1 = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFirstJan1 As FirstWeekOfYear  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbFirstJan1 = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbFirstJan1 : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbFirstJan1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-279">日付関連の関数を呼び出すときに、年の最初の週として、1 月 1 日を含む週が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-279">Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-280">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-280">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-281">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-281">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-282">`FirstWeekOfYear`列挙体の有効な値を指定する、`WeekOfYear`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-282">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-283">`WeekOfYear`引数は、`FirstWeekOfYear`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-283">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-284">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-284">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-285">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-285">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-286">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-286">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFormFeed">
      <MemberSignature Language="C#" Value="public const string vbFormFeed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbFormFeed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFormFeed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbFormFeed;" />
      <MemberSignature Language="F#" Value="val mutable vbFormFeed : string" Usage="Microsoft.VisualBasic.Constants.vbFormFeed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-287">印刷機能のためのフォーム フィード文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-287">Represents a form-feed character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-288">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-288">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-289">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-289">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbFriday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbFriday = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbFriday As FirstDayOfWeek  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbFriday = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbFriday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbFriday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-290">日付関連の関数を呼び出すときに、金曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-290">Specifies that Friday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-291">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-291">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-292">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-292">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-293">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-293">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-294">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-294">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-295">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-295">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-296">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-296">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-297">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-297">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-298">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-298">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbGeneralDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbGeneralDate = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGeneralDate As DateFormat  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbGeneralDate = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbGeneralDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbGeneralDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-299"><see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの標準の日付形式が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-299">Indicates that the general date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-300">呼び出すと、`FormatDateTime`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-300">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a67d6-301">ダブルクリックして、コンピューターの地域設定にアクセスすることができます、**地域のオプション**アイコン**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-301">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="a67d6-302">カスタム日付/時刻書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="a67d6-302">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-303">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-303">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-304">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-304">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbGet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbGet = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbGet = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbGet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbGet As CallType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbGet = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbGet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbGet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-305"><see langword="CallByName" /> 関数を呼び出すときに、プロパティ値を取得するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-305">Specifies that a property value should be retrieved when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-306">呼び出すと、`CallByName`関数では、以下を使用する`CallType`実際の値の代わりに、コード内の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-306">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-307">`UseCallType`引数は、`CallType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-307">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-308">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-308">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-309">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-309">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-310">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-310">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbHidden">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbHidden = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbHidden = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHidden As FileAttribute  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbHidden = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbHidden : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbHidden" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-311">ファイル アクセス関数において、ファイルが隠しファイルであることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-311">Indicates that the file is a hidden file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-312">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-312">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-313">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-313">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-314">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-314">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-315">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-315">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-316">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-316">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-317">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-317">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-318">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-318">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbHide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbHide = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbHide = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHide As AppWinStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbHide = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbHide : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbHide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-319"><see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが非表示に設定されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-319">Indicates that the window style is hidden for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-320">発行すると`Shell`コマンド、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-320">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-321">`Style`引数は、`AppWinStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-321">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-322">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-322">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-323">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-323">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-324">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-324">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbHiragana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbHiragana = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbHiragana As VbStrConv  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbHiragana = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbHiragana : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbHiragana" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-325"><see langword="StrConv" /> 関数を呼び出すときに、ひらがながカタカナに変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-325">Indicates Hiragana characters should be converted to Katakana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-326">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-326">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-327">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-327">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-328">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-328">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-329">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-329">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-330">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-330">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-331">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-331">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbIgnore">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbIgnore = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Const vbIgnore As MsgBoxResult  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbIgnore = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbIgnore : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbIgnore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-332">メッセージ ボックスで [<see langword="Ignore" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-332">Indicates that the <see langword="Ignore" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-333"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-333">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-334">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-334">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-335">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-335">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-336">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-336">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-337">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-337">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-338">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-338">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbInformation">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbInformation = (64)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInformation As MsgBoxStyle  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbInformation = 64;" />
      <MemberSignature Language="F#" Value="val mutable vbInformation : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbInformation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-339"><see langword="MsgBox" /> 関数を呼び出すときに、情報アイコンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-339">Indicates that the information icon will display when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-340">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-340">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-341">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-341">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-342">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-342">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-343">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-343">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-344">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-344">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbInteger">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbInteger = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbInteger = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberSignature Language="VB.NET" Value="Public Const vbInteger As VariantType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbInteger = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbInteger : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbInteger" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-345">バリアント オブジェクトの型が <see langword="Integer" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-345">Indicates that the type of a variant object is <see langword="Integer" />.</span></span> <span data-ttu-id="a67d6-346"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-346">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-347">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-347">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-348">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-348">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-349">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-349">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-350">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-350">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-351">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-351">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-352">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-352">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbKatakana">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbKatakana = (16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberSignature Language="VB.NET" Value="Public Const vbKatakana As VbStrConv  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbKatakana = 16;" />
      <MemberSignature Language="F#" Value="val mutable vbKatakana : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbKatakana" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-353"><see langword="StrConv" /> 関数を呼び出すときに、カタカナがひらがなに変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-353">Indicates that Katakana characters should be converted to Hiragana characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-354">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-354">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-355">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-355">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-356">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-356">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-357">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-357">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-358">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-358">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-359">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-359">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbLet = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbLet = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLet As CallType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbLet = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbLet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbLet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-360"><see langword="CallByName" /> 関数を呼び出すときに、オブジェクト インスタンスにプロパティ値が設定されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-360">Indicates that a property value should be set to an object instance when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-361">呼び出すと、`CallByName`関数では、以下を使用する`CallType`実際の値の代わりに、コード内の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-361">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-362">`UseCallType`引数は、`CallType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-362">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-363">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-363">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-364">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-364">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-365">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-365">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLf">
      <MemberSignature Language="C#" Value="public const string vbLf;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbLf" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLf" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLf As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbLf;" />
      <MemberSignature Language="F#" Value="val mutable vbLf : string" Usage="Microsoft.VisualBasic.Constants.vbLf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-366">印刷機能および表示機能のためのライン フィード文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-366">Represents a linefeed character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-367">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-367">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-368">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-368">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLinguisticCasing">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLinguisticCasing = (1024)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLinguisticCasing As VbStrConv  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLinguisticCasing = 1024;" />
      <MemberSignature Language="F#" Value="val mutable vbLinguisticCasing : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbLinguisticCasing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-369"><see langword="StrConv" /> 関数を呼び出すときに、ファイル システムの大文字/小文字の区別規則ではなく、言語学的な大文字/小文字の区別規則を使用して文字が変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-369">Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-370">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-370">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-371">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-371">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-372">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-372">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-373">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-373">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-374">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-374">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-375">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-375">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLong">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbLong = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbLong = (20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLong" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLong As VariantType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbLong = 20;" />
      <MemberSignature Language="F#" Value="val mutable vbLong : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbLong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-376">バリアント オブジェクトの型が <see langword="Long" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-376">Indicates the type of a variant object is <see langword="Long" />.</span></span> <span data-ttu-id="a67d6-377"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-377">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-378">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-378">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-379">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-379">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-380">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-380">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-381">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-381">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-382">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-382">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-383">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-383">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLongDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongDate = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongDate = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongDate As DateFormat  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongDate = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbLongDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbLongDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-384"><see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの長い日付形式が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-384">Indicates that the long date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-385">呼び出すと、`FormatDateTime`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-385">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a67d6-386">ダブルクリックして、コンピューターの地域設定にアクセスすることができます、**地域のオプション**アイコン**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-386">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="a67d6-387">カスタム日付/時刻書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="a67d6-387">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-388">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-388">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-389">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-389">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLongTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbLongTime = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbLongTime = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLongTime As DateFormat  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbLongTime = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbLongTime : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbLongTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-390"><see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの長い時刻形式が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-390">Indicates that the long time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-391">呼び出すと、`FormatDateTime`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-391">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a67d6-392">ダブルクリックして、コンピューターの地域設定にアクセスすることができます、**地域のオプション**アイコン**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-392">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="a67d6-393">カスタム日付/時刻書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="a67d6-393">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-394">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-394">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-395">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-395">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbLowerCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbLowerCase = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbLowerCase As VbStrConv  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbLowerCase = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbLowerCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbLowerCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-396"><see langword="StrConv" /> 関数を呼び出すときに、文字が小文字に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-396">Indicates that characters should be converted to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-397">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-397">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-398">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-398">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-399">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-399">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-400">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-400">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-401">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-401">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-402">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-402">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMaximizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMaximizedFocus = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMaximizedFocus As AppWinStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMaximizedFocus = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbMaximizedFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMaximizedFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-403"><see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが最大化に設定され、フォーカスが与えられることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-403">Indicates that the window style is maximized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-404">発行すると`Shell`コマンド、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-404">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-405">`Style`引数は、`AppWinStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-405">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-406">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-406">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-407">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-407">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-408">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-408">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMethod">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbMethod = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbMethod = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMethod As CallType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbMethod = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbMethod : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-409"><see langword="CallByName" /> 関数を呼び出すときに、メソッドを呼び出すように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-409">Specifies that a method should be called when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-410">呼び出すと、`CallByName`関数では、以下を使用する`CallType`実際の値の代わりに、コード内の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-410">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-411">`UseCallType`引数は、`CallType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-411">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-412">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-412">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-413">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-413">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-414">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-414">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedFocus = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedFocus As AppWinStyle  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedFocus = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbMinimizedFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMinimizedFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-415"><see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが最小化に設定され、フォーカスが与えられることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-415">Indicates that the window style is minimized with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-416">発行すると`Shell`コマンド、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-416">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-417">`Style`引数は、`AppWinStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-417">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-418">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-418">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-419">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-419">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-420">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-420">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMinimizedNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbMinimizedNoFocus = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMinimizedNoFocus As AppWinStyle  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbMinimizedNoFocus = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbMinimizedNoFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbMinimizedNoFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-421"><see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが最小化に設定され、フォーカスは与えられないことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-421">Indicates that the window style is minimized without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-422">発行すると`Shell`コマンド、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-422">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-423">`Style`引数は、`AppWinStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-423">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-424">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-424">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-425">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-425">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-426">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-426">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMonday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbMonday = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMonday As FirstDayOfWeek  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbMonday = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbMonday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbMonday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-427">日付関連の関数を呼び出すときに、月曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-427">Specifies that Monday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-428">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-428">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-429">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-429">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-430">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-430">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-431">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-431">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-432">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-432">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-433">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-433">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-434">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-434">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-435">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-435">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxHelp">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxHelp = (16384)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxHelp As MsgBoxStyle  = 16384" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxHelp = 16384;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxHelp : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxHelp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-436"><see langword="Help" /> 関数を呼び出すときに、[<see langword="MsgBox" />] ボタンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-436">Indicates that the <see langword="Help" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-437">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-437">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-438">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-438">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-439">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-439">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-440">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-440">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-441">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-441">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRight">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRight = (524288)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRight As MsgBoxStyle  = 524288" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRight = 524288;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxRight : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-442"><see langword="MsgBox" /> 関数を呼び出すときに、テキストが右揃えで表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-442">Indicates that text will be right-aligned when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-443">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-443">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-444">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-444">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-445">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-445">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-446">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-446">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-447">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-447">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxRtlReading">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxRtlReading = (1048576)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxRtlReading As MsgBoxStyle  = 1048576" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxRtlReading = 1048576;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxRtlReading : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-448"><see langword="MsgBox" /> 関数を呼び出すときに、右から左に読むテキスト (ヘブライ語およびアラビア語のシステム) が表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-448">Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-449">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-449">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-450">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-450">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-451">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-451">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-452">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-452">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-453">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-453">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbMsgBoxSetForeground">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbMsgBoxSetForeground = (65536)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberSignature Language="VB.NET" Value="Public Const vbMsgBoxSetForeground As MsgBoxStyle  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbMsgBoxSetForeground = 65536;" />
      <MemberSignature Language="F#" Value="val mutable vbMsgBoxSetForeground : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-454"><see langword="MsgBox" /> 関数を呼び出すときに、メッセージ ボックスが前面に表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-454">Indicates that the message box will display in the foreground when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-455">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-455">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-456">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-456">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-457">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-457">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-458">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-458">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-459">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-459">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNarrow">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbNarrow = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNarrow As VbStrConv  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbNarrow = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbNarrow : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbNarrow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-460"><see langword="StrConv" /> 関数を呼び出すときに、全角 (2 バイト) 文字が半角 (1 バイト) 文字に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-460">Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-461">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-461">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-462">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-462">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-463">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-463">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-464">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-464">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-465">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-465">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-466">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-466">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNewLine">
      <MemberSignature Language="C#" Value="public const string vbNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNewLine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNewLine As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNewLine;" />
      <MemberSignature Language="F#" Value="val mutable vbNewLine : string" Usage="Microsoft.VisualBasic.Constants.vbNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-467">印刷機能および表示機能のための改行文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-467">Represents a newline character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-468">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-468">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-469">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-469">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbNo = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNo As MsgBoxResult  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbNo = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbNo : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-470">メッセージ ボックスで [<see langword="No" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-470">Indicates that the <see langword="No" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-471"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-471">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-472">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-472">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-473">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-473">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-474">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-474">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-475">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-475">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-476">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-476">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNormal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormal As FileAttribute  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbNormal = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbNormal : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-477">ファイル アクセス関数において、ファイルが通常のファイルであることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-477">Indicates that the file is a normal file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-478">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-478">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-479">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-479">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-480">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-480">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-481">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-481">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-482">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-482">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-483">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-483">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-484">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-484">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNormalFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalFocus = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalFocus As AppWinStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalFocus = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbNormalFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbNormalFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-485"><see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが通常のスタイルに設定され、フォーカスが与えられることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-485">Indicates that the window style is normal with focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-486">発行すると`Shell`コマンド、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-486">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-487">`Style`引数は、`AppWinStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-487">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-488">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-488">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-489">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-489">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-490">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-490">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNormalNoFocus">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.AppWinStyle vbNormalNoFocus = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNormalNoFocus As AppWinStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::AppWinStyle vbNormalNoFocus = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbNormalNoFocus : Microsoft.VisualBasic.AppWinStyle" Usage="Microsoft.VisualBasic.Constants.vbNormalNoFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.AppWinStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-491"><see langword="Shell" /> 関数を呼び出すときに、起動されるプログラムのウィンドウ スタイルが通常のスタイルに設定され、フォーカスは与えられないことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-491">Indicates that the window style is normal without focus for the invoked program when the <see langword="Shell" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-492">発行すると`Shell`コマンド、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-492">When you issue `Shell` commands, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-493">`Style`引数は、`AppWinStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-493">The `Style` argument takes the `AppWinStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-494">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-494">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-495">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-495">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-496">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-496">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNull">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbNull = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbNull = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNull" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNull As VariantType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbNull = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbNull : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbNull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-497">バリアント オブジェクトの型が <see langword="Nothing" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-497">Indicates that the type of a variant object is <see langword="Nothing" />.</span></span> <span data-ttu-id="a67d6-498"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-498">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-499">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-499">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-500">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-500">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-501">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-501">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-502">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-502">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-503">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-503">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-504">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-504">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNullChar">
      <MemberSignature Language="C#" Value="public const string vbNullChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullChar" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullChar As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullChar;" />
      <MemberSignature Language="F#" Value="val mutable vbNullChar : string" Usage="Microsoft.VisualBasic.Constants.vbNullChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-505">印刷機能および表示機能のための null 文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-505">Represents a null character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-506">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-506">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-507">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-507">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbNullString">
      <MemberSignature Language="C#" Value="public const string vbNullString = null;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbNullString = null" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbNullString As String  = null" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbNullString = nullptr;" />
      <MemberSignature Language="F#" Value="val mutable vbNullString : string" Usage="Microsoft.VisualBasic.Constants.vbNullString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-508">印刷機能、表示機能、および外部プロシージャ呼び出しのための長さ 0 の文字列を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-508">Represents a zero-length string for print and display functions, and for calling external procedures.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-509">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-509">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-510">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-510">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbObject">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbObject = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbObject = (9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObject" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObject As VariantType  = 9" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbObject = 9;" />
      <MemberSignature Language="F#" Value="val mutable vbObject : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-511">バリアント オブジェクトの型が <see langword="Object" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-511">Indicates that the type of a variant object is <see langword="Object" />.</span></span> <span data-ttu-id="a67d6-512"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-512">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-513">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-513">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-514">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-514">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-515">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-515">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-516">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-516">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-517">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-517">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-518">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-518">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbObjectError">
      <MemberSignature Language="C#" Value="public const int vbObjectError = -2147221504;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 vbObjectError = (-2147221504)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberSignature Language="VB.NET" Value="Public Const vbObjectError As Integer  = -2147221504" />
      <MemberSignature Language="C++ CLI" Value="public: int vbObjectError = -2147221504;" />
      <MemberSignature Language="F#" Value="val mutable vbObjectError : int" Usage="Microsoft.VisualBasic.Constants.vbObjectError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147221504</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-519">オブジェクトのエラー番号を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-519">Represents the object error number.</span></span> <span data-ttu-id="a67d6-520">ユーザー定義のエラー番号は、この値を超える値にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a67d6-520">User-defined error numbers should be greater than this value.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-521">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-521">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-522">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-522">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbOK">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbOK = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOK" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOK As MsgBoxResult  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbOK = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbOK : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbOK" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-523">メッセージ ボックスで [<see langword="OK" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-523">Indicates that the <see langword="OK" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-524"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-524">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-525">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-525">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-526">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-526">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-527">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-527">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-528">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-528">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-529">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-529">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbOKCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKCancel = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKCancel As MsgBoxStyle  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKCancel = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbOKCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbOKCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-530"><see langword="OK" /> 関数を呼び出すときに、[<see langword="Cancel" />] ボタンと [<see langword="MsgBox" />] ボタンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-530">Indicates that the <see langword="OK" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-531">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-531">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-532">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-532">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-533">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-533">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-534">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-534">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-535">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-535">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbOKOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbOKOnly = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbOKOnly As MsgBoxStyle  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbOKOnly = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbOKOnly : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbOKOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-536"><see langword="OK" /> 関数を呼び出すときに、[<see langword="MsgBox" />] ボタンだけが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-536">Indicates that only the <see langword="OK" /> button will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-537">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-537">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-538">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-538">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-539">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-539">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-540">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-540">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-541">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-541">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbProperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbProperCase = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbProperCase As VbStrConv  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbProperCase = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbProperCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbProperCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-542"><see langword="StrConv" /> 関数を呼び出すときに、文字列中のすべての単語の最初の文字が大文字に変換され、残りの文字が小文字に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-542">Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-543">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-543">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-544">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-544">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-545">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-545">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-546">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-546">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-547">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-547">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-548">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-548">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbQuestion">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbQuestion = (32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberSignature Language="VB.NET" Value="Public Const vbQuestion As MsgBoxStyle  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbQuestion = 32;" />
      <MemberSignature Language="F#" Value="val mutable vbQuestion : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbQuestion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-549"><see langword="MsgBox" /> 関数を呼び出すときに、疑問符アイコンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-549">Indicates that the question icon will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-550">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-550">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-551">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-551">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-552">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-552">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-553">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-553">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-554">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-554">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbReadOnly">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbReadOnly = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Const vbReadOnly As FileAttribute  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbReadOnly = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbReadOnly : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbReadOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-555">ファイル アクセス関数において、ファイルが読み取り専用のファイルであることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-555">Indicates that the file is a read-only file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-556">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-556">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-557">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-557">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-558">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-558">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-559">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-559">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-560">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-560">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-561">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-561">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-562">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-562">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbRetry">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbRetry = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetry As MsgBoxResult  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbRetry = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbRetry : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbRetry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-563">メッセージ ボックスで [<see langword="Retry" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-563">Indicates that the <see langword="Retry" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-564"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-564">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-565">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-565">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-566">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-566">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-567">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-567">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-568">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-568">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-569">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-569">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbRetryCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbRetryCancel = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbRetryCancel As MsgBoxStyle  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbRetryCancel = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbRetryCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbRetryCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-570"><see langword="Retry" /> 関数を呼び出すときに、[<see langword="Cancel" />] ボタンと [<see langword="MsgBox" />] ボタンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-570">Indicates that the <see langword="Retry" /> and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-571">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-571">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-572">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-572">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-573">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-573">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-574">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-574">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-575">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-575">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSaturday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSaturday = (7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSaturday As FirstDayOfWeek  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSaturday = 7;" />
      <MemberSignature Language="F#" Value="val mutable vbSaturday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbSaturday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-576">日付関連の関数を呼び出すときに、土曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-576">Specifies that Saturday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-577">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-577">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-578">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-578">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-579">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-579">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-580">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-580">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-581">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-581">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-582">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-582">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-583">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-583">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-584">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-584">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSet">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CallType vbSet = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CallType vbSet = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSet" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSet As CallType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CallType vbSet = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbSet : Microsoft.VisualBasic.CallType" Usage="Microsoft.VisualBasic.Constants.vbSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CallType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-585"><see langword="CallByName" /> 関数を呼び出すときに、プロパティ値が設定されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-585">Indicates that a property value should be set when the <see langword="CallByName" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-586">呼び出すと、`CallByName`関数では、以下を使用する`CallType`実際の値の代わりに、コード内の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-586">When you call the `CallByName` function, you can use the following `CallType` enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-587">`UseCallType`引数は、`CallType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-587">The `UseCallType` argument takes the `CallType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-588">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-588">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-589">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-589">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-590">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-590">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbShortDate">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortDate = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortDate = (2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortDate As DateFormat  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortDate = 2;" />
      <MemberSignature Language="F#" Value="val mutable vbShortDate : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbShortDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-591"><see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの短い日付形式が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-591">Indicates that the short-date format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-592">呼び出すと、`FormatDateTime`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-592">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a67d6-593">ダブルクリックして、コンピューターの地域設定にアクセスすることができます、**地域のオプション**アイコン**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-593">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="a67d6-594">カスタム日付/時刻書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="a67d6-594">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-595">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-595">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-596">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-596">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbShortTime">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.DateFormat vbShortTime = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.DateFormat vbShortTime = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberSignature Language="VB.NET" Value="Public Const vbShortTime As DateFormat  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::DateFormat vbShortTime = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbShortTime : Microsoft.VisualBasic.DateFormat" Usage="Microsoft.VisualBasic.Constants.vbShortTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.DateFormat</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-597"><see langword="FormatDateTime" /> 関数を呼び出すときに、現在のカルチャの短い時刻形式が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-597">Indicates that the short-time format for the current culture should be used when the <see langword="FormatDateTime" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-598">呼び出すと、`FormatDateTime`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-598">When you call the `FormatDateTime` function, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a67d6-599">ダブルクリックして、コンピューターの地域設定にアクセスすることができます、**地域のオプション**アイコン**コントロール パネルの** します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-599">You can access your computer's regional settings by double-clicking the **Regional Options** icon, found in **Control Panel**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="a67d6-600">カスタム日付/時刻書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="a67d6-600">Custom DateTime Format Strings</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-601">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-601">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-602">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-602">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSimplifiedChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbSimplifiedChinese = (256)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSimplifiedChinese As VbStrConv  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbSimplifiedChinese = 256;" />
      <MemberSignature Language="F#" Value="val mutable vbSimplifiedChinese : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbSimplifiedChinese" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-603"><see langword="StrConv" /> 関数を呼び出すときに、文字が簡体字中国語に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-603">Indicates that characters should be converted to Simplified Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-604">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-604">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-605">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-605">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-606">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-606">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-607">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-607">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-608">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-608">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-609">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-609">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSingle">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbSingle = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbSingle = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSingle As VariantType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbSingle = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbSingle : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbSingle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-610">バリアント オブジェクトの型が <see langword="Single" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-610">Indicates that the type of a variant object is <see langword="Single" />.</span></span> <span data-ttu-id="a67d6-611"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-611">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-612">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-612">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-613">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-613">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-614">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-614">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-615">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-615">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-616">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-616">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-617">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-617">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbString">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbString = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbString = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbString" />
      <MemberSignature Language="VB.NET" Value="Public Const vbString As VariantType  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbString = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbString : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-618">バリアント オブジェクトの型が <see langword="String" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-618">Indicates that the type of a variant object is <see langword="String" />.</span></span> <span data-ttu-id="a67d6-619"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-619">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-620">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-620">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-621">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-621">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-622">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-622">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-623">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-623">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-624">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-624">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-625">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-625">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSunday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbSunday = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSunday As FirstDayOfWeek  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbSunday = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbSunday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbSunday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-626">日付関連の関数を呼び出すときに、日曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-626">Specifies that Sunday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-627">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-627">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-628">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-628">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-629">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-629">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-630">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-630">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-631">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-631">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-632">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-632">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-633">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-633">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-634">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-634">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbSystem = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbSystem = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystem As FileAttribute  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbSystem = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbSystem : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-635">ファイル アクセス関数において、ファイルがシステム ファイルであることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-635">Indicates that the file is a system file for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-636">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-636">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-637">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-637">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-638">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-638">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-639">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-639">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-640">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-640">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-641">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-641">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-642">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-642">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbSystemModal">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbSystemModal = (4096)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberSignature Language="VB.NET" Value="Public Const vbSystemModal As MsgBoxStyle  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbSystemModal = 4096;" />
      <MemberSignature Language="F#" Value="val mutable vbSystemModal : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbSystemModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-643"><see langword="MsgBox" /> 関数を呼び出すときに、メッセージ ボックスがモーダル ダイアログ ボックスとして表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-643">Indicates that the message box will be displayed as a modal dialog box when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-644">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-644">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-645">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-645">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-646">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-646">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-647">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-647">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-648">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-648">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTab">
      <MemberSignature Language="C#" Value="public const string vbTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbTab;" />
      <MemberSignature Language="F#" Value="val mutable vbTab : string" Usage="Microsoft.VisualBasic.Constants.vbTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-649">印刷機能および表示機能のためのタブ文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-649">Represents a tab character for print and display functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-650">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-650">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-651">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-651">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTextCompare">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.CompareMethod vbTextCompare = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTextCompare As CompareMethod  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::CompareMethod vbTextCompare = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbTextCompare : Microsoft.VisualBasic.CompareMethod" Usage="Microsoft.VisualBasic.Constants.vbTextCompare" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.CompareMethod</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-652">比較関数を呼び出すときに、テキスト比較が実行されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-652">Indicates that a text comparison should be performed when comparison functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-653">比較関数を呼び出すときに使用できます、<xref:Microsoft.VisualBasic.CompareMethod>実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-653">When you call comparison functions, you can use the <xref:Microsoft.VisualBasic.CompareMethod> enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-654">`Compare`引数は、`CompareMethod`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-654">The `Compare` argument takes the `CompareMethod` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-655">詳細については、バイナリとテキストの比較の詳細については、次を参照してください。 [Option Compare ステートメント](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-655">For more information about more information about binary and text comparisons, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-656">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-656">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-657">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-657">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-658">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-658">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbThursday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbThursday = (5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbThursday As FirstDayOfWeek  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbThursday = 5;" />
      <MemberSignature Language="F#" Value="val mutable vbThursday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbThursday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-659">日付関連の関数を呼び出すときに、木曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-659">Specifies that Thursday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-660">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-660">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-661">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-661">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-662">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-662">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-663">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-663">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-664">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-664">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-665">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-665">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-666">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-666">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-667">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-667">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTraditionalChinese">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbTraditionalChinese = (512)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTraditionalChinese As VbStrConv  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbTraditionalChinese = 512;" />
      <MemberSignature Language="F#" Value="val mutable vbTraditionalChinese : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbTraditionalChinese" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-668"><see langword="StrConv" /> 関数を呼び出すときに、文字が繁体字中国語に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-668">Indicates that characters should be converted to Traditional Chinese when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-669">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-669">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-670">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-670">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-671">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-671">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-672">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-672">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-673">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-673">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-674">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-674">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTrue">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbTrue = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbTrue = (-1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTrue As TriState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbTrue = -1;" />
      <MemberSignature Language="F#" Value="val mutable vbTrue : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbTrue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-675">数値書式指定関数を呼び出すときに <see langword="Boolean" /> 値 <see langword="True" /> が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-675">Indicates that a <see langword="Boolean" /> value of <see langword="True" /> should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-676">いつ関数の呼び出しの数の書式設定を使用できる実際の値の代わりに、コードでは、次の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-676">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-677">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-677">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-678">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-678">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbTuesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbTuesday = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbTuesday As FirstDayOfWeek  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbTuesday = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbTuesday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbTuesday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-679">日付関連の関数を呼び出すときに、火曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-679">Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-680">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-680">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-681">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-681">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-682">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-682">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-683">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-683">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-684">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-684">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-685">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-685">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-686">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-686">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-687">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-687">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUpperCase">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbUpperCase = (1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUpperCase As VbStrConv  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbUpperCase = 1;" />
      <MemberSignature Language="F#" Value="val mutable vbUpperCase : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbUpperCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-688"><see langword="StrConv" /> 関数を呼び出すときに、文字が大文字に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-688">Indicates that characters should be converted to uppercase when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-689">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-689">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-690">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-690">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-691">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-691">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-692">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-692">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-693">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-693">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-694">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-694">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUseDefault">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.TriState vbUseDefault = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.TriState vbUseDefault = (-2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseDefault As TriState  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::TriState vbUseDefault = -2;" />
      <MemberSignature Language="F#" Value="val mutable vbUseDefault : Microsoft.VisualBasic.TriState" Usage="Microsoft.VisualBasic.Constants.vbUseDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.TriState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-695">数値書式指定関数を呼び出すときに、既定の <see langword="Boolean" /> 値が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-695">Indicates that the default <see langword="Boolean" /> value should be used when number-formatting functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-696">いつ関数の呼び出しの数の書式設定を使用できる実際の値の代わりに、コードでは、次の列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-696">When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-697">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-697">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-698">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-698">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUserDefinedType">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbUserDefinedType = (36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUserDefinedType As VariantType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbUserDefinedType = 36;" />
      <MemberSignature Language="F#" Value="val mutable vbUserDefinedType : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbUserDefinedType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-699">バリアント オブジェクトの型がユーザー定義型であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-699">Indicates that the type of a variant object is a user-defined type.</span></span> <span data-ttu-id="a67d6-700"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-700">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-701">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-701">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-702">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-702">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-703">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-703">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-704">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-704">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-705">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-705">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-706">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-706">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUseSystem">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstWeekOfYear vbUseSystem = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystem As FirstWeekOfYear  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstWeekOfYear vbUseSystem = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbUseSystem : Microsoft.VisualBasic.FirstWeekOfYear" Usage="Microsoft.VisualBasic.Constants.vbUseSystem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstWeekOfYear</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-707">日付関連の関数を呼び出すときに、年の最初の週として、システムで指定されている週が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-707">Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-708">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-708">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-709">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-709">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-710">`FirstWeekOfYear`列挙体の有効な値を指定する、`WeekOfYear`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-710">The `FirstWeekOfYear` enumeration specifies the valid values for the `WeekOfYear` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-711">`WeekOfYear`引数は、`FirstWeekOfYear`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-711">The `WeekOfYear` argument takes the `FirstWeekOfYear` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-712">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-712">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-713">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-713">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-714">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-714">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbUseSystemDayOfWeek">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbUseSystemDayOfWeek = (0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Const vbUseSystemDayOfWeek As FirstDayOfWeek  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbUseSystemDayOfWeek = 0;" />
      <MemberSignature Language="F#" Value="val mutable vbUseSystemDayOfWeek : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-715">日付関連の関数を呼び出すときに、週の最初の曜日として、システムで指定されている曜日が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-715">Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-716">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-716">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-717">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-717">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-718">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-718">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-719">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-719">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-720">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-720">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-721">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-721">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-722">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-722">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-723">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-723">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbVariant">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VariantType vbVariant = 12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VariantType vbVariant = (12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVariant As VariantType  = 12" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VariantType vbVariant = 12;" />
      <MemberSignature Language="F#" Value="val mutable vbVariant : Microsoft.VisualBasic.VariantType" Usage="Microsoft.VisualBasic.Constants.vbVariant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-724">バリアント オブジェクトの型が <see langword="Variant" /> であることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-724">Indicates that the type of a variant object is <see langword="Variant" />.</span></span> <span data-ttu-id="a67d6-725"><see langword="VarType" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-725">Returned by the <see langword="VarType" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-726">呼び出すと、`VarType`関数の場合、実際の値の代わりに、コードで列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-726">When you call the `VarType` function, you can use enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-727">`VariantType`列挙可能な限りを識別するために使用する定数を定義します。`Variant`型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-727">The `VariantType` enumeration defines constants used to identify possible `Variant` types.</span></span> <span data-ttu-id="a67d6-728">次の表、`VariantType`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-728">The following table lists the `VariantType` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-729">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-729">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-730">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-730">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-731">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-731">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbVerticalTab">
      <MemberSignature Language="C#" Value="public const string vbVerticalTab;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string vbVerticalTab" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVerticalTab As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ vbVerticalTab;" />
      <MemberSignature Language="F#" Value="val mutable vbVerticalTab : string" Usage="Microsoft.VisualBasic.Constants.vbVerticalTab" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-732">印刷機能のための復帰文字を表します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-732">Represents a carriage-return character for print functions.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-733">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-733">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/29016fe8-78b3-4dc8-90b8-1cfec2fa8ac9"><span data-ttu-id="a67d6-734">定数の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-734">Constants Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbVolume">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FileAttribute vbVolume = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileAttribute vbVolume = (8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberSignature Language="VB.NET" Value="Public Const vbVolume As FileAttribute  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FileAttribute vbVolume = 8;" />
      <MemberSignature Language="F#" Value="val mutable vbVolume : Microsoft.VisualBasic.FileAttribute" Usage="Microsoft.VisualBasic.Constants.vbVolume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileAttribute</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-735">ファイル アクセス関数において、ボリューム ラベルのファイル属性を示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-735">Indicates the volume label file attribute for file-access functions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-736">この属性は無効です、`SetAttr`関数。</span><span class="sxs-lookup"><span data-stu-id="a67d6-736">This attribute is not valid for the `SetAttr` function.</span></span>  
  
 <span data-ttu-id="a67d6-737">呼び出すと、 `Dir`、 `GetAttr`、または`SetAttr`関数を使用できます、`FileAttribute`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-737">When you call the `Dir`, `GetAttr`, or `SetAttr` functions, you can use the `FileAttribute` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-738">`Attributes`引数は、`FileAttribute`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-738">The `Attributes` argument takes the `FileAttribute` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-739">ファイル I/O 操作を実行するときに、`My.Computer.FileSystem`オブジェクトが、メソッドの I/O パフォーマンスと従来のファイルよりも使いやすさの向上を提供します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-739">When performing file I/O operations, the `My.Computer.FileSystem` object provides greater performance and ease of use than legacy file I/O methods.</span></span> <span data-ttu-id="a67d6-740">詳細については、次を参照してください。<xref:Microsoft.VisualBasic.FileSystem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a67d6-740">For more information, see <xref:Microsoft.VisualBasic.FileSystem> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FileAttribute" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.Dir" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-741">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-741">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-742">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-742">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-743">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-743">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbWednesday">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FirstDayOfWeek vbWednesday = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWednesday As FirstDayOfWeek  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::FirstDayOfWeek vbWednesday = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbWednesday : Microsoft.VisualBasic.FirstDayOfWeek" Usage="Microsoft.VisualBasic.Constants.vbWednesday" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-744">日付関連の関数を呼び出すときに、水曜日を週の最初の曜日として使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-744">Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-745">日付関連の関数を呼び出すときに、実際の値の代わりに、コードで次の列挙型メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-745">When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-746">日付関連のいくつかの関数の実行、`DayOfWeek`引数、`WeekOfYear`引数、またはその両方です。</span><span class="sxs-lookup"><span data-stu-id="a67d6-746">Some date-related functions take a `DayOfWeek` argument, a `WeekOfYear` argument, or both.</span></span> <span data-ttu-id="a67d6-747">`FirstDayOfWeek`列挙体の有効な値を指定する、`DayOfWeek`引数と関数の戻り値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-747">The `FirstDayOfWeek` enumeration specifies the valid values for the `DayOfWeek` arguments, as well as the possible return values from the functions.</span></span>  
  
 <span data-ttu-id="a67d6-748">`DayOfWeek`引数は、`FirstDayOfWeek`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-748">The `DayOfWeek` argument takes the `FirstDayOfWeek` enumeration members.</span></span>  
  
 <span data-ttu-id="a67d6-749">日付関連の関数を返すことも`FirstDayOfWeek`値 (を除く`System`)。</span><span class="sxs-lookup"><span data-stu-id="a67d6-749">Date-related functions also return `FirstDayOfWeek` values (except `System`).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.FirstDayOfWeek" />
        <altmember cref="T:Microsoft.VisualBasic.FirstWeekOfYear" />
        <altmember cref="T:Microsoft.VisualBasic.DateFormat" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-750">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-750">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-751">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-751">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-752">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-752">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbWide">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.VbStrConv vbWide = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.VbStrConv vbWide = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbWide" />
      <MemberSignature Language="VB.NET" Value="Public Const vbWide As VbStrConv  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::VbStrConv vbWide = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbWide : Microsoft.VisualBasic.VbStrConv" Usage="Microsoft.VisualBasic.Constants.vbWide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VbStrConv</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-753"><see langword="StrConv" /> 関数を呼び出すときに、半角 (1 バイト) 文字が全角 (2 バイト) 文字に変換されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-753">Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <see langword="StrConv" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-754">呼び出すと、`StrConv`関数の場合、実際の値の代わりに、コードで、次の列挙体メンバーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-754">When you call the `StrConv` function, you can use the following enumeration members in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-755">`Conversion`引数は、`VbStrConv`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-755">The `Conversion` argument takes the `VbStrConv` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.VbStrConv" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-756">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-756">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-757">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-757">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-758">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-758">How to: Refer to an Enumeration Member</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="a67d6-759">Visual Basic の文字列の概要</span><span class="sxs-lookup"><span data-stu-id="a67d6-759">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbYes">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxResult vbYes = (6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYes" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYes As MsgBoxResult  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxResult vbYes = 6;" />
      <MemberSignature Language="F#" Value="val mutable vbYes : Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Constants.vbYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-760">メッセージ ボックスで [<see langword="Yes" />] ボタンがクリックされたことを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-760">Indicates that the <see langword="Yes" /> button was clicked in a message box.</span></span> <span data-ttu-id="a67d6-761"><see langword="MsgBox" /> 関数によって返されます。</span><span class="sxs-lookup"><span data-stu-id="a67d6-761">Returned by the <see langword="MsgBox" /> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-762">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxResult`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-762">When you call the `MsgBox` function, you can use the `MsgBoxResult` enumeration in your code in place of the actual values.</span></span>  
  
 <span data-ttu-id="a67d6-763">`MsgBox`関数が返される、`MsgBoxResult`列挙値。</span><span class="sxs-lookup"><span data-stu-id="a67d6-763">The `MsgBox` function returns a `MsgBoxResult` enumeration value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-764">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-764">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-765">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-765">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-766">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-766">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbYesNo">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNo = (4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNo As MsgBoxStyle  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNo = 4;" />
      <MemberSignature Language="F#" Value="val mutable vbYesNo : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbYesNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-767"><see langword="Yes" /> 関数を呼び出すときに、[<see langword="No" />] ボタンと [<see langword="MsgBox" />] ボタンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-767">Indicates that the <see langword="Yes" /> and <see langword="No" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-768">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-768">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-769">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-769">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-770">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-770">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-771">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-771">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-772">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-772">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="vbYesNoCancel">
      <MemberSignature Language="C#" Value="public const Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.MsgBoxStyle vbYesNoCancel = (3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberSignature Language="VB.NET" Value="Public Const vbYesNoCancel As MsgBoxStyle  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::VisualBasic::MsgBoxStyle vbYesNoCancel = 3;" />
      <MemberSignature Language="F#" Value="val mutable vbYesNoCancel : Microsoft.VisualBasic.MsgBoxStyle" Usage="Microsoft.VisualBasic.Constants.vbYesNoCancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxStyle</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a67d6-773"><see langword="Yes" /> 関数を呼び出すときに、[<see langword="No" />]、[<see langword="Cancel" />]、および [<see langword="MsgBox" />] の各ボタンが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a67d6-773">Indicates that the <see langword="Yes" />, <see langword="No" />, and <see langword="Cancel" /> buttons will be displayed when the <see langword="MsgBox" /> function is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67d6-774">呼び出すと、`MsgBox`関数を使用できます、`MsgBoxStyle`実際の値の代わりに、コード内の列挙型。</span><span class="sxs-lookup"><span data-stu-id="a67d6-774">When you call the `MsgBox` function, you can use the `MsgBoxStyle` enumeration in your code in place of the actual values.</span></span> <span data-ttu-id="a67d6-775">`Buttons`引数は、`MsgBoxStyle`列挙型メンバー。</span><span class="sxs-lookup"><span data-stu-id="a67d6-775">The `Buttons` argument takes the `MsgBoxStyle` enumeration members.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxResult" />
        <altmember cref="T:Microsoft.VisualBasic.MsgBoxStyle" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/constants-and-enumerations.md"><span data-ttu-id="a67d6-776">定数と列挙型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a67d6-776">Constants and Enumerations (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/when-to-use-an-enumeration.md"><span data-ttu-id="a67d6-777">列挙型を使用する状況</span><span class="sxs-lookup"><span data-stu-id="a67d6-777">When to Use an Enumeration</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/constants-enums/how-to-refer-to-an-enumeration-member.md"><span data-ttu-id="a67d6-778">方法 : 列挙型のメンバーを参照する</span><span class="sxs-lookup"><span data-stu-id="a67d6-778">How to: Refer to an Enumeration Member</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>