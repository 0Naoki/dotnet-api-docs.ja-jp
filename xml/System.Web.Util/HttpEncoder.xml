<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2474ea2afb6fd952074dbcdd29d6df7607fbbd04" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39750465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1ca0a-101">エンコーディングとデコーディングのロジックを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ca0a-101">Provides encoding and decoding logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-102">クラスには、エンコードとデコードなどのクラスのメソッドによって使用されるロジックが含まれています。 <xref:System.Web.HttpUtility>、 <xref:System.Web.HttpServerUtility>、および<xref:System.Net.HttpResponseHeader>します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="1ca0a-103">継承することができます、<xref:System.Web.Util.HttpEncoder>クラスし、既定のエンコードおよびデコードの ASP.NET の動作をカスタマイズするには、その動作をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="1ca0a-104">設定する、<xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>のプロパティ、<xref:System.Web.Configuration.HttpRuntimeSection>カスタム クラスを構成するクラス。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="1ca0a-105">エンコードおよびデコードするためのカスタム クラスの派生元<xref:System.Web.Util.HttpEncoder>組み込みの ASP.NET のエンコードとデコードの動作をオーバーライドまたは変更のみの部分を選択します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="1ca0a-106">置換または補完、次のエンコードの動作に ASP.NET でのカスタム エンコードの種類を構成できます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="1ca0a-107">HTML エンコード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="1ca0a-108">HTML 属性エンコード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="1ca0a-109">URL エンコード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-109">URL encoding</span></span>  
  
-   <span data-ttu-id="1ca0a-110">URL パスのエンコード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="1ca0a-111">HTTP ヘッダー名とヘッダー値のエンコード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="1ca0a-112">既定では、ASP.NET アプリケーションを使用するよう構成します。、<xref:System.Web.Security.AntiXss.AntiXssEncoder>すべてエンコードの出力を入力します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="1ca0a-113">次の例、アプリケーション レベルの Web.config ファイルの表示から方法、 <xref:System.Web.Security.AntiXss.AntiXssEncoder> ASP.NET アプリケーションの種類を設定。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="1ca0a-114">例のセットで構成設定、<xref:System.Web.Security.AntiXss.AntiXssEncoder>をすべて実行するクラスは、アプリケーションでのエンコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="1ca0a-115">詳細については、次を参照してください。、<xref:System.Web.Security.AntiXss.AntiXssEncoder>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="1ca0a-116">
        <para>カスタム エンコーダーのクラスを作成して、基底クラスの基本メソッドをオーバーライドする派生エンコーダーは、オーバーライドされたメソッドのいずれかから例外をスローします。ただし、次の場合にこのような例外をスローする可能性が ASP.NET で予期しない動作:-ASP.NET が、そのエラー o のエンコードを試行しません ASP.NET がカスタム エンコーダーからスローされた未処理の例外によって発生したエラー ページをレンダリングしている場合カスタム エンコーダーを呼び出すことによって出力です。再帰的なエラー状況を回避できます。 -ASP.NET が IIS に HTTP ヘッダーを送信する場合は、ASP.NET に未処理の例外は用意されていません。そのため、(構成の設定は、表示するには、このページを使用) 場合は、標準の ASP.NET エラー ページがレンダリングされます。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1ca0a-116">
          <para>When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods. However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:  -   If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder. This avoids recursive error conditions.  -   When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions. Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ca0a-117">
            <see cref="T:System.Web.Util.HttpEncoder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-117">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ca0a-118">アプリケーションで使用する <see cref="T:System.Web.Util.HttpEncoder" /> の種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-118">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ca0a-119">使用するエンコーダー/デコーダーの種類への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-119">A reference to the encoder/decoder type that will be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-120">場合、派生<xref:System.Web.Util.HttpEncoder>型が、構成ファイルで指定された、<xref:System.Web.Util.HttpEncoder.Current%2A>プロパティは、カスタム型への参照を返します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-120">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="1ca0a-121">ただし、カスタム エンコーダーを使用しない場合、プロパティを返します、既定の ASP.NET への参照を<xref:System.Web.Util.HttpEncoder>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-121">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="1ca0a-122"><xref:System.Web.Util.HttpEncoder.Current%2A>プロパティはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-122">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="1ca0a-123">アプリケーションのでのみこのプロパティを設定`Application_Start`メソッド、ため`Application_Start`は 1 つのスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-123">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ca0a-124">このプロパティに割り当てられているエンコーダー インスタンスは <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-124">The encoder instance that is being assigned to this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ca0a-125">ASP.NET の既定のエンコーダーへの参照を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-125">Gets a reference to the default encoder for ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ca0a-126">既定のエンコーダーへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-126">A reference to the default encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-127">エンコードの一般的な問題は、既定の ASP.NET<xref:System.Web.Util.HttpEncoder.UrlEncode%2A>動作の「+」文字をスペースに変換します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-127">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="1ca0a-128">従来は、「+」文字は、インターネットの規約より人間が判読できるように、URL 内のスペース文字をエンコードするためにされました。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-128">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="1ca0a-129">ただし、標準に従って、空白文字になっての代わりに"%20"としてエンコードされる「+」文字として。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-129">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="1ca0a-130">ASP.NET では、複数の標準準拠エンコード アルゴリズムを実装できます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-130">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string *  *  -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string *  *  -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">
          <span data-ttu-id="1ca0a-131">エンコードする HTTP ヘッダーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-131">The HTTP header name to encode.</span>
          </span>
        </param>
        <param name="headerValue">
          <span data-ttu-id="1ca0a-132">エンコードする HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-132">The HTTP header value to encode.</span>
          </span>
        </param>
        <param name="encodedHeaderName">
          <span data-ttu-id="1ca0a-133">このメソッドから制御が戻るときに、HTTP ヘッダーとして使用する、エンコードされた名前が格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-133">When this method returns, contains the encoded name to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="1ca0a-134">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-134">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="encodedHeaderValue">
          <span data-ttu-id="1ca0a-135">このメソッドから制御が戻るときに、HTTP ヘッダーとして使用する、エンコードされた値が格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-135">When this method returns, contains the encoded value to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="1ca0a-136">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-136">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-137">ヘッダーの名前と値を、HTTP ヘッダーとして使用できる文字列にエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-137">Encodes a header name and value into a string that can be used as an HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-138"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>メソッドは入力文字列から、`headerName`と`headerValue`パラメーターにエンコードするとします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-138">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="1ca0a-139">エンコードされた値は、出力パラメーターとして返されます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-139">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="1ca0a-140"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>メソッドでは、次のロジックを使用して、ヘッダーの名前と値のエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-140">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="1ca0a-141">すべての文字を Unicode 値では、9 の ASCII 文字を除く ASCII 文字、32 より小さいはの形式に URL エンコード`%NN`場所、`N`文字は 16 進数の値を表します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-141">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="1ca0a-142">ASCII 文字 (水平タブ文字) の 9 は、URL エンコードされません。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-142">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="1ca0a-143">として 127 の ASCII 文字がエンコードされた`%7F`します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-143">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="1ca0a-144">その他のすべての文字はエンコードされません。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-144">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1ca0a-145">このメソッドは、Unicode 値を使用できますが、ASCII の範囲で値を通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-145">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="1ca0a-146">既定の実装、<xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>メソッドの値を返します`headerValue`で`encodedHeaderValue`場合`headerValue`は`null`または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-146">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="1ca0a-147">同様に、既定の実装がの値を返します`headerName`で`encodedHeaderName`場合`headerName`は`null`または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-147">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ca0a-148">エンコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-148">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="1ca0a-149">エンコードされた値を書き込むテキスト ライター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-149">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-150">受信した値を、一重または二重引用符を使用して区切られた HTML 属性に挿入できる文字列にエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-150">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-151"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>メソッドは、標準の HTML エンティティを使用して文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-151">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="1ca0a-152">たとえば、`<`としてエンコードされます (左山かっこ)`&lt;`と`\`としてエンコードされます (円記号)`&#92;`します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-152">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="1ca0a-153">使用するには、安全では<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>単一引用符し、二重引用符で囲まれた属性内で。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-153">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="1ca0a-154">値は引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-154">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ca0a-155">
            <paramref name="output" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-155">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ca0a-156">デコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-156">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="1ca0a-157">デコードされた値を書き込むテキスト ライター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-157">The text writer to write the decoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-158">HTML エンコードされた文字列の値をデコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-158">Decodes a value from an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-159">次の表では、ASP.NET のデコード ロジックをデコードできる文字のシーケンスを示します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-159">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="1ca0a-160">文字シーケンス</span><span class="sxs-lookup"><span data-stu-id="1ca0a-160">Character sequence</span></span>|<span data-ttu-id="1ca0a-161">ルール</span><span class="sxs-lookup"><span data-stu-id="1ca0a-161">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="1ca0a-162">`&#NNN;` (ASCII 文字の 10 進数コード)。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-162">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="1ca0a-163">指定された ASCII 文字とデコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-163">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="1ca0a-164">文字シーケンスは、# 記号の後の最初の数字で開始し、セミコロンで終了します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-164">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="1ca0a-165">`&#xZZ;` (ASCII 文字の 16 進数コード)。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-165">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="1ca0a-166">指定された ASCII 文字とデコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-166">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="1ca0a-167">エンコードされた形式では、10 進値ではなく、16 進数の文字を使用して文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-167">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="1ca0a-168">文字シーケンスは、# 記号の後の最初の数字で開始し、セミコロンで終了します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-168">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="1ca0a-169">名前付き HTML エンティティ。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-169">Named HTML entities.</span></span>|<span data-ttu-id="1ca0a-170">同等の ASCII 文字とデコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-170">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ca0a-171">
            <paramref name="output" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-171">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ca0a-172">エンコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-172">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="1ca0a-173">エンコードされた値を書き込むテキスト ライター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-173">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-174">文字列を HTML エンコードされた文字列にエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-174">Encodes a string into an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-175">次の表では、ASP.NET のエンコーディング ロジックをデコードできる文字のシーケンスを示します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-175">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="1ca0a-176">文字</span><span class="sxs-lookup"><span data-stu-id="1ca0a-176">Character</span></span>|<span data-ttu-id="1ca0a-177">としてエンコード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-177">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="1ca0a-178">`<` (左山かっこ)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-178">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="1ca0a-179">`>` (右の山かっこ)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-179">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="1ca0a-180">`"` (二重引用符)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-180">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="1ca0a-181">`&` (アンパサンド)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-181">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="1ca0a-182">`\` (円記号)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-182">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="1ca0a-183">160 から 255 までの ASCII 文字</span><span class="sxs-lookup"><span data-stu-id="1ca0a-183">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="1ca0a-184">`&#NNN;`、、 `NNN` 3 桁の 10 進文字コード</span><span class="sxs-lookup"><span data-stu-id="1ca0a-184">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="1ca0a-185">オーバーライドする場合、<xref:System.Web.Util.HttpEncoder.HtmlEncode%2A>メソッド、二重引用符または単一引用符で囲まれた HTML 属性内では安全であるも出力を生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-185">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="1ca0a-186">これは、マークアップとコード組み合わせることができますなどの Razor エンジンで解析\<タグ attr ="@value">。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-186">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="1ca0a-187">さらに、@ 演算子はコンテキストを認識しない Razor エンジンによって処理される、そのため呼び出し<xref:System.Web.Util.HttpEncoder.HtmlEncode%2A>なく<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-187">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ca0a-188">
            <paramref name="output" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-188">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ca0a-189">エンコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-189">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-190">文字列をエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-190">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ca0a-191">エンコードされた文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-191">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-192">URL エンコードは、すべてのブラウザーが URL 文字列のテキストを正しく送信されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-192">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="1ca0a-193">疑問符 (?)、アンパサンド (&)、スラッシュ (/)、およびスペースなどの文字は切り捨てや一部のブラウザーで破損している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-193">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="1ca0a-194">そのため、これらの文字をエンコードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-194">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="1ca0a-195">エンコードするバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-195">An array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1ca0a-196">エンコードを開始する <c>bytes</c> 配列内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-196">The position in the <c>bytes</c> array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1ca0a-197">エンコードする <c>bytes</c> 配列内の項目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-197">The number of items in the <c>bytes</c> array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-198">URL では使用できない文字の配列を、16 進文字エンティティにエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-198">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ca0a-199">エンコードされた文字の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-199">An array of encoded characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-200"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>メソッドでは、いくつかの URL エンコード メソッドによって呼び出されます、<xref:System.Web.HttpUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-200">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="1ca0a-201"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>メソッドは、URL エンコードではありません。 一連の ASCII 文字の任意の文字は URL の安全なと見なされます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-201">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="1ca0a-202">空白文字は、ASCII としてエンコード"`+"`文字。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-202">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="1ca0a-203">URL の安全な ASCII 文字が、ASCI 文字を含める (A ~ Z と z)、数字 (0 ~ 9)、および一部の区切り記号。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-203">URL-safe ASCII characters include the ASCI characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="1ca0a-204">次の表は、URL の安全な ASCII 文字と見なされる区切り記号を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-204">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="1ca0a-205">文字</span><span class="sxs-lookup"><span data-stu-id="1ca0a-205">Character</span></span>|<span data-ttu-id="1ca0a-206">説明</span><span class="sxs-lookup"><span data-stu-id="1ca0a-206">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="1ca0a-207">ハイフン</span><span class="sxs-lookup"><span data-stu-id="1ca0a-207">Hyphen</span></span>|  
|<span data-ttu-id="1ca0a-208">_</span><span class="sxs-lookup"><span data-stu-id="1ca0a-208">_</span></span>|<span data-ttu-id="1ca0a-209">アンダー スコア</span><span class="sxs-lookup"><span data-stu-id="1ca0a-209">Underscore</span></span>|  
|<span data-ttu-id="1ca0a-210">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-210">.</span></span>|<span data-ttu-id="1ca0a-211">ピリオド (ドット)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-211">Period (dot)</span></span>|  
|<span data-ttu-id="1ca0a-212">!</span><span class="sxs-lookup"><span data-stu-id="1ca0a-212">!</span></span>|<span data-ttu-id="1ca0a-213">感嘆符</span><span class="sxs-lookup"><span data-stu-id="1ca0a-213">Exclamation mark</span></span>|  
|*|<span data-ttu-id="1ca0a-214">アスタリスク (star)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-214">Asterisk (star)</span></span>|  
|<span data-ttu-id="1ca0a-215">(</span><span class="sxs-lookup"><span data-stu-id="1ca0a-215">(</span></span>|<span data-ttu-id="1ca0a-216">開きかっこを入力</span><span class="sxs-lookup"><span data-stu-id="1ca0a-216">Opening parenthesis</span></span>|  
|<span data-ttu-id="1ca0a-217">)</span><span class="sxs-lookup"><span data-stu-id="1ca0a-217">)</span></span>|<span data-ttu-id="1ca0a-218">終わりかっこ</span><span class="sxs-lookup"><span data-stu-id="1ca0a-218">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ca0a-219">
            <paramref name="offset" /> が、0 未満か、<paramref name="bytes" /> 配列の長さを超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-219">
              <paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="1ca0a-220">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-220">-or-</span>
          </span>
          <span data-ttu-id="1ca0a-221">
            <paramref name="count" /> がゼロより小さいか、<paramref name="count" /> + <paramref name="offset" /> が <paramref name="bytes" /> 配列の長さより大きくなっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-221">
              <paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ca0a-222">
            <paramref name="bytes" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-222">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ca0a-223">エンコードする文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-223">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ca0a-224">URL のサブセクションをエンコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-224">Encodes a subsection of a URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ca0a-225">URL エンコードされた文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ca0a-225">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ca0a-226"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> メソッドは、<xref:System.Web.HttpUtility.UrlPathEncode%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-226">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="1ca0a-227"><xref:System.Web.HttpUtility.UrlPathEncode%2A>メソッドは、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-227">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="1ca0a-228">エンコーディング ロジックが適用されます、<xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A>メソッド (これは、クエリ文字列を除く) の URL のパス部分だけをします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-228">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="1ca0a-229">メソッドは、URL を utf-8 文字列としてエンコードされていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-229">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="1ca0a-230">最初の 128 個の ASCII 文字のサブセットのみが結果として得られる、エンコードされた文字列で使用されるように、非空白文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-230">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="1ca0a-231">Unicode 値 128 と大きい、または 32 と less、任意の文字では、URL エンコードされます。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-231">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="1ca0a-232">空白を %20 としてエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1ca0a-232">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>