<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="91392-101">エンコーディングとデコーディングのロジックを提供します。</span><span class="sxs-lookup"><span data-stu-id="91392-101">Provides encoding and decoding logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-102">クラスには、エンコードとデコードなどのクラスのメソッドで使用されるロジックが含まれています。 <xref:System.Web.HttpUtility>、 <xref:System.Web.HttpServerUtility>、および<xref:System.Net.HttpResponseHeader>です。</span><span class="sxs-lookup"><span data-stu-id="91392-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="91392-103">継承することができます、<xref:System.Web.Util.HttpEncoder>クラスし、既定のエンコードとデコード ASP.NET の動作をカスタマイズするには、次のように動作をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="91392-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="91392-104">設定して、<xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>のプロパティ、<xref:System.Web.Configuration.HttpRuntimeSection>カスタム クラスを構成するクラス。</span><span class="sxs-lookup"><span data-stu-id="91392-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="91392-105">エンコードおよびデコードするためのカスタム クラスから派生<xref:System.Web.Util.HttpEncoder>組み込みの ASP.NET のエンコードとデコードの動作をオーバーライドできますか、選択されたスクリプトのみを変更します。</span><span class="sxs-lookup"><span data-stu-id="91392-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="91392-106">次のエンコードの動作を補足するものを置き換えたりするための ASP.NET でのカスタム エンコードの種類を構成できます。</span><span class="sxs-lookup"><span data-stu-id="91392-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="91392-107">HTML エンコード</span><span class="sxs-lookup"><span data-stu-id="91392-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="91392-108">HTML 属性エンコード</span><span class="sxs-lookup"><span data-stu-id="91392-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="91392-109">URL エンコード</span><span class="sxs-lookup"><span data-stu-id="91392-109">URL encoding</span></span>  
  
-   <span data-ttu-id="91392-110">URL パスのエンコード</span><span class="sxs-lookup"><span data-stu-id="91392-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="91392-111">HTTP ヘッダー名とヘッダーの値のエンコード</span><span class="sxs-lookup"><span data-stu-id="91392-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="91392-112">既定では、ASP.NET アプリケーションを使用するよう構成します。、<xref:System.Web.Security.AntiXss.AntiXssEncoder>すべての出力エンコードを入力します。</span><span class="sxs-lookup"><span data-stu-id="91392-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="91392-113">次の例、アプリケーション レベルの Web.config ファイルの表示から方法、 <xref:System.Web.Security.AntiXss.AntiXssEncoder> ASP.NET アプリケーションの型は設定。</span><span class="sxs-lookup"><span data-stu-id="91392-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="91392-114">例のセットで構成設定、<xref:System.Web.Security.AntiXss.AntiXssEncoder>すべてを実行するクラスは、アプリケーションでのエンコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="91392-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="91392-115">詳細については、次を参照してください。、<xref:System.Web.Security.AntiXss.AntiXssEncoder>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="91392-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="91392-116">カスタム エンコーダーのクラスを作成して、基底クラスの基本メソッドをオーバーライドする派生エンコーダーは、オーバーライドされたメソッドのいずれかから例外をスロー可能性があります。</span><span class="sxs-lookup"><span data-stu-id="91392-116">When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods.</span></span> <span data-ttu-id="91392-117">ただし、次の場合、このような例外をスローする可能性 ASP.NET で予期しない動作。</span><span class="sxs-lookup"><span data-stu-id="91392-117">However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:</span></span>  
  
-   <span data-ttu-id="91392-118">ASP.NET では、カスタム エンコーダーからスローされた未処理の例外によって発生したエラー ページのレンダリングする場合 ASP.NET は、カスタム エンコーダーを呼び出すことで、エラー出力のエンコードには試行されません。</span><span class="sxs-lookup"><span data-stu-id="91392-118">If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder.</span></span> <span data-ttu-id="91392-119">再帰的なエラー状況を回避できます。</span><span class="sxs-lookup"><span data-stu-id="91392-119">This avoids recursive error conditions.</span></span>  
  
-   <span data-ttu-id="91392-120">ASP.NET が IIS に HTTP ヘッダーを送信するときは、ASP.NET に未処理の例外、用意されていません。</span><span class="sxs-lookup"><span data-stu-id="91392-120">When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions.</span></span> <span data-ttu-id="91392-121">そのため、(構成の設定により、このページを表示する) 場合に、標準の ASP.NET エラー ページが表示されます。</span><span class="sxs-lookup"><span data-stu-id="91392-121">Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</span></span></para>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91392-122"><see cref="T:System.Web.Util.HttpEncoder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="91392-122">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91392-123">アプリケーションで使用する <see cref="T:System.Web.Util.HttpEncoder" /> の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="91392-123">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span></span></summary>
        <value><span data-ttu-id="91392-124">使用するエンコーダー/デコーダーの種類への参照。</span><span class="sxs-lookup"><span data-stu-id="91392-124">A reference to the encoder/decoder type that will be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-125">場合、派生<xref:System.Web.Util.HttpEncoder>型が、構成ファイルで指定された、<xref:System.Web.Util.HttpEncoder.Current%2A>プロパティは、カスタム型への参照を返します。</span><span class="sxs-lookup"><span data-stu-id="91392-125">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="91392-126">ただし、カスタム エンコーダーを使用しない場合、プロパティの参照を返します、既定の ASP.NET に<xref:System.Web.Util.HttpEncoder>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="91392-126">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="91392-127"><xref:System.Web.Util.HttpEncoder.Current%2A>プロパティはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="91392-127">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="91392-128">アプリケーションのでのみこのプロパティを設定`Application_Start`メソッド、ため`Application_Start`1 つのスレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="91392-128">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91392-129">このプロパティに割り当てられているエンコーダー インスタンスは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="91392-129">The encoder instance that is being assigned to this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91392-130">ASP.NET の既定のエンコーダーへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="91392-130">Gets a reference to the default encoder for ASP.NET.</span></span></summary>
        <value><span data-ttu-id="91392-131">既定のエンコーダーへの参照。</span><span class="sxs-lookup"><span data-stu-id="91392-131">A reference to the default encoder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-132">エンコードの一般的な問題は、既定の ASP.NET<xref:System.Web.Util.HttpEncoder.UrlEncode%2A>動作を「+」文字のスペースに変換します。</span><span class="sxs-lookup"><span data-stu-id="91392-132">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="91392-133">従来は、「+」文字は、インターネットの規則より人間が判読できるように URL 内の空白文字をエンコードするためにされました。</span><span class="sxs-lookup"><span data-stu-id="91392-133">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="91392-134">ただし、標準、に従って、空白文字を想定の代わりに"%20"としてエンコードされる「+」文字として。</span><span class="sxs-lookup"><span data-stu-id="91392-134">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="91392-135">ASP.NET では、複数の標準準拠エンコード アルゴリズムを実装することができます。</span><span class="sxs-lookup"><span data-stu-id="91392-135">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName"><span data-ttu-id="91392-136">エンコードする HTTP ヘッダーの名前。</span><span class="sxs-lookup"><span data-stu-id="91392-136">The HTTP header name to encode.</span></span></param>
        <param name="headerValue"><span data-ttu-id="91392-137">エンコードする HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="91392-137">The HTTP header value to encode.</span></span></param>
        <param name="encodedHeaderName"><span data-ttu-id="91392-138">このメソッドから制御が戻るときに、HTTP ヘッダーとして使用する、エンコードされた名前が格納されます。</span><span class="sxs-lookup"><span data-stu-id="91392-138">When this method returns, contains the encoded name to use for an HTTP header.</span></span> <span data-ttu-id="91392-139">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="91392-139">This parameter is passed uninitialized.</span></span></param>
        <param name="encodedHeaderValue"><span data-ttu-id="91392-140">このメソッドから制御が戻るときに、HTTP ヘッダーとして使用する、エンコードされた値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="91392-140">When this method returns, contains the encoded value to use for an HTTP header.</span></span> <span data-ttu-id="91392-141">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="91392-141">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="91392-142">ヘッダーの名前と値を、HTTP ヘッダーとして使用できる文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-142">Encodes a header name and value into a string that can be used as an HTTP header.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-143"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>メソッドからの入力文字列には、`headerName`と`headerValue`パラメーターし、それらをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-143">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="91392-144">エンコードされた値は、出力パラメーターとして返されます。</span><span class="sxs-lookup"><span data-stu-id="91392-144">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="91392-145"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>メソッドでは、次のロジックを使用して、ヘッダーの名前と値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-145">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="91392-146">すべての文字を Unicode 値では、ASCII 文字、9 を除く ASCII 文字、32 より小さいはの形式に URL エンコード`%NN`場所、`N`文字は 16 進値を表します。</span><span class="sxs-lookup"><span data-stu-id="91392-146">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="91392-147">ASCII 文字 9 (水平タブ文字) は、URL エンコードされません。</span><span class="sxs-lookup"><span data-stu-id="91392-147">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="91392-148">ASCII 文字 127 としてエンコード`%7F`です。</span><span class="sxs-lookup"><span data-stu-id="91392-148">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="91392-149">その他のすべての文字がエンコードされていません。</span><span class="sxs-lookup"><span data-stu-id="91392-149">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="91392-150">このメソッドは、Unicode 値を使用できますが、ASCII の範囲で値を通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="91392-150">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="91392-151">既定の実装、<xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>メソッドの値を返します`headerValue`で`encodedHeaderValue`場合`headerValue`は`null`または空の文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-151">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="91392-152">同様に、既定の実装がの値を返します`headerName`で`encodedHeaderName`場合`headerName`は`null`または空の文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-152">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91392-153">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-153">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="91392-154">エンコードされた値を書き込むテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="91392-154">The text writer to write the encoded value to.</span></span></param>
        <summary><span data-ttu-id="91392-155">受信した値を、一重または二重引用符を使用して区切られた HTML 属性に挿入できる文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-155">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-156"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>メソッドは、標準の HTML エンティティを使用して文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-156">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="91392-157">たとえば、 `<` (左山かっこ) としてエンコードされて`&lt;`と`\`(円記号) としてエンコード`&#92;`です。</span><span class="sxs-lookup"><span data-stu-id="91392-157">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="91392-158">使用しても安全である<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>単一引用符し、二重引用符で囲まれた属性内で。</span><span class="sxs-lookup"><span data-stu-id="91392-158">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="91392-159">値は引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="91392-159">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91392-160"><paramref name="output" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="91392-160"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91392-161">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-161">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="91392-162">デコードされた値を書き込むテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="91392-162">The text writer to write the decoded value to.</span></span></param>
        <summary><span data-ttu-id="91392-163">HTML エンコードされた文字列の値をデコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-163">Decodes a value from an HTML-encoded string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-164">次の表は、ASP.NET のデコード ロジックをデコードできる文字シーケンスを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="91392-164">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="91392-165">文字シーケンス</span><span class="sxs-lookup"><span data-stu-id="91392-165">Character sequence</span></span>|<span data-ttu-id="91392-166">ルール</span><span class="sxs-lookup"><span data-stu-id="91392-166">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="91392-167">`&#NNN;` (ASCII 文字の 10 進数コード) です。</span><span class="sxs-lookup"><span data-stu-id="91392-167">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="91392-168">指定された ASCII 文字とデコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-168">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="91392-169">文字シーケンスは、# 文字の後に最初の桁から開始され、セミコロンで終了します。</span><span class="sxs-lookup"><span data-stu-id="91392-169">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="91392-170">`&#xZZ;` (ASCII 文字の 16 進数コード) です。</span><span class="sxs-lookup"><span data-stu-id="91392-170">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="91392-171">指定された ASCII 文字とデコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-171">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="91392-172">エンコードされた形式では、10 進値ではなく 16 進文字を使用して、文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="91392-172">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="91392-173">文字シーケンスは、# 文字の後に最初の桁から開始され、セミコロンで終了します。</span><span class="sxs-lookup"><span data-stu-id="91392-173">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="91392-174">HTML の名前付きエンティティです。</span><span class="sxs-lookup"><span data-stu-id="91392-174">Named HTML entities.</span></span>|<span data-ttu-id="91392-175">等価の ASCII 文字とデコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-175">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91392-176"><paramref name="output" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="91392-176"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91392-177">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-177">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="91392-178">エンコードされた値を書き込むテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="91392-178">The text writer to write the encoded value to.</span></span></param>
        <summary><span data-ttu-id="91392-179">文字列を HTML エンコードされた文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-179">Encodes a string into an HTML-encoded string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-180">次の表は、ASP.NET エンコード ロジックをデコードできる文字シーケンスを示します。</span><span class="sxs-lookup"><span data-stu-id="91392-180">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="91392-181">文字</span><span class="sxs-lookup"><span data-stu-id="91392-181">Character</span></span>|<span data-ttu-id="91392-182">としてエンコード</span><span class="sxs-lookup"><span data-stu-id="91392-182">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="91392-183">`<` (左山かっこ)</span><span class="sxs-lookup"><span data-stu-id="91392-183">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="91392-184">`>` (右の山かっこ)</span><span class="sxs-lookup"><span data-stu-id="91392-184">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="91392-185">`"` (二重引用符)</span><span class="sxs-lookup"><span data-stu-id="91392-185">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="91392-186">`&` (アンパサンド)</span><span class="sxs-lookup"><span data-stu-id="91392-186">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="91392-187">`\` (円記号)</span><span class="sxs-lookup"><span data-stu-id="91392-187">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="91392-188">160 から 255 までの ASCII 文字</span><span class="sxs-lookup"><span data-stu-id="91392-188">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="91392-189">`&#NNN;`、、 `NNN` 3 桁の 10 進文字コードです</span><span class="sxs-lookup"><span data-stu-id="91392-189">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="91392-190">オーバーライドする場合、<xref:System.Web.Util.HttpEncoder.HtmlEncode%2A>メソッド、二重引用符または単一引用符で囲まれた HTML 属性内では安全になっている出力を生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="91392-190">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="91392-191">これに対応、マークアップとコードを組み合わせてなど、Razor エンジンで解析\<attr をタグ ="@value"> です。</span><span class="sxs-lookup"><span data-stu-id="91392-191">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="91392-192">さらに、@ 演算子はコンテキストに対応する、Razor エンジンによって処理される、したがって呼び出し<xref:System.Web.Util.HttpEncoder.HtmlEncode%2A>なく<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>です。</span><span class="sxs-lookup"><span data-stu-id="91392-192">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91392-193"><paramref name="output" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="91392-193"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91392-194">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-194">The string to encode.</span></span></param>
        <summary><span data-ttu-id="91392-195">文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-195">Encodes a string.</span></span></summary>
        <returns><span data-ttu-id="91392-196">エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-196">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-197">URL エンコードは、すべてのブラウザーが URL 文字列のテキストを正しく送信されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="91392-197">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="91392-198">疑問符 (?)、アンパサンド (&)、スラッシュ (/)、およびスペースなどの文字は切り捨てやブラウザーによっては、破損している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="91392-198">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="91392-199">したがって、これらの文字をエンコードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="91392-199">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="91392-200">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="91392-200">An array of bytes to encode.</span></span></param>
        <param name="offset"><span data-ttu-id="91392-201">エンコードを開始する <c>bytes</c> 配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="91392-201">The position in the <c>bytes</c> array at which to begin encoding.</span></span></param>
        <param name="count"><span data-ttu-id="91392-202">エンコードする <c>bytes</c> 配列内の項目の数。</span><span class="sxs-lookup"><span data-stu-id="91392-202">The number of items in the <c>bytes</c> array to encode.</span></span></param>
        <summary><span data-ttu-id="91392-203">URL では使用できない文字の配列を、16 進文字エンティティにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-203">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span></span></summary>
        <returns><span data-ttu-id="91392-204">エンコードされた文字の配列。</span><span class="sxs-lookup"><span data-stu-id="91392-204">An array of encoded characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-205"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>メソッドでは、いくつかの URL エンコード メソッドによって呼び出されます、<xref:System.Web.HttpUtility>クラスです。</span><span class="sxs-lookup"><span data-stu-id="91392-205">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="91392-206"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>メソッドを URL エンコードではありません。 一連の ASCII 文字の任意の文字を URL セーフであると見なされます。</span><span class="sxs-lookup"><span data-stu-id="91392-206">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="91392-207">スペースは、ASCII としてエンコード"`+"`文字です。</span><span class="sxs-lookup"><span data-stu-id="91392-207">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="91392-208">URL セーフな ASCII 文字が、ASCI 文字を含める (A ~ Z と z)、数字 (0 ~ 9)、および一部の区切り記号。</span><span class="sxs-lookup"><span data-stu-id="91392-208">URL-safe ASCII characters include the ASCI characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="91392-209">次の表には、URL セーフな ASCII 文字と見なされる区切り記号が一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="91392-209">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="91392-210">文字</span><span class="sxs-lookup"><span data-stu-id="91392-210">Character</span></span>|<span data-ttu-id="91392-211">説明</span><span class="sxs-lookup"><span data-stu-id="91392-211">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="91392-212">ハイフン</span><span class="sxs-lookup"><span data-stu-id="91392-212">Hyphen</span></span>|  
|<span data-ttu-id="91392-213">_</span><span class="sxs-lookup"><span data-stu-id="91392-213">_</span></span>|<span data-ttu-id="91392-214">アンダー スコア</span><span class="sxs-lookup"><span data-stu-id="91392-214">Underscore</span></span>|  
|<span data-ttu-id="91392-215">である必要があります。</span><span class="sxs-lookup"><span data-stu-id="91392-215">.</span></span>|<span data-ttu-id="91392-216">ピリオド (ドット)</span><span class="sxs-lookup"><span data-stu-id="91392-216">Period (dot)</span></span>|  
|<span data-ttu-id="91392-217">!</span><span class="sxs-lookup"><span data-stu-id="91392-217">!</span></span>|<span data-ttu-id="91392-218">感嘆符</span><span class="sxs-lookup"><span data-stu-id="91392-218">Exclamation mark</span></span>|  
|*|<span data-ttu-id="91392-219">アスタリスク (アスタリスク)</span><span class="sxs-lookup"><span data-stu-id="91392-219">Asterisk (star)</span></span>|  
|<span data-ttu-id="91392-220">(</span><span class="sxs-lookup"><span data-stu-id="91392-220">(</span></span>|<span data-ttu-id="91392-221">開きかっこを入力</span><span class="sxs-lookup"><span data-stu-id="91392-221">Opening parenthesis</span></span>|  
|<span data-ttu-id="91392-222">)</span><span class="sxs-lookup"><span data-stu-id="91392-222">)</span></span>|<span data-ttu-id="91392-223">終わりかっこ</span><span class="sxs-lookup"><span data-stu-id="91392-223">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91392-224"><paramref name="offset" /> が、0 未満か、<paramref name="bytes" /> 配列の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="91392-224"><paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span></span>  
  
 <span data-ttu-id="91392-225">- または -</span><span class="sxs-lookup"><span data-stu-id="91392-225">-or-</span></span>  
  
 <span data-ttu-id="91392-226"><paramref name="count" /> がゼロより小さいか、<paramref name="count" /> + <paramref name="offset" /> が <paramref name="bytes" /> 配列の長さより大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="91392-226"><paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91392-227"><paramref name="bytes" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="91392-227"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91392-228">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-228">The string to encode.</span></span></param>
        <summary><span data-ttu-id="91392-229">URL のサブセクションをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-229">Encodes a subsection of a URL.</span></span></summary>
        <returns><span data-ttu-id="91392-230">URL エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="91392-230">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91392-231"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> メソッドは、<xref:System.Web.HttpUtility.UrlPathEncode%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="91392-231">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="91392-232"><xref:System.Web.HttpUtility.UrlPathEncode%2A>メソッドは、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="91392-232">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="91392-233">エンコーディングのロジックを適用、<xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A>メソッド、URL (クエリ文字列を除く) のパス部分だけをします。</span><span class="sxs-lookup"><span data-stu-id="91392-233">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="91392-234">メソッドは、URL が、utf-8 文字列としてエンコードされていると仮定します。</span><span class="sxs-lookup"><span data-stu-id="91392-234">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="91392-235">最初の 128 個の ASCII 文字のサブセットのみが結果として得られる、エンコードされた文字列で使用されるように、非空白文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-235">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="91392-236">128 と大きい、または 32 と小さい、Unicode 値で任意の文字では、URL エンコードです。</span><span class="sxs-lookup"><span data-stu-id="91392-236">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="91392-237">20% として空白文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="91392-237">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>