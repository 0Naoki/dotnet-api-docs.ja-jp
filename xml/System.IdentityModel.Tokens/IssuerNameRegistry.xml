<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec66910a8c0e165c0029816be0547a344f1bdfd4" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51924797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c8771-101">発行者名レジストリの抽象基本クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8771-101">The abstract base class for an issuer name registry.</span>
      </span>
      <span data-ttu-id="c8771-102">発行者名レジストリは、該当する発行者によって生成されたトークンの署名を検証するために必要な暗号化マテリアルにニーモニック名を関連付けるために使用されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8771-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span>
      </span>
      <span data-ttu-id="c8771-103">発行者名レジストリは、証明書利用者 (RP) アプリケーションによって信頼されている発行者のリストを管理します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8771-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8771-104">発行者名レジストリを使用して、対応する発行者によって生成されたトークンの署名を検証するために必要な暗号化マテリアルにニーモニック名を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="c8771-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="c8771-105">この名前は設定を使用し、<xref:System.Security.Claims.Claim.Issuer%2A>または<xref:System.Security.Claims.Claim.OriginalIssuer%2A>クレームのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="c8771-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="c8771-106">によって公開されるメソッド、<xref:System.IdentityModel.Tokens.IssuerNameRegistry>クラスは、パイプラインからトークンを処理するセキュリティ トークン ハンドラーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="c8771-107">発行者名レジストリによって割り当てられていない素材によって署名されたトークンが破棄され、信頼されていません。</span><span class="sxs-lookup"><span data-stu-id="c8771-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="c8771-108">発行者名レジストリによって返される名前は、RP アプリケーションのコンテキスト内で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="c8771-109">コードでは、設定して使用する発行者名レジストリを指定することができます、<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c8771-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c8771-110">構成ファイルで指定することで発行者名レジストリを指定することができます、 [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)の下の要素、 [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)要素。</span><span class="sxs-lookup"><span data-stu-id="c8771-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.</span></span>  
  
 <span data-ttu-id="c8771-111">Windows Identity Foundation (WIF) の実装を提供する、<xref:System.IdentityModel.Tokens.IssuerNameRegistry>すぐクラス:<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>クラス。</span><span class="sxs-lookup"><span data-stu-id="c8771-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="c8771-112">この実装を使用するときは、対象の RP アプリケーションの構成ファイルで信頼された発行者の一覧を指定できます、 [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) の子要素である要素`<issuerNameRegistry>`要素と、 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class がその要素の参照されている`type`属性。</span><span class="sxs-lookup"><span data-stu-id="c8771-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element’s `type` attribute.</span></span> <span data-ttu-id="c8771-113">で、`<trustedIssuers>`要素、各発行者名は、その署名を検証するために使用する必要があります、X.509 証明書にマップされます。</span><span class="sxs-lookup"><span data-stu-id="c8771-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="c8771-114">カスタム発行者名レジストリを作成するをオーバーライドする必要があります、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c8771-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c8771-115">このメソッドは、指定したセキュリティ トークンの発行者名を返します。</span><span class="sxs-lookup"><span data-stu-id="c8771-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="c8771-116">必要に応じて上書きできます、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType>発行者名を取得するときに、ヒント表示メカニズムを提供するメソッドをおよび<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A>メソッド、発行者の名前の Windows トークンを提供したい場合は異なる<xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>。</span><span class="sxs-lookup"><span data-stu-id="c8771-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="c8771-117">上書き、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A>発行者名レジストリの構成ファイルから初期化を有効にするメソッド。</span><span class="sxs-lookup"><span data-stu-id="c8771-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8771-118">次のコードの実装を示します、<xref:System.IdentityModel.Tokens.IssuerNameRegistry>クラスのみの件名の付いた証明書を使用して発行者を受け入れる"CN = localhost"です。</span><span class="sxs-lookup"><span data-stu-id="c8771-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="c8771-119">次のコードでは、例示を目的としてのみです。</span><span class="sxs-lookup"><span data-stu-id="c8771-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="c8771-120">サブジェクト名に基づいて証明書の検証でないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c8771-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="c8771-121">運用環境では、このコードを使用しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="c8771-122">次に示します、XML アプリケーションを信頼された発行者名レジストリを構成するために必要です。</span><span class="sxs-lookup"><span data-stu-id="c8771-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28">
      <span data-ttu-id="c8771-123">&lt;issuerNameRegistry&gt;</span>
      <span class="sxs-lookup">
        <span data-stu-id="c8771-123">&lt;issuerNameRegistry&gt;</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c8771-124">
            <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-124">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c8771-125">派生クラスでオーバーライドされると、指定されたセキュリティ トークンの発行者名を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-125">When overridden in a derived class, returns the issuer name for the specified security token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8771-126">トークンの処理は、セキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-126">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="c8771-127">メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-127">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="c8771-128">発行者名が返されるセキュリティ トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-128">The security token for which to return the issuer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8771-129">派生クラスでオーバーライドされると、指定されたセキュリティ トークンの発行者名を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-129">When overridden in a derived class, returns the name of the issuer of the specified security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8771-130">発行者名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-130">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8771-131">実装には、認識されている発行者を識別するために、null 以外および空以外の文字列または認識されていない発行者を識別するために、null 文字列を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-131">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="c8771-132">トークンの処理は、セキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-132">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="c8771-133">メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-133">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8771-134">次のコードは、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A>発行者名レジストリのメソッド。</span><span class="sxs-lookup"><span data-stu-id="c8771-134">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="c8771-135">完全なサンプルは、<xref:System.IdentityModel.Tokens.IssuerNameRegistry>クラスの概要に関するトピック。</span><span class="sxs-lookup"><span data-stu-id="c8771-135">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="c8771-136">次のコードでは、例示を目的としてのみです。</span><span class="sxs-lookup"><span data-stu-id="c8771-136">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="c8771-137">サブジェクト名に基づいて証明書の検証でないことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c8771-137">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="c8771-138">運用環境では、このコードを使用しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-138">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="c8771-139">発行者名が返されるセキュリティ トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-139">The security token for which to return the issuer name.</span>
          </span>
        </param>
        <param name="requestedIssuerName">
          <span data-ttu-id="c8771-140">要求で考慮される発行者名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-140">An issuer name to consider in the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8771-141">派生クラスでオーバーライドされると、指定されたセキュリティ トークンの発行者名を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-141">When overridden in a derived class, returns the name of the issuer of the specified security token.</span>
          </span>
          <span data-ttu-id="c8771-142">指定した発行者名は、返す発行者名を判断するときに検討される場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-142">The specified issuer name may be considered in determining the issuer name to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8771-143">発行者名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-143">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8771-144">既定の実装は無視されます、`requestedIssuerName`パラメーターと単純に呼び出し、<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c8771-144">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c8771-145">トークンの処理は、セキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-145">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="c8771-146">メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-146">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c8771-147">Windows クレームで使用する既定の発行者名を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-147">Returns the default issuer name to be used for Windows claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c8771-148">Windows クレームの既定の発行者名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-148">The default issuer name for Windows claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8771-149">既定の実装では、<xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> が返されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-149">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="c8771-150">トークンの処理は、セキュリティ トークン ハンドラーによって処理パイプラインから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-150">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="c8771-151">メソッドは、RP アプリケーションのコンテキスト内で発行者の一意の名前を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c8771-151">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="c8771-152">構成 XML 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-152">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="c8771-153">リスト内の各ノードは <see cref="T:System.Xml.XmlElement" /> 型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-153">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c8771-154">派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-154">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8771-155"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A>メソッド構成インフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c8771-155">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="c8771-156">このメソッドが呼び出されたときに、`nodelist`の最上位レベルの子要素が表示されます、 [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)構成ファイルからの要素。</span><span class="sxs-lookup"><span data-stu-id="c8771-156">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file.</span></span> <span data-ttu-id="c8771-157">属性または派生クラスを定義する構成スキーマに応じて子要素を含むこれらの各可能性があります、さらに、します。</span><span class="sxs-lookup"><span data-stu-id="c8771-157">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="c8771-158">既定の実装をスローする<xref:System.NotImplementedException>します。</span><span class="sxs-lookup"><span data-stu-id="c8771-158">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="c8771-159">構成ファイルから発行者名レジストリの初期化を有効にする派生クラスでは、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c8771-159">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28">
          <span data-ttu-id="c8771-160">&lt;issuerNameRegistry&gt;</span>
          <span class="sxs-lookup">
            <span data-stu-id="c8771-160">&lt;issuerNameRegistry&gt;</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>