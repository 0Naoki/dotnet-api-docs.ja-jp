<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a821f3441990814fa9df707e0fd8a280c013e73" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52598877" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>すべてのセキュリティ トークンを実装するために使用される基本クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 セキュリティ トークンを使用して、認証資格情報を提供するか、メッセージを保護します。  
  
 セキュリティ トークン認証の資格情報、暗号化のキー マテリアルを提供するために使用したり、セキュリティ トークン サービス (STS) のサブジェクトに関するクレームのコレクションによって発行されたセキュリティ トークンの場合。 すべてのセキュリティ トークンから派生して、<xref:System.IdentityModel.Tokens.SecurityToken>クラス。  
  
 .NET 4.5 以降、Windows Identity Foundation (WIF) は、.NET Framework に完全に統合されているし、WIF によって公開されるクラスは、コードのセキュリティ トークンの処理の推奨される方法です。 表現とはでから派生したクラスを使用して、検証、XML から WIF では、セキュリティ トークンのシリアル化および逆シリアル化と、<xref:System.IdentityModel.Tokens.SecurityTokenHandler>基本クラス。 トークンが有効であることを確認だけでなく、戻るもこの際にトークンを検証、<xref:System.Security.Claims.ClaimsIdentity>認証と承認の判断に使用できるトークンからのインスタンス。 <xref:System.Security.Claims.ClaimsIdentity>のトークン ハンドラーの実装によって作成された、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A>型自体に内在するトークン要求からも、トークンに含まれる要求からのメソッド。  
  
 WIF では、次の種類のセキュリティ トークンのサポートが付属しています。  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: SAML 2.0 アサーションに基づくセキュリティ トークンを表します。 このトークンの種類は通常、Ws-trust、Ws-federation またはセキュリティ トークン要求 (RST) への応答のセキュリティ トークン サービスによって発行されます。  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>: SAML 1.1 アサーションに基づくセキュリティ トークンを表します。 このトークンの種類は通常、Ws-trust、Ws-federation またはセキュリティ トークン要求 (RST) への応答のセキュリティ トークン サービスによって発行されます。  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: 受信または SOAP メッセージで送信された Kerberos チケットに基づくセキュリティ トークンを表します  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: RSA アルゴリズムを使用して作成されるキーに基づいているセキュリティ トークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: セッションに関する情報を含むセキュリティ トークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: ユーザー名とパスワードに基づくセキュリティ トークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Windows ドメインまたはユーザー アカウントの id に基づくセキュリティ トークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: X.509 証明書に基づくセキュリティ トークンを表します。  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Windows ドメイン ユーザーまたはローカル コンピューターのユーザー アカウントにマップされている X.509 証明書に基づくセキュリティ トークンを表します。  
  
 2 つのセキュリティ トークン クラス、<xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>と<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>、一般的なケースを処理するときに使用できます。  
  
 大きく分けると、セキュリティ トークンは、次の 3 つの主要なカテゴリに分類されます。  
  
-   キー マテリアルの実行、または暗号化を参照するトークン。 たとえば、<xref:System.IdentityModel.Tokens.RsaSecurityToken>と<xref:System.IdentityModel.Tokens.X509SecurityToken>型はこの目的によく使用されます。  
  
-   既に認証されているユーザーの資格情報を表すトークン。 たとえば、 <xref:System.IdentityModel.Tokens.UserNameSecurityToken>、 <xref:System.IdentityModel.Tokens.WindowsSecurityToken>、および証明書を使用して認証されたユーザーの場合、<xref:System.IdentityModel.Tokens.X509SecurityToken>型。  
  
-   Ws-trust または Ws-federation プロトコルを使用してセキュリティ トークン要求に対する応答で、セキュリティ トークン サービス (STS) によって発行されたトークン。 これらは通常に返されます、 `wst:RequestSecurityTokenResponse` XML フラグメント。 <xref:System.IdentityModel.Tokens.Saml2SecurityToken>と<xref:System.IdentityModel.Tokens.SamlSecurityToken>型は、これらのトークンを表す最もよく使用されます。  
  
 特別なトークンの種類、<xref:System.IdentityModel.Tokens.SessionSecurityToken>セッションをアクティブまたはパッシブのシナリオで使用する場合は、プリンシパルを再作成に必要な情報が含まれています。  
  
 既存のトークンの種類の機能を追加するには、トークンに追加する新しい要素をサポートするには、特定の種類とその関連するトークン ハンドラーから派生することができます。 新しいトークンの種類のサポートを追加するから直接派生できます、<xref:System.IdentityModel.Tokens.SecurityToken>クラス。 派生することによってトークン ハンドラー クラスを作成する必要も、これを行うときに、<xref:System.IdentityModel.Tokens.SecurityTokenHandler>クラス。 どのように、トークンは、使用するが、によっても必要がありますから派生することによってカスタムのトークン リゾルバーを作成する、<xref:System.IdentityModel.Tokens.IssuerTokenResolver>から派生することによっても、1 つ以上のカスタムのキー識別子句型をクラス、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>クラス。  
  
   
  
## Examples  
 コード例で使用される、<xref:System.IdentityModel.Tokens.SecurityToken>トピックから取得されますが、`Custom Token`サンプル。 このサンプルでは、Simple Web Token (SWT) の処理を有効にするカスタム クラスを提供します。 実装が含まれています、`SimpleWebToken`クラスと`SimpleWebTokenHandler`SWT トークンをサポートするその他のクラスと同様に、クラス。 Wif とそのダウンロード場所についてこのサンプルと他のサンプルについては、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。 次のコードの実装を示しています、`SimpleWebToken`クラス。 このクラスは拡張<xref:System.IdentityModel.Tokens.SecurityToken>します。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>オーバーライドする必要があります、 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />、 <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />、 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />、および<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />プロパティ。 <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />、 <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />、 <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />、および<see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />メソッドはすべての種類のキー識別子をサポートする<see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />します。 派生クラスでその他のキー識別子の種類をサポートするためにこれらのメソッドをオーバーライドする必要があります。</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> クラスを初期化するために、派生クラスのコンストラクターによって呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">作成するキー識別子を指定する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</typeparam>
        <summary>このセキュリティ トークンが、指定したキー識別子を作成できるかどうかを示す値を取得します。</summary>
        <returns><see langword="true" /> の型が <paramref name="T" /> の場合は <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> メソッドを使用して、セキュリティ トークンが特定のキー識別子を作成できるかどうかを決定します。 キー識別子を作成するには、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> メソッドを呼び出します。  
  
 既定の実装は、型のキー識別子句をサポートしている<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">作成するキー識別子を指定する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</typeparam>
        <summary>指定したキー識別句を作成します。</summary>
        <returns>セキュリティ トークンのキー識別子句である <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> メソッドを使用して、セキュリティ トークンが特定のキー識別子を作成できるかどうかを決定します。 キー識別子を作成するには、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> メソッドを呼び出します。  
  
 既定の実装は、型のキー識別子句をサポートしている<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>します。 場合、型のキー識別子句<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>を作成できませんが、<xref:System.NotSupportedException>がスローされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンの一意の識別子を取得します。</summary>
        <value>セキュリティ トークンの一意の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常は、セキュリティ トークンが XML にシリアル化されるときに、セキュリティ トークンの `Id` 属性に、<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> プロパティの値が設定されます。  
  
   
  
## Examples  
 コード例で使用される、<xref:System.IdentityModel.Tokens.SecurityToken>トピックから取得されますが、`Custom Token`サンプル。 このサンプルでは、Simple Web Token (SWT) の処理を有効にするカスタム クラスを提供します。 実装が含まれています、`SimpleWebToken`クラスと`SimpleWebTokenHandler`SWT トークンをサポートするその他のクラスと同様に、クラス。 Wif とそのダウンロード場所についてこのサンプルと他のサンプルについては、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。 次のコードは、オーバーライド、<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>プロパティ。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドする必要があります、<see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />プロパティ。</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">このインスタンスと比較する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <param name="skiClause">このインスタンスと比較する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <summary>このインスタンスのキー識別子を指定したキー識別子に解決できるかどうかを示す値を返します。</summary>
        <returns><see langword="true" /> が <paramref name="keyIdentifierClause" /> で <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> プロパティと同じ一意の識別子を保持している場合は <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装は、型のキー識別子句をサポートしています。 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">キーを取得する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <param name="skiClause">キーを取得する <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <summary>指定したキー識別句のキーを取得します。</summary>
        <returns>キーを表す <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> メソッドは、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> を呼び出して、指定したキー識別子句がこのインスタンスと同じかどうかを最初に確認します。  
  
 既定の実装の最初の要素を返します、<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>コレクション、コレクションが空でない場合、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>返します`true`。 それ以外を返します`null`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> から継承した <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> メソッドを実装している場合に、<paramref name="keyIdentifierClause" /> を解決できないときは、<see langword="null" /> を返します。 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> メソッドから例外をスローすることはできません。</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンに関連付けられた暗号化キーを取得します。</summary>
        <value>セキュリティ トークンに関連付けられている一連のキーを含む、<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 型の <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A>トークンまたは SOAP メッセージを保護するには、このセキュリティ トークンの暗号化キーを設定するプロパティ。 キー使用できます、特に、デジタル署名またはトークンまたは SOAP メッセージを暗号化します。  
  
   
  
## Examples  
 コード例で使用される、<xref:System.IdentityModel.Tokens.SecurityToken>トピックから取得されますが、`Custom Token`サンプル。 このサンプルでは、Simple Web Token (SWT) の処理を有効にするカスタム クラスを提供します。 実装が含まれています、`SimpleWebToken`クラスと`SimpleWebTokenHandler`SWT トークンをサポートするその他のクラスと同様に、クラス。 Wif とそのダウンロード場所についてこのサンプルと他のサンプルについては、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。 次のコードは、オーバーライド、<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>プロパティ。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドする必要があります、<see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />プロパティ。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このセキュリティ トークンの有効期間の開始時点を取得します。</summary>
        <value>このセキュリティ トークンの有効期間の開始時点を示す <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティを使用して、<xref:System.IdentityModel.Tokens.SecurityToken> トークンの有効期間を決定します。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティはそれぞれ、セキュリティ トークンの有効期間の開始と終了の時点を示します。  
  
   
  
## Examples  
 コード例で使用される、<xref:System.IdentityModel.Tokens.SecurityToken>トピックから取得されますが、`Custom Token`サンプル。 このサンプルでは、Simple Web Token (SWT) の処理を有効にするカスタム クラスを提供します。 実装が含まれています、`SimpleWebToken`クラスと`SimpleWebTokenHandler`SWT トークンをサポートするその他のクラスと同様に、クラス。 Wif とそのダウンロード場所についてこのサンプルと他のサンプルについては、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。 次のコードは、オーバーライド、<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>プロパティ。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドする必要があります、<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />プロパティ。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このセキュリティ トークンの有効期間の終了時点を取得します。</summary>
        <value>このセキュリティ トークンの有効期間の終了の時点を示す <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティを使用して、<xref:System.IdentityModel.Tokens.SecurityToken> トークンの有効期間を決定します。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> および <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> プロパティはそれぞれ、セキュリティ トークンの有効期間の開始と終了の時点を示します。  
  
   
  
## Examples  
 コード例で使用される、<xref:System.IdentityModel.Tokens.SecurityToken>トピックから取得されますが、`Custom Token`サンプル。 このサンプルでは、Simple Web Token (SWT) の処理を有効にするカスタム クラスを提供します。 実装が含まれています、`SimpleWebToken`クラスと`SimpleWebTokenHandler`SWT トークンをサポートするその他のクラスと同様に、クラス。 Wif とそのダウンロード場所についてこのサンプルと他のサンプルについては、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。 次のコードは、オーバーライド、<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>プロパティ。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドする必要があります、<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />プロパティ。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>