<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionSecurityTokenHandler.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c115a52489fd77750e537edfe5b3127ffc36e982.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c115a52489fd77750e537edfe5b3127ffc36e982</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> that processes security tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">種類が <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> であるセキュリティ トークンを処理する <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes, deserializes, and validates session tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>クラスをシリアル化、逆シリアル化、およびセッション トークンを検証します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are tokens of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</source>
          <target state="translated">セッション トークンは型のトークン<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes the tokens to and from cookie format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>クラスがクッキー形式との間に、トークンをシリアル化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elements.</source>
          <target state="translated">既定では、クラスをシリアル化してトークン Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are used by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) to store information about a session, this is primarily the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> associated with the authenticated user and the session start and expiration times.</source>
          <target state="translated">セッション トークンがによって使用される、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) および<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>(SAM)、セッションに関する情報を格納するこれは、主に、<ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>認証されたユーザーとセッションの開始と終了時間に関連付けられています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In passive scenarios, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> calls into the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) from the authentication pipeline to create a session token from the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that represents the authenticated user.</source>
          <target state="translated">パッシブのシナリオで、<ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph>への呼び出し、 <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) からのセッション トークンを作成する認証パイプラインから、<ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>認証されたユーザーを表すです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses its configured <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</source>
          <target state="translated">その構成を使用して、SAM<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>トークンを作成して cookie にシリアル化 (および後続の要求の cookie からのトークンを逆シリアル化する)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses an instance of its configured <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> class to write the cookie back to the HTTP Response.</source>
          <target state="translated">SAM は、その構成済みのインスタンスを使用して<ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph>クッキーを HTTP 応答に書き込むのにクラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</source>
          <target state="translated">この cookie は、クライアントに返されます、後続の要求で、クライアントをセキュリティ トークンを再取得する id プロバイダーに戻るラウンド トリップを加えるのではなく、cookie 提示できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about how sessions operate with WIF, see <bpt id="p1">[</bpt>WIF Session Management<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</source>
          <target state="translated">WIF のセッションのしくみの詳細については、次を参照してください。 <bpt id="p1">[</bpt>WIF セッション管理<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">\&lt;</ph>securityTokenHandlers&gt; configuration element can be used to specify a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has the responsibility for securing the application’s sessions.</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>SecurityTokenHandlers &gt; を指定する構成要素を使用することができます、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>アプリケーションのセッションをセキュリティで保護する責任を持ちます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</source>
          <target state="translated">開発者にアプリケーションのセキュリティ侵害が発生する、正しく構成されていないシステムはこの構成設定を変更するときに注意を使ってください。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, specifying a derived  HYPERLINK "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</source>
          <target state="translated">たとえば、派生のハイパーリンクを指定する"<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>"\t"_blank"<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>およびが保護されていないクッキーにシリアル化されるユーザー id をベースには、空の変換 (CookieTransform) コレクションを渡すことになります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This could allow an attacker to modify the identity and therefore change access privileges.</source>
          <target state="translated">これが攻撃者に id を変更し、そのためのアクセス権限を変更します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is in reference mode, that is, its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</source>
          <target state="translated">セッション トークン モードの場合の参照、つまり、その<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>プロパティは<ph id="ph2">`true`</ph>, トークン ハンドラーのみでそのキーを再生成するために必要なセッション トークンのプロパティをシリアル化セッション、<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> class is used to represent cache keys, and the token handler writes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> properties of the token.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph>キャッシュ キーを表すクラスが使用され、トークン ハンドラーは、書き込み、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph>トークンのプロパティです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is not in reference mode, that is, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, then, in addition to the properties mentioned previously, the handler invokes the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</source>
          <target state="translated">セッション トークンは、つまり、参照モードでない場合、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>プロパティは<ph id="ph2">`false`</ph>に記載されているプロパティに加えて、ハンドラーが呼び出され、<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>バイト配列のメソッドは、トークンからシリアル化し、cookie を同様に、結果の値を格納します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more details about how the token is serialized, see the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">トークンをシリアル化する方法の詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property gets the list of transforms that are applied to the session token in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>プロパティがセッションに適用される変換のリストでトークンの取得、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>All transforms derive from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> class.</source>
          <target state="translated">すべての変換から派生して、<ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case the <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> are applied.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph>適用されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> uses the Data Protection API (DPAPI) to protect the cookie material.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> Cookie 情報を保護するデータ保護 API (DPAPI) を使用します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</source>
          <target state="translated">DPAPI は、その保護アルゴリズムで実行されているコンピューターに固有であるキーを使用します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</source>
          <target state="translated">このため、既定のセッション トークン ハンドラーではありません Web ファームのシナリオで使用できる、このようなシナリオでは、トークンが 1 台のコンピューターで記述する必要があります別のコンピューターでは読み込めません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can use many strategies to circumvent this issue.</source>
          <target state="translated">多くの戦略を使用して、この問題を回避することができます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, you can:</source>
          <target state="translated">たとえば、次のように操作できます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Replace the default <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> with the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</source>
          <target state="translated">既定値を置き換える<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>で、<ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> enables you to specify signing and encryption keys under the ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> element in the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> 、ASP.NET での署名と暗号化キーを指定することができます<ph id="ph2">`&lt;machineKey&gt;`</ph>構成ファイル内の要素。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Provide a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and replace the default session token handler with an instance of <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has a list of transforms that includes the <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> and the <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</source>
          <target state="translated">ハンドラーを作成して、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> global.asax.cs ファイルと置き換える既定のセッションでイベント ハンドラーのインスタンスでのトークン<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>を含む変換のリストを持つ、<ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph>と<ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can create the new instance by invoking one of the constructors that takes a list of transforms.</source>
          <target state="translated">変換のリストを受け取るコンス トラクターを呼び出すことによって、新しいインスタンスを作成できます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom transform from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> base class and use the method above to include it in the list of transforms to be applied.</source>
          <target state="translated">派生するカスタムの変換から、<ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph>基底クラスと、適用される変換の一覧に含める上記のメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom token handler from <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and implement your own mechanism.</source>
          <target state="translated">カスタム トークン ハンドラーからの派生<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>し、独自のメカニズムを実装します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about using sessions in Web farm scenarios, see <bpt id="p1">[</bpt>WIF and Web Farms<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</source>
          <target state="translated">Web ファームのシナリオにセッションの使用の詳細については、次を参照してください。 <bpt id="p1">[</bpt>WIF および Web ファーム<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>remove<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> element under the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> element to remove the default handler from the collection and then adding your custom token handler using the <bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>add<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>既定トークン ハンドラー コレクションに含まれるただし、置き換えることができますが、カスタムのセッション トークン ハンドラー最初を指定して、 <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>削除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept>要素の下、 <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept>コレクションを使用して、カスタム トークン ハンドラーを追加すると、既定のハンドラーを削除する要素、 <bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>追加<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, you can specify the default token lifetime by including the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element under the <ph id="ph3">`&lt;add&gt;`</ph> element.</source>
          <target state="translated">既定では、既定のトークン有効期間を指定を含めることによって、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>要素の下、<ph id="ph3">`&lt;add&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can design a custom token handler to take custom configuration elements under the <ph id="ph1">`&lt;add&gt;`</ph> element by overriding the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method to provide the logic to process them.</source>
          <target state="translated">カスタム構成要素をカスタム トークン ハンドラーを設計することができます、<ph id="ph1">`&lt;add&gt;`</ph>要素をオーバーライドすることで、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph>それらを処理するロジックを実装するメソッド。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> class in configuration.</source>
          <target state="translated">次の XML のインスタンスでの既定のセッション セキュリティ トークン ハンドラー トークン ハンドラーのコレクションを置き換える方法を示しています、<ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>構成内のクラスです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the default cookie transforms and token lifetime.</source>
          <target state="translated">既定のクッキー変換およびトークン有効期間を使用する <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> properties are initialized to <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> and <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>にプロパティが初期化されます<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>と<ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">クッキーをエンコードまたはデコードするときに適用する変換。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms.</source>
          <target state="translated">指定したクッキーの変換を使用する <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> プロパティは <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> に初期化されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">クッキーをエンコードまたはデコードするときに適用する変換。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The default lifetime for a token.</source>
          <target state="translated">トークンの既定の有効期間。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms and token lifetime.</source>
          <target state="translated">指定したクッキー変換およびトークン有効期間を使用する <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> is less than or equal to <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> 以下です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The cookie that will be transformed.</source>
          <target state="translated">変換されるクッキー。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cookie should be encoded; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the cookie should be decoded.</source>
          <target state="translated">クッキーをエンコードする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。クッキーをデコードする場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Applies the transforms specified by the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property to either encode or decode the specified cookie.</source>
          <target state="translated">指定したクッキーに対して <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> プロパティに指定された変換を適用して、クッキーをエンコードまたはデコードします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The encoded or decoded cookie.</source>
          <target state="translated">エンコードまたはデコードされたクッキー。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When encoding a cookie transforms are applied in the order in which they appear in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">表示される順序で適用されます、cookie をエンコードを変換するときに、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When decoding a cookie, they are applied in the reverse order.</source>
          <target state="translated">Cookie をデコードする場合は、逆の順序で適用されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to encode and decode the cookie material.</source>
          <target state="translated">呼び出される、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph>エンコードし、デコード cookie マテリアルにメソッドです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">受信 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 上の <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should be positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">リーダーは <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> 要素に配置する必要があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader is positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">リーダーの位置が <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> 要素であるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader points to a <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">リーダーが <ph id="ph1">&lt;see langword="true" /&gt;</ph> 要素を指している場合は <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">このハンドラーが、種類が <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> であるトークンの検証をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ハンドラーが <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 型のトークンの検証をサポートする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">このハンドラーが、種類が <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> であるトークンを書き込むできるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ハンドラーが <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 型のトークンを作成できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>Gets the name for the cookie element.</source>
          <target state="translated">クッキー要素の名前を取得します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The name for the cookie element.</source>
          <target state="translated">クッキー要素の名前。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The default element name is "Cookie".</source>
          <target state="translated">既定の要素名は、"Cookie"です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the element under which the encoded token material should be written or read.</source>
          <target state="translated">このプロパティは使用、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph>要素をエンコードされたトークン マテリアル必要がある書き込みまたは読み取りを確認する方法です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>Gets the namespace for the cookie element.</source>
          <target state="translated">クッキー要素の名前空間を取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The namespace for the cookie element.</source>
          <target state="translated">クッキー要素の名前空間。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The default namespace is "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</source>
          <target state="translated">既定の名前空間"<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>"です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the namespace of the element under which the encoded token material should be written or read.</source>
          <target state="translated">このプロパティは使用、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph>する、エンコードされたトークン マテリアル必要がある書き込みまたは読み取りの要素の名前空間を決定するメソッド。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The claims principal.</source>
          <target state="translated">クレーム プリンシパル。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>A caller-defined context string.</source>
          <target state="translated">呼び出し元定義のコンテキスト文字列。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">トークンのスコープが設定されているエンドポイントの識別子。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant at which the token becomes valid.</source>
          <target state="translated">トークンが有効になる時刻。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant after which the token is no longer valid.</source>
          <target state="translated">トークンが無効になる時刻。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> based on the specified claims principal and time range during which the token is valid.</source>
          <target state="translated">指定したクレーム プリンシパルとトークンの有効期間に基づいて <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The session security token that was created.</source>
          <target state="translated">作成されたセッション セキュリティ トークン。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The properties on the new session token are set according to the specified parameters.</source>
          <target state="translated">新しいセッション トークンのプロパティが、指定したパラメーターに従って設定されます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the token.</source>
          <target state="translated">トークンの作成元のトークン記述子。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a security token based on the specified token descriptor.</source>
          <target state="translated">指定したトークン記述子に基づいてセキュリティ トークンを作成します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token that was created.</source>
          <target state="translated">作成されたセキュリティ トークン。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This will be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">これは <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> のインスタンスとなります。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates and returns a session security token by using the following properties in the token descriptor: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">作成し、トークンの記述子に、次のプロパティを使用して、セッション セキュリティ トークンを返します: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> property is set <ph id="ph2">`true`</ph> on the token handler configuration specified by the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property, the bootstrap context is created from the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> property and is saved in the session token.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph>プロパティが設定されて<ph id="ph2">`true`</ph>で指定されたトークン ハンドラーの構成で、<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph>プロパティ、ブートス トラップのコンテキストが作成から、<ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph>プロパティでは、セッション トークンに保存します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms">
          <source>A read only collection that contains the list of default transforms to be applied to cookies, the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> and the <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</source>
          <target state="translated">Cookie、<ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph>、および <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph> に適用される既定の変換から成るリストを含む読み取り専用コレクション。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime">
          <source>A constant that specifies the default lifetime for cookies, ten hours.</source>
          <target state="translated">Cookie の既定の有効期間を指定する定数、10 時間。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Gets the default token lifetime.</source>
          <target state="translated">既定のトークン有効期間を取得します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>The default token lifetime.</source>
          <target state="translated">既定のトークン有効期間。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Always <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the token type URIs for the token types that can be processed by this handler.</source>
          <target state="translated">このハンドラーで処理できるトークンの種類の、トークンの種類 URI を取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The token type identifier URIs for token types that can be processed by this handler.</source>
          <target state="translated">このハンドラーで処理できるトークンの種類のための、トークンの種類の識別子 URI。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The following type URIs are supported: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>", "<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", and "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</source>
          <target state="translated">次の Uri の種類がサポートされる:"<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>「,」<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>"、および"<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>"です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">カスタム構成要素。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">カスタム構成を XML から読み込みます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Called by the configuration infrastructure to initialize the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> instance.</source>
          <target state="translated">初期化するために、構成のインフラストラクチャによって呼び出される、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property from the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element in the configuration file.</source>
          <target state="translated">初期化、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph>プロパティから、<ph id="ph2">`lifetime`</ph>の属性、 <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>構成ファイル内の要素。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration specified by <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> によって指定された構成が無効です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, it does not contain a <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, it contains more than one <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, a valid <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value cannot be read from the <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> attribute, or the <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> attribute specifies a value that is less than <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> の要素が含まれていませんが、<ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> の複数の要素が含まれています。<ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> の有効な値を <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> の属性から読み取ることができません。または <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> の属性が <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> 未満の値を指定しています。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ります。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">既定の実装は、Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3 からトークンを逆シリアル化<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">受信 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 上の <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader.</source>
          <target state="translated">指定した XML リーダーを使用して <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ります。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">読み込んだセッション セキュリティ トークン、<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> のインスタンスです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">リーダーは、Ws-secure Conversation Feb2005 または、Ws-secure Conversation 1.3 のいずれかに配置する必要があります<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method using a default token resolver.</source>
          <target state="translated">既定の実装を呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph>メソッドの既定のトークン リゾルバーを使用します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">リーダーが <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> に配置されていないか、<ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ることができません。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The stream of bytes that contains the token.</source>
          <target state="translated">トークンを含むバイトのストリーム。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token resolver to use.</source>
          <target state="translated">使用するトークン リゾルバー。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a stream of bytes by using the specified token resolver.</source>
          <target state="translated">指定されたトークン リゾルバーを使用して、バイトのストリームから <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ります。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> that was read.</source>
          <target state="translated">読み込まれた <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The default implementation creates an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> over the token and invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">既定の実装を作成、<ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph>トークンを呼び出すと、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">受信 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 上の <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> that can used to resolve the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> を解決するために使用できる <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader and token resolver.</source>
          <target state="translated">指定した XML リーダーおよびトークン リゾルバーを使用して <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ります。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">読み込んだセッション セキュリティ トークン、<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> のインスタンスです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">リーダーは、Ws-secure Conversation Feb2005 または、Ws-secure Conversation 1.3 のいずれかに配置する必要があります<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>If the token material is cached, it is read from the token cache, which is an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> class.</source>
          <target state="translated">インスタンスであるトークンのキャッシュから読み取られたトークンの情報がキャッシュされている場合の<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Otherwise, the token material is read from the child element of the <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element that is specified by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method is invoked to decode the cookie.</source>
          <target state="translated">子要素から、トークンの情報は読み取りそれ以外の場合、<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>によって指定された要素を<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph>プロパティおよび<ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>cookie をデコードするメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>For more information about how session tokens are serialized into a <ph id="ph1">`&lt;SecurityContextToken`</ph> element, see the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">セッション トークンをシリアル化する方法の詳細については、<ph id="ph1">`&lt;SecurityContextToken`</ph>要素を参照してください、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">リーダーが <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> に配置されていないか、<ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ることができません。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>The transforms to use.</source>
          <target state="translated">使用するトランザクション。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the transforms that will be applied to cookies.</source>
          <target state="translated">クッキーに適用される変換を設定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the list of transforms returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">によって返される変換のリストを設定、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</source>
          <target state="translated">変換は、表示される、cookie をエンコードする際に、一覧で、逆の順序で cookie をデコードする場合の順序で適用されます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>If the <ph id="ph1">`transforms`</ph> parameter is <ph id="ph2">`null`</ph>, an exception will be thrown from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method when it is called to encode or decode the cookie.</source>
          <target state="translated">場合、<ph id="ph1">`transforms`</ph>パラメーターは<ph id="ph2">`null`</ph>から例外がスローされます、<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>メソッド エンコードまたはデコード cookie で呼び出された場合。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>Gets or sets the token lifetime.</source>
          <target state="translated">トークンの有効期間を取得または設定します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The token lifetime.</source>
          <target state="translated">トークンの有効期間。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>By default, if the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element is specified in the configuration file, the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to the value of the <ph id="ph4">`lifetime`</ph> attribute by the <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">既定では場合、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>要素が、構成ファイルで指定された、<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph>プロパティは、の値に初期化、 <ph id="ph4">`lifetime`</ph> によって属性<ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>An attempt to set a time span that is less than or equal to zero occurs.</source>
          <target state="translated">0 以下の期間を設定しようとしました。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>Gets the type of the tokens that this handler processes.</source>
          <target state="translated">このハンドラーが処理するトークンの型を取得します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>Gets the transforms that will be applied to the cookie.</source>
          <target state="translated">クッキーに適用される変換を取得します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The list of transforms that will be applied to the cookie.</source>
          <target state="translated">クッキーに適用される変換のリスト。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The transforms are applied in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">変換が適用されます、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to be checked.</source>
          <target state="translated">確認するトークン。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Determines whether the session associated with the specified token is still valid.</source>
          <target state="translated">指定したトークンに関連付けられたセッションがまだ有効かどうかを判断します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validity is determined by checking the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> properties of the specified token.</source>
          <target state="translated">有効性は、指定されたトークンの <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> と <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> プロパティをチェックすることによって判断されます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An exception is thrown if the session is no longer valid.</source>
          <target state="translated">セッションが無効になった場合は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token is not valid if its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> property is set to a value that occurs later than <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, or if its <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> property is set to a value that occurs earlier than <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</source>
          <target state="translated">トークンが無効場合その<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph>プロパティが後に発生する値に設定よりも<ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>、場合、またはその<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph>プロパティが出現する値に設定よりも前<ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> methods to validate the session.</source>
          <target state="translated">呼び出される、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph>セッションを検証する方法です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> property of the token is later than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">トークンの <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> プロパテイが、<ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph> より後です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> property of the token is earlier than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">トークンの <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> プロパテイは <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph> より前です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Validates a token and returns its claims.</source>
          <target state="translated">トークンを検証し、クレームを返します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">検証するトークン。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> から割り当て可能である必要があります。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified token and returns its claims.</source>
          <target state="translated">指定されたトークンを検証し、その要求を返します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">トークンに含まれている識別情報。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> method to validate the token.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph>メソッド トークンを検証します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> から割り当てられません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The token to be validated.</source>
          <target state="translated">検証するトークン。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> から割り当て可能である必要があります。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">トークンのスコープが設定されているエンドポイントの識別子。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Validates the specified session token and returns its claims.</source>
          <target state="translated">指定されたセッション トークンを検証し、クレームを返します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">トークンに含まれている識別情報。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method; otherwise, throws a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</source>
          <target state="translated">チェックを実行する指定したトークン、指定したエンドポイント ID のスコープが設定し場合は、起動かどうかを確認して、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>メソッドです。 それ以外の場合、スロー、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Session tokens that have an <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property that is <ph id="ph2">`null`</ph> or empty are considered to be globally scoped.</source>
          <target state="translated">セッション トークンを持つ、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph>であるプロパティ<ph id="ph2">`null`</ph>や空では、グローバルにスコープが設定されると見なされます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>This presents a potential security risk.</source>
          <target state="translated">これは、潜在的なセキュリティ リスクを表示します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>For this reason you should make sure that the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property is set in your session tokens.</source>
          <target state="translated">この理由を確認してくださいを<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph>セッション トークンにプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> から割り当てられません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> property of the specified token is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or empty and its value is different than that specified by the <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> parameter.</source>
          <target state="translated">指定したトークンの <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> プロパティは <ph id="ph2">&lt;see langword="null" /&gt;</ph> でも空でもなく、その値は <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> パラメーターで指定された値とは異なります。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Serializes a token.</source>
          <target state="translated">トークンをシリアル化します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">既定の実装にシリアル化、トークン、Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to write.</source>
          <target state="translated">書き込むトークン。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token into a byte array.</source>
          <target state="translated">指定したトークンをバイト配列にシリアル化します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An encoded byte array.</source>
          <target state="translated">エンコードされたバイト配列。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token by creating and XML writer over a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> and invoking the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">作成して XML ライターに、指定されたトークンをシリアル化、<ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>を呼び出すと、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>See that overload for more details.</source>
          <target state="translated">詳細については、そのオーバー ロードを参照してください。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer with which to serialize the token.</source>
          <target state="translated">トークンをシリアル化するために使用する XML ライター。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">シリアル化するトークン。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified token by using the specified XML writer.</source>
          <target state="translated">指定した XML ライターを使用して、指定したトークンをシリアル化します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, depending on the value of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">既定の実装、Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3 のいずれかとして指定したトークンをシリアル化<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>要素の値に応じて、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph>としてプロパティをシリアル化、<ph id="ph2">`Id`</ph>属性。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`&lt;Identifier&gt;`</ph> child element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph>としてプロパティをシリアル化、<ph id="ph2">`&lt;Identifier&gt;`</ph>子要素です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If not <ph id="ph1">`null`</ph> the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> property is serialized as an <ph id="ph3">`&lt;Instance&gt;`</ph> element.</source>
          <target state="translated">ない場合<ph id="ph1">`null`</ph>、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph>としてプロパティをシリアル化、<ph id="ph3">`&lt;Instance&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Finally, if the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, the entire token is serialized into binary array which is passed to the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method to be encoded.</source>
          <target state="translated">最後に場合、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>プロパティは<ph id="ph2">`false`</ph>、トークン全体に渡されるバイナリ配列にシリアル化、<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>エンコードする方法です。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The encoded token is then written as a base64 encoded value to the element and namespace specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties.</source>
          <target state="translated">要素とで指定された名前空間を base64 でエンコードされた値としてエンコードされたトークンが書き込まれます、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the token is not serialized.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>プロパティは<ph id="ph2">`true`</ph>トークンがシリアル化されません。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> から割り当てられません。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</source>
          <target state="translated">トークンの <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> は、ハンドラーによってサポートされていない WS-Secure Conversation のバージョンを指定します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>