<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c115a52489fd77750e537edfe5b3127ffc36e982" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8cab6-101">種類が <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> であるセキュリティ トークンを処理する <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8cab6-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-102"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>クラスをシリアル化、逆シリアル化、およびセッション トークンを検証します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="8cab6-103">セッション トークンは型のトークン<xref:System.IdentityModel.Tokens.SessionSecurityToken>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="8cab6-104"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>クラスがクッキー形式との間に、トークンをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="8cab6-105">既定では、クラスをシリアル化してトークン Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="8cab6-106">セッション トークンがによって使用される、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) および<xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM)、セッションに関する情報を格納するこれは、主に、<xref:System.Security.Claims.ClaimsPrincipal>認証されたユーザーとセッションの開始と終了時間に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="8cab6-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="8cab6-107">パッシブのシナリオで、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>への呼び出し、 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) からのセッション トークンを作成する認証パイプラインから、<xref:System.Security.Claims.ClaimsPrincipal>認証されたユーザーを表すです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="8cab6-108">その構成を使用して、SAM<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>トークンを作成して cookie にシリアル化 (および後続の要求の cookie からのトークンを逆シリアル化する)。</span><span class="sxs-lookup"><span data-stu-id="8cab6-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="8cab6-109">SAM は、その構成済みのインスタンスを使用して<xref:System.IdentityModel.Services.CookieHandler>クッキーを HTTP 応答に書き込むのにクラスです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="8cab6-110">この cookie は、クライアントに返されます、後続の要求で、クライアントをセキュリティ トークンを再取得する id プロバイダーに戻るラウンド トリップを加えるのではなく、cookie 提示できます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="8cab6-111">WIF のセッションのしくみの詳細については、次を参照してください。 [WIF セッション管理](~/docs/framework/security/wif-session-management.md)です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cab6-112">\<SecurityTokenHandlers > を指定する構成要素を使用することができます、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>アプリケーションのセッションをセキュリティで保護する責任を持ちます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="8cab6-113">開発者にアプリケーションのセキュリティ侵害が発生する、正しく構成されていないシステムはこの構成設定を変更するときに注意を使ってください。</span><span class="sxs-lookup"><span data-stu-id="8cab6-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="8cab6-114">たとえば、派生のハイパーリンクを指定する"http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx"\t"_blank"<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>およびが保護されていないクッキーにシリアル化されるユーザー id をベースには、空の変換 (CookieTransform) コレクションを渡すことになります。</span><span class="sxs-lookup"><span data-stu-id="8cab6-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="8cab6-115">これが攻撃者に id を変更し、そのためのアクセス権限を変更します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="8cab6-116">セッション トークン モードの場合の参照、つまり、その<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>プロパティは`true`, トークン ハンドラーのみでそのキーを再生成するために必要なセッション トークンのプロパティをシリアル化セッション、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="8cab6-117">既定では、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>キャッシュ キーを表すクラスが使用され、トークン ハンドラーは、書き込み、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType>と<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType>トークンのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="8cab6-118">セッション トークンは、つまり、参照モードでない場合、<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>プロパティは`false`に記載されているプロパティに加えて、ハンドラーが呼び出され、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>バイト配列のメソッドは、トークンからシリアル化し、cookie を同様に、結果の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="8cab6-119">トークンをシリアル化する方法の詳細については、次を参照してください。、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8cab6-120"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>プロパティがセッションに適用される変換のリストでトークンの取得、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="8cab6-121">すべての変換から派生して、<xref:System.IdentityModel.CookieTransform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="8cab6-122">既定では、<xref:System.IdentityModel.DeflateCookieTransform>と<xref:System.IdentityModel.ProtectedDataCookieTransform>適用されます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="8cab6-123"><xref:System.IdentityModel.ProtectedDataCookieTransform> Cookie 情報を保護するデータ保護 API (DPAPI) を使用します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="8cab6-124">DPAPI は、その保護アルゴリズムで実行されているコンピューターに固有であるキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="8cab6-125">このため、既定のセッション トークン ハンドラーではありません Web ファームのシナリオで使用できる、このようなシナリオでは、トークンが 1 台のコンピューターで記述する必要があります別のコンピューターでは読み込めません。</span><span class="sxs-lookup"><span data-stu-id="8cab6-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="8cab6-126">多くの戦略を使用して、この問題を回避することができます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="8cab6-127">たとえば、次のように操作できます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="8cab6-128">既定値を置き換える<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>で、<xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="8cab6-129"><xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> 、ASP.NET での署名と暗号化キーを指定することができます`<machineKey>`構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="8cab6-130">ハンドラーを作成して、 <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> global.asax.cs ファイルと置き換える既定のセッションでイベント ハンドラーのインスタンスでのトークン<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>を含む変換のリストを持つ、<xref:System.IdentityModel.RsaSignatureCookieTransform>と<xref:System.IdentityModel.RsaEncryptionCookieTransform>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="8cab6-131">変換のリストを受け取るコンス トラクターを呼び出すことによって、新しいインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="8cab6-132">派生するカスタムの変換から、<xref:System.IdentityModel.CookieTransform>基底クラスと、適用される変換の一覧に含める上記のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="8cab6-133">カスタム トークン ハンドラーからの派生<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>し、独自のメカニズムを実装します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="8cab6-134">Web ファームのシナリオにセッションの使用の詳細については、次を参照してください。 [WIF および Web ファーム](~/docs/framework/security/wif-and-web-farms.md)です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="8cab6-135"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>既定トークン ハンドラー コレクションに含まれるただし、置き換えることができますが、カスタムのセッション トークン ハンドラー最初を指定して、 [&lt;削除&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)要素の下、 [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)コレクションを使用して、カスタム トークン ハンドラーを追加すると、既定のハンドラーを削除する要素、 [&lt;追加&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="8cab6-136">既定では、既定のトークン有効期間を指定を含めることによって、 [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)要素の下、`<add>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="8cab6-137">カスタム構成要素をカスタム トークン ハンドラーを設計することができます、`<add>`要素をオーバーライドすることで、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A>それらを処理するロジックを実装するメソッド。</span><span class="sxs-lookup"><span data-stu-id="8cab6-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cab6-138">次の XML のインスタンスでの既定のセッション セキュリティ トークン ハンドラー トークン ハンドラーのコレクションを置き換える方法を示しています、<xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>構成内のクラスです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-139">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-140">既定のクッキー変換およびトークン有効期間を使用する <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-141"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>にプロパティが初期化されます<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="8cab6-142">クッキーをエンコードまたはデコードするときに適用する変換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-142">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="8cab6-143">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-144">指定したクッキーの変換を使用する <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-145"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> プロパティは <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-146">
            <paramref name="transforms" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-146">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="8cab6-147">クッキーをエンコードまたはデコードするときに適用する変換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-147">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="8cab6-148">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <param name="tokenLifetime">
          <span data-ttu-id="8cab6-149">トークンの既定の有効期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-149">The default lifetime for a token.</span>
          </span>
          <span data-ttu-id="8cab6-150">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-151">指定したクッキー変換およびトークン有効期間を使用する <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-152">
            <paramref name="transforms" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-152">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-153">
            <paramref name="tokenLifetime" /> が <see cref="F:System.TimeSpan.Zero" /> 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-153">
              <paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="8cab6-154">変換されるクッキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-154">The cookie that will be transformed.</span>
          </span>
        </param>
        <param name="outbound">
          <span data-ttu-id="8cab6-155">クッキーをエンコードする場合は <see langword="true" />。クッキーをデコードする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-155">
              <see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-156">指定したクッキーに対して <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> プロパティに指定された変換を適用して、クッキーをエンコードまたはデコードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-157">エンコードまたはデコードされたクッキー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-157">The encoded or decoded cookie.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-158">表示される順序で適用されます、cookie をエンコードを変換するときに、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="8cab6-159">Cookie をデコードする場合は、逆の順序で適用されます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="8cab6-160">呼び出される、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A>エンコードし、デコード cookie マテリアルにメソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-161">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> プロパティが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="8cab6-162">受信 <see cref="T:System.Xml.XmlReader" /> 上の <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
          <span data-ttu-id="8cab6-163">リーダーは <see langword="&lt;wsc:SecurityContextToken&gt;" /> 要素に配置する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-164">リーダーの位置が <see langword="&lt;wsc:SecurityContextToken&gt;" /> 要素であるかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-165">リーダーが <see langword="true" /> 要素を指している場合は <see langword="&lt;wsc:SecurityContextToken&gt;" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-165">
              <see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-166">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-166">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-167">このハンドラーが、種類が <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> であるトークンの検証をサポートするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-168">ハンドラーが <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 型のトークンの検証をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-168">
              <see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8cab6-169">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-169">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-170">このハンドラーが、種類が <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> であるトークンを書き込むできるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-171">ハンドラーが <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 型のトークンを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-171">
              <see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8cab6-172">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-172">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-173">クッキー要素の名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-173">Gets the name for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-174">クッキー要素の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-174">The name for the cookie element.</span>
          </span>
          <span data-ttu-id="8cab6-175">既定の要素名は、"Cookie"です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-175">The default element name is "Cookie".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-176">このプロパティは使用、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A>要素をエンコードされたトークン マテリアル必要がある書き込みまたは読み取りを確認する方法です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-177">クッキー要素の名前空間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-177">Gets the namespace for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-178">クッキー要素の名前空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-178">The namespace for the cookie element.</span>
          </span>
          <span data-ttu-id="8cab6-179">既定の名前空間"http://schemas.microsoft.com/ws/2006/05/security"です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-180">このプロパティは使用、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A>する、エンコードされたトークン マテリアル必要がある書き込みまたは読み取りの要素の名前空間を決定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="8cab6-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="8cab6-181">クレーム プリンシパル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-181">The claims principal.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="8cab6-182">呼び出し元定義のコンテキスト文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-182">A caller-defined context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="8cab6-183">トークンのスコープが設定されているエンドポイントの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-183">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="8cab6-184">トークンが有効になる時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-184">The time instant at which the token becomes valid.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="8cab6-185">トークンが無効になる時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-185">The time instant after which the token is no longer valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-186">指定したクレーム プリンシパルとトークンの有効期間に基づいて <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-187">作成されたセッション セキュリティ トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-187">The session security token that was created.</span>
          </span>
          <span data-ttu-id="8cab6-188">新しいセッション トークンのプロパティが、指定したパラメーターに従って設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-188">The properties on the new session token are set according to the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-189">
            <paramref name="principal" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-189">
              <paramref name="principal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-190">
            <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> プロパティが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="8cab6-191">トークンの作成元のトークン記述子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-191">The token descriptor from which to create the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-192">指定したトークン記述子に基づいてセキュリティ トークンを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-192">Creates a security token based on the specified token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-193">作成されたセキュリティ トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-193">The security token that was created.</span>
          </span>
          <span data-ttu-id="8cab6-194">これは <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> のインスタンスとなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-195">作成し、トークンの記述子に、次のプロパティを使用して、セッション セキュリティ トークンを返します: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>、および<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8cab6-196">場合、<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType>プロパティが設定されて`true`で指定されたトークン ハンドラーの構成で、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>プロパティ、ブートス トラップのコンテキストが作成から、<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType>プロパティでは、セッション トークンに保存します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-197">
            <paramref name="tokenDescriptor" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-197">
              <paramref name="tokenDescriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-198">
            <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> プロパティが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-199">Cookie、<see cref="T:System.IdentityModel.DeflateCookieTransform" />、および <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /> に適用される既定の変換から成るリストを含む読み取り専用コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-200">Cookie の既定の有効期間を指定する定数、10 時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-200">A constant that specifies the default lifetime for cookies, ten hours.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-201">既定のトークン有効期間を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-201">Gets the default token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-202">既定のトークン有効期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-202">The default token lifetime.</span>
          </span>
          <span data-ttu-id="8cab6-203">常に <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-204">このハンドラーで処理できるトークンの種類の、トークンの種類 URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-204">Gets the token type URIs for the token types that can be processed by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-205">このハンドラーで処理できるトークンの種類のための、トークンの種類の識別子 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-205">The token type identifier URIs for token types that can be processed by this handler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-206">次の Uri の種類がサポートされる:"http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation「,」http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct"、および"http://schemas.xmlsoap.org/ws/2005/02/sc/sct"です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <span data-ttu-id="8cab6-207">カスタム構成要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-207">The custom configuration elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-208">カスタム構成を XML から読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-208">Loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-209">初期化するために、構成のインフラストラクチャによって呼び出される、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8cab6-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="8cab6-210">初期化、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>プロパティから、`lifetime`の属性、 [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-211">
            <paramref name="customConfigElements" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-211">
              <paramref name="customConfigElements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-212">
            <paramref name="customConfigElements" /> によって指定された構成が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span>
          </span>
          <span data-ttu-id="8cab6-213">たとえば、<see langword="&lt;sessionTokenRequirement&gt;" /> の要素が含まれていませんが、<see langword="&lt;sessionTokenRequirement&gt;" /> の複数の要素が含まれています。<see cref="T:System.TimeSpan" /> の有効な値を <see langword="lifetime" /> の属性から読み取ることができません。または <see langword="lifetime" /> の属性が <see cref="F:System.TimeSpan.Zero" /> 未満の値を指定しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-214">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-215">既定の実装は、Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3 からトークンを逆シリアル化`<wsc:SecurityContextToken>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="8cab6-216">受信 <see cref="T:System.Xml.XmlReader" /> 上の <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-217">指定した XML リーダーを使用して <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-218">読み込んだセッション セキュリティ トークン、<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> のインスタンスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-219">リーダーは、Ws-secure Conversation Feb2005 または、Ws-secure Conversation 1.3 のいずれかに配置する必要があります`<wsc:SecurityContextToken>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="8cab6-220">既定の実装を呼び出す、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType>メソッドの既定のトークン リゾルバーを使用します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-221">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-221">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="8cab6-222">リーダーが <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> に配置されていないか、<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を読み取ることができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="8cab6-223">トークンを含むバイトのストリーム。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-223">The stream of bytes that contains the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="8cab6-224">使用するトークン リゾルバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-224">The token resolver to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-225">指定されたトークン リゾルバーを使用して、バイトのストリームから <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-226">読み込まれた <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-227">既定の実装を作成、<xref:System.Xml.XmlDictionaryReader>トークンを呼び出すと、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="8cab6-228">受信 <see cref="T:System.Xml.XmlReader" /> 上の <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="8cab6-229">
            <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> を解決するために使用できる <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-230">指定した XML リーダーおよびトークン リゾルバーを使用して <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-231">読み込んだセッション セキュリティ トークン、<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> のインスタンスです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-232">リーダーは、Ws-secure Conversation Feb2005 または、Ws-secure Conversation 1.3 のいずれかに配置する必要があります`<wsc:SecurityContextToken>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="8cab6-233">インスタンスであるトークンのキャッシュから読み取られたトークンの情報がキャッシュされている場合の<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>クラスです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="8cab6-234">子要素から、トークンの情報は読み取りそれ以外の場合、`<wsc:SecurityContextToken>`によって指定された要素を<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A>プロパティおよび<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>cookie をデコードするメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="8cab6-235">セッション トークンをシリアル化する方法の詳細については、`<SecurityContextToken`要素を参照してください、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-236">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-236">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8cab6-237">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-237">-or-</span>
          </span>
          <span data-ttu-id="8cab6-238">
            <paramref name="tokenResolver" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-238">
              <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="8cab6-239">リーダーが <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> に配置されていないか、<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> を読み取ることができません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-239">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="8cab6-240">使用するトランザクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-240">The transforms to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-241">クッキーに適用される変換を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-241">Sets the transforms that will be applied to cookies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-242">によって返される変換のリストを設定、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-242">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="8cab6-243">変換は、表示される、cookie をエンコードする際に、一覧で、逆の順序で cookie をデコードする場合の順序で適用されます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-243">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8cab6-244">場合、`transforms`パラメーターは`null`から例外がスローされます、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>メソッド エンコードまたはデコード cookie で呼び出された場合。</span><span class="sxs-lookup"><span data-stu-id="8cab6-244">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-245">トークンの有効期間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-245">Gets or sets the token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-246">トークンの有効期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-246">The token lifetime.</span>
          </span>
          <span data-ttu-id="8cab6-247">既定値は、<see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-247">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-248">既定では場合、 [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)要素が、構成ファイルで指定された、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>プロパティは、の値に初期化、 `lifetime` によって属性<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-248">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cab6-249">0 以下の期間を設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-249">An attempt to set a time span that is less than or equal to zero occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-250">このハンドラーが処理するトークンの型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-250">Gets the type of the tokens that this handler processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-251">
            <see cref="T:System.Type" /> の <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-251">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-252">クッキーに適用される変換を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-252">Gets the transforms that will be applied to the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cab6-253">クッキーに適用される変換のリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-253">The list of transforms that will be applied to the cookie.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-254">変換が適用されます、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-254">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="8cab6-255">確認するトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-255">The token to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-256">指定したトークンに関連付けられたセッションがまだ有効かどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-256">Determines whether the session associated with the specified token is still valid.</span>
          </span>
          <span data-ttu-id="8cab6-257">有効性は、指定されたトークンの <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> と <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> プロパティをチェックすることによって判断されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-257">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span>
          </span>
          <span data-ttu-id="8cab6-258">セッションが無効になった場合は、例外がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-258">An exception is thrown if the session is no longer valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-259">トークンが無効場合その<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>プロパティが後に発生する値に設定よりも<xref:System.DateTime.UtcNow%2A>、場合、またはその<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>プロパティが出現する値に設定よりも前<xref:System.DateTime.UtcNow%2A>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-259">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="8cab6-260">呼び出される、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A>セッションを検証する方法です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-260">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-261">
            <paramref name="securityToken" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-261">
              <paramref name="securityToken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-262">
            <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> プロパティが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-262">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
          <span data-ttu-id="8cab6-263">トークンの <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> プロパテイが、<see cref="P:System.DateTime.UtcNow" /> より後です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
          <span data-ttu-id="8cab6-264">トークンの <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> プロパテイは <see cref="P:System.DateTime.UtcNow" /> より前です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-264">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-265">トークンを検証し、クレームを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-265">Validates a token and returns its claims.</span>
          </span>
        </summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="8cab6-266">検証するトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-266">The token to be validated.</span>
          </span>
          <span data-ttu-id="8cab6-267">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> から割り当て可能である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-267">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-268">指定されたトークンを検証し、その要求を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-268">Validates the specified token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-269">トークンに含まれている識別情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-269">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-270">呼び出す、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A>メソッド トークンを検証します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-270">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-271">
            <paramref name="token" />
            <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-271">
              <paramref name="token" />
              <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-272">
            <paramref name="token" /> が <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> から割り当てられません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-272">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="8cab6-273">検証するトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-273">The token to be validated.</span>
          </span>
          <span data-ttu-id="8cab6-274">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> から割り当て可能である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-274">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="8cab6-275">トークンのスコープが設定されているエンドポイントの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-275">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-276">指定されたセッション トークンを検証し、クレームを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-276">Validates the specified session token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-277">トークンに含まれている識別情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-277">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-278">チェックを実行する指定したトークン、指定したエンドポイント ID のスコープが設定し場合は、起動かどうかを確認して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>メソッドです。 それ以外の場合、スロー、<xref:System.IdentityModel.Tokens.SecurityTokenException>です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-278">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8cab6-279">セッション トークンを持つ、<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>であるプロパティ`null`や空では、グローバルにスコープが設定されると見なされます。</span><span class="sxs-lookup"><span data-stu-id="8cab6-279">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="8cab6-280">これは、潜在的なセキュリティ リスクを表示します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-280">This presents a potential security risk.</span></span> <span data-ttu-id="8cab6-281">この理由を確認してくださいを<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>セッション トークンにプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="8cab6-281">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-282">
            <paramref name="token" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-282">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8cab6-283">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-283">-or-</span>
          </span>
          <span data-ttu-id="8cab6-284">
            <paramref name="endpointId" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-284">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-285">
            <paramref name="token" /> が <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> から割り当てられません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-285">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="8cab6-286">指定したトークンの <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> プロパティは <see langword="null" /> でも空でもなく、その値は <paramref name="endpointId" /> パラメーターで指定された値とは異なります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-286">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cab6-287">トークンをシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-287">Serializes a token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-288">既定の実装にシリアル化、トークン、Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-288">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="8cab6-289">書き込むトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-289">The token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-290">指定したトークンをバイト配列にシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-290">Serializes the specified token into a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cab6-291">エンコードされたバイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-291">An encoded byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-292">作成して XML ライターに、指定されたトークンをシリアル化、<xref:System.IO.MemoryStream>を呼び出すと、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-292">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8cab6-293">詳細については、そのオーバー ロードを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8cab6-293">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-294">
            <paramref name="sessiontoken" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-294">
              <paramref name="sessiontoken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="8cab6-295">トークンをシリアル化するために使用する XML ライター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-295">The XML writer with which to serialize the token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="8cab6-296">シリアル化するトークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-296">The token to serialize.</span>
          </span>
          <span data-ttu-id="8cab6-297">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-297">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cab6-298">指定した XML ライターを使用して、指定したトークンをシリアル化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-298">Serializes the specified token by using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cab6-299">既定の実装、Ws-secure Conversation Feb2005 または Ws-secure Conversation 1.3 のいずれかとして指定したトークンをシリアル化`<wsc:SecurityContextToken>`要素の値に応じて、<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-299">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8cab6-300"><xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType>としてプロパティをシリアル化、`Id`属性。</span><span class="sxs-lookup"><span data-stu-id="8cab6-300">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="8cab6-301"><xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType>としてプロパティをシリアル化、`<Identifier>`子要素です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-301">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="8cab6-302">ない場合`null`、<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType>としてプロパティをシリアル化、`<Instance>`要素。</span><span class="sxs-lookup"><span data-stu-id="8cab6-302">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="8cab6-303">最後に場合、<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>プロパティは`false`、トークン全体に渡されるバイナリ配列にシリアル化、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>エンコードする方法です。</span><span class="sxs-lookup"><span data-stu-id="8cab6-303">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="8cab6-304">要素とで指定された名前空間を base64 でエンコードされた値としてエンコードされたトークンが書き込まれます、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="8cab6-304">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="8cab6-305">場合、<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>プロパティは`true`トークンがシリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="8cab6-305">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cab6-306">
            <paramref name="writer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-306">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="8cab6-307">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-307">-or-</span>
          </span>
          <span data-ttu-id="8cab6-308">
            <paramref name="token" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-308">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cab6-309">
            <paramref name="token" /> が <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> から割り当てられません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-309">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
          <span data-ttu-id="8cab6-310">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-310">-or-</span>
          </span>
          <span data-ttu-id="8cab6-311">トークンの <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> は、ハンドラーによってサポートされていない WS-Secure Conversation のバージョンを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cab6-311">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>