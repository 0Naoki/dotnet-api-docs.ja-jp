<Type Name="ClaimsPrincipal" FullName="System.Security.Claims.ClaimsPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de4aef25c99af1153c7584a91ff50b9f2f4d5f00" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56060223" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsPrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsPrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipal = class&#xA;    interface IPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76833-101">複数のクレームベースの ID をサポートする <see cref="T:System.Security.Principal.IPrincipal" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="76833-101">An <see cref="T:System.Security.Principal.IPrincipal" /> implementation that supports multiple claims-based identities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-102">.NET Framework 4.5 以降、Windows Identity Foundation (WIF) と id のクレームに基づく完全に統合された .NET Framework です。</span><span class="sxs-lookup"><span data-stu-id="76833-102">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="76833-103">つまり、これで、.NET Framework 内のプリンシパルを表す多数のクラスから派生する<xref:System.Security.Claims.ClaimsPrincipal>実装するだけではなく、<xref:System.Security.Principal.IPrincipal>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="76833-103">This means that many classes that represent a principal in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsPrincipal> rather than simply implementing the <xref:System.Security.Principal.IPrincipal> interface.</span></span> <span data-ttu-id="76833-104">実装するだけでなく、<xref:System.Security.Principal.IPrincipal>インターフェイス、<xref:System.Security.Claims.ClaimsPrincipal>プロパティとは、要求を操作するための便利なメソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="76833-104">In addition to implementing the <xref:System.Security.Principal.IPrincipal> interface, <xref:System.Security.Claims.ClaimsPrincipal> exposes properties and methods that are useful for working with claims.</span></span>  
  
 <span data-ttu-id="76833-105"><xref:System.Security.Claims.ClaimsPrincipal> 個々 の id のコレクションを公開、<xref:System.Security.Claims.ClaimsIdentity>します。</span><span class="sxs-lookup"><span data-stu-id="76833-105"><xref:System.Security.Claims.ClaimsPrincipal> exposes a collection of identities, each of which is a <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="76833-106">一般的なケース、を通じてアクセスされる、このコレクションで、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>プロパティは 1 つの要素のみを持ちます。</span><span class="sxs-lookup"><span data-stu-id="76833-106">In the common case, this collection, which is accessed through the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property, will only have a single element.</span></span>  
  
 <span data-ttu-id="76833-107">導入に伴い<xref:System.Security.Claims.ClaimsPrincipal>最もプリンシパル クラスを派生元となるプリンシパルとして .NET 4.5 では強制しません id で処理する方法で何も変更します。</span><span class="sxs-lookup"><span data-stu-id="76833-107">The introduction of <xref:System.Security.Claims.ClaimsPrincipal> in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</span></span> <span data-ttu-id="76833-108">ただし詳細可能性を開くし、さらに細かくアクセス コントロールを練習する機会を提供します。</span><span class="sxs-lookup"><span data-stu-id="76833-108">It does, however open up more possibilities and offer more chances to exercise finer access control.</span></span> <span data-ttu-id="76833-109">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="76833-109">For example:</span></span>  
  
-   <span data-ttu-id="76833-110">アプリケーション コード自体は、ドライブの追加の認証、承認、およびパーソナル化タスクを現在のプリンシパルに含まれる要求を直接操作できます。</span><span class="sxs-lookup"><span data-stu-id="76833-110">The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</span></span>  
  
-   <span data-ttu-id="76833-111">リソースは、要求の処理パイプラインで、まで、コードを実行する前に、認証要求と承認のポリシーに対処できるられたフロントことができます。</span><span class="sxs-lookup"><span data-stu-id="76833-111">You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</span></span> <span data-ttu-id="76833-112">派生したクラスのインスタンス、カスタム クレーム認証マネージャーとな web ベースのアプリケーションまたはサービスを構成するなど、<xref:System.Security.Claims.ClaimsAuthenticationManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="76833-112">For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthenticationManager> class.</span></span> <span data-ttu-id="76833-113">要求処理パイプラインを呼び出すように設定すると、<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>メソッドに渡して、クレーム認証マネージャー、<xref:System.Security.Claims.ClaimsPrincipal>受信要求のコンテキストを表します。</span><span class="sxs-lookup"><span data-stu-id="76833-113">When so configured, the request processing pipeline invokes the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method on your claims authentication manager passing it a <xref:System.Security.Claims.ClaimsPrincipal> that represents the context of the incoming request.</span></span> <span data-ttu-id="76833-114">クレーム認証マネージャーは、入力方向の要求の値に基づく認証を実行できます。</span><span class="sxs-lookup"><span data-stu-id="76833-114">Your claims authentication manager can then perform authentication based on the values of the incoming claims.</span></span> <span data-ttu-id="76833-115">これは、ことができますもフィルター処理、変換、または要求、受信要求のセットを追加します。</span><span class="sxs-lookup"><span data-stu-id="76833-115">It can also filter, transform, or add claims to the incoming claim set.</span></span> <span data-ttu-id="76833-116">入力方向の要求がローカル ユーザー プロファイルなどのローカル データ ソースから作成された新しいクレーム セットを強化する使用例: でした。</span><span class="sxs-lookup"><span data-stu-id="76833-116">For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile</span></span>  
  
-   <span data-ttu-id="76833-117">Web ベースのアプリケーションを構成するには、カスタム クレーム承認マネージャーから派生したクラスのインスタンスで、<xref:System.Security.Claims.ClaimsAuthorizationManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="76833-117">You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthorizationManager> class.</span></span> <span data-ttu-id="76833-118">要求処理パイプラインが受信をパッケージように設定すると<xref:System.Security.Claims.ClaimsPrincipal>で、<xref:System.Security.Claims.AuthorizationContext>を呼び出すと、<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>クレーム承認マネージャーのメソッド。</span><span class="sxs-lookup"><span data-stu-id="76833-118">When so configured, the request processing pipeline packages the incoming <xref:System.Security.Claims.ClaimsPrincipal> in an <xref:System.Security.Claims.AuthorizationContext> and invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method on your claims authorization manager.</span></span> <span data-ttu-id="76833-119">クレーム承認マネージャーは、入力方向の要求に基づいて承認を適用できます。</span><span class="sxs-lookup"><span data-stu-id="76833-119">Your claims authorization manager can then enforce authorization based on the incoming claims.</span></span>  
  
-   <span data-ttu-id="76833-120">インライン コードのクレームに基づくアクセス確認をカスタム クレーム承認マネージャーをアプリケーションを構成し、いずれかを使用して実行できる、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>命令型のアクセス チェックを実行するにはクラスまたは<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>宣言型のアクセスを実行するには確認します。</span><span class="sxs-lookup"><span data-stu-id="76833-120">Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class to perform imperative access checks or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> to perform declarative access checks.</span></span> <span data-ttu-id="76833-121">コードのクレームに基づくアクセス チェックは、処理パイプラインの外部で、インラインで実行し、クレーム承認マネージャーが構成されている限り、すべてのアプリケーションで使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="76833-121">Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</span></span>  
  
 <span data-ttu-id="76833-122">取得することができます、<xref:System.Security.Claims.ClaimsPrincipal>キャストすることによって、RP アプリケーション (またはスレッドが実行されているプリンシパル) の要求に関連付けられているプリンシパルのインスタンス、<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>プロパティを<xref:System.Security.Claims.ClaimsPrincipal>します。</span><span class="sxs-lookup"><span data-stu-id="76833-122">You can obtain a <xref:System.Security.Claims.ClaimsPrincipal> instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="76833-123">関連付けられたクレームを<xref:System.Security.Claims.ClaimsPrincipal>オブジェクトは、その<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-123">The claims associated with an <xref:System.Security.Claims.ClaimsPrincipal> object are available through its <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property.</span></span> <span data-ttu-id="76833-124"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>プロパティはすべてのプリンシパルに関連付けられている id に含まれるクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="76833-124">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims contained by the identities associated with the principal.</span></span> <span data-ttu-id="76833-125">一般的でない場合、<xref:System.Security.Claims.ClaimsPrincipal>複数含まれている<xref:System.Security.Claims.ClaimsIdentity>使用する、インスタンス、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>プロパティまたはを使用して、プライマリ id にアクセスできる、<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-125">In the uncommon case in which the <xref:System.Security.Claims.ClaimsPrincipal> contains multiple <xref:System.Security.Claims.ClaimsIdentity> instances, you can use the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property or you can access the primary identity by using the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="76833-126"><xref:System.Security.Claims.ClaimsPrincipal> これらの要求を検索することがありますをいくつかのメソッドを提供し、言語統合クエリ (LINQ) を完全にサポートします。</span><span class="sxs-lookup"><span data-stu-id="76833-126"><xref:System.Security.Claims.ClaimsPrincipal> provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</span></span> <span data-ttu-id="76833-127">使用して、プリンシパルの id を追加できる、<xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A>または<xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="76833-127">Identities can be added to the principal by using the <xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A> or <xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76833-128">Id を追加する、 <xref:System.Security.Claims.ClaimsPrincipal>、呼び出し元は、完全な信頼をいる必要があります。</span><span class="sxs-lookup"><span data-stu-id="76833-128">To add identities to the <xref:System.Security.Claims.ClaimsPrincipal>, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="76833-129">既定では、WIF が優先<xref:System.Security.Principal.WindowsIdentity>オブジェクトを経由して返されるプライマリ id を選択するときに、<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-129">By default, WIF prioritizes <xref:System.Security.Principal.WindowsIdentity> objects when selecting the primary identity to return through the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="76833-130">を通じてデリゲートを指定することでこの動作を変更する、<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>プロパティを選択します。</span><span class="sxs-lookup"><span data-stu-id="76833-130">You can modify this behavior by supplying a delegate through the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to perform the selection.</span></span> <span data-ttu-id="76833-131"><xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>プロパティに対して同様の機能を提供する、<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-131">The <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property provides similar functionality for the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 <span data-ttu-id="76833-132">クレームに基づくモデルで、プリンシパルが指定されたロールがかどうかは、基になる id によって提示されるクレームによって決まります。</span><span class="sxs-lookup"><span data-stu-id="76833-132">In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</span></span> <span data-ttu-id="76833-133"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>メソッドによって指定されたロール値を持つクレームを継承するかどうかを判断するプリンシパルに関連付けられた各 id が本質的にチェックします。</span><span class="sxs-lookup"><span data-stu-id="76833-133">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</span></span> <span data-ttu-id="76833-134">要求の種類 (によって表される、<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>プロパティ) 要求を調べる必要がありますを決定するために使用ロールの中に、チェックがを通じて id で指定されたその<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-134">The type of the claim (represented by its <xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> property) used to determine which claims should be examined during role checks is specified on an identity through its <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="76833-135">そのため、ロールのチェック中に検証した要求は、さまざまな id のプリンシパルに関連付けられている別の種類のできます。</span><span class="sxs-lookup"><span data-stu-id="76833-135">Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76833-136">次の例では、HTTP 要求内のユーザーによって提示されるクレームを抽出し、HTTP 応答に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="76833-136">The following example extracts the claims presented by a user in an HTTP request and writes them to the HTTP response.</span></span> <span data-ttu-id="76833-137">現在のユーザーがから読み取り、<xref:System.Web.HttpContext>として、<xref:System.Security.Claims.ClaimsPrincipal>します。</span><span class="sxs-lookup"><span data-stu-id="76833-137">The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="76833-138">要求はその後、そこから読み取られます、応答に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="76833-138">The claims are then read from it and then are written to the response.</span></span>  
  
```  
  
ClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  
if (null != principal)  
{  
   foreach (Claim claim in principal.Claims)  
   {  
      Response.Write("CLAIM TYPE: " + claim.Type + "; CLAIM VALUE: " + claim.Value + "</br>");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsIdentity" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthenticationManager" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76833-139"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-139">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76833-140"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-140">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-141">Id の新しいインスタンスに関連付けられたがないです。</span><span class="sxs-lookup"><span data-stu-id="76833-141">No identities are associated with the new instance.</span></span> <span data-ttu-id="76833-142">(、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクションが空)。</span><span class="sxs-lookup"><span data-stu-id="76833-142">(The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identities" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities"><span data-ttu-id="76833-143">新しい要求プリンシパルの初期化元 ID。</span><span class="sxs-lookup"><span data-stu-id="76833-143">The identities from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="76833-144">指定した要求 ID を使用して、<see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-144">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class using the specified claims identities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-145"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>指定した id を持つコレクションを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-145">The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is initialized with the specified identities.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-146"><paramref name="identities" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-146"><paramref name="identities" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="76833-147"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> を示す <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="76833-147">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span></param>
        <summary><span data-ttu-id="76833-148"><see cref="T:System.IO.BinaryReader" /> を指定して、<see cref="T:System.Security.Claims.ClaimsPrincipal" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-148">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsPrincipal" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-149">通常、<xref:System.IO.BinaryReader>からバイトを使用して構築される<xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>と同じ方法で初期化し、<xref:System.IO.BinaryWriter>します。</span><span class="sxs-lookup"><span data-stu-id="76833-149">Normally, the <xref:System.IO.BinaryReader> is constructed using the bytes from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A> and initialized in the same way as the <xref:System.IO.BinaryWriter>.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-150"><paramref name="reader" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="76833-150"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="76833-151">新しい要求プリンシパルの初期化元 ID。</span><span class="sxs-lookup"><span data-stu-id="76833-151">The identity from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="76833-152">指定された ID から <see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-152">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-153">指定された id から割り当てることができる場合<xref:System.Security.Claims.ClaimsIdentity>、初期化に使用されますが、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="76833-153">If the specified identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, it is used to initialize the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="76833-154">それ以外の場合、<xref:System.Security.Claims.ClaimsIdentity>指定した id を使用して作成され、コレクションを初期化するために使用します。</span><span class="sxs-lookup"><span data-stu-id="76833-154">Otherwise, a <xref:System.Security.Claims.ClaimsIdentity> is created using the specified identity and is used to initialize the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-155"><paramref name="identity" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-155"><paramref name="identity" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal principal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="76833-156">新しい要求プリンシパルの初期化元となるプリンシパル。</span><span class="sxs-lookup"><span data-stu-id="76833-156">The principal from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="76833-157">指定されたプリンシパルから <see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-157">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-158">指定したプリンシパルがから割り当て可能な場合<xref:System.Security.Claims.ClaimsPrincipal>、その id のすべてに追加されます、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="76833-158">If the specified principal is assignable from <xref:System.Security.Claims.ClaimsPrincipal>, all of its identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="76833-159">指定したプリンシパルがから割り当てることがない場合<xref:System.Security.Claims.ClaimsPrincipal>、新しい<xref:System.Security.Claims.ClaimsIdentity>から作成された、<xref:System.Security.Principal.IIdentity>でその<xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType>プロパティに追加し、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="76833-159">If the specified principal is not assignable from <xref:System.Security.Claims.ClaimsPrincipal>, a new <xref:System.Security.Claims.ClaimsIdentity> is created from the <xref:System.Security.Principal.IIdentity> in its <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property and added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-160"><paramref name="principal" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-160"><paramref name="principal" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsPrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsPrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="76833-161">シリアル化されたデータ。</span><span class="sxs-lookup"><span data-stu-id="76833-161">The serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="76833-162">シリアル化のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="76833-162">The context for serialization.</span></span></param>
        <summary><span data-ttu-id="76833-163"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> を使用して作成したシリアル化ストリームから <see cref="T:System.Runtime.Serialization.ISerializable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="76833-163">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-164"><paramref name="info" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-164"><paramref name="info" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="76833-165">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="76833-165">requires full trust for the immediate caller.</span></span> <span data-ttu-id="76833-166">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="76833-166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentities">
      <MemberSignature Language="C#" Value="public virtual void AddIdentities (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentities(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentities (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentities(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit&#xA;override this.AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit" Usage="claimsPrincipal.AddIdentities identities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities"><span data-ttu-id="76833-167">追加する要求 ID。</span><span class="sxs-lookup"><span data-stu-id="76833-167">The claims identities to add.</span></span></param>
        <summary><span data-ttu-id="76833-168">指定された要求 ID をこの要求プリンシパルに追加します。</span><span class="sxs-lookup"><span data-stu-id="76833-168">Adds the specified claims identities to this claims principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-169">Id に追加、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="76833-169">The identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-170"><paramref name="identities" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-170"><paramref name="identities" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="76833-171">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="76833-171">requires full trust for the immediate caller.</span></span> <span data-ttu-id="76833-172">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="76833-172">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddIdentity">
      <MemberSignature Language="C#" Value="public virtual void AddIdentity (System.Security.Claims.ClaimsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentity(class System.Security.Claims.ClaimsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentity (identity As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentity(System::Security::Claims::ClaimsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit&#xA;override this.AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit" Usage="claimsPrincipal.AddIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="76833-173">追加するクレーム ID。</span><span class="sxs-lookup"><span data-stu-id="76833-173">The claims identity to add.</span></span></param>
        <summary><span data-ttu-id="76833-174">このクレーム プリンシパルに指定されたクレーム ID を追加します。</span><span class="sxs-lookup"><span data-stu-id="76833-174">Adds the specified claims identity to this claims principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-175">Id を追加、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="76833-175">The identity is added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-176"><paramref name="identity" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-176"><paramref name="identity" /> is **null**.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="76833-177">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="76833-177">requires full trust for the immediate caller.</span></span> <span data-ttu-id="76833-178">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="76833-178">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsPrincipal/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsPrincipal/&lt;get_Claims&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-179">この要求プリンシパルと関連付けられているすべての要求 ID のすべての要求を含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-179">Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="76833-180">このプリンシパルに関連付けられた要求。</span><span class="sxs-lookup"><span data-stu-id="76833-180">The claims associated with this principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-181">要求プリンシパルが一連の<xref:System.Security.Claims.ClaimsIdentity>の Id プロパティを通じてアクセスできるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="76833-181">A claims principal has a collection of <xref:System.Security.Claims.ClaimsIdentity> objects that is accessible through the Identities property.</span></span> <span data-ttu-id="76833-182">各<xref:System.Security.Claims.ClaimsIdentity>コレクションには 1 つまたは複数の要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="76833-182">Each <xref:System.Security.Claims.ClaimsIdentity> in the collection contains one or more claims.</span></span> <span data-ttu-id="76833-183"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>プロパティがこのコレクション内のクレーム id のすべてからすべてのクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="76833-183">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims from all of the claims identities in this collection.</span></span>  
  
 <span data-ttu-id="76833-184"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>プロパティのカスタム実装で調べることができます、<xref:System.Security.Claims.ClaimsAuthenticationManager>認証決定を行うまたはフィルター処理、変換、または; 入力方向の要求セットを強化するにはクラスのカスタム実装によって、<xref:System.Security.Claims.ClaimsAuthorizationManager>クラスを適用するには承認ポリシー。またはアプリケーションによって、承認決定を行う、またはユーザー エクスペリエンスをカスタマイズするコードは、コレクション内に存在する要求に基づきます。</span><span class="sxs-lookup"><span data-stu-id="76833-184">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property can be examined by custom implementations of the <xref:System.Security.Claims.ClaimsAuthenticationManager> class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the <xref:System.Security.Claims.ClaimsAuthorizationManager> class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipalSelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`1&lt;class System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClaimsPrincipalSelector As Func(Of ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ ClaimsPrincipalSelector { Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ get(); void set(Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipalSelector : Func&lt;System.Security.Claims.ClaimsPrincipal&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Claims.ClaimsPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-185"><see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> プロパティによって返される要求プリンシパルを選択するために使用するデリゲートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76833-185">Gets or sets the delegate used to select the claims principal returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> property.</span></span></summary>
        <value><span data-ttu-id="76833-186">デリゲート。</span><span class="sxs-lookup"><span data-stu-id="76833-186">The delegate.</span></span> <span data-ttu-id="76833-187">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="76833-187">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-188">既定の動作をオーバーライドするには、このプロパティを設定することができます、<xref:System.Security.Claims.ClaimsPrincipal.Current%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-188">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="76833-189">設定操作では、直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="76833-189">Set operation requires full trust for the immediate caller.</span></span> <span data-ttu-id="76833-190">このメンバーは、部分的に信頼されたまたは透過的なコードで設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="76833-190">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Current" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsPrincipal.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76833-191">このインスタンスの新しいコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="76833-191">Returns a copy of this instance.</span></span></summary>
        <returns><span data-ttu-id="76833-192">現在の <see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトの新しいコピー。</span><span class="sxs-lookup"><span data-stu-id="76833-192">A new copy of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaimsIdentity (reader As BinaryReader) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsPrincipal.CreateClaimsIdentity reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="76833-193">バイナリ リーダー。</span><span class="sxs-lookup"><span data-stu-id="76833-193">The binary reader.</span></span></param>
        <summary><span data-ttu-id="76833-194">新しいクレーム ID を作成します。</span><span class="sxs-lookup"><span data-stu-id="76833-194">Creates a new claims identity.</span></span></summary>
        <returns><span data-ttu-id="76833-195">作成されたクレーム ID。</span><span class="sxs-lookup"><span data-stu-id="76833-195">The created claims identity.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Security.Claims.ClaimsPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Claims.ClaimsPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Claims::ClaimsPrincipal ^ Current { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-196">現在の要求プリンシパルを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-196">Gets the current claims principal.</span></span></summary>
        <value><span data-ttu-id="76833-197">現在の要求プリンシパル。</span><span class="sxs-lookup"><span data-stu-id="76833-197">The current claims principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-198">既定では、<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>が返されます。</span><span class="sxs-lookup"><span data-stu-id="76833-198">By default, <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> is returned.</span></span> <span data-ttu-id="76833-199">この動作を設定して変更することができます、<xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A>プロパティを現在のプリンシパルを決定するために呼び出すデリゲートを指定します。</span><span class="sxs-lookup"><span data-stu-id="76833-199">You can change this behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property to specify a delegate to be called to determine the current principal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-200">派生型によって提供される追加データが含まれています。</span><span class="sxs-lookup"><span data-stu-id="76833-200">Contains any additional data provided by a derived type.</span></span> <span data-ttu-id="76833-201">通常、<see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> の呼び出し時に設定されます。</span><span class="sxs-lookup"><span data-stu-id="76833-201">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span></span></summary>
        <value><span data-ttu-id="76833-202">A<see cref="T:System.Byte" />シリアル化されたデータの追加を表す配列。</span><span class="sxs-lookup"><span data-stu-id="76833-202">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76833-203">指定した条件に一致するすべてのクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-203">Retrieves all of the claims that match a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="76833-204">一致ロジックを実行する関数。</span><span class="sxs-lookup"><span data-stu-id="76833-204">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="76833-205">指定した述語に一致するすべてのクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-205">Retrieves all of the claims that are matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="76833-206">一致するクレーム。</span><span class="sxs-lookup"><span data-stu-id="76833-206">The matching claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-207">要求プリンシパルに関連付けられているすべての id からクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="76833-207">Returns claims from all identities associated with the claims principal.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-208"><paramref name="match" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-208"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="76833-209">クレームに一致するクレームの種類。</span><span class="sxs-lookup"><span data-stu-id="76833-209">The claim type against which to match claims.</span></span></param>
        <summary><span data-ttu-id="76833-210">すべてのクレームまたは指定されたクレーム型のすべてのクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-210">Retrieves all or the claims that have the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="76833-211">一致するクレーム。</span><span class="sxs-lookup"><span data-stu-id="76833-211">The matching claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-212">要求プリンシパルに関連付けられているすべての id からクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="76833-212">Returns claims from all identities associated with the claims principal.</span></span> <span data-ttu-id="76833-213">序数のケースの区別でを使用して、比較が行われます`type`します。</span><span class="sxs-lookup"><span data-stu-id="76833-213">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-214"><paramref name="type" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-214"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76833-215">指定した条件に一致する最初のクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-215">Retrieves the first claim that matches a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="76833-216">一致ロジックを実行する関数。</span><span class="sxs-lookup"><span data-stu-id="76833-216">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="76833-217">指定した述語に一致する最初のクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-217">Retrieves the first claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="76833-218">最初に一致するクレーム。一致が見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="76833-218">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-219"><paramref name="match" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-219"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="76833-220">一致するクレームの種類。</span><span class="sxs-lookup"><span data-stu-id="76833-220">The claim type to match.</span></span></param>
        <summary><span data-ttu-id="76833-221">指定したクレームの種類の最初のクレームを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-221">Retrieves the first claim with the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="76833-222">最初に一致するクレーム。一致が見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="76833-222">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-223"><paramref name="type" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-223"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsPrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="76833-224">データを読み込む先のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="76833-224">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="76833-225">このシリアル化のシリアル化先。</span><span class="sxs-lookup"><span data-stu-id="76833-225">The destination for this serialization.</span></span> <span data-ttu-id="76833-226">
  <see langword="null" /> の可能性があります。</span><span class="sxs-lookup"><span data-stu-id="76833-226">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="76833-227"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトをシリアル化するために必要なデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="76833-227">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-228"><paramref name="info" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="76833-228"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="76833-229">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="76833-229">requires full trust for the immediate caller.</span></span> <span data-ttu-id="76833-230">このメンバーは、部分的に信頼されたまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="76833-230">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76833-231">このクレーム プリンシパルに関連付けられたいずれかのクレーム ID が、指定した条件に一致するクレームを含んでいるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="76833-231">Determines whether any of the claims identities associated with this claims principal contains a claim that matches specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsPrincipal.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="76833-232">一致ロジックを実行する関数。</span><span class="sxs-lookup"><span data-stu-id="76833-232">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="76833-233">このクレーム プリンシパルに関連付けられたいずれかのクレーム ID が、指定した述語に一致するクレームを含んでいるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="76833-233">Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="76833-234">一致するクレームが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="76833-234"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-235"><paramref name="match" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-235"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsPrincipal.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="76833-236">一致するクレームの種類。</span><span class="sxs-lookup"><span data-stu-id="76833-236">The type of the claim to match.</span></span></param>
        <param name="value"><span data-ttu-id="76833-237">一致させるクレームの値。</span><span class="sxs-lookup"><span data-stu-id="76833-237">The value of the claim to match.</span></span></param>
        <summary><span data-ttu-id="76833-238">このクレーム プリンシパルに関連付けられたいずれかのクレーム ID が、指定したクレームの種類および値のクレームを含んでいるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="76833-238">Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</span></span></summary>
        <returns><span data-ttu-id="76833-239">一致するクレームが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="76833-239"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-240">チェックしません、<xref:System.Security.Claims.Claim.Issuer%2A>または<xref:System.Security.Claims.Claim.OriginalIssuer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-240">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="76833-241">序数値の大文字と小文字を使用して、比較が行われますケース型に依存します。</span><span class="sxs-lookup"><span data-stu-id="76833-241">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-242"><paramref name="type" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-242"><paramref name="type" /> is **null**.</span></span>  
  
<span data-ttu-id="76833-243">または</span><span class="sxs-lookup"><span data-stu-id="76833-243">-or-</span></span> 
 <span data-ttu-id="76833-244"><paramref name="value" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="76833-244"><paramref name="value" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Identities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; Identities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; Identities" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identities As IEnumerable(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ Identities { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identities : seq&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-245">このクレーム プリンシパルに関連付けられたすべてのクレーム ID を含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-245">Gets a collection that contains all of the claims identities associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="76833-246">クレーム ID のコレクション。</span><span class="sxs-lookup"><span data-stu-id="76833-246">The collection of claims identities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-247">一般的なケースでは、コレクションには、1 つの要素のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="76833-247">In the common case, the collection contains only a single element.</span></span>  
  
 <span data-ttu-id="76833-248">いくつかの要素を格納するコレクションのことは`null`します。</span><span class="sxs-lookup"><span data-stu-id="76833-248">It is possible for the collection to contain some elements which are `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-249">このクレーム プリンシパルに関連付けられているプライマリ クレーム ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="76833-249">Gets the primary claims identity associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="76833-250">このクレーム プリンシパルに関連付けられているプライマリ クレーム ID。</span><span class="sxs-lookup"><span data-stu-id="76833-250">The primary claims identity associated with this claims principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-251">既定では、フレームワークが型の id を優先<xref:System.Security.Principal.WindowsIdentity>id を返すときにします。</span><span class="sxs-lookup"><span data-stu-id="76833-251">By default, the framework prioritizes identities of type <xref:System.Security.Principal.WindowsIdentity> when returning the identity.</span></span> <span data-ttu-id="76833-252">最初の<xref:System.Security.Principal.WindowsIdentity>で見つかった、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="76833-252">The first <xref:System.Security.Principal.WindowsIdentity> found in the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is returned.</span></span> <span data-ttu-id="76833-253">存在する場合ありません<xref:System.Security.Principal.WindowsIdentity>から割り当て可能な最初の id、コレクションで<xref:System.Security.Claims.ClaimsIdentity>が返されます。</span><span class="sxs-lookup"><span data-stu-id="76833-253">If there is no <xref:System.Security.Principal.WindowsIdentity> in the collection, the first identity assignable from <xref:System.Security.Claims.ClaimsIdentity> is returned.</span></span> <span data-ttu-id="76833-254">存在する場合ありません<xref:System.Security.Claims.ClaimsIdentity>、`null`が返されます。</span><span class="sxs-lookup"><span data-stu-id="76833-254">If there is no <xref:System.Security.Claims.ClaimsIdentity>, `null` is returned.</span></span> <span data-ttu-id="76833-255">場合、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A>コレクションは空で、<xref:System.ArgumentNullException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="76833-255">If the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="76833-256">設定して、既定の動作を変更することができます、<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A>プロパティ id を確認するために呼び出すデリゲートを指定します。</span><span class="sxs-lookup"><span data-stu-id="76833-256">You can change the default behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to specify a delegate to be called to determine the identity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="claimsPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="76833-257">確認対象のロール。</span><span class="sxs-lookup"><span data-stu-id="76833-257">The role for which to check.</span></span></param>
        <summary><span data-ttu-id="76833-258">このクレーム プリンシパルによって表されるエンティティ (ユーザー) に指定されたロールが課されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="76833-258">Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="76833-259">クレーム プリンシパルが指定したロールになっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="76833-259"><see langword="true" /> if claims principal is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-260"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A>メソッドは、この要求プリンシパルが所有する id には型のクレームが含まれて かどうかを確認します。<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>要求の値がで指定された値と等しく、`role`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="76833-260">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method checks whether an identity that this claims principal possesses contains a claim of type <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> where the value of the claim is equal to the value specified by the `role` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76833-261">各<xref:System.Security.Claims.ClaimsIdentity>にロールを表すクレームの種類の独自の定義があります。</span><span class="sxs-lookup"><span data-stu-id="76833-261">Each <xref:System.Security.Claims.ClaimsIdentity> has its own definition of the claim type that represents a role.</span></span> <span data-ttu-id="76833-262">この要求の種類のアクセスおよび使用して設定できる、<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-262">This claim type can be accessed and set through the <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentitySelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt;, class System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property PrimaryIdentitySelector As Func(Of IEnumerable(Of ClaimsIdentity), ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ PrimaryIdentitySelector { Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); void set(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentitySelector : Func&lt;seq&lt;System.Security.Claims.ClaimsIdentity&gt;, System.Security.Claims.ClaimsIdentity&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76833-263"><see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> プロパティによって返されるクレーム ID を選択するために使用するデリゲートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="76833-263">Gets or sets the delegate used to select the claims identity returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> property.</span></span></summary>
        <value><span data-ttu-id="76833-264">デリゲート。</span><span class="sxs-lookup"><span data-stu-id="76833-264">The delegate.</span></span> <span data-ttu-id="76833-265">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="76833-265">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76833-266">既定の動作をオーバーライドするには、このプロパティを設定することができます、<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="76833-266">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="76833-267">設定操作では、直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="76833-267">Set operation requires full trust for the immediate caller.</span></span> <span data-ttu-id="76833-268">このメンバーは、部分的に信頼されたまたは透過的なコードで設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="76833-268">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsPrincipal.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76833-269">データ ストレージに使用するライター。</span><span class="sxs-lookup"><span data-stu-id="76833-269">The writer to use for data storage.</span></span></param>
        <summary><span data-ttu-id="76833-270"><see cref="T:System.IO.BinaryWriter" /> を使用してシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="76833-270">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-271"><paramref name="writer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="76833-271"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsPrincipal.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76833-272">データ ストレージに使用するライター。</span><span class="sxs-lookup"><span data-stu-id="76833-272">The writer to use for data storage.</span></span></param>
        <param name="userData"><span data-ttu-id="76833-273">派生型によって提供される追加データ。</span><span class="sxs-lookup"><span data-stu-id="76833-273">Additional data provided by the derived type.</span></span></param>
        <summary><span data-ttu-id="76833-274"><see cref="T:System.IO.BinaryWriter" /> を使用してシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="76833-274">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76833-275"><paramref name="writer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="76833-275"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>