<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19d0027b7a929a454eabf2814d8a208ed8f72ee0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9f9de-101">クレーム認証マネージャーの基本実装を定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f9de-101">Defines the base implementation for a claims authentication manager.</span>
      </span>
      <span data-ttu-id="9f9de-102">クレーム認証マネージャーは、実行がアプリケーション コードに到達する前に、処理ロジック (フィルター処理、検証、拡張機能) を受信プリンシパル内のクレームのコレクションに適用するための場所を、クレーム処理パイプラインに提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f9de-102">The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f9de-103">認証マネージャーは、アプリケーションの機能拡張ポイント要求処理パイプラインの検証、フィルター処理、変更に使用できる信頼性情報、入力方向の要求またはによって提示されるクレームのセットに新しい要求を挿入、 <xref:System.Security.Claims.ClaimsPrincipal> RP する前にアプリケーション コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="9f9de-103">The claims authentication manager provides an extensibility point in the application’s claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <xref:System.Security.Claims.ClaimsPrincipal> before the RP application code is executed.</span></span> <span data-ttu-id="9f9de-104">カスタム実装を返すことができますも<xref:System.Security.Claims.ClaimsPrincipal>RP アプリケーションで必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="9f9de-104">You can even return a custom implementation of <xref:System.Security.Claims.ClaimsPrincipal> if your RP application requires it.</span></span> <span data-ttu-id="9f9de-105">によって提供される既定の実装、<xref:System.Security.Claims.ClaimsAuthenticationManager>クラス内のクレームが返されます、<xref:System.Security.Claims.ClaimsPrincipal>未変更の状態です。 ただし、このクラスから派生し、上書き、<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>内のクレームを変更する方法、 <xref:System.Security.Claims.ClaimsPrincipal> (またはを返すカスタム<xref:System.Security.Claims.ClaimsPrincipal>)。</span><span class="sxs-lookup"><span data-stu-id="9f9de-105">The default implementation provided by the <xref:System.Security.Claims.ClaimsAuthenticationManager> class returns the claims in the <xref:System.Security.Claims.ClaimsPrincipal> unmodified; however, you can derive from this class and override the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method to modify the claims in the <xref:System.Security.Claims.ClaimsPrincipal> (or to return a custom <xref:System.Security.Claims.ClaimsPrincipal>).</span></span>  
  
 <span data-ttu-id="9f9de-106">カスタムの要求認証マネージャーを作成するための一般的な理由は、追加、削除、または情報のみが認識するか、RP アプリケーションがより管理は、おそらく、に基づいて要求を変換するです。</span><span class="sxs-lookup"><span data-stu-id="9f9de-106">A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application.</span></span> <span data-ttu-id="9f9de-107">たとえば、顧客の購入、ショッピング カート アプリケーションでの履歴は、RP アプリケーションによって維持してについては、受信したプリンシパル名の要求の値に基づいて、要求認証マネージャーによって返される要求プリンシパルに追加して、データ ベースに保持される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="9f9de-107">For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.</span></span>  
  
 <span data-ttu-id="9f9de-108">使用するアプリケーションを構成することができます、`ClaimsAuthenticationManager`を使用してプログラムでいずれか、<xref:System.IdentityModel.Configuration.IdentityConfiguration>クラスまたは構成を通じて、 [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)要素 (子要素は、 [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)要素)。</span><span class="sxs-lookup"><span data-stu-id="9f9de-108">You can configure your application to use a `ClaimsAuthenticationManager` either programmatically by using the <xref:System.IdentityModel.Configuration.IdentityConfiguration> class or in configuration through the [&lt;claimsAuthenticationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) element (which is a child element of the [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element).</span></span> <span data-ttu-id="9f9de-109">オーバーライドすることができます、<xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>のカスタムの子要素の処理を提供するメソッドを`<claimsAuthenticationManager>`要素を使用する、カスタムのマネージャーを構成できます。</span><span class="sxs-lookup"><span data-stu-id="9f9de-109">You can override the <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> method to provide processing for custom child elements of the `<claimsAuthenticationManager>` element through which your custom manager can be configured.</span></span> <span data-ttu-id="9f9de-110">基本実装<xref:System.Security.Claims.ClaimsAuthenticationManager>すべての子要素を処理しません。</span><span class="sxs-lookup"><span data-stu-id="9f9de-110">The base implementation of <xref:System.Security.Claims.ClaimsAuthenticationManager> does not handle any child elements.</span></span>  
  
 <span data-ttu-id="9f9de-111">Windows Identity Foundation (WIF) で、呼び出さ要求パイプラインからすることにより、要求認証マネージャーを使用するアプリケーションを構成します。</span><span class="sxs-lookup"><span data-stu-id="9f9de-111">Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f9de-112">次のコードは、入力方向の要求ですべてのチェックを実行することがなく、受信したプリンシパルにロール クレームを追加するマネージャーを単純な要求ベース認証には.</span><span class="sxs-lookup"><span data-stu-id="9f9de-112">The following code shows a simple claims authentication manager that adds a role claim to the incoming principal without performing any check on the incoming claims..</span></span>  
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 <span data-ttu-id="9f9de-113">次の XML に示します、`<claimsAuthenticationManager>`要素。</span><span class="sxs-lookup"><span data-stu-id="9f9de-113">The following XML shows the `<claimsAuthenticationManager>` element.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f9de-114">
            <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-114">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="9f9de-115">要求されているリソースのアドレス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-115">The address of the resource that is being requested.</span>
          </span>
        </param>
        <param name="incomingPrincipal">
          <span data-ttu-id="9f9de-116">リソースにアクセスしようとしている認証されたユーザーを表すクレーム プリンシパル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-116">The claims principal that represents the authenticated user that is attempting to access the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f9de-117">派生クラスでオーバーライドされると、RP アプリケーションの要件と一致する <see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-117">When overridden in a derived class, returns a <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object consistent with the requirements of the RP application.</span>
          </span>
          <span data-ttu-id="9f9de-118">既定の実装は受信 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> を変更しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-118">The default implementation does not modify the incoming <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f9de-119">RP アプリケーションに必要な変更を含むクレーム プリンシパル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-119">A claims principal that contains any modifications necessary for the RP application.</span>
          </span>
          <span data-ttu-id="9f9de-120">既定の実装は、受信クレーム プリンシパルを修正せず返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-120">The default implementation returns the incoming claims principal unmodified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f9de-121"><xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>メソッドが呼び出されるフィルターを適用する派生クラスでは、このメソッドをオーバーライドすることができます、要求処理パイプラインでは、変更、または、RP アプリケーションのポリシーに従って要求プリンシパルに信頼性情報を挿入します。</span><span class="sxs-lookup"><span data-stu-id="9f9de-121">The <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method is called from the request processing pipeline You can override this method in a derived class to filter, modify, or inject claims into the claims principal according to the policy of your RP application.</span></span> <span data-ttu-id="9f9de-122">RP アプリケーションの要件によっては、カスタム実装でも返すことができます<xref:System.Security.Claims.ClaimsPrincipal>です。</span><span class="sxs-lookup"><span data-stu-id="9f9de-122">Depending on the requirements of the RP application, you can even return a custom implementation of <xref:System.Security.Claims.ClaimsPrincipal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="9f9de-123">カスタム構成要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-123">The custom configuration elements.</span>
          </span>
          <span data-ttu-id="9f9de-124">リスト内の各ノードは <see cref="T:System.Xml.XmlElement" /> 型です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-124">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f9de-125">派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f9de-125">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f9de-126"><xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>メソッドは、構成のインフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9f9de-126">The <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="9f9de-127">このメソッドが呼び出されたときに、`nodelist`の最上位レベルの子要素が表示されます、 [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)構成ファイルからの要素。</span><span class="sxs-lookup"><span data-stu-id="9f9de-127">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;claimsAuthenticationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) element from the configuration file.</span></span> <span data-ttu-id="9f9de-128">属性または派生クラスを定義する構成スキーマに応じて子要素これらの各要素に含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="9f9de-128">Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span> <span data-ttu-id="9f9de-129">子要素が表示されない場合は、`<claimsAuthenticationManager>`構成ファイル内の要素、このメソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="9f9de-129">If no child elements appear under the `<claimsAuthenticationManager>` element in the configuration file, this method is not called.</span></span>  
  
 <span data-ttu-id="9f9de-130">既定の実装をスロー、<xref:System.NotImplementedException>です。</span><span class="sxs-lookup"><span data-stu-id="9f9de-130">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="9f9de-131">構成ファイルから、要求認証マネージャーの初期化を有効にする、派生クラスでこのメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9f9de-131">Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file.</span></span> <span data-ttu-id="9f9de-132">たとえば、構成要素が要求プリンシパル; を認証するときにその後にポリシーを表す場合があります。または、別のクレームのプリンシパルに追加する元の属性ストアをポイントに使用する場合があります。</span><span class="sxs-lookup"><span data-stu-id="9f9de-132">For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>