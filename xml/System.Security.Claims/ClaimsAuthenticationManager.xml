<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a180b05db991abf95954dec907506a207deaa8d6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70475348" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5c4e1-101">クレーム認証マネージャーの基本実装を定義します。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-101">Defines the base implementation for a claims authentication manager.</span></span> <span data-ttu-id="5c4e1-102">クレーム認証マネージャーは、実行がアプリケーション コードに到達する前に、処理ロジック (フィルター処理、検証、拡張機能) を受信プリンシパル内のクレームのコレクションに適用するための場所を、クレーム処理パイプラインに提供します。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-102">The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c4e1-103">要求認証マネージャーは、アプリケーションの要求処理パイプラインの機能拡張ポイントを提供します。このパイプラインを使用して、RP の<xref:System.Security.Claims.ClaimsPrincipal>前にによって提示されるクレームの検証、フィルター、変更、入力方向の要求、または新しい要求の挿入を行うことができます。アプリケーションコードが実行されます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-103">The claims authentication manager provides an extensibility point in the application's claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <xref:System.Security.Claims.ClaimsPrincipal> before the RP application code is executed.</span></span> <span data-ttu-id="5c4e1-104">RP アプリケーションで必要な場合は、 <xref:System.Security.Claims.ClaimsPrincipal>のカスタム実装を返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-104">You can even return a custom implementation of <xref:System.Security.Claims.ClaimsPrincipal> if your RP application requires it.</span></span> <span data-ttu-id="5c4e1-105"><xref:System.Security.Claims.ClaimsAuthenticationManager>クラスによって提供される既定の実装では<xref:System.Security.Claims.ClaimsPrincipal> 、変更されていないの要求が返されます<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> 。ただし、このクラスから派生<xref:System.Security.Claims.ClaimsPrincipal>させ、メソッドをオーバーライドして、内のクレームを変更することができます (または、カスタムを返すには、<xref:System.Security.Claims.ClaimsPrincipal>).</span><span class="sxs-lookup"><span data-stu-id="5c4e1-105">The default implementation provided by the <xref:System.Security.Claims.ClaimsAuthenticationManager> class returns the claims in the <xref:System.Security.Claims.ClaimsPrincipal> unmodified; however, you can derive from this class and override the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method to modify the claims in the <xref:System.Security.Claims.ClaimsPrincipal> (or to return a custom <xref:System.Security.Claims.ClaimsPrincipal>).</span></span>  
  
 <span data-ttu-id="5c4e1-106">カスタム要求認証マネージャーを作成する一般的な理由は、によってのみ認識される情報に基づいて要求を追加、削除、または変換することです。また、RP アプリケーションによって管理しやすくなります。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-106">A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application.</span></span> <span data-ttu-id="5c4e1-107">たとえば、ショッピングカートアプリケーションで購入した顧客の履歴は、RP アプリケーションによって管理されているデータベースに保持されていて、要求認証マネージャーによって返された要求プリンシパルに、受信プリンシパル。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-107">For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.</span></span>  
  
 <span data-ttu-id="5c4e1-108">アプリケーションでを`ClaimsAuthenticationManager`使用するように構成するには、 <xref:System.IdentityModel.Configuration.IdentityConfiguration>クラスを使用するか、 [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)要素 (の子要素である) を使用して構成します。の構成要素)。 [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</span><span class="sxs-lookup"><span data-stu-id="5c4e1-108">You can configure your application to use a `ClaimsAuthenticationManager` either programmatically by using the <xref:System.IdentityModel.Configuration.IdentityConfiguration> class or in configuration through the [&lt;claimsAuthenticationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) element (which is a child element of the [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element).</span></span> <span data-ttu-id="5c4e1-109"><xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>メソッドをオーバーライドして、カスタムマネージャーを構成できる`<claimsAuthenticationManager>`要素のカスタム子要素に処理を提供できます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-109">You can override the <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> method to provide processing for custom child elements of the `<claimsAuthenticationManager>` element through which your custom manager can be configured.</span></span> <span data-ttu-id="5c4e1-110">の<xref:System.Security.Claims.ClaimsAuthenticationManager>基本実装では、子要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-110">The base implementation of <xref:System.Security.Claims.ClaimsAuthenticationManager> does not handle any child elements.</span></span>  
  
 <span data-ttu-id="5c4e1-111">要求認証マネージャーを使用するようにアプリケーションを構成すると、要求パイプラインから Windows Identity Foundation (WIF) によってアプリケーションが呼び出されるようになります。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-111">Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c4e1-112">次のコードは、入力方向の要求に対してチェックを実行せずに、ロール要求を受信プリンシパルに追加する単純な要求認証マネージャーを示しています。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-112">The following code shows a simple claims authentication manager that adds a role claim to the incoming principal without performing any check on the incoming claims.</span></span> 
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 <span data-ttu-id="5c4e1-113">次の XML は、 `<claimsAuthenticationManager>`要素を示しています。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-113">The following XML shows the `<claimsAuthenticationManager>` element.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c4e1-114"><see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-114">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="5c4e1-115">要求されているリソースのアドレス。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-115">The address of the resource that is being requested.</span></span></param>
        <param name="incomingPrincipal"><span data-ttu-id="5c4e1-116">リソースにアクセスしようとしている認証されたユーザーを表すクレーム プリンシパル。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-116">The claims principal that represents the authenticated user that is attempting to access the resource.</span></span></param>
        <summary><span data-ttu-id="5c4e1-117">派生クラスでオーバーライドされると、RP アプリケーションの要件と一致する <see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-117">When overridden in a derived class, returns a <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object consistent with the requirements of the RP application.</span></span> <span data-ttu-id="5c4e1-118">既定の実装は受信 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> を変更しません。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-118">The default implementation does not modify the incoming <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span></summary>
        <returns><span data-ttu-id="5c4e1-119">RP アプリケーションに必要な変更を含むクレーム プリンシパル。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-119">A claims principal that contains any modifications necessary for the RP application.</span></span> <span data-ttu-id="5c4e1-120">既定の実装は、受信クレーム プリンシパルを修正せず返します。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-120">The default implementation returns the incoming claims principal unmodified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c4e1-121"><xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>メソッドは、要求処理パイプラインから呼び出されます。このメソッドを派生クラスでオーバーライドすると、RP アプリケーションのポリシーに従って、クレームをフィルター処理、変更、または要求プリンシパルに挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-121">The <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method is called from the request processing pipeline You can override this method in a derived class to filter, modify, or inject claims into the claims principal according to the policy of your RP application.</span></span> <span data-ttu-id="5c4e1-122">RP アプリケーションの要件によっては、の<xref:System.Security.Claims.ClaimsPrincipal>カスタム実装を返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-122">Depending on the requirements of the RP application, you can even return a custom implementation of <xref:System.Security.Claims.ClaimsPrincipal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="5c4e1-123">カスタム構成要素。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-123">The custom configuration elements.</span></span> <span data-ttu-id="5c4e1-124">リスト内の各ノードは <see cref="T:System.Xml.XmlElement" /> 型です。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-124">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="5c4e1-125">派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-125">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c4e1-126"><xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>メソッドは、構成インフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-126">The <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="5c4e1-127">このメソッドが呼び出されると、 `nodelist`には、構成ファイルの[ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)要素の最上位レベルの子要素が含まれます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-127">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;claimsAuthenticationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) element from the configuration file.</span></span> <span data-ttu-id="5c4e1-128">これらの各要素には、派生クラスに対して定義した構成スキーマに応じて、属性または子要素が含まれている場合があります。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-128">Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span> <span data-ttu-id="5c4e1-129">構成ファイルの要素の`<claimsAuthenticationManager>`下に子要素が表示されない場合、このメソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-129">If no child elements appear under the `<claimsAuthenticationManager>` element in the configuration file, this method is not called.</span></span>  
  
 <span data-ttu-id="5c4e1-130">既定の実装では<xref:System.NotImplementedException>、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-130">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="5c4e1-131">派生クラスでこのメソッドをオーバーライドして、構成ファイルから要求認証マネージャーを初期化できるようにします。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-131">Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file.</span></span> <span data-ttu-id="5c4e1-132">たとえば、構成要素は、要求プリンシパルを認証するときに従うポリシーを記述する場合があります。または、追加の要求をプリンシパルに追加する属性ストアをポイントするために使用されることもあります。</span><span class="sxs-lookup"><span data-stu-id="5c4e1-132">For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
