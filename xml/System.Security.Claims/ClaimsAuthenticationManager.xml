<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a180b05db991abf95954dec907506a207deaa8d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69263944" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>クレーム認証マネージャーの基本実装を定義します。 クレーム認証マネージャーは、実行がアプリケーション コードに到達する前に、処理ロジック (フィルター処理、検証、拡張機能) を受信プリンシパル内のクレームのコレクションに適用するための場所を、クレーム処理パイプラインに提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求認証マネージャーは、アプリケーションの要求処理パイプラインの機能拡張ポイントを提供します。このパイプラインを使用して、RP の<xref:System.Security.Claims.ClaimsPrincipal>前にによって提示されるクレームの検証、フィルター、変更、入力方向の要求、または新しい要求の挿入を行うことができます。アプリケーションコードが実行されます。 RP アプリケーションで必要な場合は、 <xref:System.Security.Claims.ClaimsPrincipal>のカスタム実装を返すこともできます。 <xref:System.Security.Claims.ClaimsAuthenticationManager>クラスによって提供される既定の実装では<xref:System.Security.Claims.ClaimsPrincipal> 、変更されていないの要求が返されます<xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> 。ただし、このクラスから派生<xref:System.Security.Claims.ClaimsPrincipal>させ、メソッドをオーバーライドして、内のクレームを変更することができます (または、カスタムを返すには、<xref:System.Security.Claims.ClaimsPrincipal>).  
  
 カスタム要求認証マネージャーを作成する一般的な理由は、によってのみ認識される情報に基づいて要求を追加、削除、または変換することです。また、RP アプリケーションによって管理しやすくなります。 たとえば、ショッピングカートアプリケーションで購入した顧客の履歴は、RP アプリケーションによって管理されているデータベースに保持されていて、要求認証マネージャーによって返された要求プリンシパルに、受信プリンシパル。  
  
 アプリケーションでを`ClaimsAuthenticationManager`使用するように構成するには、 <xref:System.IdentityModel.Configuration.IdentityConfiguration>クラスを使用するか、 [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)要素 (の子要素である) を使用して構成します。の構成要素)。 [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>メソッドをオーバーライドして、カスタムマネージャーを構成できる`<claimsAuthenticationManager>`要素のカスタム子要素に処理を提供できます。 の<xref:System.Security.Claims.ClaimsAuthenticationManager>基本実装では、子要素は処理されません。  
  
 要求認証マネージャーを使用するようにアプリケーションを構成すると、要求パイプラインから Windows Identity Foundation (WIF) によってアプリケーションが呼び出されるようになります。  
  
   
  
## Examples  
 次のコードは、入力方向の要求に対してチェックを実行せずに、ロール要求を受信プリンシパルに追加する単純な要求認証マネージャーを示しています。 
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 次の XML は、 `<claimsAuthenticationManager>`要素を示しています。  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">要求されているリソースのアドレス。</param>
        <param name="incomingPrincipal">リソースにアクセスしようとしている認証されたユーザーを表すクレーム プリンシパル。</param>
        <summary>派生クラスでオーバーライドされると、RP アプリケーションの要件と一致する <see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトを返します。 既定の実装は受信 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> を変更しません。</summary>
        <returns>RP アプリケーションに必要な変更を含むクレーム プリンシパル。 既定の実装は、受信クレーム プリンシパルを修正せず返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A>メソッドは、要求処理パイプラインから呼び出されます。このメソッドを派生クラスでオーバーライドすると、RP アプリケーションのポリシーに従って、クレームをフィルター処理、変更、または要求プリンシパルに挿入することができます。 RP アプリケーションの要件によっては、の<xref:System.Security.Claims.ClaimsPrincipal>カスタム実装を返すこともできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">カスタム構成要素。 リスト内の各ノードは <see cref="T:System.Xml.XmlElement" /> 型です。</param>
        <summary>派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A>メソッドは、構成インフラストラクチャによって呼び出されます。 このメソッドが呼び出されると、 `nodelist`には、構成ファイルの[ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)要素の最上位レベルの子要素が含まれます。 これらの各要素には、派生クラスに対して定義した構成スキーマに応じて、属性または子要素が含まれている場合があります。 構成ファイルの要素の`<claimsAuthenticationManager>`下に子要素が表示されない場合、このメソッドは呼び出されません。  
  
 既定の実装では<xref:System.NotImplementedException>、がスローされます。 派生クラスでこのメソッドをオーバーライドして、構成ファイルから要求認証マネージャーを初期化できるようにします。 たとえば、構成要素は、要求プリンシパルを認証するときに従うポリシーを記述する場合があります。または、追加の要求をプリンシパルに追加する属性ストアをポイントするために使用されることもあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
