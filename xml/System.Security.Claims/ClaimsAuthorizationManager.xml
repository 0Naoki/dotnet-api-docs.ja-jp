<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsAuthorizationManager.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe203cb2b223a3ac68111978dbba00b7d0fb80ef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe203cb2b223a3ac68111978dbba00b7d0fb80ef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Defines the base implementation for a claims authorization manager.</source>
          <target state="translated">クレーム承認マネージャーの基本実装を定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class provides the base implementation for a claims authorization manager.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>クラス要求承認マネージャーの基本実装を提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>A claims authorization manager can be used in the following two scenarios:</source>
          <target state="translated">要求承認マネージャーは、次の 2 つのシナリオで使用できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In web-based applications and services, a claims authorization manager  can be added to the processing pipeline to provide an extensibility point from which you can authorize access to a resource according to the value of incoming claims before the application code that actually implements the requested resource is called.</source>
          <target state="translated">Web ベースのアプリケーションとサービスで要求承認マネージャーは、実際には、要求されたリソースを実装するアプリケーション コードを呼び出す前に元の入力方向の要求の値に基づいてリソースへのアクセスを承認することができます、機能拡張ポイントを提供する処理パイプラインに追加できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>When you use the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class to perform either imperative or declarative claims-based access checks in your code, the claims authorization manager that is configured for your application is called by the system to perform the check.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>クラスまたは<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph>アプリケーションに対して構成されている要求の承認マネージャーは、チェックを実行するシステムによって呼び出されます。 コードで命令型または宣言型のいずれかの要求ベースのアクセスを実行するクラスを確認します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Claims-based access checks can be performed in both web-based applications and desktop applications.</source>
          <target state="translated">Web ベースのアプリケーションとデスクトップ アプリケーションの両方では、クレームに基づくアクセス チェックを実行できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The default implementation provided by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class authorizes access for each claim presented; however, you can derive from this class and override the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method to provide your own authorization logic.</source>
          <target state="translated">によって提供される既定の実装、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>クラスが表示される各要求のアクセスを承認です。 ただし、このクラスから派生し、上書き、<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph>承認ロジックを提供するメソッド。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The use of a claims authorization manager is optional.</source>
          <target state="translated">要求承認マネージャーの使用はオプションです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>You can configure your application to use a claims authorization manager either programmatically by using the <ph id="ph1">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> class or declaratively, by specifying the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element, which is a child element of the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>identityConfiguration<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element in your application configuration file.</source>
          <target state="translated">いずれかを使用してプログラムで要求承認マネージャーを使用するようアプリケーションを構成することができます、<ph id="ph1">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph>クラスまたは値を指定で宣言によって、 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>子要素である要素の<bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>identityConfiguration<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept>アプリケーション構成ファイル内の要素。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>If your application is a web site or a web application hosted in Internet Information Services (IIS), you must also add the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> in the ASP.NET HTTP Modules collection.</source>
          <target state="translated">かどうか、アプリケーションは、web サイトまたはインターネット インフォメーション サービス (IIS) でホストされている web アプリケーションは、追加する必要ありますも、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> ASP.NET HTTP モジュールのコレクション。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>When you use the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class, the claims authorization manager that is used to perform the access check is the one that is specified in the identity configuration under the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>クラスまたは<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph>クラス、アクセス チェックの実行に使用される要求の承認マネージャーが、下にある id の構成で指定されている 1 つ、<ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In a configuration file, it is the <ph id="ph1">`&lt;identityConfiguration&gt;`</ph> section that is referenced from the default <ph id="ph2">`&lt;federationConfiguration&gt;`</ph> element.</source>
          <target state="translated">構成ファイルでは、<ph id="ph1">`&lt;identityConfiguration&gt;`</ph>既定値から参照されているセクション<ph id="ph2">`&lt;federationConfiguration&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This is true even for Windows Communication Foundation (WCF) services and desktop applications.</source>
          <target state="translated">これは、Windows Communication Foundation (WCF) サービスおよびデスクトップ アプリケーションについても同様です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> base class does not take any additional configuration; however, you can override the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> in derived classes to provide initialization of your claims authorization manager from child elements of the <ph id="ph3">`&lt;claimsAuthorizationElement&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>基底クラスには、追加の構成は取りませんです。 ただし、上書き、<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph>では、要求の承認マネージャーの子要素からの初期化を提供するクラスの派生、<ph id="ph3">`&lt;claimsAuthorizationElement&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The typical scenario is to use these child elements to specify authorization policies which determine which claim types and values are required in order to gain access to which resource.</source>
          <target state="translated">一般的なシナリオでは、これらの子要素を使用して、承認ポリシーはどのリソースにアクセスするために必要なクレームの種類および値を指定します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This is not a hard requirement, though you are free to define whatever usage and syntax make sense for your implementation.</source>
          <target state="translated">どのような使用法および構文合理的な実装を定義するために解放すると、ハードな要件はありません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">使用されているコード例は、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>トピックがから取得した、<ph id="ph2">`Claims Based Authorization`</ph>サンプルです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">このサンプルでは、構成で指定されているポリシーに基づく対象者を承認できるカスタム クレーム承認マネージャーを提供します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">カスタム クレーム承認マネージャーは、次の 3 つの基本的なコンポーネントで構成されます: から派生したクラス<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>、マネージャーを実装する、<ph id="ph2">`ResourceAction`</ph>リソースと、アクションで構成されたペア クラスと、ポリシーのリーダーを読み取り、コンパイルされるポリシー構成ファイルで指定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">これは、ポリシーをコンパイルし、要求の承認マネージャーでリソースへのアクセスを許可するために、プリンシパルの評価に使用します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">ここでは簡略化のため、すべての要素が表示されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">WIF およびそれらをダウンロードする場所についてこのサンプルと使用可能なその他のサンプルについては、次を参照してください。 <bpt id="p1">[</bpt>WIF コード サンプル インデックス<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following code shows the implementation of the custom claims authorization manager.</source>
          <target state="translated">次のコードでは、カスタム クレーム承認マネージャーの実装を示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method reads and compiles the policy from configuration by using the policy reader helper class (not shown) and the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method grants or denies access based on this policy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph>を読み取ってを (非表示) ポリシーのリーダー ヘルパー クラスを使用して、構成からポリシーをコンパイルし、<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph>メソッドが許可されたり、このポリシーに基づいたのアクセスを拒否します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">次のコードは、<ph id="ph1">`ResourceAction`</ph>カスタム クレーム マネージャーによって使用されるクラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following XML shows how to configure the claims authorization manager shown above for a web application hosted in IIS 7.5.</source>
          <target state="translated">次の XML では、IIS 7.5 でホストされている web アプリケーションの前に示した承認マネージャー要求を構成する方法を示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Only the elements specific to the configuration of the claims authorization manager are shown.</source>
          <target state="translated">要求承認マネージャーの構成に固有の要素のみが表示されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Note that a reference to the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> class must be added to the pipeline under the <ph id="ph2">`&lt;system.Webserver&gt;`</ph> element.</source>
          <target state="translated">なおへの参照、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph>クラスは、下にあるパイプラインに追加する必要があります、<ph id="ph2">`&lt;system.Webserver&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>For sites and applications hosted in versions of IIS prior to IIS 7 the modules can be added to the pipeline under the <ph id="ph1">`&lt;system.Web&gt;`</ph> element.</source>
          <target state="translated">サイトおよびアプリケーションのバージョンの IIS 7 の前に IIS でホストされているは、モジュールを下にあるパイプラインに追加することができます、<ph id="ph1">`&lt;system.Web&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This configuration is shown but commented out.</source>
          <target state="translated">この構成では、表示が、コメント アウトします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">要求承認マネージャーによって使用されるポリシーがカスタムで指定された<ph id="ph1">`&lt;policy&gt;`</ph>の下の要素、 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">最初のポリシーで、プリンシパルは、指定されたリソースに対して、指定されたアクションを実行するために指定したクレームのいずれかを持つ必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">2 番目のポリシーで、プリンシパルは、いずれのクレームに、指定されたリソースに対して、指定されたアクションを実行できるを持つ必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">他のユーザー プリンシパルが所有、クレームに関係なくアクセス自動的に付与します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The authorization context that contains the subject, resource, and action for which authorization is to be checked.</source>
          <target state="translated">認証がチェックされるサブジェクト、リソース、およびアクションを含む認証コンテキスト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>When implemented in a derived class, checks authorization for the subject in the specified context to perform the specified action on the specified resource.</source>
          <target state="translated">派生クラスで実装された場合、指定されたリソースで指定されたアクションを実行するために、指定されたコンテキストでサブジェクトの承認を確認します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the subject is authorized to perform the specified action on the specified resource; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">サブジェクトが指定したリソースで指定されたアクションを実行することが承認されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The base implementation always returns <ph id="ph1">`true`</ph>, which authorizes access.</source>
          <target state="translated">基本の実装は常に返します<ph id="ph1">`true`</ph>アクセスを承認します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>You can override this method in a derived class to authorize access based on the requirements of your RP application.</source>
          <target state="translated">RP アプリケーションの要件に基づいてアクセスを承認するために派生クラスでは、このメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>If this method returns <ph id="ph1">`false`</ph>, Windows Identity Foundation (WIF) returns an unauthorized error to the caller; otherwise, execution is passed to the RP application.</source>
          <target state="translated">このメソッドが戻る場合<ph id="ph1">`false`</ph>、Windows Identity Foundation (WIF) は、呼び出し元に、未承認のエラーを返します。 それ以外の場合、実行は、RP アプリケーションに渡されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">使用されているコード例は、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>トピックがから取得した、<ph id="ph2">`Claims Based Authorization`</ph>サンプルです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">このサンプルでは、構成で指定されているポリシーに基づく対象者を承認できるカスタム クレーム承認マネージャーを提供します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">カスタム クレーム承認マネージャーは、次の 3 つの基本的なコンポーネントで構成されます: から派生したクラス<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>、マネージャーを実装する、<ph id="ph2">`ResourceAction`</ph>リソースと、アクションで構成されたペア クラスと、ポリシーのリーダーを読み取り、コンパイルされるポリシー構成ファイルで指定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">これは、ポリシーをコンパイルし、要求の承認マネージャーでリソースへのアクセスを許可するために、プリンシパルの評価に使用します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">ここでは簡略化のため、すべての要素が表示されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">WIF およびそれらをダウンロードする場所についてこのサンプルと使用可能なその他のサンプルについては、次を参照してください。 <bpt id="p1">[</bpt>WIF コード サンプル インデックス<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The following code shows the override of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method.</source>
          <target state="translated">次のコードのオーバーライドを示しています、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This method grants or denies access based on a policy read and compiled from the configuration file.</source>
          <target state="translated">このメソッドは、許可または読み取りし、構成ファイルからコンパイルされているポリシーに基づいてアクセスを拒否します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">次のコードは、<ph id="ph1">`ResourceAction`</ph>カスタム クレーム マネージャーによって使用されるクラスです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">要求承認マネージャーによって使用されるポリシーがカスタムで指定された<ph id="ph1">`&lt;policy&gt;`</ph>の下の要素、 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This policy is read and compiled by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">このポリシーが読み取られコンパイル、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">最初のポリシーで、プリンシパルは、指定されたリソースに対して、指定されたアクションを実行するために指定したクレームのいずれかを持つ必要があります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">2 番目のポリシーで、プリンシパルは、いずれのクレームに、指定されたリソースに対して、指定されたアクションを実行できるを持つ必要があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">他のユーザー プリンシパルが所有、クレームに関係なくアクセス自動的に付与します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">カスタム構成要素。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each node in the list is of type <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">リスト内の各ノードは <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> 型です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">派生クラスでオーバーライドされると、XML からカスタム構成を読み込みます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph>メソッドは、構成のインフラストラクチャによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element from the configuration file.</source>
          <target state="translated">このメソッドが呼び出されたときに、<ph id="ph1">`nodelist`</ph>の最上位レベルの子要素が表示されます、 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>構成ファイルからの要素。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
          <target state="translated">属性または派生クラスを定義する構成スキーマに応じて子要素これらの各要素に含めることがあります。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>If no child elements appear under the <ph id="ph1">`&lt;claimsAuthorizationManager&gt;`</ph> element in the configuration file, this method is not called.</source>
          <target state="translated">子要素が表示されない場合は、<ph id="ph1">`&lt;claimsAuthorizationManager&gt;`</ph>構成ファイル内の要素、このメソッドは呼び出されません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">既定の実装をスロー、<ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Override this method in your derived class to enable initialization of your claims authorization manager from a configuration file.</source>
          <target state="translated">構成ファイルから、要求の承認マネージャーの初期化を有効にする、派生クラスでこのメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Typically, the configuration elements are used to express an authorization policy; however, you can define elements and use them in any way that makes sense based on the requirements of your application.</source>
          <target state="translated">構成要素を使用して承認ポリシーです。 express を一般に、ただし、要素を定義でき、アプリケーションの要件に基づく意味のある任意の方法で使用できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">使用されているコード例は、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>トピックがから取得した、<ph id="ph2">`Claims Based Authorization`</ph>サンプルです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">このサンプルでは、構成で指定されているポリシーに基づく対象者を承認できるカスタム クレーム承認マネージャーを提供します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">カスタム クレーム承認マネージャーは、次の 3 つの基本的なコンポーネントで構成されます: から派生したクラス<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>、マネージャーを実装する、<ph id="ph2">`ResourceAction`</ph>リソースと、アクションで構成されたペア クラスと、ポリシーのリーダーを読み取り、コンパイルされるポリシー構成ファイルで指定します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">これは、ポリシーをコンパイルし、要求の承認マネージャーでリソースへのアクセスを許可するために、プリンシパルの評価に使用します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">ここでは簡略化のため、すべての要素が表示されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">WIF およびそれらをダウンロードする場所についてこのサンプルと使用可能なその他のサンプルについては、次を参照してください。 <bpt id="p1">[</bpt>WIF コード サンプル インデックス<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The following code shows the override of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">次のコードのオーバーライドを示しています、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This method uses a helper policy reader class (not shown) to read and compile authorization policies specified in the configuration file.</source>
          <target state="translated">このメソッドが (非表示) ヘルパー ポリシー リーダー クラスを使用して読み取りを構成ファイルで指定された承認ポリシーをコンパイルします。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Policies are added to a dictionary and are accessed by a <ph id="ph1">`ResourceAction`</ph> key object that is created from the resource and action for which they are intended.</source>
          <target state="translated">ポリシーはディクショナリに追加されによってアクセスされます、<ph id="ph1">`ResourceAction`</ph>をこれらの目的は、リソースとアクションから作成されるキー オブジェクトです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">次のコードは、<ph id="ph1">`ResourceAction`</ph>カスタム クレーム マネージャーによって使用されるクラスです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">要求承認マネージャーによって使用されるポリシーがカスタムで指定された<ph id="ph1">`&lt;policy&gt;`</ph>の下の要素、 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This policy is read and compiled by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">このポリシーが読み取られコンパイル、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">最初のポリシーで、プリンシパルは、指定されたリソースに対して、指定されたアクションを実行するために指定したクレームのいずれかを持つ必要があります。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">2 番目のポリシーで、プリンシパルは、いずれのクレームに、指定されたリソースに対して、指定されたアクションを実行できるを持つ必要があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">他のユーザー プリンシパルが所有、クレームに関係なくアクセス自動的に付与します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>