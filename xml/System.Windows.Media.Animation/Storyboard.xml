<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21bd826f9553a4c8bcb17f10f68d36ff1da133bf" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55309229" /></Metadata><TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74bad-101">子アニメーションのオブジェクトやプロパティの対象化情報を提供するコンテナ タイムライン。</span><span class="sxs-lookup"><span data-stu-id="74bad-101">A container timeline that provides object and property targeting information for its child animations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="74bad-102">ストーリー ボードを対話的に制御します。</span><span class="sxs-lookup"><span data-stu-id="74bad-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="74bad-103">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-104">指定したストーリー ボードをマークアップで制御するためには、<xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>のプロパティ、<xref:System.Windows.Media.Animation.BeginStoryboard>オブジェクトを作成します。 例については、次を参照してください。[方法。イベント トリガーを使用して、開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="74bad-105">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-106">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="74bad-107">データ バインディングとアニメーション タイムライン</span><span class="sxs-lookup"><span data-stu-id="74bad-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="74bad-108">ほとんどのタイムラインのプロパティがデータ バインドまたはアニメーション化できます。ただし、タイミング システムが動作するため、他のデータと同様に動作しない場合はバインドまたはアニメーションのタイムライン データがバインドまたはアニメーション化されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="74bad-109">その動作を理解するのには、タイムラインをアクティブ化の意味を理解することによってください。</span><span class="sxs-lookup"><span data-stu-id="74bad-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="74bad-110">タイムラインをアクティブになると、タイムラインとその子タイムラインのコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="74bad-111">これらのコピーが固定されている (読み取り専用に) と<xref:System.Windows.Media.Animation.Clock>そこからオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="74bad-112">これらのクロックは、ターゲット プロパティをアニメーション化する実際の作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="74bad-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="74bad-113">タイムラインは、データ バインディングまたはアニメーションにそのクロックを作成と、現在の値のスナップショットは作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="74bad-114">場合でも、元のタイムラインは、変更を続ける可能性があります、そのクロックされていません。</span><span class="sxs-lookup"><span data-stu-id="74bad-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="74bad-115">データ バインドやアニメーションの変更を反映するためにタイムラインは、そのクロックを再作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="74bad-116">クロックは再を自動的に作成されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="74bad-117">タイムラインの変更を適用するいくつかの方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="74bad-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="74bad-118">タイムラインがまたはに属している場合、 <xref:System.Windows.Media.Animation.Storyboard>、そのストーリー ボードを使用して再適用して変更を反映することを行うことができます、<xref:System.Windows.Media.Animation.BeginStoryboard>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="74bad-119">これには、アニメーションが再起動されるという副作用があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="74bad-120">コードでは、使用することができます、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>メソッド、ストーリー ボードを前の位置にバックアップします。</span><span class="sxs-lookup"><span data-stu-id="74bad-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="74bad-121">使用してプロパティに直接アニメーションを適用したかどうか、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを呼び出します、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを再度変更されたアニメーションを渡します。</span><span class="sxs-lookup"><span data-stu-id="74bad-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="74bad-122">クロック レベルで直接作業している場合は、作成し、新しいクロック セットを適用および使用して作成されたクロックの以前のセットを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="74bad-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="74bad-123">データの例では、アニメーションがバインドされている、参照してください[キー スプライン アニメーションのサンプル](https://go.microsoft.com/fwlink/?LinkID=160011)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-123">For an example of a data bound animation, see [Key Spline Animation Sample](https://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-124"><see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="74bad-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-125">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている一連のアニメーションを開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-126">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-127">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-128">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-129">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-130">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-130">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-131"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <summary><span data-ttu-id="74bad-132">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-133">使用して置き換えられる対象のプロパティが既にアニメーション化されている場合、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="74bad-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-134">このメソッドを使用して開始されたストーリー ボードの一時停止、再開、またはそれ以外の場合は、起動された後に対話的に制御できません。</span><span class="sxs-lookup"><span data-stu-id="74bad-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="74bad-135">ストーリー ボードを制御するためには、使用、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="74bad-136">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-137">次の例では、アニメーション化するストーリー ボードを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-138"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-139">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-139">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-140"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <summary><span data-ttu-id="74bad-141">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-142">使用して置き換えられる対象のプロパティが既にアニメーション化されている場合、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="74bad-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-143">このメソッドを使用して開始されたストーリー ボードの一時停止、再開、またはそれ以外の場合は、起動された後に対話的に制御できません。</span><span class="sxs-lookup"><span data-stu-id="74bad-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="74bad-144">ストーリー ボードを制御するためには、使用、<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29>または<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="74bad-145">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-146">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-146">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-147"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="isControllable"><span data-ttu-id="74bad-148">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-148"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="74bad-149">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-150">使用して置き換えられる対象のプロパティが既にアニメーション化されている場合、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="74bad-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-151">このストーリー ボードを対話的に制御を同じを指定する必要があります`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="74bad-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="74bad-152">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-153">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-154">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-155">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-156"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-157">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-157">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-158"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="74bad-159">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="74bad-159">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="74bad-160">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-161">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前にそのプロパティに関連付けられたオブジェクトがシステム リソース消費を続けますタイミング システムはありません。これらのクロックを自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="74bad-162">使用してクロックの数が多いを適用すると、パフォーマンスの問題を回避するために<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了後に、アニメーション化されたプロパティから構成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="74bad-163">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="74bad-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="74bad-164">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション化されたオブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="74bad-165">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="74bad-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="74bad-166">これにより、すべてのアニメーション クロックがプロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="74bad-167">特定を削除する<xref:System.Windows.Media.Animation.AnimationClock>クロックの一覧は、使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、 <xref:System.Windows.Media.Animation.ClockController>、呼び出して、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="74bad-168">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="74bad-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="74bad-169">唯一のルート クロックを使用して制御できることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>、<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="74bad-170">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が永久の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="74bad-171">その場合は、ユーザーが判断する必要がありますを呼び出すタイミング<xref:System.Windows.Media.Animation.ClockController.Remove%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="74bad-172">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="74bad-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="74bad-173">オブジェクトがガベージ コレクションの場合は、そのクロックも切断し、ガベージ コレクション。</span><span class="sxs-lookup"><span data-stu-id="74bad-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="74bad-174">クロック オブジェクトの詳細については、次を参照してください。[アニメーションとタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-175">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化すると<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーが右クリックします。</span><span class="sxs-lookup"><span data-stu-id="74bad-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-176">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-176">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-177"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="isControllable"><span data-ttu-id="74bad-178">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-178"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="74bad-179">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-180">使用して置き換えられる対象のプロパティが既にアニメーション化されている場合、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="74bad-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-181">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーター</span><span class="sxs-lookup"><span data-stu-id="74bad-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="74bad-182">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-183">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-184">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-185">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-185">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="74bad-186"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="74bad-187">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="74bad-187">The template to animate.</span></span></param>
        <summary><span data-ttu-id="74bad-188">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-189">使用して置き換えられる対象のプロパティが既にアニメーション化されている場合、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="74bad-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-190">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-191">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-192">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-193">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-193">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-194"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="74bad-195">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="74bad-195">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="74bad-196">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="74bad-197">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化すると<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーが右クリックします。</span><span class="sxs-lookup"><span data-stu-id="74bad-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-198">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-198">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-199"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="74bad-200">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="74bad-200">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="74bad-201">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</span><span class="sxs-lookup"><span data-stu-id="74bad-201">Declares whether the animation is controllable (can be paused) once started.</span></span></param>
        <summary><span data-ttu-id="74bad-202">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-203">対象のプロパティが既にアニメーション化されている指定のハンドオフ動作を使用してが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="74bad-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-204">このストーリー ボードを対話的に制御を同じを指定する必要があります`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="74bad-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="74bad-205">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-206">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-207">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="74bad-208">使用して、Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="74bad-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="74bad-209">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前にそのプロパティに関連付けられたオブジェクトがシステム リソース消費を続けますタイミング システムはありません。これらのクロックを自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="74bad-210">使用してクロックの数が多いを適用すると、パフォーマンスの問題を回避するために<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了後に、アニメーション化されたプロパティから構成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="74bad-211">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="74bad-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="74bad-212">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション化されたオブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="74bad-213">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="74bad-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="74bad-214">これにより、すべてのアニメーション クロックがプロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="74bad-215">特定を削除する<xref:System.Windows.Media.Animation.AnimationClock>クロックの一覧は、使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、 <xref:System.Windows.Media.Animation.ClockController>、呼び出して、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="74bad-216">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="74bad-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="74bad-217">唯一のルート クロックを使用して制御できることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>、<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="74bad-218">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が永久の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="74bad-219">その場合は、ユーザーが判断する必要がありますを呼び出すタイミング<xref:System.Windows.Media.Animation.ClockController.Remove%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="74bad-220">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="74bad-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="74bad-221">オブジェクトがガベージ コレクションの場合は、そのクロックも切断し、ガベージ コレクション。</span><span class="sxs-lookup"><span data-stu-id="74bad-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="74bad-222">クロック オブジェクトの詳細については、次を参照してください。[アニメーションとタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-223">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-224"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="74bad-225">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化する、および<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーが右クリックします。</span><span class="sxs-lookup"><span data-stu-id="74bad-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-226">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-226">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span>  <span data-ttu-id="74bad-227"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="74bad-228">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="74bad-228">The template to animate.</span></span></param>
        <param name="isControllable"><span data-ttu-id="74bad-229">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-229"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="74bad-230">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-231">使用して置き換えられる対象のプロパティが既にアニメーション化されている場合、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="74bad-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="74bad-232">このストーリー ボードを対話的に制御を同じを指定する必要があります`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="74bad-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="74bad-233">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-234">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-235">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-236">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-236">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="74bad-237"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="74bad-238">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="74bad-238">The template to animate.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="74bad-239">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="74bad-239">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <summary><span data-ttu-id="74bad-240">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-241">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-242">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-243">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="74bad-244">使用して、Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="74bad-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="74bad-245">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前にそのプロパティに関連付けられたオブジェクトがシステム リソース消費を続けますタイミング システムはありません。これらのクロックを自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="74bad-246">使用してクロックの数が多いを適用すると、パフォーマンスの問題を回避するために<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了後に、アニメーション化されたプロパティから構成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="74bad-247">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="74bad-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="74bad-248">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション化されたオブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="74bad-249">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="74bad-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="74bad-250">これにより、すべてのアニメーション クロックがプロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="74bad-251">特定を削除する<xref:System.Windows.Media.Animation.AnimationClock>クロックの一覧は、使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、 <xref:System.Windows.Media.Animation.ClockController>、呼び出して、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="74bad-252">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="74bad-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="74bad-253">唯一のルート クロックを使用して制御できることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>、<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="74bad-254">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が永久の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="74bad-255">その場合は、ユーザーが判断する必要がありますを呼び出すタイミング<xref:System.Windows.Media.Animation.ClockController.Remove%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="74bad-256">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="74bad-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="74bad-257">オブジェクトがガベージ コレクションの場合は、そのクロックも切断し、ガベージ コレクション。</span><span class="sxs-lookup"><span data-stu-id="74bad-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="74bad-258">クロック オブジェクトの詳細については、次を参照してください。[アニメーションとタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-259">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-259">An object contained within the same name scope as the targets of this storyboard's animations.</span></span> <span data-ttu-id="74bad-260"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="74bad-261">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="74bad-261">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="74bad-262">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</span><span class="sxs-lookup"><span data-stu-id="74bad-262">Declares whether the animation is controllable (can be paused) once started.</span></span></param>
        <summary><span data-ttu-id="74bad-263">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションをターゲットに適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-264">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーター</span><span class="sxs-lookup"><span data-stu-id="74bad-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="74bad-265">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-266">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-267">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="74bad-268">使用して、Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="74bad-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="74bad-269">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前にそのプロパティに関連付けられたオブジェクトがシステム リソース消費を続けますタイミング システムはありません。これらのクロックを自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="74bad-270">使用してクロックの数が多いを適用すると、パフォーマンスの問題を回避するために<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了後に、アニメーション化されたプロパティから構成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="74bad-271">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="74bad-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="74bad-272">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション化されたオブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="74bad-273">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="74bad-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="74bad-274">これにより、すべてのアニメーション クロックがプロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="74bad-275">特定を削除する<xref:System.Windows.Media.Animation.AnimationClock>クロックの一覧は、使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、 <xref:System.Windows.Media.Animation.ClockController>、呼び出して、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="74bad-276">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="74bad-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="74bad-277">唯一のルート クロックを使用して制御できることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>、<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="74bad-278">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が永久の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="74bad-279">その場合は、ユーザーが判断する必要がありますを呼び出すタイミング<xref:System.Windows.Media.Animation.ClockController.Remove%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="74bad-280">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="74bad-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="74bad-281">オブジェクトがガベージ コレクションの場合は、そのクロックも切断し、ガベージ コレクション。</span><span class="sxs-lookup"><span data-stu-id="74bad-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="74bad-282">クロック オブジェクトの詳細については、次を参照してください。[アニメーションとタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-283">次の例では、制御可能なストーリー ボードを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="74bad-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="74bad-284">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化する、および<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーが右クリックします。</span><span class="sxs-lookup"><span data-stu-id="74bad-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-285">指定した <paramref name="frameworkTemplate" /> が適用されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-285">The object to which the specified <paramref name="frameworkTemplate" /> has been applied.</span></span> <span data-ttu-id="74bad-286"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<paramref name="containingObject" /> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <paramref name="containingObject" />.</span></span></param>
        <param name="frameworkTemplate"><span data-ttu-id="74bad-287">アニメーション化するテンプレート。</span><span class="sxs-lookup"><span data-stu-id="74bad-287">The template to animate.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="74bad-288">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span><span class="sxs-lookup"><span data-stu-id="74bad-288">The behavior the new animation should use to interact with any current animations.</span></span></param>
        <param name="isControllable"><span data-ttu-id="74bad-289">ストーリー ボードが対話的に制御可能である必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-289"><see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="74bad-290">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span><span class="sxs-lookup"><span data-stu-id="74bad-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-291">このストーリー ボードを対話的に制御を同じを指定する必要があります`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="74bad-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="74bad-292">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="74bad-293">これらのクロックが格納されている`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="74bad-294">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="74bad-295">使用して、Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="74bad-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="74bad-296">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前にそのプロパティに関連付けられたオブジェクトがシステム リソース消費を続けますタイミング システムはありません。これらのクロックを自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="74bad-297">使用してクロックの数が多いを適用すると、パフォーマンスの問題を回避するために<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了後に、アニメーション化されたプロパティから構成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="74bad-298">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="74bad-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="74bad-299">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション化されたオブジェクトのメソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="74bad-300">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="74bad-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="74bad-301">これにより、すべてのアニメーション クロックがプロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="74bad-302">特定を削除する<xref:System.Windows.Media.Animation.AnimationClock>クロックの一覧は、使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、 <xref:System.Windows.Media.Animation.ClockController>、呼び出して、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="74bad-303">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="74bad-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="74bad-304">唯一のルート クロックを使用して制御できることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>、<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="74bad-305">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が永久の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="74bad-306">その場合は、ユーザーが判断する必要がありますを呼び出すタイミング<xref:System.Windows.Media.Animation.ClockController.Remove%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="74bad-307">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="74bad-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="74bad-308">オブジェクトがガベージ コレクションの場合は、そのクロックも切断し、ガベージ コレクション。</span><span class="sxs-lookup"><span data-stu-id="74bad-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="74bad-309">クロック オブジェクトの詳細については、次を参照してください。[アニメーションとタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-310">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="74bad-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span></span> <span data-ttu-id="74bad-311">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="74bad-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="74bad-312">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="74bad-312">A modifiable clone of the current object.</span></span> <span data-ttu-id="74bad-313">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="74bad-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-314">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="74bad-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="74bad-315">便宜上は、このメソッドは、厳密に型指定された実装と継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="74bad-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="74bad-316">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="74bad-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-317"><see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="74bad-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span></span></summary>
        <returns><span data-ttu-id="74bad-318">新しい <see cref="T:System.Windows.Media.Animation.Storyboard" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="74bad-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-319">このメソッドの呼び出しによって内部的に<xref:System.Windows.Freezable.CreateInstance%2A>の新しいインスタンスを作成するときに、<xref:System.Windows.Media.Animation.Storyboard>さまざまなクローン メソッドのクラス (など<xref:System.Windows.Freezable.Clone%2A>と<xref:System.Windows.Freezable.CloneCurrentValue%2A>)。</span><span class="sxs-lookup"><span data-stu-id="74bad-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-320">次の例は、の一般的な実装を示しています。<xref:System.Windows.Freezable.CreateInstanceCore%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="74bad-321">すべて<see cref="T:System.Windows.Media.Animation.Storyboard" />サブクラスは、このメソッドを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-321">Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method.</span></span> <span data-ttu-id="74bad-322">一般的な実装は、クラスの既定のコンス トラクターを呼び出し、結果を返すだけです。</span><span class="sxs-lookup"><span data-stu-id="74bad-322">Typical implementation is to simply call the class default constructor and return the result.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-323">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-323">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-324">クロックの<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度は、位置、時刻が現在進行して、レートを現実世界の時間と比較します。</span><span class="sxs-lookup"><span data-stu-id="74bad-324">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="74bad-325">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-325">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-326">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-326">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-327">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-327">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-328">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-328">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-329">現在のグローバル速度。クロックが停止している場合は 0。</span><span class="sxs-lookup"><span data-stu-id="74bad-329">The current global speed, or 0 if the clock is stopped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-330"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-330">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-331">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-331">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-332">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-332">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-333">現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-333">The current global speed, or <see langword="null" /> if the clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-334">クロックの<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度は、位置、時刻が現在進行して、レートを現実世界の時間と比較します。</span><span class="sxs-lookup"><span data-stu-id="74bad-334">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="74bad-335">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-335">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-336">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-336">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-337">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-337">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-338"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-338">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-339">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-339">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-340">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-340">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-341">現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-341">The current global speed, or <see langword="null" /> if the clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-342">クロックの<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度は、位置、時刻が現在進行して、レートを現実世界の時間と比較します。</span><span class="sxs-lookup"><span data-stu-id="74bad-342">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="74bad-343">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-343">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-344">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-344">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-345">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-345">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-346">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-347">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-347">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-348">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-348">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-349">クロックの最初のイテレーションでは、1 の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="74bad-349">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="74bad-350">このストーリー ボードがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`、順方向リバース ペアで構成全体の反復処理、セグメントだけでなく、これらのいずれか。</span><span class="sxs-lookup"><span data-stu-id="74bad-350">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="74bad-351">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-351">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-352">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-352">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-353">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-353">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-354"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-354">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-355">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-355">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-356">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-356">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-357">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-357">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-358">クロックの最初のイテレーションでは、1 の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="74bad-358">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="74bad-359">このストーリー ボードがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`、順方向リバース ペアで構成全体の反復処理、セグメントだけでなく、これらのいずれか。</span><span class="sxs-lookup"><span data-stu-id="74bad-359">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="74bad-360">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-360">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-361">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-361">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-362">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-362">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-363"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-363">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-364">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-364">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-365">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-365">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-366">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-366">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-367">クロックの最初のイテレーションでは、1 の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="74bad-367">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="74bad-368">このクロックのタイムラインがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`、順方向リバース ペアで構成全体の反復処理、セグメントだけでなく、これらのいずれか。</span><span class="sxs-lookup"><span data-stu-id="74bad-368">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="74bad-369">現在のイテレーションに関係なく、クロックを求めている、現在の反復を 1 に返します。</span><span class="sxs-lookup"><span data-stu-id="74bad-369">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="74bad-370">また、クロックを再起動するを 1 に、現在の反復も返します。</span><span class="sxs-lookup"><span data-stu-id="74bad-370">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="74bad-371">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-371">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-372">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-372">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-373">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-373">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-374">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-375">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-375">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-376">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-376"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="74bad-377">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span><span class="sxs-lookup"><span data-stu-id="74bad-377">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-378">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-378">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-379">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-379">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-380">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-380">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-381"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-381">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-382">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-382">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-383">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-383">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-384">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-384"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="74bad-385">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span><span class="sxs-lookup"><span data-stu-id="74bad-385">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-386">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-386">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-387">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-387">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-388">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-388">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-389"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-389">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-390">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-390">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-391">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-391">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-392">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-392"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span></span> <span data-ttu-id="74bad-393">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span><span class="sxs-lookup"><span data-stu-id="74bad-393">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-394">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-394">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-395">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-395">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-396">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-396">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-397">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-398">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-398">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-399">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span><span class="sxs-lookup"><span data-stu-id="74bad-399">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-400">このメソッドはわかりませんが、ストーリー ボードが一時停止しているかどうか。</span><span class="sxs-lookup"><span data-stu-id="74bad-400">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="74bad-401">ストーリー ボードが一時停止しているかどうかを調べるには、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-401">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="74bad-402">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-402">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-403">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-403">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-404">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-404">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-405"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-405">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-406">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-406">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-407">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-407">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-408">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span><span class="sxs-lookup"><span data-stu-id="74bad-408">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-409">このメソッドはわかりませんが、ストーリー ボードが一時停止しているかどうか。</span><span class="sxs-lookup"><span data-stu-id="74bad-409">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="74bad-410">ストーリー ボードが一時停止しているかどうかを調べるには、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-410">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="74bad-411">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-411">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-412">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-412">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-413">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-413">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-414"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-414">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-415">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-415">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-416">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-416">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-417">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span><span class="sxs-lookup"><span data-stu-id="74bad-417">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-418">このメソッドはわかりませんが、ストーリー ボードが一時停止しているかどうか。</span><span class="sxs-lookup"><span data-stu-id="74bad-418">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="74bad-419">ストーリー ボードが一時停止しているかどうかを調べるには、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-419">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="74bad-420">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-420">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-421">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-421">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-422">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-422">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-423">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-424">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-424">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-425">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="74bad-425"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-426">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-426">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-427">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-427">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-428">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-428">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-429"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-429">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-430">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-430">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-431">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-431">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-432">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="74bad-432"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-433">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-433">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-434">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-434">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-435">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-435">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-436"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-436">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-437">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-437">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-438">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-438">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-439">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span><span class="sxs-lookup"><span data-stu-id="74bad-439"><see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-440">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-440">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-441">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-441">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-442">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-442">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-443">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-444">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-444">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="74bad-445">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-445"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-446">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-446">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-447">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-447">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-448">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-448">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-449"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-449">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-450">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-450">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-451">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-451">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="74bad-452">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-452"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-453">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-453">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-454">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-454">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-455">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-455">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-456"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-456">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-457">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-457">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-458">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-458">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span></span></summary>
        <returns><span data-ttu-id="74bad-459">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-459"><see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-460">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-460">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="74bad-461">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-461">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-462">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-462">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="74bad-463"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</span><span class="sxs-lookup"><span data-stu-id="74bad-463">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span></span></param>
        <summary><span data-ttu-id="74bad-464">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-464">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-465"><paramref name="element" /> の対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-465">The dependency object targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-466">使用して、<xref:System.Windows.Media.Animation.Storyboard.Target%2A>を対象にしているオブジェクトを示すためにアニメーション タイムラインでプロパティをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="74bad-466">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="74bad-467">ストーリー ボードを対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-467">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="74bad-468">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-468">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="74bad-469"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</span><span class="sxs-lookup"><span data-stu-id="74bad-469">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span></span></param>
        <summary><span data-ttu-id="74bad-470">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-470">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-471"><paramref name="element" /> の対象となる依存関係オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="74bad-471">The name of the dependency object targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-472">このメソッドは、取得、<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>添付プロパティを指定したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-472">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="74bad-473">ストーリー ボードを対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-473">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="74bad-474">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-474">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="74bad-475"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の取得元となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-475">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span></span></param>
        <summary><span data-ttu-id="74bad-476">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="74bad-476">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="74bad-477"><paramref name="element" /> の対象となるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="74bad-477">The property targeted by <paramref name="element" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-478">このメソッドは、取得、<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>添付プロパティを指定したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-478">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="74bad-479">ストーリー ボードを対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="74bad-479">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="74bad-480">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-480">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="74bad-481">されている場合、<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>設定が、マークアップでは、このメソッドは、空を返します。<xref:System.Windows.PropertyPath>プロパティの参照を解決して、解析時に内部的に格納されているためです。</span><span class="sxs-lookup"><span data-stu-id="74bad-481">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-482">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-483">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-483">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-484">このメソッドは、ストーリー ボードを一時停止しますが、アクティブまたは現在一時停止中でない場合は、目に見える効果がありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-484">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="74bad-485">その結果、関連付けられているすべての子も一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-485">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="74bad-486">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-486">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-487">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-487">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-488">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-488">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="74bad-489">一時停止中のストーリー ボードを開始</span><span class="sxs-lookup"><span data-stu-id="74bad-489">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="74bad-490">ときにする<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>一時停止されたストーリー ボード、再開、再起動して表示されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-490">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="74bad-491">ただし、実際です。</span><span class="sxs-lookup"><span data-stu-id="74bad-491">However, that is not what actually happens.</span></span> <span data-ttu-id="74bad-492"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが実際に置き換える、一時停止した<xref:System.Windows.Media.Animation.Storyboard>新しい一時停止されていないバージョンです。</span><span class="sxs-lookup"><span data-stu-id="74bad-492">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="74bad-493">毎回、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出されると、ストーリー ボードのクロックのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-493">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="74bad-494">これらのクロックは、アニメーション化するプロパティに配布されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-494">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="74bad-495">したがって、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出される、そのクロックを再起動しません。 新しいクロックで置き換え。</span><span class="sxs-lookup"><span data-stu-id="74bad-495">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-496"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-496">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-497">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-497">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-498">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている、指定された <see cref="T:System.Windows.FrameworkContentElement" /> の <see cref="T:System.Windows.Media.Animation.Clock" /> を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-498">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-499">このメソッドは、ストーリー ボードを一時停止しますが、アクティブまたは現在一時停止中でない場合は、目に見える効果がありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-499">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="74bad-500">その結果、関連付けられているすべての子も一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-500">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="74bad-501">一時停止中のストーリー ボードをシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-501">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="74bad-502">一時停止中のストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-502">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="74bad-503">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドでは、再開することの外観を備えた新しい 1 つに、一時停止中のストーリー ボードをもう一度置き換えます。</span><span class="sxs-lookup"><span data-stu-id="74bad-503">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="74bad-504">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-504">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-505">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-505">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-506">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-506">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-507">例を参照してください[方法。開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-507">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-508">ストーリー ボードのクロックを一時停止、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-508">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="74bad-509">一時停止中のストーリー ボードを開始</span><span class="sxs-lookup"><span data-stu-id="74bad-509">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="74bad-510">ときにする<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>一時停止されたストーリー ボード、再開、再起動して表示されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-510">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="74bad-511">ただし、実際です。</span><span class="sxs-lookup"><span data-stu-id="74bad-511">However, that is not what actually happens.</span></span> <span data-ttu-id="74bad-512"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>実際には、します。</span><span class="sxs-lookup"><span data-stu-id="74bad-512">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="74bad-513">毎回、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出されると、ストーリー ボードのクロックのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-513">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="74bad-514">これらのクロックは、アニメーション化するプロパティに配布されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-514">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="74bad-515">したがって、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出される、そのクロックを再起動しません。 新しいクロックで置き換え。</span><span class="sxs-lookup"><span data-stu-id="74bad-515">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-516">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-516">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-517"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-517">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-518"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-518">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-519">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-519">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-520">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている、指定された <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.Animation.Clock" /> を一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-520">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-521">このメソッドは、ストーリー ボードを一時停止しますが、アクティブまたは現在一時停止中でない場合は、目に見える効果がありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-521">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="74bad-522">その結果、関連付けられているすべての子も一時停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-522">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="74bad-523">一時停止中のストーリー ボードをシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-523">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="74bad-524">一時停止中のストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-524">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="74bad-525">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドでは、再開することの外観を備えた新しい 1 つに、一時停止中のストーリー ボードをもう一度置き換えます。</span><span class="sxs-lookup"><span data-stu-id="74bad-525">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="74bad-526">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-526">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-527">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-527">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-528">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-528">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-529">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-529">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-530">ストーリー ボードのクロックを一時停止、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-530">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="74bad-531">一時停止中のストーリー ボードを開始</span><span class="sxs-lookup"><span data-stu-id="74bad-531">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="74bad-532">ときにする<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>一時停止されたストーリー ボード、再開、再起動して表示されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-532">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="74bad-533">ただし、実際です。</span><span class="sxs-lookup"><span data-stu-id="74bad-533">However, that is not what actually happens.</span></span> <span data-ttu-id="74bad-534"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>実際には、します。</span><span class="sxs-lookup"><span data-stu-id="74bad-534">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="74bad-535">毎回、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出されると、ストーリー ボードのクロックのオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-535">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="74bad-536">これらのクロックは、アニメーション化するプロパティに配布されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-536">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="74bad-537">したがって、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出される、そのクロックを再起動しません。 新しいクロックで置き換え。</span><span class="sxs-lookup"><span data-stu-id="74bad-537">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-538">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-538">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="74bad-539">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="74bad-539">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-540">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-540">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="74bad-541">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="74bad-541">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-542">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-542">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-543">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-543">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-544">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-544">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-545">行われたすべての対話型操作、 <xref:System.Windows.Media.Animation.Clock>、ためでも、 <xref:System.Windows.Media.Animation.Storyboard>、次の描画の少し前に、タイミング エンジンの次の目盛りで発生します。</span><span class="sxs-lookup"><span data-stu-id="74bad-545">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="74bad-546">つまり、<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>メソッドでもこの時点までアニメーション化されたプロパティに影響します。</span><span class="sxs-lookup"><span data-stu-id="74bad-546">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="74bad-547">つまり、フレームが表示されたら、[次へ] の時間、ストーリー ボードは削除されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-547">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="74bad-548">この時刻より前に、プロパティからアニメーションの関連付けを解除する必要がある場合、<xref:System.Windows.UIElement.BeginAnimation%2A>メソッドを`animation`のパラメーター値`null`します。</span><span class="sxs-lookup"><span data-stu-id="74bad-548">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-549"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-549">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-550">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-550">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-551">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-551">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="74bad-552">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="74bad-552">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-553">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-553">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-554">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-554">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-555">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-555">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-556">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-556">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-557">ストーリー ボードのクロックのトリガーを削除、<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-557">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-558"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-558">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-559">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-559">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-560">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="74bad-560">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span> <span data-ttu-id="74bad-561">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、いったんアニメーション化された後は、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定には関係なく、このプロパティに影響しなくなります。</span><span class="sxs-lookup"><span data-stu-id="74bad-561">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-562">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-562">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-563">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-563">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-564">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-564">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-565">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-565">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-566">ストーリー ボードのクロックのトリガーを削除、<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-566">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-567">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="74bad-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-568">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="74bad-568">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-569">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-569">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-570">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-570">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-571">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-571">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-572"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-572">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-573">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-573">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-574">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="74bad-574">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-575">一時停止されていないストーリー ボードを再開しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-575">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="74bad-576">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-576">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-577">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-577">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-578">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-578">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-579">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-579">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-580">一時停止中のストーリー ボードをシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-580">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="74bad-581">一時停止中のストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-581">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="74bad-582">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッド、ストーリー ボードが開始した後に再開することの外観を備えた古いストーリー ボードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="74bad-582">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="74bad-583">一時停止されたストーリー ボードのクロックの再開、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-583">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-584">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-584">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-585"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-585">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-586"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-586">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-587">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-587">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-588">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を再開します。</span><span class="sxs-lookup"><span data-stu-id="74bad-588">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-589">一時停止されていないストーリー ボードを再開しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-589">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="74bad-590">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-590">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-591">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-591">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-592">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-592">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-593">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-593">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-594">一時停止中のストーリー ボードをシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-594">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="74bad-595">一時停止中のストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-595">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="74bad-596">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッド、ストーリー ボードが開始した後に再開することの外観を備えた古いストーリー ボードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="74bad-596">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="74bad-597">一時停止されたストーリー ボードのクロックの再開、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-597">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-598">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、新しい位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-598">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="74bad-599">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-599">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span></span></param>
        <summary><span data-ttu-id="74bad-600">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-600">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="74bad-601"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="74bad-601">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-602">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-602">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-603">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-603">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-604">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-604">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-605">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-605">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-606">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-606">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-607">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-607">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="74bad-608">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-608">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="74bad-609"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="74bad-609">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="74bad-610">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-610">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="74bad-611"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="74bad-611">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-612">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-612">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-613">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-613">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-614">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-614">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-615">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-615">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-616">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-616">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-617">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-617">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-618"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-618">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-619">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-619">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="74bad-620">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-620">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="74bad-621"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="74bad-621">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="74bad-622">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-622">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="74bad-623"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="74bad-623">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-624">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-624">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-625">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-625">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-626">このメソッドの変更、ストーリー ボードのクロックの<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に<xref:System.Windows.Media.Animation.ClockState.Active>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-626">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="74bad-627">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーへの影響がありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-627">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="74bad-628">その結果、適切なイベントも発生しないそれまでの間。</span><span class="sxs-lookup"><span data-stu-id="74bad-628">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="74bad-629">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-629">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-630">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-630">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-631">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-631">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-632">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-632">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-633">ストーリー ボードのトリガーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-633">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-634">次の例では、両方を示しています、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-634">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-635"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-635">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-636">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-636">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="74bad-637">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-637">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="74bad-638"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="74bad-638">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="74bad-639">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定した位置までシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-639">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span></span> <span data-ttu-id="74bad-640"><see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span><span class="sxs-lookup"><span data-stu-id="74bad-640">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-641">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-641">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-642">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-642">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-643">このメソッドの変更、ストーリー ボードのクロックの<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に<xref:System.Windows.Media.Animation.ClockState.Active>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-643">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="74bad-644">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーへの影響がありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-644">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="74bad-645">その結果、適切なイベントも発生しないそれまでの間。</span><span class="sxs-lookup"><span data-stu-id="74bad-645">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="74bad-646">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-646">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-647">制御可能なストーリー ボードは一時停止、再開、シーク、停止、制御することで行われた場合に削除されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-647">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="74bad-648">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-648">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-649">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-649">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-650">ストーリー ボードのトリガーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-650">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-651">次の例では、シーク (ストーリー ボードが開始された後、1 秒間に (スキップ) する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="74bad-651">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="74bad-652">次の例では、両方を示しています、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-652">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-653">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-653">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="74bad-654">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-654">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span></span></param>
        <summary><span data-ttu-id="74bad-655">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-655">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時の配置、<xref:System.Windows.Media.Animation.Storyboard>前回のクロック ティックでします。</span><span class="sxs-lookup"><span data-stu-id="74bad-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="74bad-657">値はすぐに期限の変更を反映した更新<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新までこれらの変更を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="74bad-657">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="74bad-658">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-658">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-659">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-659">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-660">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-660">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-661">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-661">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="74bad-662">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-662">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="74bad-663"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="74bad-663">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="74bad-664">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-664">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時の配置、<xref:System.Windows.Media.Animation.Storyboard>前回のクロック ティックでします。</span><span class="sxs-lookup"><span data-stu-id="74bad-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="74bad-666">値はすぐに期限の変更を反映した更新<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新までこれらの変更を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="74bad-666">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="74bad-667">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-667">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-668">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-668">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-669">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-669">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-670">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-670">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-671"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-671">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-672">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-672">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="74bad-673">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-673">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="74bad-674"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="74bad-674">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="74bad-675">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-675">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時の配置、<xref:System.Windows.Media.Animation.Storyboard>前回のクロック ティックでします。</span><span class="sxs-lookup"><span data-stu-id="74bad-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="74bad-677">値はすぐに期限の変更を反映した更新<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新までこれらの変更を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="74bad-677">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="74bad-678">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-678">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-679">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-679">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-680">このメソッドの変更、ストーリー ボードのクロックの<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に</span><span class="sxs-lookup"><span data-stu-id="74bad-680">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="74bad-681"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="74bad-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="74bad-682">ストーリー ボードのトリガーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-682">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="74bad-683">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-683">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-684">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-684">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-685">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-685">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-686">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-686">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-687">次の例では、両方を示しています、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-687">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-688"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-688">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-689">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-689">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="offset"><span data-ttu-id="74bad-690">タイムラインが、指定した <paramref name="origin" /> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span><span class="sxs-lookup"><span data-stu-id="74bad-690">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <paramref name="origin" />.</span></span></param>
        <param name="origin"><span data-ttu-id="74bad-691"><paramref name="offset" /> の適用元の位置。</span><span class="sxs-lookup"><span data-stu-id="74bad-691">The position from which <paramref name="offset" /> is applied.</span></span></param>
        <summary><span data-ttu-id="74bad-692">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span><span class="sxs-lookup"><span data-stu-id="74bad-692">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時の配置、<xref:System.Windows.Media.Animation.Storyboard>前回のクロック ティックでします。</span><span class="sxs-lookup"><span data-stu-id="74bad-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="74bad-694">値はすぐに期限の変更を反映した更新<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新までこれらの変更を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="74bad-694">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="74bad-695">シーク操作には、ストーリー ボードはなりません。<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-695">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="74bad-696">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-696">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="74bad-697">このメソッドの変更、ストーリー ボードのクロックの<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に</span><span class="sxs-lookup"><span data-stu-id="74bad-697">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="74bad-698"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="74bad-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="74bad-699">ストーリー ボードのトリガーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-699">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="74bad-700">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-700">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-701">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-701">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-702">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-702">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-703">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-703">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-704">次の例では、両方を示しています、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-704">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-705">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-705">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio"><span data-ttu-id="74bad-706">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="74bad-706">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="74bad-707">この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。</span><span class="sxs-lookup"><span data-stu-id="74bad-707">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="74bad-708">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。</span><span class="sxs-lookup"><span data-stu-id="74bad-708">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="74bad-709">たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</span><span class="sxs-lookup"><span data-stu-id="74bad-709">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="74bad-710">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-710">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-711">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-711">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-712">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-712">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-713">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-713">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-714"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-714">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-715">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-715">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="speedRatio"><span data-ttu-id="74bad-716">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="74bad-716">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="74bad-717">この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。</span><span class="sxs-lookup"><span data-stu-id="74bad-717">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="74bad-718">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。</span><span class="sxs-lookup"><span data-stu-id="74bad-718">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="74bad-719">たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</span><span class="sxs-lookup"><span data-stu-id="74bad-719">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="74bad-720">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の対話型速度比を設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-720">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-721">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-721">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-722">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-722">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-723">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-723">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-724">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-724">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-725">このメソッドを呼び出すとトリガー、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-725">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-726">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-726">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-727"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-727">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-728"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-728">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-729">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-729">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <param name="speedRatio"><span data-ttu-id="74bad-730">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span><span class="sxs-lookup"><span data-stu-id="74bad-730">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span></span> <span data-ttu-id="74bad-731">この値をストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 値に掛けると、ストーリーボードの実効速度が決まります。</span><span class="sxs-lookup"><span data-stu-id="74bad-731">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span></span> <span data-ttu-id="74bad-732">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きしません。</span><span class="sxs-lookup"><span data-stu-id="74bad-732">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span></span> <span data-ttu-id="74bad-733">たとえば、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 のストーリーボードに対してこのメソッドを呼び出して、対話型速度比を 3 と指定すると、このストーリーボードの実効速度は 1.5 になります。</span><span class="sxs-lookup"><span data-stu-id="74bad-733">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span></span></param>
        <summary><span data-ttu-id="74bad-734">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の対話型速度比を設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-734">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-735">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-735">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-736">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-736">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-737">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-737">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-738">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-738">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="74bad-739">このメソッドを呼び出すとトリガー、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-739">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="74bad-740">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-740">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span></span></param>
        <param name="value"><span data-ttu-id="74bad-741">対象となる依存関係オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-741">The dependency object to target.</span></span></param>
        <summary><span data-ttu-id="74bad-742">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、依存関係オブジェクトを対象にするように指定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-742">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-743">このメソッドは、設定、<xref:System.Windows.Media.Animation.Storyboard.Target%2A>添付プロパティを指定したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-743">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="74bad-744">ストーリー ボードを対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-744">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="74bad-745">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-745">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74bad-746"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>プロパティがいずれかに設定できるため、シリアル化可能な<xref:System.Windows.DependencyObject>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-746">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="74bad-747">このオブジェクトを正しく XAML から参照できることは保証されません。</span><span class="sxs-lookup"><span data-stu-id="74bad-747">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="74bad-748">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-748">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span></span></param>
        <param name="name"><span data-ttu-id="74bad-749">対象とする依存関係オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="74bad-749">The name of the dependency object to target.</span></span></param>
        <summary><span data-ttu-id="74bad-750">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が指定した名前の依存関係オブジェクトを対象とするように指定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-750">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-751">このメソッドは、設定、<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>添付プロパティを指定したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-751">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="74bad-752">ストーリー ボードを対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-752">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="74bad-753">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-753">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="74bad-754">指定した依存関係プロパティを関連付ける <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="74bad-754">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span></span></param>
        <param name="path"><span data-ttu-id="74bad-755">アニメーション化する依存関係プロパティを示すパス。</span><span class="sxs-lookup"><span data-stu-id="74bad-755">A path that describe the dependency property to be animated.</span></span></param>
        <summary><span data-ttu-id="74bad-756">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した依存関係プロパティを対象にするようにします。</span><span class="sxs-lookup"><span data-stu-id="74bad-756">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-757">このメソッドは、設定、<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>添付プロパティを指定したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-757">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="74bad-758">ストーリー ボードを対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-758">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="74bad-759">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-759">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-760">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="74bad-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-761">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="74bad-761">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-762">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-762">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-763">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-763">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-764">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-764">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-765"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-765">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-766">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-766">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-767">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="74bad-767">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-768">このメソッドは、ストーリー ボードを進めますアクティブな期間の末尾に現在の時刻。この時点で、ストーリー ボードの動作がで指定されたその<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-768">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="74bad-769">場合<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>に設定されている<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>、プロパティ設定されている場合、ストーリー ボードを塗りつぶします; <xref:System.Windows.Media.Animation.FillBehavior.Stop>、ストーリー ボードが停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-769">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="74bad-770">このメソッドを呼び出す無限の期間を含むストーリー ボードで、無限の数の影響はありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-770">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="74bad-771">非アクティブのストーリー ボードでこのメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-771">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="74bad-772">期間のトリガーをその fill にクロックを進める、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-772">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="74bad-773">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-773">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-774">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-774">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-775">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-775">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-776">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-776">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-777">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-777">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-778"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-778">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-779"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-779">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-780">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-780">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-781">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時間をそのアクティブな期間の終わりに進めます。</span><span class="sxs-lookup"><span data-stu-id="74bad-781">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-782">このメソッドは、ストーリー ボードを進めますアクティブな期間の末尾に現在の時刻。この時点で、ストーリー ボードの動作がで指定されたその<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-782">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="74bad-783">場合<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>に設定されている<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>、プロパティ設定されている場合、ストーリー ボードを塗りつぶします; <xref:System.Windows.Media.Animation.FillBehavior.Stop>、ストーリー ボードが停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-783">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="74bad-784">このメソッドを呼び出す無限の期間を含むストーリー ボードで、無限の数の影響はありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-784">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="74bad-785">非アクティブのストーリー ボードでこのメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="74bad-785">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="74bad-786">期間のトリガーをその fill にクロックを進める、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-786">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="74bad-787">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-787">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-788">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-788">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-789">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-789">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-790">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-790">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-791">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74bad-792">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-792">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-793">ストーリー ボードを停止するには発生しません。、<xref:System.Windows.Media.Animation.Timeline.Completed>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-793">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-794"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-794">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-795">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-795">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-796">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-796">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-797">A<xref:System.Windows.Media.Animation.ClockState.Stopped>ストーリー ボードに影響しません、ターゲットのプロパティ: アニメーション化されたプロパティが以前の値に戻ります。</span><span class="sxs-lookup"><span data-stu-id="74bad-797">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="74bad-798">クロックを停止、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント、ではなく、<xref:System.Windows.Media.Animation.Timeline.Completed>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-798">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="74bad-799">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-799">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-800">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-800">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-801">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-801">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-802">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-802">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74bad-803">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-803">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="74bad-804"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="74bad-804">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><span data-ttu-id="74bad-805"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="74bad-805">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span></span> <span data-ttu-id="74bad-806">このオブジェクトには、このストーリーボードとその子に対して作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-806">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span></span></param>
        <summary><span data-ttu-id="74bad-807">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> を停止します。</span><span class="sxs-lookup"><span data-stu-id="74bad-807">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-808">A<xref:System.Windows.Media.Animation.ClockState.Stopped>ストーリー ボードに影響しません、ターゲットのプロパティ: アニメーション化されたプロパティが以前の値に戻ります。</span><span class="sxs-lookup"><span data-stu-id="74bad-808">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="74bad-809">クロックを停止、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント、ではなく、<xref:System.Windows.Media.Animation.Timeline.Completed>イベント。</span><span class="sxs-lookup"><span data-stu-id="74bad-809">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="74bad-810">このストーリー ボードを対話的に制御を同じを使用する必要があります`containingObject`パラメーター、ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すとき。</span><span class="sxs-lookup"><span data-stu-id="74bad-810">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="74bad-811">制御可能なストーリー ボードは一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="74bad-811">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="74bad-812">ストーリー ボードをコードで制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="74bad-812">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="74bad-813">例については、「[方法: 開始後に、ストーリー ボードを制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)します。</span><span class="sxs-lookup"><span data-stu-id="74bad-813">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-814">アニメーション化するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-814">Gets or sets the object that should be animated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-815">ターゲット オブジェクトは、依存関係オブジェクトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-815">The target object must be a dependency object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74bad-816"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>プロパティがいずれかに設定できるため、シリアル化可能な<xref:System.Windows.DependencyObject>します。</span><span class="sxs-lookup"><span data-stu-id="74bad-816">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="74bad-817">ない XAML でこのオブジェクトを正しく参照することが保証されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-817">There is no guaranteed that this object can be correctly referenced in XAML.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="74bad-818">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="74bad-818">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="74bad-819">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="74bad-819">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetProperty>|  
|<span data-ttu-id="74bad-820">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="74bad-820">Metadata properties set to `true`</span></span>|<span data-ttu-id="74bad-821">なし</span><span class="sxs-lookup"><span data-stu-id="74bad-821">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74bad-822">アニメーション化するオブジェクトの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74bad-822">Gets or sets the name of the object to animate.</span></span> <span data-ttu-id="74bad-823">オブジェクトは <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" />、または <see cref="T:System.Windows.Freezable" /> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="74bad-823">The object must be a <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" />, or <see cref="T:System.Windows.Freezable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74bad-824">このプロパティの設定は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="74bad-824">Setting this property is optional.</span></span> <span data-ttu-id="74bad-825">場合、<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>が指定されていない、ストーリー ボードのアニメーションは、次のいずれかに適用されます。</span><span class="sxs-lookup"><span data-stu-id="74bad-825">If the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> is not specified, a storyboard's animations are applied to one of the following:</span></span>  
  
-   <span data-ttu-id="74bad-826">使用して、アニメーションが所属するストーリー ボードが開始された場合、 <xref:System.Windows.Media.Animation.BeginStoryboard>、所有している要素、<xref:System.Windows.Media.Animation.BeginStoryboard>ストーリー ボードをトリガーするアクションを対象とします。</span><span class="sxs-lookup"><span data-stu-id="74bad-826">If the storyboard to which the animation belongs was started using a <xref:System.Windows.Media.Animation.BeginStoryboard>, the element that owns the <xref:System.Windows.Media.Animation.BeginStoryboard> action that triggers the storyboard is targeted.</span></span>  
  
-   <span data-ttu-id="74bad-827">使用して、ストーリー ボードが開始された場合、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッド、<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>でストーリー ボードが開始された日時を指定、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが対象とします。</span><span class="sxs-lookup"><span data-stu-id="74bad-827">If the storyboard was started using the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method, the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> specified when the storyboard was started with the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is targeted.</span></span>  
  
 <span data-ttu-id="74bad-828">それらの子タイムラインが、親を「継承」して子タイムライン上でこのプロパティを設定すると、<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>独自指定しない限りです。</span><span class="sxs-lookup"><span data-stu-id="74bad-828">When this property is set on a timeline with children, those child timelines "inherit" the parent's <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> unless they specify their own.</span></span>  
  
## <a name="making-an-object-targetable"></a><span data-ttu-id="74bad-829">ターゲット設定可能なオブジェクトの作成</span><span class="sxs-lookup"><span data-stu-id="74bad-829">Making an Object Targetable</span></span>  
 <span data-ttu-id="74bad-830">使用する場合[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]、ストーリー ボードをターゲット設定可能なオブジェクトを作成する次の 2 つのアクションのいずれかを実行します。</span><span class="sxs-lookup"><span data-stu-id="74bad-830">When using [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you perform one of the following two actions to make an object targetable by a storyboard:</span></span>  
  
-   <span data-ttu-id="74bad-831">オブジェクトの場合、<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>に設定して、その<xref:System.Windows.FrameworkElement.Name%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="74bad-831">If the object is a <xref:System.Windows.FrameworkElement> or a <xref:System.Windows.FrameworkContentElement>, set its <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
-   <span data-ttu-id="74bad-832">オブジェクトの場合、<xref:System.Windows.Freezable>またはカスタム<xref:System.Windows.FrameworkContentElement>または<xref:System.Windows.FrameworkContentElement>、名前を使用して、それを割り当てる、 [X:name ディレクティブ](~/docs/framework/xaml-services/x-name-directive.md)マークアップ拡張機能。</span><span class="sxs-lookup"><span data-stu-id="74bad-832">If the object is a <xref:System.Windows.Freezable> or a custom <xref:System.Windows.FrameworkContentElement> or <xref:System.Windows.FrameworkContentElement>, assign it a name using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) markup extension.</span></span>  
  
 <span data-ttu-id="74bad-833">コードを使用して、行ったオブジェクト ターゲット設定可能なを使用して、<xref:System.Windows.NameScope.RegisterName%2A>オブジェクトの名前を指定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="74bad-833">When using code, you make an object targetable by using the <xref:System.Windows.NameScope.RegisterName%2A> method to assign the object a name.</span></span>  
  
<a name="dependencyPropertyInfo_TargetName"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="74bad-834">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="74bad-834">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="74bad-835">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="74bad-835">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Storyboard.TargetNameProperty>|  
|<span data-ttu-id="74bad-836">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="74bad-836">Metadata properties set to `true`</span></span>|<span data-ttu-id="74bad-837">なし</span><span class="sxs-lookup"><span data-stu-id="74bad-837">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74bad-838"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="74bad-838">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74bad-839"><see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="74bad-839">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74bad-840"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="74bad-840">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>