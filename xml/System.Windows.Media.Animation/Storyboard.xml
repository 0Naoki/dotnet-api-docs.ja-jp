<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f642caada13897161927a70906f8be750f00d6b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36496470" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6284a-101">子アニメーションのオブジェクトやプロパティの対象化情報を提供するコンテナ タイムライン。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6284a-101">A container timeline that provides object and property targeting information for its child animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="6284a-102">ストーリー ボードが対話的に制御します。</span><span class="sxs-lookup"><span data-stu-id="6284a-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="6284a-103">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-104">ストーリー ボードをマークアップで制御するためには、指定した、<xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>のプロパティ、<xref:System.Windows.Media.Animation.BeginStoryboard>以外のオブジェクトを作成する例については、次を参照してください。[する方法: イベント トリガーを使用して、ストーリー ボードの後に開始を制御する](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="6284a-105">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-106">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="6284a-107">データ バインディングとタイムラインがアニメーション化</span><span class="sxs-lookup"><span data-stu-id="6284a-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="6284a-108">ほとんどのタイムラインのプロパティは、データ バインドまたはアニメーション化します。ただし、タイミング システムが動作するしくみ、により、他のデータと同様に動作しない場合はバインドされている、またはアニメーションのタイムライン データはバインドされているか、オブジェクトをアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="6284a-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="6284a-109">その動作を理解するのには、タイムラインのアクティブ化意味を理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6284a-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="6284a-110">タイムラインをアクティブになると、タイムラインとその子タイムラインのコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="6284a-111">これらのコピーが固定されている (読み取り専用に変更) と<xref:System.Windows.Media.Animation.Clock>そこからオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="6284a-112">これらのクロックは、ターゲット プロパティをアニメーション化する実際の作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="6284a-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="6284a-113">タイムラインは、データ バインディングまたはアニメーション化されている現在の値のスナップショットが行われますそのクロックが作成されるときです。</span><span class="sxs-lookup"><span data-stu-id="6284a-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="6284a-114">元のタイムライン可能性があります、継続的に変更する場合でもそのクロックされていません。</span><span class="sxs-lookup"><span data-stu-id="6284a-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="6284a-115">データ バインディングまたはアニメーションの変更を反映するためにタイムラインは、その時計を再作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="6284a-116">クロックがない再が自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="6284a-117">タイムラインの変更を適用するいくつかの方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="6284a-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="6284a-118">タイムラインがまたはに属している場合、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードを使用して、再適用して変更を反映してこれを行うことができます、<xref:System.Windows.Media.Animation.BeginStoryboard>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="6284a-119">これには、アニメーションが再起動されるという副作用があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="6284a-120">コードでは、使用することができます、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>ストーリー ボードを進める方法は、前の位置にバックアップします。</span><span class="sxs-lookup"><span data-stu-id="6284a-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="6284a-121">プロパティを使用して、直接には、アニメーションを適用したかどうか、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを呼び出し、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを再度変更されているアニメーションを渡すとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="6284a-122">クロック レベルで直接作業している場合は、作成し、クロックの新しいセットを適用し、使用して作成済みのクロックの前のセットを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6284a-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="6284a-123">データの例には、アニメーションがバインドされているを参照してください[キー スプライン アニメーション サンプル](http://go.microsoft.com/fwlink/?LinkID=160011)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-123">For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-124">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-125">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられている一連のアニメーションを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-126">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-127">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-128">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-129">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-130">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-130">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-131">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-132">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-133">対象のプロパティが既にアニメーション化されてには置き換えを使用して、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="6284a-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-134">このメソッドを使用して開始されたストーリー ボードは、一時停止、再開されると、またはそれ以外の場合は、起動された後に対話的に制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="6284a-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="6284a-135">ストーリー ボードを制御するためを使用して、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="6284a-136">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-137">次の例では、ストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-138"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-139">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-139">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-140">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-141">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-142">対象のプロパティが既にアニメーション化されてには置き換えを使用して、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="6284a-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-143">このメソッドを使用して開始されたストーリー ボードは、一時停止、再開されると、またはそれ以外の場合は、起動された後に対話的に制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="6284a-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="6284a-144">ストーリー ボードを制御するためを使用して、<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29>または<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="6284a-145">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-146">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-146">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-147">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="6284a-148">ストーリーボードを対話的に制御する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-148">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-149">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-150">対象のプロパティが既にアニメーション化されてには置き換えを使用して、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="6284a-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-151">このストーリー ボードを対話的に制御する必要がありますを指定する同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="6284a-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="6284a-152">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-153">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-154">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-155">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-156"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-157">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-157">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-158">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6284a-159">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-159">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-160">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-161">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはありませんこれらの時計を自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="6284a-162">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="6284a-163">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="6284a-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="6284a-164">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="6284a-165">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="6284a-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="6284a-166">これにより、すべてのアニメーション クロックが、プロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="6284a-167">固有の仕様を削除する<xref:System.Windows.Media.Animation.AnimationClock>にクロックのリストを使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、<xref:System.Windows.Media.Animation.ClockController>を呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="6284a-168">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="6284a-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="6284a-169">唯一のルート クロックできますで制御されることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="6284a-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="6284a-170">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が forever の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="6284a-171">その場合は、ユーザーを決定する必要がありますを呼び出すときに<xref:System.Windows.Media.Animation.ClockController.Remove%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="6284a-172">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="6284a-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="6284a-173">オブジェクトがガベージ コレクションである場合は、そのクロックが切断されても、ガベージ コレクションします。</span><span class="sxs-lookup"><span data-stu-id="6284a-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="6284a-174">クロック オブジェクトに関する詳細については、次を参照してください。[アニメーションおよびタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-175">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化する、および<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ときにユーザーを右クリックします。</span><span class="sxs-lookup"><span data-stu-id="6284a-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-176">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-176">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-177">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="6284a-178">ストーリーボードを対話的に制御する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-178">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-179">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-180">対象のプロパティが既にアニメーション化されてには置き換えを使用して、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="6284a-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-181">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーター</span><span class="sxs-lookup"><span data-stu-id="6284a-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="6284a-182">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-183">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-184">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-185">指定した <c>frameworkTemplate</c> が適用されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-185">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="6284a-186">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="6284a-187">アニメーション化するテンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-187">The template to animate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-188">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-189">対象のプロパティが既にアニメーション化されてには置き換えを使用して、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="6284a-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-190">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-191">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-192">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-193">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-193">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-194">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6284a-195">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-195">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-196">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6284a-197">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化する、および<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ときにユーザーを右クリックします。</span><span class="sxs-lookup"><span data-stu-id="6284a-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-198">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-198">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-199">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6284a-200">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-200">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="6284a-201">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-201">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-202">指定した <see cref="T:System.Windows.Media.Animation.Storyboard" /> を使用して、この <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-203">対象のプロパティが既にアニメーション化されている場合は、指定したハンドオフ動作を使用してに置換されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-204">このストーリー ボードを対話的に制御する必要がありますを指定する同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="6284a-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="6284a-205">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-206">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-207">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="6284a-208">使用して、HandoffBehavior の作成</span><span class="sxs-lookup"><span data-stu-id="6284a-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="6284a-209">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはありませんこれらの時計を自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="6284a-210">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="6284a-211">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="6284a-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="6284a-212">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="6284a-213">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="6284a-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="6284a-214">これにより、すべてのアニメーション クロックが、プロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="6284a-215">固有の仕様を削除する<xref:System.Windows.Media.Animation.AnimationClock>にクロックのリストを使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、<xref:System.Windows.Media.Animation.ClockController>を呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="6284a-216">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="6284a-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="6284a-217">唯一のルート クロックできますで制御されることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="6284a-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="6284a-218">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が forever の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="6284a-219">その場合は、ユーザーを決定する必要がありますを呼び出すときに<xref:System.Windows.Media.Animation.ClockController.Remove%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="6284a-220">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="6284a-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="6284a-221">オブジェクトがガベージ コレクションである場合は、そのクロックが切断されても、ガベージ コレクションします。</span><span class="sxs-lookup"><span data-stu-id="6284a-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="6284a-222">クロック オブジェクトに関する詳細については、次を参照してください。[アニメーションおよびタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-223">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-224"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="6284a-225">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化する、および<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ときにユーザーを右クリックします。</span><span class="sxs-lookup"><span data-stu-id="6284a-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-226">指定した <c>frameworkTemplate</c> が適用されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-226">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="6284a-227">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="6284a-228">アニメーション化するテンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-228">The template to animate.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="6284a-229">ストーリーボードを対話的に制御する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-229">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-230">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-231">対象のプロパティが既にアニメーション化されてには置き換えを使用して、<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>ハンドオフ動作します。</span><span class="sxs-lookup"><span data-stu-id="6284a-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="6284a-232">このストーリー ボードを対話的に制御する必要がありますを指定する同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="6284a-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="6284a-233">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-234">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-235">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-236">指定した <c>frameworkTemplate</c> が適用されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-236">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="6284a-237">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="6284a-238">アニメーション化するテンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-238">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6284a-239">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-239">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-240">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-241">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-242">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-243">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="6284a-244">使用して、HandoffBehavior の作成</span><span class="sxs-lookup"><span data-stu-id="6284a-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="6284a-245">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはありませんこれらの時計を自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="6284a-246">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="6284a-247">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="6284a-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="6284a-248">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="6284a-249">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="6284a-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="6284a-250">これにより、すべてのアニメーション クロックが、プロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="6284a-251">固有の仕様を削除する<xref:System.Windows.Media.Animation.AnimationClock>にクロックのリストを使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、<xref:System.Windows.Media.Animation.ClockController>を呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="6284a-252">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="6284a-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="6284a-253">唯一のルート クロックできますで制御されることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="6284a-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="6284a-254">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が forever の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="6284a-255">その場合は、ユーザーを決定する必要がありますを呼び出すときに<xref:System.Windows.Media.Animation.ClockController.Remove%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="6284a-256">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="6284a-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="6284a-257">オブジェクトがガベージ コレクションである場合は、そのクロックが切断されても、ガベージ コレクションします。</span><span class="sxs-lookup"><span data-stu-id="6284a-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="6284a-258">クロック オブジェクトに関する詳細については、次を参照してください。[アニメーションおよびタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-259">このストーリーボードのアニメーションのターゲットと同じ名前のスコープ内に含まれるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-259">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="6284a-260">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6284a-261">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-261">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="6284a-262">アニメーションを起動した後に、アニメーションを制御できるかどうか (一時停止できるかどうか) を宣言します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-262">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-263">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-264">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーター</span><span class="sxs-lookup"><span data-stu-id="6284a-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="6284a-265">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-266">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-267">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="6284a-268">使用して、HandoffBehavior の作成</span><span class="sxs-lookup"><span data-stu-id="6284a-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="6284a-269">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはありませんこれらの時計を自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="6284a-270">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="6284a-271">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="6284a-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="6284a-272">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="6284a-273">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="6284a-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="6284a-274">これにより、すべてのアニメーション クロックが、プロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="6284a-275">固有の仕様を削除する<xref:System.Windows.Media.Animation.AnimationClock>にクロックのリストを使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、<xref:System.Windows.Media.Animation.ClockController>を呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="6284a-276">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="6284a-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="6284a-277">唯一のルート クロックできますで制御されることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="6284a-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="6284a-278">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が forever の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="6284a-279">その場合は、ユーザーを決定する必要がありますを呼び出すときに<xref:System.Windows.Media.Animation.ClockController.Remove%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="6284a-280">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="6284a-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="6284a-281">オブジェクトがガベージ コレクションである場合は、そのクロックが切断されても、ガベージ コレクションします。</span><span class="sxs-lookup"><span data-stu-id="6284a-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="6284a-282">クロック オブジェクトに関する詳細については、次を参照してください。[アニメーションおよびタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-283">次の例では、制御可能なストーリー ボードを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6284a-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="6284a-284">次の例では、 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior>ユーザーを左クリックしたときにアニメーション化する、および<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>ときにユーザーを右クリックします。</span><span class="sxs-lookup"><span data-stu-id="6284a-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-285">指定した <c>frameworkTemplate</c> が適用されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-285">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="6284a-286">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> が指定されていないアニメーションは、<c>containingObject</c> に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="6284a-287">アニメーション化するテンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-287">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="6284a-288">新しいアニメーションが現在のアニメーションと対話する際に使用する動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-288">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="6284a-289">ストーリーボードを対話的に制御する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-289">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-290">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に関連付けられているアニメーションを、指定したテンプレート内の対象に適用して開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-291">このストーリー ボードを対話的に制御する必要がありますを指定する同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときに</span><span class="sxs-lookup"><span data-stu-id="6284a-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="6284a-292">このメソッドが呼び出されると、<xref:System.Windows.Media.Animation.Clock>ストーリー ボードとが含まれているすべてのタイムラインに対してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="6284a-293">これらのクロックは`containingObject`します。</span><span class="sxs-lookup"><span data-stu-id="6284a-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="6284a-294">ストーリー ボードのトリガーを開始、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="6284a-295">使用して、HandoffBehavior の作成</span><span class="sxs-lookup"><span data-stu-id="6284a-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="6284a-296">適用すると、 <xref:System.Windows.Media.Animation.Storyboard>、 <xref:System.Windows.Media.Animation.AnimationTimeline>、または<xref:System.Windows.Media.Animation.AnimationClock>を使用してプロパティを<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、any<xref:System.Windows.Media.Animation.Clock>以前そのプロパティに関連付けられているオブジェクトがシステム リソースを消費引き続き; タイミング システムはありませんこれらの時計を自動的に削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="6284a-297">使用してクロックの数が多いを適用するときに、パフォーマンスの問題を回避する<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>、完了した後、アニメーションのプロパティから作成クロックを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="6284a-298">クロックを削除する方法はいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="6284a-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="6284a-299">プロパティからすべてのクロックを削除するには、使用、<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>アニメーション オブジェクトのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="6284a-300">最初のパラメーターとしてアニメーション化されているプロパティを指定し、 `null` 2 つ目として。</span><span class="sxs-lookup"><span data-stu-id="6284a-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="6284a-301">これにより、すべてのアニメーション クロックが、プロパティから削除します。</span><span class="sxs-lookup"><span data-stu-id="6284a-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="6284a-302">固有の仕様を削除する<xref:System.Windows.Media.Animation.AnimationClock>にクロックのリストを使用して、<xref:System.Windows.Media.Animation.Clock.Controller%2A>のプロパティ、<xref:System.Windows.Media.Animation.AnimationClock>を取得する、<xref:System.Windows.Media.Animation.ClockController>を呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A>のメソッド、<xref:System.Windows.Media.Animation.ClockController>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="6284a-303">これは、通常、<xref:System.Windows.Media.Animation.Clock.Completed>クロックのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="6284a-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="6284a-304">唯一のルート クロックできますで制御されることに注意してください、 <xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子クロックのプロパティを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="6284a-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="6284a-305">なお、<xref:System.Windows.Media.Animation.Clock.Completed>イベントは、クロックの有効期間が forever の場合は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="6284a-306">その場合は、ユーザーを決定する必要がありますを呼び出すときに<xref:System.Windows.Media.Animation.ClockController.Remove%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="6284a-307">これは主に、有効期間が長いオブジェクトでのアニメーションの問題です。</span><span class="sxs-lookup"><span data-stu-id="6284a-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="6284a-308">オブジェクトがガベージ コレクションである場合は、そのクロックが切断されても、ガベージ コレクションします。</span><span class="sxs-lookup"><span data-stu-id="6284a-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="6284a-309">クロック オブジェクトに関する詳細については、次を参照してください。[アニメーションおよびタイミング システムの概要](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-310">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="6284a-311">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-312">現在のオブジェクトの変更可能な複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-312">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="6284a-313">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-314">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="6284a-315">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="6284a-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="6284a-316">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6284a-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-317">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-318">新しい <see cref="T:System.Windows.Media.Animation.Storyboard" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-319">このメソッドは内部で<xref:System.Windows.Freezable.CreateInstance%2A>の新しいインスタンスを作成するときに、<xref:System.Windows.Media.Animation.Storyboard>複製メソッドでさまざまなクラス (など<xref:System.Windows.Freezable.Clone%2A>と<xref:System.Windows.Freezable.CloneCurrentValue%2A>)。</span><span class="sxs-lookup"><span data-stu-id="6284a-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-320">次の例は、の一般的な実装を示しています。<xref:System.Windows.Freezable.CreateInstanceCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6284a-321">
            <para>各<see cref="T:System.Windows.Media.Animation.Storyboard" />サブクラスは、このメソッドを実装する必要があります。一般的な実装では、クラスの既定のコンス トラクターを呼び出し、結果を返すだけです。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-321">
              <para>Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method. Typical implementation is to simply call the class default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-322">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-322">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-323">クロックの<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度は、現実世界の時間と比較したをその時間の現在の進行速度。</span><span class="sxs-lookup"><span data-stu-id="6284a-323">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="6284a-324">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-324">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-325">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-325">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-326">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-326">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-327">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-327">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-328">現在のグローバル速度。クロックが停止している場合は 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-328">The current global speed, or 0 if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-329">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-329">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-330">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-330">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-331">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-331">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-332">現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-332">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-333">クロックの<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度は、現実世界の時間と比較したをその時間の現在の進行速度。</span><span class="sxs-lookup"><span data-stu-id="6284a-333">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="6284a-334">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-334">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-335">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-335">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-336">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-336">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-337">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-337">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-338">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-338">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-339">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-339">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-340">現在のグローバル速度。クロックが停止している場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-340">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-341">クロックの<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度は、現実世界の時間と比較したをその時間の現在の進行速度。</span><span class="sxs-lookup"><span data-stu-id="6284a-341">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="6284a-342">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-342">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-343">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-343">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-344">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-344">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-345">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-345">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-346">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-347">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-347">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-348">クロックの最初のイテレーションでは、1 の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="6284a-348">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="6284a-349">このストーリー ボードがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`前方リバースのペアで構成全体の反復処理、セグメントを次のいずれかだけでなく、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-349">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="6284a-350">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-350">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-351">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-351">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-352">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-352">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-353">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-353">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-354">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-354">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-355">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-355">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-356">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-356">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-357">クロックの最初のイテレーションでは、1 の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="6284a-357">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="6284a-358">このストーリー ボードがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`前方リバースのペアで構成全体の反復処理、セグメントを次のいずれかだけでなく、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-358">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="6284a-359">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-359">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-360">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-360">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-361">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-361">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-362">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-362">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-363">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-363">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-364">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-364">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-365">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-365">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-366">クロックの最初のイテレーションでは、1 の値を持ちます。</span><span class="sxs-lookup"><span data-stu-id="6284a-366">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="6284a-367">この時計のタイムラインがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`前方リバースのペアで構成全体の反復処理、セグメントを次のいずれかだけでなく、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-367">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="6284a-368">現在のイテレーションに関係なくクロックをシークの現在のイテレーション 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="6284a-368">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="6284a-369">1 に現在の反復を返しますもクロックを再起動します。</span><span class="sxs-lookup"><span data-stu-id="6284a-369">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="6284a-370">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-370">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-371">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-371">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-372">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-372">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-373">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-373">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-374">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-375">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-375">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="6284a-376">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-376">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-377">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-377">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-378">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-378">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-379">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-379">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-380">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-380">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-381">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-381">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-382">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-382">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-383">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-383">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="6284a-384">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-384">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-385">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-385">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-386">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-386">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-387">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-387">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-388">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-388">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-389">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-389">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-390">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-390">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-391">このクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は <see langword="null" />、またはこのクロックがアクティブであり、その <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> の <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> が <see cref="P:System.Windows.Duration.Forever" /> の場合は 0.0。それ以外の場合は、現在の反復におけるこのクロックの現在の進行状況を示す 0.0 ～ 1.0 の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-391">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="6284a-392">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-392">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-393">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-393">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-394">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-394">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-395">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-395">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-396">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-396">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-397">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-398">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-398">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-399">このメソッドが決まるわけでは、ストーリー ボードが一時停止しているかどうか。</span><span class="sxs-lookup"><span data-stu-id="6284a-399">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="6284a-400">ストーリー ボードが一時停止しているかどうかを判断するのには、使用、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-400">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="6284a-401">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-401">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-402">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-402">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-403">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-403">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-404">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-404">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-405">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-405">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-406">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-406">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-407">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-407">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-408">このメソッドが決まるわけでは、ストーリー ボードが一時停止しているかどうか。</span><span class="sxs-lookup"><span data-stu-id="6284a-408">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="6284a-409">ストーリー ボードが一時停止しているかどうかを判断するのには、使用、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-409">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="6284a-410">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-410">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-411">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-411">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-412">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-412">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-413">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-413">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-414">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-414">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-415">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-415">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-416">このストーリーボード用に作成されたクロックの現在の状態 ( <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-416">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-417">このメソッドが決まるわけでは、ストーリー ボードが一時停止しているかどうか。</span><span class="sxs-lookup"><span data-stu-id="6284a-417">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="6284a-418">ストーリー ボードが一時停止しているかどうかを判断するのには、使用、<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-418">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="6284a-419">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-419">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-420">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-420">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-421">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-421">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-422">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-422">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-423">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-424">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-424">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-425">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-425">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-426">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-426">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-427">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-427">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-428">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-428">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-429">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-429">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-430">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-430">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-431">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-431">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-432">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-432">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-433">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-433">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-434">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-434">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-435">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-435">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-436">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-436">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-437">この <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-437">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-438">このストーリーボードのクロックが停止している (<see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />) 場合は <see langword="null" />。それ以外の場合は、ストーリーボードのクロックの現在の時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-438">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-439">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-439">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-440">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-440">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-441">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-441">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-442">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-442">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-443">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-444">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-444">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-445">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-445">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-446">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-446">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-447">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-447">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-448">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-448">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-449">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-449">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-450">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-450">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-451">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-451">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-452">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-452">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-453">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-453">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-454">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-454">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-455">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-455">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-456">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-456">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-457">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止しているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-457">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-458">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> が一時停止している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-458">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-459">このメソッドを使用すると、ストーリー ボードのクロックに関する情報を取得して、ストーリー ボードを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6284a-459">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="6284a-460">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-460">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-461">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-461">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6284a-462">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-462">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-463">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-463">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-464">
            <paramref name="element" /> の対象となる依存関係オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-464">The dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-465">使用して、<xref:System.Windows.Media.Animation.Storyboard.Target%2A>添付プロパティをアニメーション タイムラインを対象にするオブジェクトを示すために使用します。</span><span class="sxs-lookup"><span data-stu-id="6284a-465">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="6284a-466">ストーリー ボードが対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-466">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="6284a-467">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-467">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6284a-468">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の取得元となるタイムライン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-468">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-469">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-469">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-470">
            <paramref name="element" /> の対象となる依存関係オブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-470">The name of the dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-471">このメソッドは、取得、<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>指定したオブジェクトのプロパティを添付します。</span><span class="sxs-lookup"><span data-stu-id="6284a-471">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="6284a-472">ストーリー ボードが対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-472">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="6284a-473">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-473">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6284a-474">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の取得元となる依存関係オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-474">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-475">指定した <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-475">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6284a-476">
            <paramref name="element" /> の対象となるプロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-476">The property targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-477">このメソッドは、取得、<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>指定したオブジェクトのプロパティを添付します。</span><span class="sxs-lookup"><span data-stu-id="6284a-477">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="6284a-478">ストーリー ボードが対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="6284a-478">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="6284a-479">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-479">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="6284a-480">されている場合、<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>設定が、マークアップでは、このメソッドは、空を返します。<xref:System.Windows.PropertyPath>プロパティの参照を解決して、解析時に内部的に格納されているためです。</span><span class="sxs-lookup"><span data-stu-id="6284a-480">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-481">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-481">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-482">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-483">このメソッドは、ストーリー ボードを一時停止、アクティブまたは現在一時停止ではない場合は、目に見える効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-483">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="6284a-484">副作用として関連付けられているすべての子はまた一時停止します。</span><span class="sxs-lookup"><span data-stu-id="6284a-484">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="6284a-485">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-485">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-486">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-486">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-487">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-487">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="6284a-488">一時停止しているストーリー ボードの開始</span><span class="sxs-lookup"><span data-stu-id="6284a-488">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="6284a-489">ときに、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>が一時停止されているストーリー ボードを再開し、再起動に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-489">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="6284a-490">ただしは実際には発生しません。</span><span class="sxs-lookup"><span data-stu-id="6284a-490">However, that is not what actually happens.</span></span> <span data-ttu-id="6284a-491"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが実際に置き換える、一時停止した<xref:System.Windows.Media.Animation.Storyboard>新しい一時停止されていないバージョンです。</span><span class="sxs-lookup"><span data-stu-id="6284a-491">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="6284a-492">毎回、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出されると、ストーリー ボードに対してクロック オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-492">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="6284a-493">これらのクロックは、アニメーション化するプロパティに分散されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-493">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="6284a-494">ときに、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出される、もう一度そのクロックは再起動されません以外の場合は新しいクロックをそれらに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6284a-494">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-495">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-495">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-496">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-496">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-497">この <see cref="T:System.Windows.Media.Animation.Clock" /> に関連付けられている指定された <see cref="T:System.Windows.FrameworkContentElement" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-497">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-498">このメソッドは、ストーリー ボードを一時停止、アクティブまたは現在一時停止ではない場合は、目に見える効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-498">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="6284a-499">副作用として関連付けられているすべての子はまた一時停止します。</span><span class="sxs-lookup"><span data-stu-id="6284a-499">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="6284a-500">一時停止しているストーリー ボードのシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-500">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="6284a-501">一時停止しているストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-501">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="6284a-502">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドでは、再開の外観を持つ新しい 1 つに、一時停止中のストーリー ボードをもう一度置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6284a-502">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="6284a-503">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-503">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-504">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-504">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-505">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-505">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-506">顧客から受け取った例を参照してください[する方法: ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-506">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-507">ストーリー ボードのクロックを一時停止、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-507">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="6284a-508">一時停止しているストーリー ボードの開始</span><span class="sxs-lookup"><span data-stu-id="6284a-508">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="6284a-509">ときに、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>が一時停止されているストーリー ボードを再開し、再起動に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-509">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="6284a-510">ただしは実際には発生しません。</span><span class="sxs-lookup"><span data-stu-id="6284a-510">However, that is not what actually happens.</span></span> <span data-ttu-id="6284a-511"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>実際には、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-511">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="6284a-512">毎回、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出されると、ストーリー ボードに対してクロック オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-512">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="6284a-513">これらのクロックは、アニメーション化するプロパティに分散されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-513">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="6284a-514">ときに、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出される、もう一度そのクロックは再起動されません以外の場合は新しいクロックをそれらに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6284a-514">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-515">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-515">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-516"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-516">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-517">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-517">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-518">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-518">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-519">この <see cref="T:System.Windows.Media.Animation.Clock" /> に関連付けられている指定された <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.Animation.Storyboard" /> を一時停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-519">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-520">このメソッドは、ストーリー ボードを一時停止、アクティブまたは現在一時停止ではない場合は、目に見える効果がありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-520">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="6284a-521">副作用として関連付けられているすべての子はまた一時停止します。</span><span class="sxs-lookup"><span data-stu-id="6284a-521">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="6284a-522">一時停止しているストーリー ボードのシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-522">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="6284a-523">一時停止しているストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-523">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="6284a-524">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドでは、再開の外観を持つ新しい 1 つに、一時停止中のストーリー ボードをもう一度置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6284a-524">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="6284a-525">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-525">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-526">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-526">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-527">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-527">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-528">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-528">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-529">ストーリー ボードのクロックを一時停止、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-529">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="6284a-530">一時停止しているストーリー ボードの開始</span><span class="sxs-lookup"><span data-stu-id="6284a-530">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="6284a-531">ときに、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>が一時停止されているストーリー ボードを再開し、再起動に表示されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-531">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="6284a-532">ただしは実際には発生しません。</span><span class="sxs-lookup"><span data-stu-id="6284a-532">However, that is not what actually happens.</span></span> <span data-ttu-id="6284a-533"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>実際には、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-533">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="6284a-534">毎回、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出されると、ストーリー ボードに対してクロック オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="6284a-534">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="6284a-535">これらのクロックは、アニメーション化するプロパティに分散されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-535">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="6284a-536">ときに、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドが呼び出される、もう一度そのクロックは再起動されません以外の場合は新しいクロックをそれらに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6284a-536">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-537">この <see cref="T:System.Windows.Media.Animation.Clock" /> に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-537">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="6284a-538">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定に関係なく、アニメーション化の対象プロパティへの影響を及ぼすことはなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-538">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-539">この <see cref="T:System.Windows.Media.Animation.Clock" /> に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-539">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="6284a-540">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定に関係なく、アニメーション化の対象プロパティへの影響を及ぼすことはなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-540">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-541">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-541">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-542">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-542">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-543">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-543">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-544">行われたすべての対話型操作、 <xref:System.Windows.Media.Animation.Clock>、およびでも、 <xref:System.Windows.Media.Animation.Storyboard>、[次へ] のレンダリングの直前に発生するタイミング エンジンの次のタイマー刻みで発生します。</span><span class="sxs-lookup"><span data-stu-id="6284a-544">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="6284a-545">つまり、<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>メソッドは、この時点までのアニメーションのプロパティをまだに影響します。</span><span class="sxs-lookup"><span data-stu-id="6284a-545">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="6284a-546">つまり、フレームが表示されたら、[次へ] の時刻、ストーリー ボードが削除されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-546">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="6284a-547">この時刻より前に、プロパティのアニメーションの関連付けを解除する必要がある場合、<xref:System.Windows.UIElement.BeginAnimation%2A>メソッドを`animation`のパラメーター値`null`です。</span><span class="sxs-lookup"><span data-stu-id="6284a-547">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-548">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-548">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-549">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-549">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-550">この <see cref="T:System.Windows.Media.Animation.Clock" /> に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-550">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="6284a-551">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定に関係なく、アニメーション化の対象プロパティへの影響を及ぼすことはなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-551">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-552">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-552">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-553">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-553">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-554">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-554">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-555">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-555">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-556">ストーリー ボードのクロックのトリガーを削除する、<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-556">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-557">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-557">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-558">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-558">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-559">この <see cref="T:System.Windows.Media.Animation.Clock" /> に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-559">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="6284a-560">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> に属するアニメーションは、<see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> の設定に関係なく、アニメーション化の対象プロパティへの影響を及ぼすことはなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-560">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-561">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-561">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-562">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-562">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-563">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-563">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-564">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-564">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-565">ストーリー ボードのクロックのトリガーを削除する、<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-565">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-566">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-566">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-567">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-568">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-568">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-569">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-569">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-570">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-570">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-571">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-571">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-572">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-572">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-573">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-573">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-574">一時停止されていないストーリー ボードを再開しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-574">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="6284a-575">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-575">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-576">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-576">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-577">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-577">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-578">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-578">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-579">一時停止しているストーリー ボードのシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-579">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="6284a-580">一時停止しているストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-580">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="6284a-581">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>ストーリー ボードが開始された後に再開の外観を持つ古いストーリー ボードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="6284a-581">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="6284a-582">一時停止したストーリー ボードのクロックの再開、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-582">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-583">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-583">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-584"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-584">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-585">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-585">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-586">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-586">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-587">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-587">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-588">一時停止されていないストーリー ボードを再開しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-588">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="6284a-589">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-589">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-590">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-590">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-591">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-591">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-592">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-592">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-593">一時停止しているストーリー ボードのシークは再開されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-593">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="6284a-594">一時停止しているストーリー ボードを再開する唯一の方法が使用するには、<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-594">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="6284a-595">呼び出す、<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>ストーリー ボードが開始された後に再開の外観を持つ古いストーリー ボードが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="6284a-595">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="6284a-596">一時停止したストーリー ボードのクロックの再開、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-596">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-597">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、新しい位置までシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-597">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6284a-598">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-598">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-599">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定位置までシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-599">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="6284a-600">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-600">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-601">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-601">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-602">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-602">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-603">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-603">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-604">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-604">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-605">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-605">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-606">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-606">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6284a-607">タイムラインが、指定した <c>origin</c> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-607">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6284a-608">
            <c>offset</c> の適用元の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-608">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-609">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定位置までシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-609">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="6284a-610">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-610">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-611">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-611">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-612">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-612">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-613">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-613">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-614">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-614">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-615">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-615">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-616">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-616">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-617">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-617">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-618">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-618">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6284a-619">タイムラインが、指定した <c>origin</c> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-619">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6284a-620">
            <c>offset</c> の適用元の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-620">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-621">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定位置までシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-621">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="6284a-622">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-622">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-623">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-623">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-624">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-624">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-625">このメソッドは、ストーリー ボード クロックの変更<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に<xref:System.Windows.Media.Animation.ClockState.Active>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-625">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="6284a-626">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーに影響はありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-626">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="6284a-627">の副作用として、適切なイベントも発生しないそれまでの間です。</span><span class="sxs-lookup"><span data-stu-id="6284a-627">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="6284a-628">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-628">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-629">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-629">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-630">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-630">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-631">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-631">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-632">ストーリーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-632">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-633">次の例はどちらも、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-633">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-634">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-634">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-635">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-635">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6284a-636">タイムラインが、指定した <c>origin</c> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-636">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6284a-637">
            <c>offset</c> の適用元の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-637">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-638">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を指定位置までシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-638">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="6284a-639">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> は、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-639">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-640">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-640">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-641">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-641">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-642">このメソッドは、ストーリー ボード クロックの変更<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に<xref:System.Windows.Media.Animation.ClockState.Active>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-642">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="6284a-643">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーに影響はありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-643">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="6284a-644">の副作用として、適切なイベントも発生しないそれまでの間です。</span><span class="sxs-lookup"><span data-stu-id="6284a-644">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="6284a-645">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-645">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-646">制御可能なストーリーできますを一時停止、再開、シーク、停止、制御することが行われた場合に削除されます。</span><span class="sxs-lookup"><span data-stu-id="6284a-646">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="6284a-647">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-647">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-648">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-648">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-649">ストーリーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-649">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-650">次の例では、ストーリー ボードを開始した後、1 秒間を (スキップ) を検索する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6284a-650">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="6284a-651">両方の次の例を示しています、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-651">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-652">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-652">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6284a-653">タイムラインが前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-653">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-654">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-654">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-655"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時間を配置、<xref:System.Windows.Media.Animation.Storyboard>最後のクロック刻みで。</span><span class="sxs-lookup"><span data-stu-id="6284a-655"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="6284a-656">値は直ちに期限への変更を反映するように更新される<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新まで変更内容を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-656">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="6284a-657">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-657">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-658">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-658">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-659">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-659">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-660">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-660">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6284a-661">タイムラインが、指定した <c>origin</c> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-661">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6284a-662">
            <c>offset</c> の適用元の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-662">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-663">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-663">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-664"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時間を配置、<xref:System.Windows.Media.Animation.Storyboard>最後のクロック刻みで。</span><span class="sxs-lookup"><span data-stu-id="6284a-664"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="6284a-665">値は直ちに期限への変更を反映するように更新される<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新まで変更内容を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-665">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="6284a-666">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-666">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-667">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-667">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-668">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-668">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-669">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-669">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-670">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-670">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-671">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-671">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6284a-672">タイムラインが、指定した <c>origin</c> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-672">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6284a-673">
            <c>offset</c> の適用元の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-673">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-674">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-674">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-675"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時間を配置、<xref:System.Windows.Media.Animation.Storyboard>最後のクロック刻みで。</span><span class="sxs-lookup"><span data-stu-id="6284a-675"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="6284a-676">値は直ちに期限への変更を反映するように更新される<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新まで変更内容を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-676">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="6284a-677">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-677">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-678">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-678">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-679">このメソッドは、ストーリー ボード クロックの変更<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に</span><span class="sxs-lookup"><span data-stu-id="6284a-679">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="6284a-680"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="6284a-680"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="6284a-681">ストーリーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-681">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="6284a-682">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-682">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-683">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-683">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-684">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-684">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-685">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-685">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-686">次の例はどちらも、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-686">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-687">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-687">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-688">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-688">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6284a-689">タイムラインが、指定した <c>origin</c> から前方または後方にどれだけ移動するかを示す正の値または負の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-689">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6284a-690">
            <c>offset</c> の適用元の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-690">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-691">この <see cref="T:System.Windows.Media.Animation.Storyboard" /> を新しい位置まで即座 (同期的) にシークします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-691">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-692"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 検索する時間を配置、<xref:System.Windows.Media.Animation.Storyboard>最後のクロック刻みで。</span><span class="sxs-lookup"><span data-stu-id="6284a-692"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="6284a-693">値は直ちに期限への変更を反映するように更新される<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>画面が画面の更新まで変更内容を反映していない場合でも、します。</span><span class="sxs-lookup"><span data-stu-id="6284a-693">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="6284a-694">シーク操作では、ストーリー ボードの受け取らない<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>または<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>アカウントに設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-694">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="6284a-695">ストーリー ボードがものとして扱われます、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 およびいない<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-695">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="6284a-696">このメソッドは、ストーリー ボード クロックの変更<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>に</span><span class="sxs-lookup"><span data-stu-id="6284a-696">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="6284a-697"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="6284a-697"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="6284a-698">ストーリーのシーク、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-698">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="6284a-699">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-699">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-700">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-700">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-701">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-701">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-702">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-702">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-703">次の例はどちらも、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>と<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6284a-703">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-704">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-704">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">
          <span data-ttu-id="6284a-705">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-705">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="6284a-706">この値とストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> の値を乗算して、ストーリーボードの有効な速度が決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-706">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="6284a-707">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きするわけではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-707">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="6284a-708">たとえば、このメソッドを呼び出し、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 に設定されたストーリーボードに対して、対話的速度比率として 3 を指定した場合、ストーリーボードの有効な速度として 1.5 が算出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-708">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-709">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-709">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-710">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-710">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-711">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-711">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-712">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-712">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-713">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-713">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-714">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-714">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="6284a-715">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-715">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="6284a-716">この値とストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> の値を乗算して、ストーリーボードの有効な速度が決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-716">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="6284a-717">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きするわけではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-717">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="6284a-718">たとえば、このメソッドを呼び出し、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 に設定されたストーリーボードに対して、対話的速度比率として 3 を指定した場合、ストーリーボードの有効な速度として 1.5 が算出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-718">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-719">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-719">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-720">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-720">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-721">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-721">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-722">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-722">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-723">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-723">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-724">このメソッドの呼び出しをトリガー、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-724">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-725">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-725">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-726"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-726">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-727">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-727">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-728">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-728">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="6284a-729">ストーリーボードの新しい対話型速度比である 0 より大きい有限値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-729">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="6284a-730">この値とストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> の値を乗算して、ストーリーボードの有効な速度が決定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-730">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="6284a-731">この値は、ストーリーボードの <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> プロパティを上書きするわけではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-731">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="6284a-732">たとえば、このメソッドを呼び出し、<see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0.5 に設定されたストーリーボードに対して、対話的速度比率として 3 を指定した場合、ストーリーボードの有効な速度として 1.5 が算出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-732">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-733">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> の対話的速度比率を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-733">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-734">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-734">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-735">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-735">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-736">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-736">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-737">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-737">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="6284a-738">このメソッドの呼び出しをトリガー、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-738">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6284a-739">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-739">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6284a-740">対象となる依存関係オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-740">The dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-741">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、依存関係オブジェクトを対象にするように指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-741">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-742">このメソッドを設定、<xref:System.Windows.Media.Animation.Storyboard.Target%2A>指定したオブジェクトのプロパティを添付します。</span><span class="sxs-lookup"><span data-stu-id="6284a-742">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="6284a-743">ストーリー ボードが対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-743">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="6284a-744">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-744">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6284a-745"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>ので、プロパティはシリアル化可能ないずれかに設定することができます<xref:System.Windows.DependencyObject>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-745">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="6284a-746">このオブジェクトを正しく XAML から参照できることは保証されません。</span><span class="sxs-lookup"><span data-stu-id="6284a-746">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6284a-747">指定した依存関係オブジェクトを対象とする <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-747">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="6284a-748">対象とする依存関係オブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-748">The name of the dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-749">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した名前の依存関係オブジェクトを対象にするように指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-749">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-750">このメソッドを設定、<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>指定したオブジェクトのプロパティを添付します。</span><span class="sxs-lookup"><span data-stu-id="6284a-750">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="6284a-751">ストーリー ボードが対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-751">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="6284a-752">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-752">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="6284a-753">指定した依存関係プロパティを関連付ける <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-753">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="6284a-754">アニメーション化する依存関係プロパティを示すパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-754">A path that describe the dependency property to be animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-755">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した依存関係プロパティを対象にするように指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-755">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-756">このメソッドを設定、<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>指定したオブジェクトのプロパティを添付します。</span><span class="sxs-lookup"><span data-stu-id="6284a-756">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="6284a-757">ストーリー ボードが対象とするしくみの詳細については、次を参照してください。<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-757">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="6284a-758">添付プロパティの機能の詳細については、次を参照してください。[添付プロパティの概要](~/docs/framework/wpf/advanced/attached-properties-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-758">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-759">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時刻をアクティブ期間の最後まで進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-759">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-760">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時刻をアクティブ期間の最後まで進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-761">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-761">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-762">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-762">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-763">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-763">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-764">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-764">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-765">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-765">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-766">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時刻をアクティブ期間の最後まで進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-766">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-767">このメソッドを進める、ストーリー ボードのアクティブな期間の末尾に現在の時刻この時点で、ストーリー ボードの動作がで指定されたその<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-767">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="6284a-768">場合<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>に設定されている<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>、プロパティ設定されている場合、ストーリー ボードを塗りつぶします; <xref:System.Windows.Media.Animation.FillBehavior.Stop>、ストーリー ボードが停止します。</span><span class="sxs-lookup"><span data-stu-id="6284a-768">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="6284a-769">無限の期間のあるストーリー ボードでこのメソッドを呼び出すと、無限回の繰り返しは影響しません。</span><span class="sxs-lookup"><span data-stu-id="6284a-769">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="6284a-770">非アクティブなストーリー ボードこのメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-770">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="6284a-771">期間のトリガーをその fill に時計を進める、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-771">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="6284a-772">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-772">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-773">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-773">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-774">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-774">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-775">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-775">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-776">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-776">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-777"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-777">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-778">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-778">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-779">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-779">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-780">このストーリーボードの <see cref="T:System.Windows.Media.Animation.Clock" /> の現在の時刻をアクティブ期間の最後まで進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-780">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-781">このメソッドを進める、ストーリー ボードのアクティブな期間の末尾に現在の時刻この時点で、ストーリー ボードの動作がで指定されたその<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="6284a-781">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="6284a-782">場合<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>に設定されている<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>、プロパティ設定されている場合、ストーリー ボードを塗りつぶします; <xref:System.Windows.Media.Animation.FillBehavior.Stop>、ストーリー ボードが停止します。</span><span class="sxs-lookup"><span data-stu-id="6284a-782">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="6284a-783">無限の期間のあるストーリー ボードでこのメソッドを呼び出すと、無限回の繰り返しは影響しません。</span><span class="sxs-lookup"><span data-stu-id="6284a-783">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="6284a-784">非アクティブなストーリー ボードこのメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="6284a-784">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="6284a-785">期間のトリガーをその fill に時計を進める、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-785">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="6284a-786">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-786">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-787">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-787">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-788">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-788">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-789">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-789">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-790">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-790">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6284a-791">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-792">ストーリー ボードを停止するには起動しません、<xref:System.Windows.Media.Animation.Timeline.Completed>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-792">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-793">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-793">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-794">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-794">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-795">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-795">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-796">A<xref:System.Windows.Media.Animation.ClockState.Stopped>ストーリー ボードは、そのターゲットのプロパティを不要になったに影響します。 前回の値にアニメーション化されたプロパティを元に戻します。</span><span class="sxs-lookup"><span data-stu-id="6284a-796">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="6284a-797">クロックを停止する、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント、ではなく、<xref:System.Windows.Media.Animation.Timeline.Completed>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-797">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="6284a-798">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-798">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-799">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-799">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-800">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-800">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-801">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-801">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6284a-802">次の例では、制御可能なストーリーを使用して、<xref:System.Windows.Media.TextEffect>です。</span><span class="sxs-lookup"><span data-stu-id="6284a-802">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="6284a-803"><xref:System.Windows.Media.TextEffect>内に含まれる、<xref:System.Windows.FrameworkContentElement>のスコープの名前を付けます。</span><span class="sxs-lookup"><span data-stu-id="6284a-803">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="6284a-804">
            <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> メソッドの呼び出し時に指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-804">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="6284a-805">このオブジェクトには、このストーリーボードとその子のために作成された <see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトが格納されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-805">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6284a-806">この <see cref="T:System.Windows.Media.Animation.Clock" /> 用に作成された <see cref="T:System.Windows.Media.Animation.Storyboard" /> を停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-806">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6284a-807">A<xref:System.Windows.Media.Animation.ClockState.Stopped>ストーリー ボードは、そのターゲットのプロパティを不要になったに影響します。 前回の値にアニメーション化されたプロパティを元に戻します。</span><span class="sxs-lookup"><span data-stu-id="6284a-807">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="6284a-808">クロックを停止する、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>と<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>イベント、ではなく、<xref:System.Windows.Media.Animation.Timeline.Completed>イベント。</span><span class="sxs-lookup"><span data-stu-id="6284a-808">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="6284a-809">このストーリー ボードを対話的に制御を行う必要があります同じ`containingObject`ストーリー ボードを開始するために使用する対話型のメソッドを呼び出すときのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="6284a-809">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="6284a-810">制御可能なストーリーできますを一時停止、再開、シーク、停止、削除するとします。</span><span class="sxs-lookup"><span data-stu-id="6284a-810">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="6284a-811">ストーリー ボードをコードに制御するためには、ストーリー ボードの適切なオーバー ロードを使用する必要があります<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドを指定して`true`制御可能にします。</span><span class="sxs-lookup"><span data-stu-id="6284a-811">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="6284a-812">例については、次を参照してください。[する方法:、ストーリー ボードの後に開始制御](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)です。</span><span class="sxs-lookup"><span data-stu-id="6284a-812">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-813">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-813">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-814">
            <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-814">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6284a-815">
            <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6284a-815">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>