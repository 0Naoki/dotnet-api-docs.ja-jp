<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dbff06c5772fd82ffc6441052e669335c725dc8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36496112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fbe97-101">時間のセグメントを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fbe97-101">Defines a segment of time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-102">タイムラインは、時間のセグメントを表します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-102">A timeline represents a segment of time.</span></span>  <span data-ttu-id="fbe97-103">用意されているプロパティを使用して、そのセグメントの長さ、開始時間、繰り返し回数、時間の進行の速度などを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-103">It provides properties that enable you to specify the length of that segment, when it should start, how many times it will repeat, how fast time progresses in that segment, and more.</span></span>  
  
 <span data-ttu-id="fbe97-104">Timeline クラスを継承するクラスには、アニメーションやメディアの再生などの追加機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="fbe97-104">Classes that inherit from the timeline class provide additional functionality, such as animation and media playback.</span></span> <span data-ttu-id="fbe97-105">使用可能な特殊なタイムラインのさまざまな種類のいくつかの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-105">The following are examples of some of the different types of specialized timelines available.</span></span>  
  
-   <span data-ttu-id="fbe97-106">**アニメーション**:<xref:System.Windows.Media.Animation.AnimationTimeline>出力値を生成するタイムラインの型です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-106">**Animations**: An <xref:System.Windows.Media.Animation.AnimationTimeline> is a type of timeline that produces output values.</span></span> <span data-ttu-id="fbe97-107">アニメーションをプロパティに関連付けるときに、アニメーションは、再生、それによって「してアニメーション化」プロパティの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-107">When you associate an animation with a property, the animation updates the property's value as it plays, thereby "animating" it.</span></span> <span data-ttu-id="fbe97-108">アニメーションの概要については、次を参照してください。[アニメーションの概要](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-108">For an introduction to animations, see [Animation Overview](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).</span></span> <span data-ttu-id="fbe97-109">アニメーションを適用するさまざまな方法については、次を参照してください。、[プロパティ アニメーションの技術概要](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-109">For information about the different ways to apply animations, see the [Property Animation Techniques Overview](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md).</span></span>  
  
-   <span data-ttu-id="fbe97-110">**MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>メディア ファイルの再生を制御するタイムラインの型です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-110">**MediaTimelines**: A <xref:System.Windows.Media.MediaTimeline> is a type of timeline that controls the playback of a media file.</span></span>  
  
-   <span data-ttu-id="fbe97-111">**Paralleltimeline**: A<xref:System.Windows.Media.Animation.ParallelTimeline>他のタイムラインをグループ化するタイムラインの型です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-111">**ParallelTimelines**: A <xref:System.Windows.Media.Animation.ParallelTimeline> is a type of timeline that groups other timelines.</span></span>  
  
-   <span data-ttu-id="fbe97-112">**ストーリー ボード**: A<xref:System.Windows.Media.Animation.Storyboard>は特殊な種類の<xref:System.Windows.Media.Animation.ParallelTimeline>オブジェクトとが含まれているタイムラインの情報を対象とするプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-112">**Storyboards**: A <xref:System.Windows.Media.Animation.Storyboard> is a special type of <xref:System.Windows.Media.Animation.ParallelTimeline> that provides object and property targeting information for the timelines it contains.</span></span> <span data-ttu-id="fbe97-113">詳細については<xref:System.Windows.Media.Animation.Storyboard>、オブジェクトを参照してください、[ストーリー ボードの概要](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-113">For more information about <xref:System.Windows.Media.Animation.Storyboard> objects, see the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="fbe97-114">タイムラインの使用方法の詳細については、次を参照してください。、[アニメーションの概要](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-114">For more information about using timelines, see the [Animation Overview](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).</span></span> <span data-ttu-id="fbe97-115">タイムラインのタイミング機能の紹介を参照してください、[タイミング動作の概要](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-115">For an introduction to the timing features of timelines, see the [Timing Behaviors Overview](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="fbe97-116">データ バインディングとタイムラインがアニメーション化</span><span class="sxs-lookup"><span data-stu-id="fbe97-116">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="fbe97-117">ほとんどのタイムラインのプロパティは、データ バインドまたはアニメーション化します。ただし、タイミング システムが動作するしくみ、により、他のデータと同様に動作しない場合はバインドされている、またはアニメーションのタイムライン データはバインドされているか、オブジェクトをアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-117">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="fbe97-118">その動作を理解するのには、タイムラインのアクティブ化意味を理解するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-118">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="fbe97-119">タイムラインを適用すると、タイムラインとその子タイムラインのコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-119">When a timeline is applied, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="fbe97-120">これらのコピーが固定されている (読み取り専用に変更) と<xref:System.Windows.Media.Animation.Clock>そこからオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-120">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="fbe97-121">これらのクロックを対象のプロパティをアニメーション化する実際の作業を実行することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-121">It's these clocks that do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="fbe97-122">タイムラインがあった場合は、データ バインドされているか、アニメーション化されている現在の値のスナップショットが行われた、クロックの作成時にします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-122">If a timeline was data bound or animated, a snapshot of its current values was made when its clock was created.</span></span> <span data-ttu-id="fbe97-123">元のタイムライン可能性があります、継続的に変更する場合でもそのクロックされていません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-123">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="fbe97-124">データ バインディングまたはアニメーションの変更を反映するためにタイムラインは、その時計を再生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fbe97-124">For a timeline to reflect data binding or animation changes, its clock must be regenerated.</span></span> <span data-ttu-id="fbe97-125">クロックは、自動的には再生成されません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-125">Clocks are not regenerated for you automatically.</span></span> <span data-ttu-id="fbe97-126">タイムラインの変更を適用するいくつかの方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-126">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="fbe97-127">タイムラインがまたはに属している場合、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードを使用して、再適用して変更を反映してこれを行うことができます、<xref:System.Windows.Media.Animation.BeginStoryboard>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-127">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="fbe97-128">これには、アニメーションが再起動されるという副作用があります。</span><span class="sxs-lookup"><span data-stu-id="fbe97-128">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="fbe97-129">コードでは、使用することができます、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>ストーリー ボードを進める方法は、前の位置にバックアップします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-129">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="fbe97-130">プロパティを使用して、直接には、アニメーションを適用したかどうか、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを呼び出し、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを再度が変更されたアニメーションを渡します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-130">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that's been modified.</span></span>  
  
-   <span data-ttu-id="fbe97-131">クロック レベルで直接操作している場合は、新しいクロック セットを作成して適用し、それらを使って、生成されたクロックの以前のセットを置換します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-131">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of generated clocks.</span></span>  
  
 <span data-ttu-id="fbe97-132">データの例には、アニメーションがバインドされているを参照してください、[キー スプライン アニメーション サンプル](http://go.microsoft.com/fwlink/?LinkID=160011)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-132">For an example of a data bound animation, see the [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="fbe97-133">タイムラインをタイマーとして使用します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-133">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="fbe97-134">タイムラインのクロックは、関連付けられているイベント ハンドラーがある場合にのみ実行または (の場合、<xref:System.Windows.Media.Animation.AnimationClock>オブジェクト) のプロパティに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="fbe97-134">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="fbe97-135">この理由 (など)、これはお勧めしませんを使用すること、<xref:System.Windows.Media.Animation.Timeline>をタイマーとして。</span><span class="sxs-lookup"><span data-stu-id="fbe97-135">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-136">
            <see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-136">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-137">
            <see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-137">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">
          <span data-ttu-id="fbe97-138">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が開始する時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-138">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span>
          </span>
          <span data-ttu-id="fbe97-139">詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-139">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-140">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-140">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">
          <span data-ttu-id="fbe97-141">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が開始する時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-141">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span>
          </span>
          <span data-ttu-id="fbe97-142">詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-142">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span>
          </span>
        </param>
        <param name="duration">
          <span data-ttu-id="fbe97-143">繰り返しをカウントせずに、このタイムラインの再生に要する時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-143">The length of time for which this timeline plays, not counting repetitions.</span>
          </span>
          <span data-ttu-id="fbe97-144">詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-144">See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-145">指定された <see cref="T:System.Windows.Media.Animation.Timeline" /> と <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-145">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">
          <span data-ttu-id="fbe97-146">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が開始する時刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-146">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span>
          </span>
          <span data-ttu-id="fbe97-147">詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> プロパティに関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-147">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span>
          </span>
        </param>
        <param name="duration">
          <span data-ttu-id="fbe97-148">繰り返しをカウントせずに、このタイムラインの再生に要する時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-148">The length of time for which this timeline plays, not counting repetitions.</span>
          </span>
          <span data-ttu-id="fbe97-149">詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> プロパティに関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-149">See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</span>
          </span>
        </param>
        <param name="repeatBehavior">
          <span data-ttu-id="fbe97-150">このライムラインの繰り返し動作。回数を示す <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> または期間を示す <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" /> として指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-150">The repeating behavior of this timeline, either as an iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> or a repeat <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />.</span>
          </span>
          <span data-ttu-id="fbe97-151">詳細については、<see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> プロパティに関するトピックを参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-151">See the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property for more information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-152">指定した <see cref="T:System.Windows.Media.Animation.Timeline" />、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />、および <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> を使用して、<see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-152">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-153">時間の経過を 0 から最大速度に加速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-153">Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-154">時間の経過を 0 から最大速度に加速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する 0 ～ 1 の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-154">A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.</span>
          </span>
          <span data-ttu-id="fbe97-155">タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> プロパティも設定されている場合、<see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計は 1 以下である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-155">If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> must be less than or equal to 1.</span>
          </span>
          <span data-ttu-id="fbe97-156">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-156">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-157">使用して、<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>プロパティを緩やかに変化を起動し、時間の経過と共にを高速化するアニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-157">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> property to create animations that start slowly and then speed up as time progresses.</span></span> <span data-ttu-id="fbe97-158"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>プロパティは簡単操作の効果を作成するかより自然に見える移動を行うに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-158">The <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> property is useful for creating ease-in effects or making movement seem more natural.</span></span> <span data-ttu-id="fbe97-159">使用して、<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>と<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>の起動が遅い、アニメーションを作成するには、一緒にプロパティを高速化し、し、終了する前にもう一度速度が低下します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-159">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that that start slowly, speed up, and then slow down again before finishing.</span></span>  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-160">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-160">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-161">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-161">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|<span data-ttu-id="fbe97-162">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-162">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-163">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-163">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fbe97-164">
            <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> が 0 より小さいか、または 1 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-164">
              <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> is less than 0 or greater than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fbe97-165">
            <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計が 1 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-165">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-166">
            <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-166">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-167">この <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-167">Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-168">この <see cref="T:System.Windows.Media.Animation.Timeline" /> のクロック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-168">A clock for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-169">このメソッドは、<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>メソッドと、コードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-169">This method is called by the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method and should not be called directly by your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbe97-170">
            <para>実装側<see cref="T:System.Windows.Media.Animation.Timeline" />クラス使用する必要がある対応するカスタム クロックにある場合に、このメソッドをオーバーライドする必要があります。オーバーライドされたメソッドを作成し、継承されたクラスの新しいインスタンスを返す<see cref="T:System.Windows.Media.Animation.Clock" />です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-170">
              <para>Implementers of <see cref="T:System.Windows.Media.Animation.Timeline" /> should override this method when it has a corresponding custom clock that should be used with the class. The overridden method should create and return a new instance of class that inherits from <see cref="T:System.Windows.Media.Animation.Clock" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-171">順方向の反復の完了後に、タイムラインを逆方向に再生するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-171">Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-172">各反復の終了後にタイムラインを逆方向に再生する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-172">
              <see langword="true" /> if the timeline plays in reverse at the end of each iteration; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fbe97-173">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-173">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-174">場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>プロパティに設定されている`true`、タイムラインがで指定した時間の長さの 2 倍の再生、<xref:System.Windows.Media.Animation.Timeline.Duration%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-174">If the <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true`, the timeline plays for twice the length of time specified by its <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property.</span></span>  
  
### <a name="autoreverse-and-repetitions"></a><span data-ttu-id="fbe97-175">AutoReverse と繰り返し</span><span class="sxs-lookup"><span data-stu-id="fbe97-175">AutoReverse and Repetitions</span></span>  
 <span data-ttu-id="fbe97-176">ときにタイムラインの<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>プロパティに設定されている`true`とその<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>プロパティにより繰り返しますが、順方向の各反復の下位のイテレーションが続きます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-176">When a timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true` and its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat, each forward iteration is followed by a backward iteration.</span></span> <span data-ttu-id="fbe97-177">これにより、1 回の繰り返しです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-177">This makes one repetition.</span></span> <span data-ttu-id="fbe97-178">備えたタイムラインなど、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>の値`true`イテレーションに<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>2 がプレイ転送 1 回、その逆の順序で、転送、し、再度後方です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-178">For example, a timeline with an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> value of `true` with an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> of 2 would play forward once, then backwards, then forwards again, and then backwards again.</span></span>  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-179">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-179">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-180">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-180">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|<span data-ttu-id="fbe97-181">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-181">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-182">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-182">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-183">
            <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-183">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-184">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-184">Gets or sets the time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-185">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間 (親の <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> に対する相対的な時間)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-185">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin, relative to its parent's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</span>
          </span>
          <span data-ttu-id="fbe97-186">このタイムラインがルート タイムラインの場合は、対話による開始時間 (タイムラインがトリガーされた時間) に対する相対的な時間になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-186">If this timeline is a root timeline, the time is relative to its interactive begin time (the moment at which the timeline was triggered).</span>
          </span>
          <span data-ttu-id="fbe97-187">この値には、正の値、負の値、または <see langword="null" /> を指定できます。値が <see langword="null" /> の場合、そのタイムラインは再生されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-187">This value may be positive, negative, or <see langword="null" />; a <see langword="null" /> value means the timeline never plays.</span>
          </span>
          <span data-ttu-id="fbe97-188">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-188">The default value is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-189"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>プロパティは、シーケンス内の再生のタイムラインを作成するために役立ちます。 を増やすことで、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>同じ親を共有する一連のタイムラインの、再生時間の時差を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-189">The <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property is useful for creating timelines that play in a sequence: by increasing the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of successive timelines that share the same parent, you can stagger their play times.</span></span>  
  
## <a name="negative-values"></a><span data-ttu-id="fbe97-190">負の値</span><span class="sxs-lookup"><span data-stu-id="fbe97-190">Negative Values</span></span>  
 <span data-ttu-id="fbe97-191">負<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>値の原因、<xref:System.Windows.Media.Animation.Timeline>を過去の時間に開始できるように動作します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-191">A negative <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> value causes a <xref:System.Windows.Media.Animation.Timeline> to behave as though it started at some time in the past.</span></span> <span data-ttu-id="fbe97-192">たとえば、<xref:System.Windows.Media.Animation.Timeline>で、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 2.5 負の値の秒と<xref:System.Windows.Media.Animation.Timeline.Duration%2A>5 秒間の中間に表示されます開始と終了します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-192">For example, a <xref:System.Windows.Media.Animation.Timeline> with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of negative 2.5 seconds and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds will appear to be half-way finished when it starts.</span></span>  
  
## <a name="begintime-and-speedratio"></a><span data-ttu-id="fbe97-193">BeginTime と SpeedRatio</span><span class="sxs-lookup"><span data-stu-id="fbe97-193">BeginTime and SpeedRatio</span></span>  
 <span data-ttu-id="fbe97-194">指定された期間、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>プロパティは、タイムラインの親の時間で測定されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-194">The time described by the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property is measured in the timeline's parent's time.</span></span> <span data-ttu-id="fbe97-195">備えたタイムラインなど、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>親が 5、 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 の実際には、開始 2.5 秒後にします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-195">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of 5 whose parent has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2 actually starts after 2.5 seconds.</span></span>  
  
 <span data-ttu-id="fbe97-196">タイムライン独自の<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定は影響しません、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-196">A timeline's own <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not affect its <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.</span></span> <span data-ttu-id="fbe97-197">備えたタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 5 (秒単位) の<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>2、および親タイムラインでの<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 のない 2.5、5 秒後に起動します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-197">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of 5 seconds, a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2, and a parent timeline with a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 starts after 5 seconds, not 2.5.</span></span>  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-198">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-198">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-199">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-199">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|<span data-ttu-id="fbe97-200">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-200">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-201">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-201">None</span></span>|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="fbe97-202">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="fbe97-202">XAML Attribute Usage</span></span>  
 <span data-ttu-id="fbe97-203">\<*オブジェクト* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*日数*]。*時間*:*分*:*秒*[.*fractionalSeconds*]"/></span><span class="sxs-lookup"><span data-stu-id="fbe97-203">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]"/></span></span>  
  
 <span data-ttu-id="fbe97-204">\- または</span><span class="sxs-lookup"><span data-stu-id="fbe97-204">\- or -</span></span>  
  
 <span data-ttu-id="fbe97-205">\<*オブジェクト* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*日数*]。*時間*:*分*"/></span><span class="sxs-lookup"><span data-stu-id="fbe97-205">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*"/></span></span>  
  
 <span data-ttu-id="fbe97-206">\- または</span><span class="sxs-lookup"><span data-stu-id="fbe97-206">\- or -</span></span>  
  
 <span data-ttu-id="fbe97-207">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/></span><span class="sxs-lookup"><span data-stu-id="fbe97-207">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/></span></span>  
  
 <span data-ttu-id="fbe97-208">\- または</span><span class="sxs-lookup"><span data-stu-id="fbe97-208">\- or -</span></span>  
  
 <span data-ttu-id="fbe97-209">\<*オブジェクト* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[X:null マークアップ拡張機能](~/docs/framework/xaml-services/x-null-markup-extension.md)}"/></span><span class="sxs-lookup"><span data-stu-id="fbe97-209">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md)}"/></span></span>  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a><span data-ttu-id="fbe97-210">XAML 値</span><span class="sxs-lookup"><span data-stu-id="fbe97-210">XAML Values</span></span>  
 <span data-ttu-id="fbe97-211">角かっこ内の項目 (`[`と`]`) は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-211">Items in square brackets (`[` and `]`) are optional.</span></span>  
  
 <span data-ttu-id="fbe97-212">*days*</span><span class="sxs-lookup"><span data-stu-id="fbe97-212">*days*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="fbe97-213">この日数の数を示す 0 以上の値は、時間を開始します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-213">A value greater than or equal to 0 that describes the number of days spanned by this begin time.</span></span>  
  
 <span data-ttu-id="fbe97-214">*時間*</span><span class="sxs-lookup"><span data-stu-id="fbe97-214">*hours*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="fbe97-215">これにより展開される時間数を表す 0 ~ 23 の範囲値は、時間を開始します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-215">A value between 0 and 23 that represents the number of hours spanned by this begin time.</span></span>  
  
 <span data-ttu-id="fbe97-216">*(分)*</span><span class="sxs-lookup"><span data-stu-id="fbe97-216">*minutes*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="fbe97-217">これにより展開される分単位の時間を表す 0 ~ 59 の範囲値は、時間を開始します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-217">A value between 0 and 59 that represents the number of minutes spanned by this begin time.</span></span>  
  
 <span data-ttu-id="fbe97-218">*seconds*</span><span class="sxs-lookup"><span data-stu-id="fbe97-218">*seconds*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="fbe97-219">これにより展開される秒数を表す 0 ~ 59 の範囲値は、時間を開始します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-219">A value between 0 and 59 that represents the number of seconds spanned by this begin time.</span></span>  
  
 <span data-ttu-id="fbe97-220">*fractionalSeconds*</span><span class="sxs-lookup"><span data-stu-id="fbe97-220">*fractionalSeconds*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="fbe97-221">秒の小数部を表す 1 ~ 7 桁の数字で構成される値。</span><span class="sxs-lookup"><span data-stu-id="fbe97-221">A value consisting of 1 to 7 digits that represents fractional seconds.</span></span>  
  
 <span data-ttu-id="fbe97-222">完全な<xref:System.TimeSpan>構文の「解説」セクションを参照してください、<xref:System.TimeSpan.Parse%2A>ページ。</span><span class="sxs-lookup"><span data-stu-id="fbe97-222">For the complete <xref:System.TimeSpan> syntax, see the Remarks section of the <xref:System.TimeSpan.Parse%2A> page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbe97-223">タイムラインの<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>プロパティは、タイムラインのアクティブな期間の開始を決定します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-223">A timeline's <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines the beginning of a timeline's active period.</span></span> <span data-ttu-id="fbe97-224">タイムラインに、親タイムライン、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>プロパティは、その親の開始後に起動するタイムラインに要する時間を決定します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-224">If the timeline has a parent timeline, the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines how long it takes the timeline to start after its parent starts.</span></span> <span data-ttu-id="fbe97-225">タイムラインがルート タイムラインの場合 (、<xref:System.Windows.Media.Animation.Storyboard>など) では、<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>プロパティは、タイムラインで再生がトリガーされた後の開始にかかる時間を決定します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-225">If the timeline is a root timeline (a <xref:System.Windows.Media.Animation.Storyboard>, for example), the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines how long the timeline takes to start playing after it is triggered.</span></span>  
  
 <span data-ttu-id="fbe97-226">次の例では、異なる複数の異なるタイムライン<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-226">The following example shows several different timelines with different <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> settings.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-227">
            <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-227">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-228">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-228">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" />, making deep copies of this object's values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-229">現在のオブジェクトの変更可能な複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-229">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="fbe97-230">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> である場合でも、<see langword="false" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-230">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-231">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-231">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fbe97-232">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-232">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fbe97-233">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-233">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fbe97-234">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-234">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-235">この <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-235">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" /> object, making deep copies of this object's current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-236">現在のオブジェクトの変更可能な複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-236">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="fbe97-237">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="false" /> の場合でも、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-237">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-238">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-238">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fbe97-239">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-239">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fbe97-240">詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-240">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fbe97-241">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-241">Resource references, data bindings, and animations are not copied, but their current values are.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-242">このタイムラインの再生が完全に終了したときに発生します。このタイムラインは、もうアクティブ期間に入りません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-242">Occurs when this timeline has completely finished playing: it will no longer enter its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-243">このタイムラインがタイムライン ツリーのルート タイムラインの場合は、アクティブな期間 (を繰り返しを含む) の末尾に達するし、そのすべての子は、アクティブな期間の終わりに達しました後、再生は完了します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-243">If this timeline is the root timeline of a timeline tree, it has completed playing after it reaches the end of its active period (which includes repeats) and all its children have reached the end of their active periods.</span></span> <span data-ttu-id="fbe97-244">このタイムラインが子タイムラインの場合を所属先に達すると、タイムライン ツリーのルート タイムライン アクティブな期間とそのすべての子タイムラインの末尾が終了したら再生すると再生が完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-244">If this timeline is a child timeline, it is considered to have completely finished playing when the root timeline of the timeline tree to which it belongs reaches the end of its active period and all its child timelines have finished playing.</span></span>  
  
 <span data-ttu-id="fbe97-245">タイムラインを停止すると、その完了イベントがトリガーされませんが、その保留期間をスキップします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-245">Stopping a timeline does not trigger its completed event, but skipping it to its fill period does.</span></span>  
  
 <span data-ttu-id="fbe97-246"><xref:System.Object>のパラメーター、<xref:System.EventHandler>イベント ハンドラーは、タイムラインの<xref:System.Windows.Media.Animation.Clock>します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-246">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="fbe97-247">このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-247">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="fbe97-248">詳細については、次を参照してください。、[タイミング イベントの概要](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-248">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbe97-249">次の例では、次の 2 つ<xref:System.Windows.Media.Animation.Storyboard>オブジェクトが、アニメーションの切り替えを使用して格納されている 2 つのイメージの作成に使用する<xref:System.Windows.Media.ImageSource>オブジェクトし、を使用して表示、<xref:System.Windows.Controls.Image>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fbe97-249">In the following example, two <xref:System.Windows.Media.Animation.Storyboard> objects are used to create an animation transition between two images, stored using <xref:System.Windows.Media.ImageSource> objects and displayed using an <xref:System.Windows.Controls.Image> control.</span></span> <span data-ttu-id="fbe97-250">見えなくなるまで、1 つのストーリー ボードは、イメージ コントロールを縮小します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-250">One storyboard shrinks the image control until it disappears.</span></span> <span data-ttu-id="fbe97-251">これが完了したら、古い<xref:System.Windows.Media.ImageSource>が、他のスワップされる<xref:System.Windows.Media.ImageSource>、およびイメージを展開する 2 番目のストーリー ボードが再びになるまで、フル サイズを制御します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-251">After it completes, the old <xref:System.Windows.Media.ImageSource> is swapped with the other <xref:System.Windows.Media.ImageSource>, and a second storyboard that expands the image control until it is full-sized again.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-252">この <see cref="T:System.Windows.Media.Animation.Clock" /> から <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-252">Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-253">この <see cref="T:System.Windows.Media.Animation.Clock" /> から新しい制御可能な <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-253">Creates a new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
          <span data-ttu-id="fbe97-254">この <see cref="T:System.Windows.Media.Animation.Timeline" /> に子がある場合は、この <see cref="T:System.Windows.Media.Animation.Timeline" /> をルートとするクロックのツリーが作成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-254">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-255">この <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された新しい制御可能な <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-255">A new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
          <span data-ttu-id="fbe97-256">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が子タイムラインを含む <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> の場合、<see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトのツリーは、ルートであるこの <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された制御可能な <see cref="T:System.Windows.Media.Animation.Timeline" /> を使用して作成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-256">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-257">この<xref:System.Windows.Media.Animation.Timeline>1 つまたは複数の子になる可能性があります<xref:System.Windows.Media.Animation.TimelineGroup>オブジェクトをこの情報は無視されます: このメソッドは、現在をどのように処理<xref:System.Windows.Media.Animation.Timeline>ルートとして<xref:System.Windows.Media.Animation.Timeline>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-257">Although this <xref:System.Windows.Media.Animation.Timeline> may be the child of one or more <xref:System.Windows.Media.Animation.TimelineGroup> objects, this information is ignored: this method treats the current <xref:System.Windows.Media.Animation.Timeline> as a root <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot">
          <span data-ttu-id="fbe97-258">返されるルート <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="T:System.Windows.Media.Animation.ClockController" /> プロパティから <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> を返して <see cref="T:System.Windows.Media.Animation.Clock" /> ツリーを対話的に制御できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-258">
              <see langword="true" /> if the root <see cref="T:System.Windows.Media.Animation.Clock" /> returned should return a <see cref="T:System.Windows.Media.Animation.ClockController" /> from its <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> property so that the <see cref="T:System.Windows.Media.Animation.Clock" /> tree can be interactively controlled; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-259">この <see cref="T:System.Windows.Media.Animation.Clock" /> から新しい <see cref="T:System.Windows.Media.Animation.Timeline" /> を作成し、その新しい <see cref="T:System.Windows.Media.Animation.Clock" /> が制御可能かどうかを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-259">Creates a new <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" /> and specifies whether the new <see cref="T:System.Windows.Media.Animation.Clock" /> is controllable.</span>
          </span>
          <span data-ttu-id="fbe97-260">この <see cref="T:System.Windows.Media.Animation.Timeline" /> に子がある場合は、この <see cref="T:System.Windows.Media.Animation.Timeline" /> をルートとするクロックのツリーが作成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-260">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-261">この <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された新しい <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-261">A new <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
          <span data-ttu-id="fbe97-262">この <see cref="T:System.Windows.Media.Animation.Timeline" /> が子タイムラインを含む <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> の場合、<see cref="T:System.Windows.Media.Animation.Clock" /> オブジェクトのツリーは、ルートであるこの <see cref="T:System.Windows.Media.Animation.Clock" /> から作成された制御可能な <see cref="T:System.Windows.Media.Animation.Timeline" /> を使用して作成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-262">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-263">この<xref:System.Windows.Media.Animation.Timeline>1 つまたは複数の子になる可能性があります<xref:System.Windows.Media.Animation.TimelineGroup>オブジェクトをこの情報は無視されます: このメソッドは、現在をどのように処理<xref:System.Windows.Media.Animation.Timeline>ルートとして<xref:System.Windows.Media.Animation.Timeline>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-263">Although this <xref:System.Windows.Media.Animation.Timeline> may be the child of one or more <xref:System.Windows.Media.Animation.TimelineGroup> objects, this information is ignored: this method treats the current <xref:System.Windows.Media.Animation.Timeline> as a root <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-264">タイムラインのクロックの時間の進行の速度が変化すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-264">Occurs when the rate at which time progresses for the timeline's clock changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-265">次のような状況でタイムラインのクロックの変更の現在のグローバル速度:</span><span class="sxs-lookup"><span data-stu-id="fbe97-265">The current global speed of a timeline's clock changes in the following circumstances:</span></span>  
  
-   <span data-ttu-id="fbe97-266">クロックが、タイムラインのための方向を変更<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-266">The clock changes direction because of its timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting.</span></span>  
  
-   <span data-ttu-id="fbe97-267">クロック加速したり減速したりするために、タイムラインの<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>または<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>プロパティの設定。</span><span class="sxs-lookup"><span data-stu-id="fbe97-267">The clock accelerates or decelerates because of its timeline's <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> or <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property settings.</span></span>  
  
-   <span data-ttu-id="fbe97-268">クロックが一時停止または再開します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-268">The clock is paused or resumed.</span></span>  
  
-   <span data-ttu-id="fbe97-269">クロックが非アクティブになったまたは再アクティブ化します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-269">The clock becomes inactive or reactivates.</span></span>  
  
-   <span data-ttu-id="fbe97-270"><xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>の時計の親の変更のいずれか。</span><span class="sxs-lookup"><span data-stu-id="fbe97-270">The <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> of one of the clock's parent changes.</span></span>  
  
 <span data-ttu-id="fbe97-271"><xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>ストーリー ボードを使用してイベントがイベント ハンドラーでですタイムラインの時計が一時停止しているを追跡するために役立ちます。<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>メソッドまたは時計をチェック<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>そのクロックが一時停止するかどうかを決定するプロパティに対して比較。変更されたかどうかを確認する以前にキャッシュされた値。</span><span class="sxs-lookup"><span data-stu-id="fbe97-271">The <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event is useful for tracking when a timeline's clock becomes paused; in your event handler, use your storyboard's <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> method or check the clock's <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property to determine whether its clock is paused; compare this against a previously cached value to determine whether it changed.</span></span>  
  
 <span data-ttu-id="fbe97-272"><xref:System.Object>のパラメーター、<xref:System.EventHandler>イベント ハンドラーは、タイムラインの<xref:System.Windows.Media.Animation.Clock>します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-272">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="fbe97-273">このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-273">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="fbe97-274">詳細については、次を参照してください。、[タイミング イベントの概要](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-274">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbe97-275">次の例を登録する方法を示しています、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="fbe97-275">The following example shows how to register for the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-276">タイムラインの <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> プロパティが更新されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-276">Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-277">使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>タイムラインのときに通知するときにイベント<xref:System.Windows.Media.Animation.Clock>を開始、停止、または入力します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-277">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified  when a timeline's <xref:System.Windows.Media.Animation.Clock> starts, stops, or fills.</span></span>  
  
 <span data-ttu-id="fbe97-278">一時停止、<xref:System.Windows.Media.Animation.Clock>変わらないので、<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-278">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="fbe97-279">クロックが一時停止しているときに通知するを使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="fbe97-279">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="fbe97-280">このイベントが発生しますが、ときに、<xref:System.Windows.Media.Animation.ClockState>いって、必ずしもを無効になります、<xref:System.Windows.Media.Animation.ClockState>変更:<xref:System.Windows.Media.Animation.Clock>からを切り替える<xref:System.Windows.Media.Animation.ClockState.Active>に<xref:System.Windows.Media.Animation.ClockState.Filling>に戻ると<xref:System.Windows.Media.Animation.ClockState.Active>同じティックが発生このイベントが発生すると、そのが<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>プロパティが実際に変更されません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-280">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 <span data-ttu-id="fbe97-281"><xref:System.Object>のパラメーター、<xref:System.EventHandler>イベント ハンドラーは、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-281">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the  <xref:System.Windows.Media.Animation.Clock> that was created for this timeline.</span></span>  
  
 <span data-ttu-id="fbe97-282">このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-282">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="fbe97-283">詳細については、次を参照してください。、[タイミング イベントの概要](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-283">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-284">タイムラインの <see cref="T:System.Windows.Media.Animation.Clock" /> の <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> プロパティが更新されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-284">Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-285">使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>にするときにイベントときの通知、<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>タイムラインの<xref:System.Windows.Media.Animation.Clock>を更新します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-285">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified when the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> of a timeline's <xref:System.Windows.Media.Animation.Clock> is updated.</span></span>  
  
 <span data-ttu-id="fbe97-286"><xref:System.Object>のパラメーター、<xref:System.EventHandler>イベント ハンドラーは、タイムラインの<xref:System.Windows.Media.Animation.Clock>します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-286">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="fbe97-287">このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-287">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="fbe97-288">詳細については、次を参照してください。、[タイミング イベントの概要](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-288">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbe97-289">次の例を登録する方法を示しています、<xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated>イベント。</span><span class="sxs-lookup"><span data-stu-id="fbe97-289">The following example shows how to register for the <xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> event.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-290">時間の経過を最大速度から 0 に減速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-290">Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-291">時間の経過を最大速度から 0 に減速する場合に、費やされるタイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> の比率を指定する 0 ～ 1 (両端を含む) の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-291">A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.</span>
          </span>
          <span data-ttu-id="fbe97-292">タイムラインの <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> プロパティも設定されている場合、<see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> の合計は 1 以下である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-292">If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> must be less than or equal to 1.</span>
          </span>
          <span data-ttu-id="fbe97-293">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-293">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-294">使用して、<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>その遅いダウン停止する前にアニメーションを作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-294">Use the <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property to create animations that slow down before stopping.</span></span> <span data-ttu-id="fbe97-295"><xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>プロパティは簡単操作の効果を作成するかより自然に見える移動を行うに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-295">The <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property is useful for creating ease-in effects or making movement seem more natural.</span></span> <span data-ttu-id="fbe97-296">使用して、<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>と<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>の起動が遅い、アニメーションを作成するには、一緒にプロパティを高速化し、し、終了する前にもう一度速度が低下します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-296">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that that start slowly, speed up, and then slow down again before finishing.</span></span>  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-297">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-298">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-298">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|<span data-ttu-id="fbe97-299">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-300">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-300">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fbe97-301">
            <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> が 0 より小さいか、または 1 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-301">
              <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> is less than 0 or greater than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fbe97-302">
            <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> と <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> の合計が 1 を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-302">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-303">
            <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-303">Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-304">
            <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> 添付プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-304">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-305">繰り返しをカウントせずに、このタイムラインの再生に要する時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-305">Gets or sets the length of time for which this timeline plays, not counting repetitions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-306">タイムラインの単純継続時間 (このタイムラインが順方向の反復を 1 回完了するのに要する時間)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-306">The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration.</span>
          </span>
          <span data-ttu-id="fbe97-307">既定値は <see cref="P:System.Windows.Duration.Automatic" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-307">The default value is <see cref="P:System.Windows.Duration.Automatic" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-308">タイムラインの単純な期間は、繰り返しが含まれる合計再生時間に取得するには、に対して 1 回の前方反復の時間を構成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-308">A timeline's simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.</span></span>  
  
## <a name="default-duration-behavior"></a><span data-ttu-id="fbe97-309">既定の期間の動作</span><span class="sxs-lookup"><span data-stu-id="fbe97-309">Default Duration Behavior</span></span>  
 <span data-ttu-id="fbe97-310">動作、<xref:System.Windows.Media.Animation.Timeline.Duration%2A>の値を持つ<xref:System.Windows.Duration.Automatic%2A>タイムラインの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="fbe97-310">The behavior of a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> structure with a value of <xref:System.Windows.Duration.Automatic%2A> depends on the type of timeline:</span></span>  
  
|<span data-ttu-id="fbe97-311">**タイムライン**</span><span class="sxs-lookup"><span data-stu-id="fbe97-311">**Timeline**</span></span>|<span data-ttu-id="fbe97-312">**動作**</span><span class="sxs-lookup"><span data-stu-id="fbe97-312">**Behavior**</span></span>|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|<span data-ttu-id="fbe97-313">不定 (<xref:System.Windows.Media.Animation.Timeline>が抽象型)</span><span class="sxs-lookup"><span data-stu-id="fbe97-313">Undetermined (<xref:System.Windows.Media.Animation.Timeline> is abstract)</span></span>|  
|<span data-ttu-id="fbe97-314"><xref:System.Windows.Media.Animation.ParallelTimeline>、</span><span class="sxs-lookup"><span data-stu-id="fbe97-314"><xref:System.Windows.Media.Animation.ParallelTimeline>,</span></span><br /><br /> <span data-ttu-id="fbe97-315"><xref:System.Windows.Media.Animation.Storyboard>、</span><span class="sxs-lookup"><span data-stu-id="fbe97-315"><xref:System.Windows.Media.Animation.Storyboard>,</span></span><br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|<span data-ttu-id="fbe97-316">子タイムラインを合わせて拡張されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-316">Expands to fit child timelines</span></span>|  
|<span data-ttu-id="fbe97-317">\<*型*> アニメーション (、"から/に/"または"basic"アニメーションと呼ばれます)</span><span class="sxs-lookup"><span data-stu-id="fbe97-317">\<*Type*>Animation (Known as a "From/To/By" or "basic" animations)</span></span>|<span data-ttu-id="fbe97-318">1 秒</span><span class="sxs-lookup"><span data-stu-id="fbe97-318">1 second</span></span>|  
|<span data-ttu-id="fbe97-319">\<*型*> AnimationUsingKeyFrames (キー フレーム アニメーションと呼ばれます)</span><span class="sxs-lookup"><span data-stu-id="fbe97-319">\<*Type*>AnimationUsingKeyFrames (Known as key frame animations)</span></span>|<span data-ttu-id="fbe97-320">すべてのキー フレームの合計<xref:System.Windows.Media.Animation.KeyTime>値</span><span class="sxs-lookup"><span data-stu-id="fbe97-320">Sum of all key frame <xref:System.Windows.Media.Animation.KeyTime> values</span></span>|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-321">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-321">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-322">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-322">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|<span data-ttu-id="fbe97-323">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-323">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-324">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-324">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fbe97-325"><xref:System.Windows.Media.Animation.ParallelTimeline> および<xref:System.Windows.Media.Animation.Storyboard>種類<xref:System.Windows.Media.Animation.TimelineGroup>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fbe97-325"><xref:System.Windows.Media.Animation.ParallelTimeline> and <xref:System.Windows.Media.Animation.Storyboard> are types of <xref:System.Windows.Media.Animation.TimelineGroup> objects.</span></span> <span data-ttu-id="fbe97-326">期間、<xref:System.Windows.Media.Animation.TimelineGroup>はその子タイムラインの期間によって決まります。</span><span class="sxs-lookup"><span data-stu-id="fbe97-326">The duration of a <xref:System.Windows.Media.Animation.TimelineGroup> is determined by the duration of its child timelines.</span></span> <span data-ttu-id="fbe97-327">たとえば、<xref:System.Windows.Media.Animation.Storyboard>以下は 6 秒 (6 秒の期間) のため実行できる状態にある最後の子タイムライン (<xref:System.Windows.Media.Animation.DoubleAnimation>) を終了します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-327">For example, the <xref:System.Windows.Media.Animation.Storyboard> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<xref:System.Windows.Media.Animation.DoubleAnimation>) ends.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fbe97-328">注: コードは、だけに用意されている次の例についてから省略されています。</span><span class="sxs-lookup"><span data-stu-id="fbe97-328">Note: code has been omitted from the following examples, which are provided for illustrative purposed only.</span></span>  
  
 <span data-ttu-id="fbe97-329">[xaml]</span><span class="sxs-lookup"><span data-stu-id="fbe97-329">[xaml]</span></span>  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 <span data-ttu-id="fbe97-330">例として\<*型*> アニメーションとは、 <xref:System.Windows.Media.Animation.DoubleAnimation>、 <xref:System.Windows.Media.Animation.PointAnimation>、 <xref:System.Windows.Media.Animation.ColorAnimation>, などです。ない場合は<xref:System.Windows.Media.Animation.Timeline.Duration%2A>が指定されて、アニメーションのこれらの型の 1 秒間実行されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-330">Examples of \<*Type*>Animations include <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etc. If no <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is specified for these types of animations, they will run for one second.</span></span>  
  
 <span data-ttu-id="fbe97-331">[xaml]</span><span class="sxs-lookup"><span data-stu-id="fbe97-331">[xaml]</span></span>  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 <span data-ttu-id="fbe97-332">例として\<*型*> AnimationUsingKeyFrames 含める<xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>、 <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, などです。ない場合は<xref:System.Windows.Media.Animation.Timeline.Duration%2A>アニメーションのすべてのキー フレームが終了するまで、これらは実行のこれらの型が指定されています。</span><span class="sxs-lookup"><span data-stu-id="fbe97-332">Examples of \<*Type*>AnimationUsingKeyFrames include <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etc. If no <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is specified for these types of animations they will run until all key frames are finished.</span></span>  
  
 <span data-ttu-id="fbe97-333">[xaml]</span><span class="sxs-lookup"><span data-stu-id="fbe97-333">[xaml]</span></span>  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-334">
            <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-334">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-335">アクティブな期間の末尾に到達した後の <see cref="T:System.Windows.Media.Animation.Timeline" /> の動作を指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-335">Gets or sets a value that specifies how the <see cref="T:System.Windows.Media.Animation.Timeline" /> behaves after it reaches the end of its active period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-336">アクティブ期間の終わりに達した後 (ただし親はアクティブ期間内または保留期間内にある) のタイムラインの動作を指定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-336">A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period.</span>
          </span>
          <span data-ttu-id="fbe97-337">既定値は <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-337">The default value is <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-338">設定、アニメーション<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>プロパティを<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>アクティブな期間の最後に達すると、その値を保持するために、アニメーションする場合します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-338">Set an animations <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> when you want the animation to hold its value after it reaches the end of its active period.</span></span> <span data-ttu-id="fbe97-339">アクティブな期間の末尾に到達するアニメーションが、<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>保留期間内にあるといいます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-339">An animation that has reached the end of its active period that has a <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting of <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> is said to be in its fill period.</span></span> <span data-ttu-id="fbe97-340">アクティブな期間の最後に達すると、アニメーションの値を保持する必要がある場合は、設定、</span><span class="sxs-lookup"><span data-stu-id="fbe97-340">When you don't want an animation to hold its value after it reaches the end of its active period, set its</span></span>  
  
 <span data-ttu-id="fbe97-341"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> プロパティを<xref:System.Windows.Media.Animation.FillBehavior.Stop>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-341"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property to <xref:System.Windows.Media.Animation.FillBehavior.Stop>.</span></span>  
  
 <span data-ttu-id="fbe97-342">塗りつぶし期間でのアニメーションは、そのターゲット プロパティの値をオーバーライドし続ける、ためには、効果がないように見える可能性がありますを他の手段でターゲット プロパティの値を設定しようとしています。</span><span class="sxs-lookup"><span data-stu-id="fbe97-342">Because an animation in its fill period continues to override its target property's value, attempting to set the target property's value through other means might appear to have no effect.</span></span> <span data-ttu-id="fbe97-343">アニメーション化された後に、プロパティ値を設定する方法を示す例は、次を参照してください。[する方法: 設定、プロパティ後アニメーションにストーリー ボード](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-343">For an example showing how to set a property value after it has been animated, see [How to: Set a Property After Animating It with a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md).</span></span>  
  
 <span data-ttu-id="fbe97-344">子タイムラインは停止の再生と保留がその親タイムラインが中止されます。子タイムラインに入力する場合は、その親タイムラインが確認、<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>の<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-344">A child timeline stops playing and filling when its parent timeline stops; if you want a child timeline to fill, make sure its parent timeline has a <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> of <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>.</span></span>  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-345">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-345">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-346">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-346">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|<span data-ttu-id="fbe97-347">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-347">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-348">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-348">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-349">
            <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-349">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="fbe97-350">このインスタンスを固定できるかどうかを確認する場合は <see langword="true" />。このインスタンスを固定する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-350">
              <see langword="true" /> to check if this instance can be frozen; <see langword="false" /> to freeze this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-351">この <see cref="T:System.Windows.Media.Animation.Timeline" /> を変更不可能な状態にするか、変更不可能な状態にできるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-351">Makes this <see cref="T:System.Windows.Media.Animation.Timeline" /> unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-352">
            <paramref name="isChecking" /> が true のときに、このインスタンスを読み取り専用にできる場合、このメソッドは <see langword="true" /> を返します。読み取り専用にできない場合は <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-352">If <paramref name="isChecking" /> is true, this method returns <see langword="true" /> if this instance can be made read-only, or <see langword="false" /> if it cannot be made read-only.</span>
          </span>
          <span data-ttu-id="fbe97-353">
            <paramref name="isChecking" /> が false のときに、このインスタンスが現在読み取り専用であれば、このメソッドは <see langword="true" /> を返します。このオブジェクトの固定ステータスの変更を開始した影響で、読み取り専用にできない場合は <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-353">If <paramref name="isChecking" /> is false, this method returns <see langword="true" /> if this instance is now read-only, or <see langword="false" /> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-354">直接 (呼び出す場合を除きますベースの実装で) このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-354">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="fbe97-355">このメソッドは内部で<xref:System.Windows.Freezable.Freeze%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-355">This method is called internally by <xref:System.Windows.Freezable.Freeze%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbe97-356">
            <para>
              <see cref="T:System.Windows.Media.Animation.Timeline" /> 実装時は、クラスには、依存関係プロパティを使用して保存されていないデータが含まれている場合、このメソッドをオーバーライドする必要があります。一般的な実装し、呼び出し、呼び出す静的<see cref="M:System.Windows.Freezable.Freeze" />すべてメソッド<see cref="T:System.Windows.Freezable" />型指定されたプロパティを返すクラスに含まれている<see langword="true" />または場合にのみプロパティをすべて保持されていた (でした固定されている、渡す場合を介して、<see langword="false" />値<paramref name="isChecking" />)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-356">
              <para>
                <see cref="T:System.Windows.Media.Animation.Timeline" /> implementers must override this method when the class contains data that is not stored using dependency properties.  A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="fbe97-357">複製する <see cref="T:System.Windows.Media.Animation.Timeline" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-357">The <see cref="T:System.Windows.Media.Animation.Timeline" /> instance to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-358">このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの複製にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-358">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-359">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-359">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="fbe97-360">これらのプロパティには、データ バインディングまたはリソースの参照が含まれている場合ことに注意して<xref:System.Windows.Freezable.GetAsFrozen%2A>に失敗する、オブジェクトを圧縮しようとしているとスローされます、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-360">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fbe97-361">このメソッドは、<xref:System.Windows.Freezable.GetAsFrozen%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-361">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="fbe97-362">現在のオブジェクトの固定コピーを作成するには<xref:System.Windows.Freezable.GetAsFrozen%2A>このメソッドを直接呼び出す代わりにします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-362">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="fbe97-363">詳細については、「<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-363">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="fbe97-364">コピーし、固定する <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-364">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-365">このインスタンスを、指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> の固定された複製にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-365">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
          <span data-ttu-id="fbe97-366">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-366">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-367">このメソッドは、<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-367">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="fbe97-368">現在のオブジェクトの固定コピーを作成するには<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>このメソッドを直接呼び出す代わりにします。</span><span class="sxs-lookup"><span data-stu-id="fbe97-368">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="fbe97-369">詳細については、「<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-369">For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">
          <span data-ttu-id="fbe97-370">目的のフレーム レートを取得するタイムライン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-370">The timeline from which to retrieve the desired frame rate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-371">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> の目的のフレーム レートを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-371">Gets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-372">このタイムラインの目的のフレーム レート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-372">The desired frame rate of this timeline.</span>
          </span>
          <span data-ttu-id="fbe97-373">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-373">The default value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-374">このメソッドへの読み取りアクセスを提供する、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="fbe97-374">This method provides read access to the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> attached property.</span></span> <span data-ttu-id="fbe97-375">詳細については、次を参照してください。、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>ページ。</span><span class="sxs-lookup"><span data-stu-id="fbe97-375">For more information, see the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">
          <span data-ttu-id="fbe97-376">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-376">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-377">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-377">Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-378">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さ。自然な継続時間が不明な場合は <see cref="P:System.Windows.Duration.Automatic" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-378">The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-379">このメソッドは場合にのみ呼び出す、<xref:System.Windows.Media.Animation.Timeline.Duration%2A>プロパティに設定されている<xref:System.Windows.Duration.Automatic%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-379">This method should only be called when the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property is set to <xref:System.Windows.Duration.Automatic%2A>.</span></span> <span data-ttu-id="fbe97-380">場合<xref:System.Windows.Media.Animation.Timeline.Duration%2A>は<xref:System.Windows.Duration.Automatic%2A>、自然な時間はの特定のクラスの実装によって決まります<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-380">If <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is <xref:System.Windows.Duration.Automatic%2A>, the natural duration is determined by that particular class's implementation of <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.</span></span>  
  
 <span data-ttu-id="fbe97-381">場合<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>返します<xref:System.Windows.Duration.Automatic%2A>、自然な期間が、不明の自然な期間を意味する<xref:System.Windows.Duration.Forever%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-381">If <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> returns <xref:System.Windows.Duration.Automatic%2A>, it means that the natural duration is unknown, which implies a natural duration of <xref:System.Windows.Duration.Forever%2A>.</span></span> <span data-ttu-id="fbe97-382">ストリーミングを行う場合などがこれです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-382">Such is the case for streaming media.</span></span>  
  
 <span data-ttu-id="fbe97-383">このメソッドが作成されたもの以外、このタイムライン用の時計を渡すことは可能ですが、信頼できない結果に注意してください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-383">Note that passing this method a clock other than the one that was created for this timeline is possible, but will provide unreliable results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">
          <span data-ttu-id="fbe97-384">この <see cref="T:System.Windows.Media.Animation.Clock" /> のために作成された <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-384">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-385">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-385">Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
          <span data-ttu-id="fbe97-386">このメソッドは、<see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" /> の実装を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-386">This method provides the implementation for <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fbe97-387">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の 1 回の反復の長さ。自然な継続時間が不明な場合は <see cref="P:System.Windows.Duration.Automatic" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-387">The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-388">このメソッドの実装を提供する<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>し、コードから直接呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="fbe97-388">This method provides the implementation for <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> and should not be called directly from your code.</span></span> <span data-ttu-id="fbe97-389">代わりに、<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> を使用してください。</span><span class="sxs-lookup"><span data-stu-id="fbe97-389">Use <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fbe97-390">
            <para>このメソッドは、カスタムの自然を提供する必要があるタイムライン クラスで実装する必要があります<see cref="T:System.Windows.Duration" />ときに、<see cref="P:System.Windows.Media.Animation.Timeline.Duration" />プロパティに設定されている<see cref="P:System.Windows.Duration.Automatic" />です。かどうか、作成者は、自然な期間を特定できません、このメソッドが返す<see cref="P:System.Windows.Duration.Automatic" />です。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-390">
              <para>This method should be implemented by timeline classes that need to provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. If the author cannot determine the natural duration, this method should return <see cref="P:System.Windows.Duration.Automatic" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-391">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-391">Gets or sets the name of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-392">このタイムラインの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-392">The name of this timeline.</span>
          </span>
          <span data-ttu-id="fbe97-393">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-393">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-394">
            <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-394">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-395">このタイムラインのために作成されたクロックか、親タイムラインのクロックが削除された場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-395">Occurs when the clock created for this timeline or one of its parent timelines is removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-396">適用することでこのイベントは、<xref:System.Windows.Media.Animation.RemoveStoryboard>アクション、ストーリー ボードを使用して、ストーリー ボードを<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>メソッド (クロックを直接操作する) 場合、またはを呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-396">This event is raised by applying a <xref:System.Windows.Media.Animation.RemoveStoryboard> action to a storyboard, using a Storyboard's <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method, or (when working directly with clocks) calling the <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fbe97-397">このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-397">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="fbe97-398">詳細については、次を参照してください。、[タイミング イベントの概要](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-398">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-399">このタイムラインの繰り返し動作を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-399">Gets or sets the repeating behavior of this timeline.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-400">タイムラインの再生回数を指定する <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />、タイムラインのアクティブな期間の長さの合計を指定する <see cref="T:System.TimeSpan" /> 値、またはタイムラインを無限に繰り返すように指定する特殊な値の <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-400">An iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> that specifies the number of times the timeline should play, a <see cref="T:System.TimeSpan" /> value that specifies the total the length of this timeline's active period, or the special value <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />, which specifies that the timeline should repeat indefinitely.</span>
          </span>
          <span data-ttu-id="fbe97-401">既定値は、<see cref="T:System.Windows.Media.Animation.RepeatBehavior" />で、<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />の<c>1</c>タイムラインを 1 回再生することを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-401">The default value is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> with a <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> of <c>1</c>, which indicates that the timeline plays once.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-402">場合は、イテレーション<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>が指定されていると、タイムラインの<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>プロパティに設定されている`true`、順方向の 1 つの反復と旧バージョンとイテレーションは 1 つの 1 つの繰り返しで構成されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-402">If an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> is specified and the timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true`, a single repetition consists of one forward iteration and one backward iteration.</span></span> <span data-ttu-id="fbe97-403">タイムライン、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>プロパティ イテレーションを true に設定<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>2 は再生転送、逆の順序で、転送、し、再度後方です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-403">A timeline with an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property set to true an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> of 2 would play forwards, then backwards, then forwards again, and then backwards again.</span></span>  
  
 <span data-ttu-id="fbe97-404">タイムラインの再生回数を指定するには、代わりに、タイムラインを再生する時間の合計の長さも指定できます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-404">Instead of specifying the number of times a timeline plays, you can also specify the total length of time you want the timeline to play.</span></span> <span data-ttu-id="fbe97-405">繰り返し表示する、このタイムラインの<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>値は、タイムラインのより大きい必要があります<xref:System.Windows.Media.Animation.Timeline.Duration%2A>です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-405">For a timeline to repeat, this <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> value should be greater than the timeline's <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</span></span> <span data-ttu-id="fbe97-406">備えたタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 2 秒と<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>4 秒には 2 回に再生されます。</span><span class="sxs-lookup"><span data-stu-id="fbe97-406">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 2 seconds and a <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> of 4 seconds will play twice.</span></span> <span data-ttu-id="fbe97-407">場合、<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>がタイムラインのより小さい<xref:System.Windows.Media.Animation.Timeline.Duration%2A>タイムラインのアクティブな期間を短縮します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-407">If the <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> is less than the timeline's <xref:System.Windows.Media.Animation.Timeline.Duration%2A>, the timeline's active period is cut short.</span></span>  
  
 <span data-ttu-id="fbe97-408">詳細については、タイムラインの繰り返し、次を参照してください。[アニメーションの概要](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-408">For more information about repeating timelines, see [Animation Overview](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-409">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-409">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-410">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-410">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|<span data-ttu-id="fbe97-411">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-411">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-412">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-412">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-413">
            <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-413">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline">
          <span data-ttu-id="fbe97-414">
            <c>desiredFrameRate</c> が割り当てられる <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-414">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to which <c>desiredFrameRate</c> is assigned.</span>
          </span>
        </param>
        <param name="desiredFrameRate">
          <span data-ttu-id="fbe97-415">このタイムラインで毎秒生成されるようにするフレームの最大数。フレームの数をシステムで制御する場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-415">The maximum number of frames this timeline should generate each second, or <see langword="null" /> if the system should control the number of frames.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fbe97-416">指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> の目的のフレーム レートを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-416">Sets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-417">このメソッドを設定、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="fbe97-417">This method sets the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> attached property.</span></span> <span data-ttu-id="fbe97-418">詳細については、次を参照してください。、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>ページ。</span><span class="sxs-lookup"><span data-stu-id="fbe97-418">For more information, see the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-419">この <see cref="T:System.Windows.Media.Animation.Timeline" /> の時間の進行の速度 (親に対する相対的な速度) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-419">Gets or sets the rate, relative to its parent, at which time progresses for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fbe97-420">このタイムラインの時間の進行の速度 (タイムラインの親の速度に対する相対的な速度、これがルート タイムラインの場合は既定のタイムライン速度に対する相対的な速度) を表す 0 より大きい有限値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-420">A finite value greater than 0 that describes the rate at which time progresses for this timeline, relative to the speed of the timeline's parent or, if this is a root timeline, the default timeline speed.</span>
          </span>
          <span data-ttu-id="fbe97-421">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-421">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbe97-422">タイムラインの<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定の効果を持たないその<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>以外の場合はその時間は、タイムラインの親を基準とした場合、または、タイムラインがルート タイムラインには、タイムラインの時計が開始された時点です。</span><span class="sxs-lookup"><span data-stu-id="fbe97-422">A timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not have an effect on its <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; that time is relative to the timeline's parent or, if the timeline is a root timeline, the moment at which the timeline's clock was begun.</span></span>  
  
 <span data-ttu-id="fbe97-423">場合<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>または<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>指定すると、この<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>平均の比率がタイムラインの自然な長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="fbe97-423">If <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> or <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> are specified, this <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> is the average ratio over the natural length of the timeline.</span></span>  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fbe97-424">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fbe97-424">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fbe97-425">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fbe97-425">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|<span data-ttu-id="fbe97-426">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fbe97-426">Metadata properties set to `true`</span></span>|<span data-ttu-id="fbe97-427">なし</span><span class="sxs-lookup"><span data-stu-id="fbe97-427">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fbe97-428">タイムラインの<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>プロパティはその親の進行速度を制御します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-428">A timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> property controls its rate of progress, relative to its parent.</span></span> <span data-ttu-id="fbe97-429">タイムラインがルートの場合、<xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>既定のタイムライン速度に対する相対パスです。</span><span class="sxs-lookup"><span data-stu-id="fbe97-429">If the timeline is a root, its <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is relative to the default timeline speed.</span></span> <span data-ttu-id="fbe97-430">次の例では、異なるいくつかのタイムライン<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="fbe97-430">The following example shows several timelines with different <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> settings.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fbe97-431">
            <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> が 0 未満であるか有限値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-431">
              <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is less than 0 or is not a finite value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fbe97-432">
            <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fbe97-432">Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>