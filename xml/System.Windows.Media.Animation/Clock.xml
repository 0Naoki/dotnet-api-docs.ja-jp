<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Clock.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5829cbcd67b4a6736053ec04245b9b87181268348.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">829cbcd67b4a6736053ec04245b9b87181268348</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Clock">
          <source>Maintains run-time timing state for a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> の実行時のタイミング状態を維持します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>, by itself, doesn't actually do anything other than describe a segment of time.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>、単独で実際に何もしない以外の時間のセグメントについて説明します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>It's the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> object that does the real work: it maintains timing-related run-time state for the timeline.</source>
          <target state="translated">タイムラインの<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>実際の処理を行うオブジェクト: タイムラインの実行時のタイミングに関連する状態を保持します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>In most cases, a clock is created automatically for your timeline.</source>
          <target state="translated">ほとんどの場合、タイムラインの時計が自動的に作成します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>When you animate by using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> or the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</source>
          <target state="translated">使用してアニメーション化するときに、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt;</ph>メソッド、クロックが自動的にタイムラインとアニメーションを作成し、その対象となるプロパティに適用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Animate a Property by Using a Storyboard<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md)</ept> and <bpt id="p2">[</bpt>How to: Animate a Property Without Using a Storyboard<ept id="p2">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: ストーリー ボードを使用してプロパティをアニメーション化<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md)</ept>と<bpt id="p2">[</bpt>する方法: プロパティなしを使用して、ストーリー ボードのアニメーション化<ept id="p2">](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>You can also create a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> explicitly by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt;</ph> method.</source>
          <target state="translated">作成することも、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>を使用して明示的に、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> use can provide performance benefits.</source>
          <target state="translated">多数の類似オブジェクトをアニメーション化するなど、パフォーマンス重視のシナリオで管理する独自<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>を使用して、パフォーマンスが向上します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Clocks are arranged in trees that match the structure of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> objects tree from which they are created.</source>
          <target state="translated">クロックがツリーの構造に合ったで配置された、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>オブジェクト ツリーから作成されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>.</source>
          <target state="translated">このようなタイミング ツリーのルート クロック対話的に操作できます (一時停止、再開、停止、およびなど) を取得してその<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Non-root clocks cannot be directly controlled.</source>
          <target state="translated">ルート以外のクロックを直接制御できません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Once created, a clock cannot be modified (but it can be manipulated).</source>
          <target state="translated">いったん作成されると、時計を変更できません (ただし、操作することができます)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Using a Timeline as a Timer</source>
          <target state="translated">タイムラインをタイマーとして使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
          <target state="translated">タイムラインのクロックは、関連付けられているイベント ハンドラーがある場合にのみ実行または (の場合、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>オブジェクト) のプロパティに関連付けられています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
          <target state="translated">この理由 (など)、これはお勧めしませんを使用すること、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>をタイマーとして。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Derived classes should implement <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /&gt;</ph> if they want to modify how time flows for this clock.</source>
          <target state="translated">派生クラスを実装する必要があります<ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /&gt;</ph>この時計の時刻のフローを変更する場合。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.Clock">
          <source>Derived classes can be made to do additional work when the clock repeats, skips, seeks, begins, pauses, resumes, or stops by overriding the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Windows.Media.Animation.Clock.Stopped" /&gt;</ph> methods.</source>
          <target state="translated">派生クラスは、クロック繰り返されます、スキップ、シーク、開始、一時停止、再開されると、または停止時にオーバーライドすることで、追加の作業を行うに行われたことができます、 <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" /&gt;</ph>、 <ph id="ph2">&lt;see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" /&gt;</ph>、および<ph id="ph3">&lt;see cref="M:System.Windows.Media.Animation.Clock.Stopped" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> from which this clock should be constructed.</source>
          <target state="translated">このクロックの構築元となる <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>Clocks are not created for any child <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> objects, if they exist.</source>
          <target state="translated">子の <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> オブジェクトが存在する場合でも、子オブジェクトのクロックは作成されません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> class, using the specified <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> as a template.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> をテンプレートとして使用して、<ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> object has no children.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> オブジェクトには、子がありません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>Occurs when this clock has completely finished playing.</source>
          <target state="translated">クロックの再生が完全に終了すると発生します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</source>
          <target state="translated">このクロックがクロックのツリーのルート クロックである場合は、そのアクティブ期間 (繰り返しを含む) の末尾に達するし、そのすべての子はそれぞれのアクティブ期間の終わりに達しました後に、再生は完了します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</source>
          <target state="translated">このクロックが子クロックである場合は、再生、ツリーのルート クロック、時計を所属先に達すると、アクティブな期間とそのすべての子のクロックの終了したら、再生が完了したと見なされます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.Completed">
          <source>Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</source>
          <target state="translated">クロックを停止すると、その完了イベントがトリガーされませんが、塗りつぶし期間に進みます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.Controller">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> that can be used to start, pause, resume, seek, skip, stop, or remove this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> を開始、一時停止、再開、シーク、スキップ、停止、削除するために使用できる <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Controller">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> if this is a root clock; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">これがルート クロックである場合は <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Controller">
          <source>Only root clocks can be interactively controlled.</source>
          <target state="translated">ルート クロックのみを対話的に制御できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
          <source>Gets the rate at which the clock's time is currently progressing, compared to real-world time.</source>
          <target state="translated">現実世界の時間と比較したときの、クロックの時間が現在進行しているレートを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
          <source>The rate at which this clock's time is current progressing, compared to real-world time.</source>
          <target state="translated">現実世界の時間と比較したときの、クロックの時間が現在進行しているレート。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
          <source>If the clock is stopped, this property returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">クロックが停止している場合、このプロパティは <ph id="ph1">&lt;see langword="null" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
          <source>Occurs when the clock's speed is updated.</source>
          <target state="translated">クロックの速度が更新されると発生します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
          <source>Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> triggers this event.</source>
          <target state="translated">一時停止、再開を反転すること、加速する場合に、減速、シーク、停止、またはクロックの変更の対話型を使用して高速化、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>このイベントをトリガーします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
          <source>Although this event occurs when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph> property becomes invalid, that doesn't necessarily mean the property changed.</source>
          <target state="translated">このイベントが発生しますが、ときに、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt;</ph>プロパティが変更されたプロパティ、必ずしもを無効になります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime">
          <source>Gets the current global time, as established by the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> timing system.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> タイミング システムによって確立される、現在のグローバル時刻を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime">
          <source>The current global time for the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> timing system.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> タイミング システムでの現在のグローバル時刻。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>Get the current iteration of this clock.</source>
          <target state="translated">このクロックの現在の反復を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>This clock's current iteration within its current active period, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is stopped.</source>
          <target state="translated">現在のアクティブな期間内の、このクロックの現在の反復。このクロックが停止している場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>A clock's first iteration has a value of 1.</source>
          <target state="translated">クロックの最初のイテレーションでは、1 の値を持ちます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>If this clock's timeline has an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph> setting of <ph id="ph2">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.</source>
          <target state="translated">この時計のタイムラインがある場合、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt;</ph>設定<ph id="ph2">`true`</ph>前方リバースのペアで構成全体の反復処理、セグメントを次のいずれかだけでなく、します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>Regardless of its current iteration, seeking a clock returns its current iteration to 1.</source>
          <target state="translated">現在のイテレーションに関係なくクロックをシークの現在のイテレーション 1 を返します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentIteration">
          <source>Restarting a clock also returns its current iteration to 1.</source>
          <target state="translated">1 に現在の反復を返しますもクロックを再起動します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>Gets the current progress of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> within its current iteration.</source>
          <target state="translated">現在の反復におけるこの <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> の進行状況を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>, or 0.0 if this clock is active and its <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> has a <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph> of <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</source>
          <target state="translated">このクロックが <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph> の場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>、またはこのクロックがアクティブであり、その <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> の <ph id="ph4">&lt;see cref="P:System.Windows.Media.Animation.Timeline.Duration" /&gt;</ph> が <ph id="ph5">&lt;see cref="P:System.Windows.Duration.Forever" /&gt;</ph> の場合は 0.0。それ以外の場合は、現在の反復におけるこの Clock の現在の進行状況を示す 0.0 ～ 1.0 の値。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</source>
          <target state="translated">値 0.0 はまったく進行していないことを示し、値 1.0 はクロックが現在の反復の最後にあることを示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>The value of this property indicates the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> normalized by the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph> of this clock's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Timeline%2A&gt;</ph>.</source>
          <target state="translated">このプロパティの値を示します、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph>で正規化された、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>のクロックの<ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Timeline%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>A clock that is <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A&gt;</ph> of 1.0.</source>
          <target state="translated">あるクロック<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>が、 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A&gt;</ph> 1.0 です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>Using a Timeline as a Timer</source>
          <target state="translated">タイムラインをタイマーとして使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
          <target state="translated">タイムラインのクロックは、関連付けられているイベント ハンドラーがある場合にのみ実行または (の場合、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>オブジェクト) のプロパティに関連付けられています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentProgress">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
          <target state="translated">この理由 (など)、これはお勧めしませんを使用すること、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>をタイマーとして。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>Gets a value indicating whether the clock is currently <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">クロックが現在 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>、または <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph> であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>The current state of the clock: <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>.</source>
          <target state="translated">クロックの現在の状態。<ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Active" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Filling" /&gt;</ph>、または <ph id="ph3">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>Note the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> property doesn't tell you whether it's paused.</source>
          <target state="translated">時計に注意してください<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>プロパティかは示されませんが一時停止するかどうか。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>To determine whether a clock is paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.IsPaused%2A&gt;</ph> property.</source>
          <target state="translated">クロックが一時停止しているかどうかを判断するのには、使用、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.IsPaused%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentState">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> occurs whenever the value of this property changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph>このプロパティの値が変更されるたびに発生します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Occurs when the clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> property is updated.</source>
          <target state="translated">クロックの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /&gt;</ph> プロパティが更新されると発生します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph> event when you want to be notified if when the clock starts, stops, or fills.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt;</ph>場合は、クロックの開始時に通知されるようにするときにイベントが停止すると、または入力します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>The <ph id="ph1">&lt;xref:System.Object&gt;</ph> parameter of the <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> event handler is the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> whose state was invalidated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object&gt;</ph>のパラメーター、<ph id="ph2">&lt;xref:System.EventHandler&gt;</ph>イベント ハンドラーは、<ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>状態が無効になりました。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Pausing a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> does not change its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>.</source>
          <target state="translated">一時停止、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>変わらないので、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>To be notified when a clock becomes paused, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">クロックが一時停止しているときに通知するを使用して、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
          <source>Although this event occurs when the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> becomes invalid, that doesn't necessarily mean the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph> changed: a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that switches from <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph> and then back to <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph> in the same tick will cause this event to fire, but its <ph id="ph7">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> property won't actually change.</source>
          <target state="translated">このイベントが発生しますが、ときに、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph>いって、必ずしもを無効になります、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState&gt;</ph>変更:<ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>からに切り替えること<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>に<ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>に戻ると<ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>同じティックの場合は、このイベントを起動がその<ph id="ph7">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>プロパティが実際に変更されません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>Gets this clock's current time within its current iteration.</source>
          <target state="translated">このクロックの現在の反復における現在の時刻を取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph>; otherwise, the current time of this clock.</source>
          <target state="translated">このクロックが <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /&gt;</ph> の場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。それ以外の場合は、このクロックの現在の時刻。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>Using a Timeline as a Timer</source>
          <target state="translated">タイムラインをタイマーとして使用します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> object) it is associated with a property.</source>
          <target state="translated">タイムラインのクロックは、関連付けられているイベント ハンドラーがある場合にのみ実行または (の場合、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>オブジェクト) のプロパティに関連付けられています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.CurrentTime">
          <source>For this reason (and others), it's not recommended that you use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> as a timer.</source>
          <target state="translated">この理由 (など)、これはお勧めしませんを使用すること、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>をタイマーとして。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
          <source>Occurs when this clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> becomes invalid.</source>
          <target state="translated">このクロックの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /&gt;</ph> が無効になると発生します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
          <source>A clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> becomes invalid when the clock progresses.</source>
          <target state="translated">クロックの<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph>が無効になるときに、クロックが進行します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
          <source>The following interactive operations also trigger the CurrentTimeInvalidated event: <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Stop%2A&gt;</ph>.</source>
          <target state="translated">次の対話型操作 CurrentTimeInvalidated イベントをトリガーも: <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>、および<ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Stop%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement">
          <source>When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</source>
          <target state="translated">派生クラスで実装された場合、クロックを反復、スキップ、シークするたびに呼び出されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>Returns whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> has its own external time source, which may require synchronization with the timing system.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> に、タイミング システムとの同期を必要とする可能性がある専用の外部タイム ソースがあるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>Returns <bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> has its own external source for time, which may require synchronization with the timing system; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> に、タイミング システムとの同期を必要とする可能性がある専用の外部タイム ソースがある場合は <bpt id="p1">**</bpt>true<ept id="p1">**</ept>。それ以外の場合は <bpt id="p2">**</bpt>false<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>Media being played using <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> within a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> is an example of creating a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>.</source>
          <target state="translated">メディアを使用して再生されている<ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph>内で、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>を作成する例を示します、<ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>外部時刻ソース (たとえばビデオ クリップ) と他のタイムライン内で同期が必要ですがあるでしょう、<ph id="ph4">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCanSlip">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> for more information.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>Gets this clock's current time within its current iteration.</source>
          <target state="translated">このクロックの現在の反復における現在の時刻を取得します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>The current time of this clock if it is active or filling; otherwise, <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">このクロックがアクティブな場合や保留されている場合は、クロックの現在の時刻。それ以外の場合は <ph id="ph1">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>This method is used in the implementation of the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph> method and should not be called directly from your code.</source>
          <target state="translated">実装では、このメソッドを使用してください。、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt;</ph>メソッドと、コードから直接呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
          <source>Derived classes should override this method if they want to modify how they determine the current time.</source>
          <target state="translated">派生クラスは、現在の時刻を判断する方法を変更する場合は、このメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.HasControllableRoot">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> is part of a controllable clock tree.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> が制御可能なクロック ツリーの一部かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.HasControllableRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ルート クロックを制御可能なクロック ツリーにこのクロックが含まれる場合や、このクロック自体が制御可能なルート クロックである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.IsPaused">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>, or any of its parents, is paused.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> または親が一時停止しているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.IsPaused">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> or any of its parents is paused; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> または親が一時停止している場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.NaturalDuration">
          <source>Gets the natural duration of this clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>.</source>
          <target state="translated">このクロックの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> の自然な継続時間を取得します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.NaturalDuration">
          <source>The natural duration of this clock, as determined by its <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph>.</source>
          <target state="translated">このクロックの自然な継続時間。クロックの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> によって決まります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.NaturalDuration">
          <source>For more information about natural duration, see the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">自然な期間の詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.Parent">
          <source>Gets the clock that is the parent of this clock.</source>
          <target state="translated">このクロックの親であるクロックを取得します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Parent">
          <source>The parent of this clock or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this clock is a root.</source>
          <target state="translated">このクロックの親、またはこのクロックがルートの場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="E:System.Windows.Media.Animation.Clock.RemoveRequested">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Remove" /&gt;</ph> method is called on this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> or one of its parent clocks.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Remove" /&gt;</ph> または親クロックのいずれかで <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> メソッドが呼び出されると発生します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.SpeedChanged">
          <source>When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph> is modified.</source>
          <target state="translated">派生クラスで実装された場合、クロックを開始、スキップ、一時停止、再開するか、クロックの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph> を変更するたびに呼び出されます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Clock.Stopped">
          <source>When implemented in a derived class, will be invoked whenever a clock is stopped using the <ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Stop" /&gt;</ph> method.</source>
          <target state="translated">派生クラスで実装された場合、<ph id="ph1">&lt;see cref="M:System.Windows.Media.Animation.ClockController.Stop" /&gt;</ph> メソッドを使用してクロックを停止するたびに呼び出されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Clock.Timeline">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> from which this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> was created.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> の作成元である <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Timeline">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> from which this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> was created.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Clock.Timeline" /&gt;</ph> の作成元である <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Clock.Timeline">
          <source>Modifying a clock's <ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph> does not update the clock; a new clock must be created from the modified <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
          <target state="translated">クロックの変更<ph id="ph1">&lt;xref:System.Windows.Media.MediaTimeline&gt;</ph>; 時計は更新されません新しいクロックを作成する必要がありますから変更された<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>