<Type Name="ElasticEase" FullName="System.Windows.Media.Animation.ElasticEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d3bde7af812cadabd89366fcf9b9e4902de6958" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69163869" /></Metadata><TypeSignature Language="C#" Value="public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElasticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ElasticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class ElasticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElasticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type ElasticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>スプリングが伸び縮みしながら最終的に停止するまでの動きを模したアニメーションを作成するイージング関数を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アニメーションで<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>プロパティ値を指定することによって、"spring" の動作がどのようになるかを制御できます。 次のグラフは<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>、のさまざまな値を示しています。 *f*(*t*) は、アニメーションの進行状況を表し、 *t*は時間を表します。  
  
 ![ElasticEase には、さまざまな easingmodes のグラフがあります。](~/add/media/elasticease-graph.png "ElasticEase には、さまざまな easingmodes のグラフがあります。")  
  
 <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A>プロパティを使用してアニメーションを oscillates する回数と、 <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>プロパティを使用して切り替わるの springiness をどれだけ狭くするかを指定できます。  
  
> [!NOTE]
>  このアニメーションによって値が oscillate されるため、アニメーションは予期せず負の数値に補間する可能性があります。 これにより、負の数値を許可しないプロパティをアニメーション化するときにエラーが発生する可能性があります。 <xref:System.Windows.FrameworkElement.Height%2A>たとえば、このアニメーションをオブジェクトのに適用した場合 (たとえば、が<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>の<xref:System.Windows.Media.Animation.EasingMode.EaseIn>場合は 0 ~ 200)、アニメーションは負の数の<xref:System.Windows.FrameworkElement.Height%2A>補間を試行し、がエラーをスローします。  
  
 以外にもいくつかのイージング<xref:System.Windows.Media.Animation.ElasticEase>関数があります。
ランタイムに含まれるイージング関数を使用するだけでなく、から継承することで、独自の<xref:System.Windows.Media.Animation.EasingFunctionBase>カスタムイージング関数を作成することもできます。  
  
## <a name="xaml-object-element-usage"></a>XAML オブジェクト要素の使用方法  
  
```xaml
<ElasticEase .../>  
```  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Media.Animation.ElasticEase> 、にイージング関数<xref:System.Windows.Media.Animation.DoubleAnimation>を適用して、rest に戻るまで、スプリングの不安定さに似たアニメーションを作成します。  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElasticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElasticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.ElasticEase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="elasticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" /> 派生クラスの新しいインスタンスを作成します。 派生クラスを作成するときには、このメソッドをオーバーライドする必要があります。</summary>
        <returns>新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アニメーションクラスはから<xref:System.Windows.Freezable>間接的に継承します。 このため、カスタムアニメーションオブジェクトを構築する<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>には、メソッドをオーバーライドする必要があります。  
  
   
  
## Examples  
 次の例は、の<xref:System.Windows.Freezable.CreateInstanceCore%2A>一般的な実装を示しています。  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="elasticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">アニメーションの正規化時間 (進行)。</param>
        <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
        <returns>変換後の進行を表す倍精度浮動小数点数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Windows.Media.Animation.EasingMode.EaseIn>正規化された時間を変換して、の<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>場合のアニメーションのペースを制御します。  
  
 <xref:System.Windows.Media.Animation.EasingMode.EaseIn>ケースにはイージング関数を指定するだけで済みます。これは、 <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>メソッドの実装に<xref:System.Windows.Media.Animation.EasingMode.EaseOut>よっ<xref:System.Windows.Media.Animation.EasingMode.EaseInOut>てとのケースが変換`normalizedTime`されるためです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oscillations">
      <MemberSignature Language="C#" Value="public int Oscillations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Oscillations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberSignature Language="VB.NET" Value="Public Property Oscillations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Oscillations { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Oscillations : int with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アニメーションが最終的に停止するまでの間に、ターゲットが前後運動する回数を取得または設定します。</summary>
        <value>アニメーションが最終的に停止するまでの間に、ターゲットが前後運動する回数。 この値は、0 以上である必要があります。 既定値は 3 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>  
  
<a name="xamlAttributeUsage_Occilations"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<ElasticEase Oscillations="int"/>  
```  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Media.Animation.ElasticEase> 、にイージング関数<xref:System.Windows.Media.Animation.DoubleAnimation>を適用して、rest に戻るまで、スプリングの不安定さに似たアニメーションを作成します。  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OscillationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OscillationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OscillationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OscillationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OscillationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OscillationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Springiness">
      <MemberSignature Language="C#" Value="public double Springiness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Springiness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberSignature Language="VB.NET" Value="Public Property Springiness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Springiness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Springiness : double with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スプリングの硬さを取得または設定します。 Springiness の値が小さいほど、スプリングが硬くなり、弾性の強さが 1 回の振動で速く衰えます。</summary>
        <value>スプリングの硬さを指定する正の数値。 既定値は 3 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>値が小さいほど、はスプリングを stiffer、各振幅の度合いが高いほど弾力性が低下します。  
  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>  
  
 次の図は、の<xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>さまざまな値の効果を示しています。  
  
 ![さまざまな Springiness 値を示します。](~/add/media/elasticease-springiness.png "さまざまな Springiness 値を示します。")  
  
<a name="xamlAttributeUsage_Springiness"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<ElasticEase Springiness="double"/>  
```  
  
   
  
## Examples  
 次の例では<xref:System.Windows.Media.Animation.ElasticEase> 、にイージング関数<xref:System.Windows.Media.Animation.DoubleAnimation>を適用して、rest に戻るまで、スプリングの不安定さに似たアニメーションを作成します。  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpringinessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpringinessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpringinessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpringinessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpringinessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpringinessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
