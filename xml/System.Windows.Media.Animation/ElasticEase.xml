<Type Name="ElasticEase" FullName="System.Windows.Media.Animation.ElasticEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d3bde7af812cadabd89366fcf9b9e4902de6958" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70473728" /></Metadata><TypeSignature Language="C#" Value="public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElasticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ElasticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class ElasticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElasticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type ElasticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4479c-101">スプリングが伸び縮みしながら最終的に停止するまでの動きを模したアニメーションを作成するイージング関数を表します。</span><span class="sxs-lookup"><span data-stu-id="4479c-101">Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4479c-102">アニメーションで<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>プロパティ値を指定することによって、"spring" の動作がどのようになるかを制御できます。</span><span class="sxs-lookup"><span data-stu-id="4479c-102">You can control when in the "spring" behavior occurs in an animation by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> property value.</span></span> <span data-ttu-id="4479c-103">次のグラフは<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>、のさまざまな値を示しています。 *f*(*t*) は、アニメーションの進行状況を表し、 *t*は時間を表します。</span><span class="sxs-lookup"><span data-stu-id="4479c-103">The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.</span></span>  
  
 <span data-ttu-id="4479c-104">![ElasticEase には、さまざまな easingmodes のグラフがあります。](~/add/media/elasticease-graph.png "ElasticEase には、さまざまな easingmodes のグラフがあります。")</span><span class="sxs-lookup"><span data-stu-id="4479c-104">![ElasticEase with graphs of different easingmodes.](~/add/media/elasticease-graph.png "ElasticEase with graphs of different easingmodes.")</span></span>  
  
 <span data-ttu-id="4479c-105"><xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A>プロパティを使用してアニメーションを oscillates する回数と、 <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>プロパティを使用して切り替わるの springiness をどれだけ狭くするかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4479c-105">You can specify how many times the animation oscillates back and forth using the <xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A> property and how tight the springiness of the oscillations are using the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4479c-106">このアニメーションによって値が oscillate されるため、アニメーションは予期せず負の数値に補間する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4479c-106">Because this animation causes values to oscillate back and forth, the animation might interpolate into negative numbers unexpectedly.</span></span> <span data-ttu-id="4479c-107">これにより、負の数値を許可しないプロパティをアニメーション化するときにエラーが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4479c-107">This can cause errors when animating properties that do not allow negative numbers.</span></span> <span data-ttu-id="4479c-108"><xref:System.Windows.FrameworkElement.Height%2A>たとえば、このアニメーションをオブジェクトのに適用した場合 (たとえば、が<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>の<xref:System.Windows.Media.Animation.EasingMode.EaseIn>場合は 0 ~ 200)、アニメーションは負の数の<xref:System.Windows.FrameworkElement.Height%2A>補間を試行し、がエラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="4479c-108">For example, if you apply this animation to the <xref:System.Windows.FrameworkElement.Height%2A> of an object (e.g. from 0 to 200 with an <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> of <xref:System.Windows.Media.Animation.EasingMode.EaseIn>), the animation will attempt to interpolate through negative numbers for <xref:System.Windows.FrameworkElement.Height%2A> which will throw an error.</span></span>  
  
 <span data-ttu-id="4479c-109">以外にもいくつかのイージング<xref:System.Windows.Media.Animation.ElasticEase>関数があります。</span><span class="sxs-lookup"><span data-stu-id="4479c-109">There are several other easing functions besides <xref:System.Windows.Media.Animation.ElasticEase>.</span></span>
<span data-ttu-id="4479c-110">ランタイムに含まれるイージング関数を使用するだけでなく、から継承することで、独自の<xref:System.Windows.Media.Animation.EasingFunctionBase>カスタムイージング関数を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="4479c-110">In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span></span>  
  
## <a name="xaml-object-element-usage"></a><span data-ttu-id="4479c-111">XAML オブジェクト要素の使用方法</span><span class="sxs-lookup"><span data-stu-id="4479c-111">XAML Object Element Usage</span></span>  
  
```xaml
<ElasticEase .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4479c-112">次の例では<xref:System.Windows.Media.Animation.ElasticEase> 、にイージング関数<xref:System.Windows.Media.Animation.DoubleAnimation>を適用して、rest に戻るまで、スプリングの不安定さに似たアニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4479c-112">The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.</span></span>  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElasticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElasticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4479c-113"><see cref="T:System.Windows.Media.Animation.ElasticEase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4479c-113">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ElasticEase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="elasticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4479c-114"><see cref="T:System.Windows.Freezable" /> 派生クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4479c-114">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span></span> <span data-ttu-id="4479c-115">派生クラスを作成するときには、このメソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4479c-115">When creating a derived class, you must override this method.</span></span></summary>
        <returns><span data-ttu-id="4479c-116">新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="4479c-116">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4479c-117">アニメーションクラスはから<xref:System.Windows.Freezable>間接的に継承します。</span><span class="sxs-lookup"><span data-stu-id="4479c-117">Animation classes inherit indirectly from <xref:System.Windows.Freezable>.</span></span> <span data-ttu-id="4479c-118">このため、カスタムアニメーションオブジェクトを構築する<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>には、メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4479c-118">Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4479c-119">次の例は、の<xref:System.Windows.Freezable.CreateInstanceCore%2A>一般的な実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="4479c-119">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="elasticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime"><span data-ttu-id="4479c-120">アニメーションの正規化時間 (進行)。</span><span class="sxs-lookup"><span data-stu-id="4479c-120">Normalized time (progress) of the animation.</span></span></param>
        <summary><span data-ttu-id="4479c-121">カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</span><span class="sxs-lookup"><span data-stu-id="4479c-121">Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</span></span></summary>
        <returns><span data-ttu-id="4479c-122">変換後の進行を表す倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="4479c-122">A double that represents the transformed progress.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4479c-123">このメソッドは、 <xref:System.Windows.Media.Animation.EasingMode.EaseIn>正規化された時間を変換して、の<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>場合のアニメーションのペースを制御します。</span><span class="sxs-lookup"><span data-stu-id="4479c-123">This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span>  
  
 <span data-ttu-id="4479c-124"><xref:System.Windows.Media.Animation.EasingMode.EaseIn>ケースにはイージング関数を指定するだけで済みます。これは、 <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>メソッドの実装に<xref:System.Windows.Media.Animation.EasingMode.EaseOut>よっ<xref:System.Windows.Media.Animation.EasingMode.EaseInOut>てとのケースが変換`normalizedTime`されるためです。</span><span class="sxs-lookup"><span data-stu-id="4479c-124">You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oscillations">
      <MemberSignature Language="C#" Value="public int Oscillations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Oscillations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberSignature Language="VB.NET" Value="Public Property Oscillations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Oscillations { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Oscillations : int with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4479c-125">アニメーションが最終的に停止するまでの間に、ターゲットが前後運動する回数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4479c-125">Gets or sets the number of times the target slides back and forth over the animation destination.</span></span></summary>
        <value><span data-ttu-id="4479c-126">アニメーションが最終的に停止するまでの間に、ターゲットが前後運動する回数。</span><span class="sxs-lookup"><span data-stu-id="4479c-126">The number of times the target slides back and forth over the animation destination.</span></span> <span data-ttu-id="4479c-127">この値は、0 以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="4479c-127">This value must be greater than or equal to 0.</span></span> <span data-ttu-id="4479c-128">既定値は 3 です。</span><span class="sxs-lookup"><span data-stu-id="4479c-128">The default is 3.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <span data-ttu-id="4479c-129"><xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty></span><span class="sxs-lookup"><span data-stu-id="4479c-129"><xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty></span></span>  
  
<a name="xamlAttributeUsage_Occilations"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4479c-130">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="4479c-130">XAML Attribute Usage</span></span>  
  
```  
<ElasticEase Oscillations="int"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4479c-131">次の例では<xref:System.Windows.Media.Animation.ElasticEase> 、にイージング関数<xref:System.Windows.Media.Animation.DoubleAnimation>を適用して、rest に戻るまで、スプリングの不安定さに似たアニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4479c-131">The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.</span></span>  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OscillationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OscillationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OscillationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OscillationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OscillationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OscillationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4479c-132"><see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="4479c-132">Identifies the <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Springiness">
      <MemberSignature Language="C#" Value="public double Springiness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Springiness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberSignature Language="VB.NET" Value="Public Property Springiness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Springiness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Springiness : double with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4479c-133">スプリングの硬さを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4479c-133">Gets or sets the stiffness of the spring.</span></span> <span data-ttu-id="4479c-134">Springiness の値が小さいほど、スプリングが硬くなり、弾性の強さが 1 回の振動で速く衰えます。</span><span class="sxs-lookup"><span data-stu-id="4479c-134">The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</span></span></summary>
        <value><span data-ttu-id="4479c-135">スプリングの硬さを指定する正の数値。</span><span class="sxs-lookup"><span data-stu-id="4479c-135">A positive number that specifies the stiffness of the spring.</span></span> <span data-ttu-id="4479c-136">既定値は 3 です。</span><span class="sxs-lookup"><span data-stu-id="4479c-136">The default value is 3.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4479c-137"><xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>値が小さいほど、はスプリングを stiffer、各振幅の度合いが高いほど弾力性が低下します。</span><span class="sxs-lookup"><span data-stu-id="4479c-137">The smaller the <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A> value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</span></span>  
  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <span data-ttu-id="4479c-138"><xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty></span><span class="sxs-lookup"><span data-stu-id="4479c-138"><xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty></span></span>  
  
 <span data-ttu-id="4479c-139">次の図は、の<xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>さまざまな値の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="4479c-139">The following diagram illustrates the effect of different values of <xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>.</span></span>  
  
 <span data-ttu-id="4479c-140">![さまざまな Springiness 値を示します。](~/add/media/elasticease-springiness.png "さまざまな Springiness 値を示します。")</span><span class="sxs-lookup"><span data-stu-id="4479c-140">![Demonstrates different Springiness values.](~/add/media/elasticease-springiness.png "Demonstrates different Springiness values.")</span></span>  
  
<a name="xamlAttributeUsage_Springiness"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4479c-141">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="4479c-141">XAML Attribute Usage</span></span>  
  
```  
<ElasticEase Springiness="double"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4479c-142">次の例では<xref:System.Windows.Media.Animation.ElasticEase> 、にイージング関数<xref:System.Windows.Media.Animation.DoubleAnimation>を適用して、rest に戻るまで、スプリングの不安定さに似たアニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="4479c-142">The following example applies an <xref:System.Windows.Media.Animation.ElasticEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create an animation that resembles a spring oscillating back and forth until it comes to rest.</span></span>  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpringinessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpringinessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpringinessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpringinessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpringinessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpringinessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4479c-143"><see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="4479c-143">Identifies the <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
