<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClockController.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a94d8bd0079bc66770268c57d92f5d1bd9a1c57.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a94d8bd0079bc66770268c57d92f5d1bd9a1c57</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.ClockController">
          <source>Interactively controls a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> を対話的に制御します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.ClockController">
          <source>Use a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph> to interactively begin, pause, resume, seek, skip, stop, and remove a <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>対話形式で作業を開始、一時停止、再開、シーク、スキップ、停止、および削除する、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Animation.ClockController">
          <source>You can only interactively control root-level clocks.</source>
          <target state="translated">ルート レベルのクロックのみ対話的に制御できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>Sets the target <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph> to begin at the next tick.</source>
          <target state="translated">次の目盛りで開始するように、対象の <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph> を設定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>This method causes the target <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> to behave as though its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph> object's <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> were set to the time of the next tick.</source>
          <target state="translated">このメソッドにより、ターゲット<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>かのように動作する、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>オブジェクトの<ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>が次のタイマー刻みの時刻に設定します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>The timeline's actual <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> setting is ignored (but not changed).</source>
          <target state="translated">タイムラインの実際<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>設定は無視されます (ただし、変更されていない)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>This method changes the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">このメソッドは変更対象のクロックの<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>に<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph> method does not resume a paused clock.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>メソッドでは一時停止しているクロックは再開されません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーに影響はありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>As a side-effect, the appropriate events will also not be raised until then.</source>
          <target state="translated">副作用として、適切なイベントも発生しないというそれまでの間です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Begin">
          <source>Calling this method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> events.</source>
          <target state="translated">このメソッドの呼び出しをトリガー、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.ClockController.Clock">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> controlled by this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> によって制御される <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.Clock">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> controlled by this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> によって制御される <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Stops the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> from progressing.</source>
          <target state="translated">対象の <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> の進行を停止します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>You can pause a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> regardless of its current state, and pausing a clock does not change its current state.</source>
          <target state="translated">一時停止すること、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>その現在の状態、および一時停止に関係なく、クロック変わらないので、現在の状態。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>A clock can be paused while <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>.</source>
          <target state="translated">クロックを一時停止中に<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>、または<ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>The only way to unpause a clock is by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> method.</source>
          <target state="translated">クロックを再開する唯一の方法を使用して、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Pausing a clock implicitly pauses its children.</source>
          <target state="translated">クロックを暗黙的に一時停止するには、その子が一時停止します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Calling this method when the target clock is already paused has no effect.</source>
          <target state="translated">対象のクロックが既に一時停止すると、このメソッドを呼び出しても効果はありません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Pause">
          <source>Pausing a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">クロックを一時停止、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> from the properties it animates.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> に関連付けられた <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> を、アニメーション化するプロパティから削除します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>The clock and its child clocks will no longer affect these properties.</source>
          <target state="translated">クロックとその子クロックは、これらのプロパティに対して影響を及ぼさなくなります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>This method triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.RemoveRequested&gt;</ph> event.</source>
          <target state="translated">このメソッドがトリガー、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.RemoveRequested&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Remove">
          <source>The following example shows how to remove and otherwise interactively control a clock.</source>
          <target state="translated">次の例では、削除し、それ以外の場合、時計を対話的に制御する方法を示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Enables a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> that was previously paused to resume progressing.</source>
          <target state="translated">一時停止されている <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> を有効にして、進行を再開します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>You can pause or resume a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> regardless of its current state, and pausing or resuming a clock does not change its current state.</source>
          <target state="translated">一時停止または再開することができます、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>その現在の状態、および一時停止または再開に関係なく、クロック変わらないので、現在の状態。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>A clock can be paused while <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>.</source>
          <target state="translated">クロックを一時停止中に<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>、 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Stopped&gt;</ph>、または<ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockState.Filling&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>The only way to resume a paused clock is by using the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph> method.</source>
          <target state="translated">一時停止しているクロックを再開する唯一の方法を使用して、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Resume%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Resuming a clock implicitly resumes its children.</source>
          <target state="translated">クロックを暗黙的に再開するには、その子が再開されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Calling this method on a clock that is not paused has no effect.</source>
          <target state="translated">一時停止されていないクロックにこのメソッドを呼び出しても効果はありません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Resume">
          <source>Resuming a paused clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">一時停止しているクロックを再開する、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The seek offset, measured in the target clock's time.</source>
          <target state="translated">シーク オフセットを、対象のクロックの時間で表した値。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This offset is relative to the clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>, depending on the value of <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">このオフセットは、クロックの <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph> に対して相対的で、<bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> の値に応じて決まります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A value that indicates whether the specified offset is relative to the target clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>.</source>
          <target state="translated">指定したオフセットが、対象のクロックの <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> および <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph> のどちらに対して相対的かを示す値。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks the target <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph> by the specified amount when the next tick occurs.</source>
          <target state="translated">次の目盛りになった時点で、指定した量だけ対象の <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.ClockController.Clock" /&gt;</ph> をシークします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock is stopped, seeking makes it active again.</source>
          <target state="translated">対象のクロックが停止している場合は、このシークによって再びアクティブになります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seek operations do not take the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings of this clock's timeline into account: the clock is treated as though its timeline has a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">シーク操作は保持しません、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>アカウントにこの時計のタイムラインの設定: 時計がように扱わ、タイムラインは、 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 およびいない<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">このメソッドは、クロックの変更<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>に<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーに影響はありません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
          <target state="translated">副作用として、適切なイベントもは発生しないというそれまでの間です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">ストーリーのシーク、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock has children, their current time is updated accordingly.</source>
          <target state="translated">対象のクロックは、子を持つ、現在の時刻も更新されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example shows how to seek using a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">次の例は、シークを使用する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The seek offset, measured in the target clock's time.</source>
          <target state="translated">シーク オフセットを、対象のクロックの時間で表した値。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This offset is relative to the clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>, depending on the value of <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">このオフセットは、クロックの <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph> に対して相対的で、<bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> の値に応じて決まります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>A value that indicates whether the specified offset is relative to the target clock's <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph>.</source>
          <target state="translated">指定したオフセットが、対象のクロックの <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /&gt;</ph> および <ph id="ph2">&lt;see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /&gt;</ph> のどちらに対して相対的かを示す値。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeks the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> by the specified amount immediately.</source>
          <target state="translated">対象の <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> を指定した量だけ直ちにシークします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock is stopped, seeking makes it active again.</source>
          <target state="translated">対象のクロックが停止している場合は、このシークによって再びアクティブになります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seek operations do not take the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph> settings of this clock's timeline into account: the clock is treated as though its timeline has a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> of 1 and no <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>.</source>
          <target state="translated">シーク操作は保持しません、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>アカウントにこの時計のタイムラインの設定: 時計がように扱わ、タイムラインは、 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph> 1 およびいない<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> aligns the seeked time of the clock with the last clock tick.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> 最後のクロック ティックのクロックの検索する時間を配置します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Values are immediately updated to reflect the changes due to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>, even though the screen will not reflect these changes until the screen updates.</source>
          <target state="translated">値は直ちに期限への変更を反映するように更新される<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>画面では、画面の更新までは、これらの変更は示しません場合でも、します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>If the target clock has children, their current time is updated accordingly.</source>
          <target state="translated">対象のクロックは、子を持つ、現在の時刻も更新されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>This method changes the clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">このメソッドは、クロックの変更<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>に<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>Seeking a storyboard triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">ストーリーのシーク、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
          <source>The following example demonstrates both the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> methods of a <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">次の例では、両方を示しています、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>Advances the current time of the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> to the end of its active period.</source>
          <target state="translated">対象の <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> の現在時刻を、アクティブ期間の最後に進めます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>This method advances the target clock's current time to the end of its active period; the clock's behavior at this point is specified by the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> setting of its <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>.</source>
          <target state="translated">このメソッドは進めます対象のクロックの現在の時刻をアクティブな期間の終了この時点で、クロックの動作がで指定された、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph>の設定、<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>If the timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>, the clock fills; if the property is set to <ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>, the clock stops.</source>
          <target state="translated">場合、タイムラインの<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A&gt;</ph>プロパティに設定されている<ph id="ph2">&lt;xref:System.Windows.Media.Animation.FillBehavior.HoldEnd&gt;</ph>、時計を塗りつぶします。 プロパティが設定されている場合<ph id="ph3">&lt;xref:System.Windows.Media.Animation.FillBehavior.Stop&gt;</ph>、クロックが停止します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>This method has an effect only if the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>.</source>
          <target state="translated">このメソッドは場合のみ有効対象のクロックの<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>は<ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockState.Active&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーに影響はありません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
          <target state="translated">副作用として、適切なイベントもは発生しないというそれまでの間です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.SkipToFill">
          <source>Advancing a storyboard to its fill period triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events.</source>
          <target state="translated">期間のトリガーをその fill にストーリー ボードを進める、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Gets or sets the interactive speed of the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">対象の <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> の対話速度を取得または設定します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>A finite value greater than zero that describes the interactive speed of the target clock.</source>
          <target state="translated">対象のクロックの対話速度を記述するゼロより大きい有限値。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>This value is multiplied against the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> of the clock's <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph>.</source>
          <target state="translated">この値とクロックの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.Timeline" /&gt;</ph> の値が乗算されます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>For example, if the timeline's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> is 0.5 and the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> object's <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph> is 3.0, the timeline moves at 1.5 times normal speed (0.5 * 3.0).</source>
          <target state="translated">たとえば、タイムラインの <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /&gt;</ph> が 0.5 で、<ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.ClockController" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /&gt;</ph> が 3.0 の場合は、タイムラインは通常速度の 1.5 倍 (0.5 × 3.0) で移動します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>The default value is 1.0.</source>
          <target state="translated">既定値は 1.0 です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Setting this property has no effect until the next tick.</source>
          <target state="translated">このプロパティを設定しても次の目盛りまでは影響しません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>If you set this property and then get its value before the next tick occurs, you'll get the old value.</source>
          <target state="translated">このプロパティを設定する前にその値を取得すると次の目盛りに古い値が表示されますに発生します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>This property will return the new value after the next tick.</source>
          <target state="translated">このプロパティでは、次のタイマー刻みの後に新しい値を返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Setting this property does not change the value of the underlying timeline's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>.</source>
          <target state="translated">このプロパティの設定は、基になるタイムラインの値を変更しない<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
          <source>Setting this property triggers the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph> event.</source>
          <target state="translated">対象のクロックのこのプロパティの設定はトリガー<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>Stops the target <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph>.</source>
          <target state="translated">対象の <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Clock" /&gt;</ph> を停止します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>This method changes the target clock's <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは変更対象のクロックの<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;</ph>に<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph> clock can be restarted by using the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>クロックを使用して再起動することができます、 <ph id="ph2">&lt;xref:System.Windows.Media.Animation.ClockController.Begin%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Media.Animation.ClockController.Seek%2A&gt;</ph>、または<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>This method has no effect on the timing tree until the next time a tick is processed.</source>
          <target state="translated">このメソッドには、次のチェック マークが処理されるまで、タイミング ツリーに影響はありません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>As a side-effect, the appropriate events also will not be raised until then.</source>
          <target state="translated">副作用として、適切なイベントもは発生しないというそれまでの間です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.ClockController.Stop">
          <source>Stopping a clock triggers the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph> events, but not the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event.</source>
          <target state="translated">クロックを停止する、<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt;</ph>イベント、ではなく、<ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>イベント。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>