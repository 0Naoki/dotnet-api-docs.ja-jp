<Type Name="PowerEase" FullName="System.Windows.Media.Animation.PowerEase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3575bee2c95ae7a92018d81b6bd64d7959727121" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36497373" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PowerEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PowerEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.PowerEase" />
  <TypeSignature Language="VB.NET" Value="Public Class PowerEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class PowerEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type PowerEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="171ee-101">*f*(*t*) = *t*<sup>p</sup> という数式を使って加速と減速のアニメーションを作成するイージング関数を表します (<see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> プロパティ)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="171ee-101">Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>p</sup> where p is equal to the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="171ee-102">制御することができます、アニメーションが迅速化するかどうかが減速、またはその両方を指定して、<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>です。</span><span class="sxs-lookup"><span data-stu-id="171ee-102">You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span> <span data-ttu-id="171ee-103">次のグラフのさまざまな値を示します<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>ここで、 *f*(*t*)、アニメーションの進行状況を表すと*t*時間を表します。</span><span class="sxs-lookup"><span data-stu-id="171ee-103">The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.</span></span>  
  
 <span data-ttu-id="171ee-104">![CubicEase EasingMode のグラフ] (~/add/media/cubicease-graph.png "CubicEase EasingMode のグラフ。")</span><span class="sxs-lookup"><span data-stu-id="171ee-104">![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png "CubicEase EasingMode graphs.")</span></span>  
  
 <span data-ttu-id="171ee-105">使用して、<xref:System.Windows.Media.Animation.PowerEase>関数の場合、どの程度の速度の加速または減速によって実行を指定することを指定することができます、<xref:System.Windows.Media.Animation.PowerEase.Power%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="171ee-105">By using the <xref:System.Windows.Media.Animation.PowerEase> function, you can specify how quickly acceleration/deceleration takes place by specifying the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property:</span></span>  
  
 <span data-ttu-id="171ee-106">*f*(*t*) = *t*<sup>p</sup>場所`p`と等しい、<xref:System.Windows.Media.Animation.PowerEase.Power%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="171ee-106">*f*(*t*) = *t*<sup>p</sup> where `p` is equal to the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property.</span></span>  
  
 <span data-ttu-id="171ee-107">このため、<xref:System.Windows.Media.Animation.PowerEase>関数の代わりに<xref:System.Windows.Media.Animation.QuadraticEase>(*f*(*t*) = *t*<sup>2</sup>)、 <xref:System.Windows.Media.Animation.CubicEase>(*f*(*t*) = *t*<sup>3</sup>)、 <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t*) = *t*<sup>4</sup>)、および<xref:System.Windows.Media.Animation.QuinticEase>(*f*(*t*) = *t* <sup>5</sup>)。</span><span class="sxs-lookup"><span data-stu-id="171ee-107">Because of this, the <xref:System.Windows.Media.Animation.PowerEase> function can be substituted for <xref:System.Windows.Media.Animation.QuadraticEase> (*f*(*t*) = *t*<sup>2</sup>), <xref:System.Windows.Media.Animation.CubicEase> (*f*(*t*) = *t*<sup>3</sup>), <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t*) = *t*<sup>4</sup>), and <xref:System.Windows.Media.Animation.QuinticEase> (*f*(*t*) = *t*<sup>5</sup>).</span></span> <span data-ttu-id="171ee-108">たとえば、使用する場合、<xref:System.Windows.Media.Animation.PowerEase>と同じ動作を作成する関数、<xref:System.Windows.Media.Animation.QuadraticEase>関数 (*f*(*t*) = *t*<sup>2</sup>) を指定する場合、 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 2 のプロパティの値。</span><span class="sxs-lookup"><span data-stu-id="171ee-108">For example, if you wanted to use a <xref:System.Windows.Media.Animation.PowerEase> function to create the same behavior as a <xref:System.Windows.Media.Animation.QuadraticEase> function (*f*(*t*) = *t*<sup>2</sup>), you would specify a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of 2.</span></span>  
  
 <span data-ttu-id="171ee-109">だけでなく他のいくつかのイージング関数は<xref:System.Windows.Media.Animation.PowerEase>Silverlight の次のサンプルを使用してを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="171ee-109">There are several other easing functions besides <xref:System.Windows.Media.Animation.PowerEase> which you can explore using the following Silverlight sample.</span></span>  
  
 [<span data-ttu-id="171ee-110">このサンプルを実行する</span><span class="sxs-lookup"><span data-stu-id="171ee-110">Run this sample</span></span>](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  
  
 <span data-ttu-id="171ee-111">継承することで、独自のカスタム イージング関数を作成するだけでなく、実行時に含まれるイージング関数を使用して、<xref:System.Windows.Media.Animation.EasingFunctionBase>です。</span><span class="sxs-lookup"><span data-stu-id="171ee-111">In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.</span></span>  
  
<a name="xamlObjectElementUsage_PowerEase"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="171ee-112">XAML オブジェクト要素の使用方法</span><span class="sxs-lookup"><span data-stu-id="171ee-112">XAML Object Element Usage</span></span>  
  
```  
<PowerEase .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="171ee-113">次の例に適用されます、<xref:System.Windows.Media.Animation.PowerEase>イージング関数を<xref:System.Windows.Media.Animation.PowerEase.Power%2A>のプロパティの値`20`を<xref:System.Windows.Media.Animation.DoubleAnimation>decelerating アニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="171ee-113">The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span> <span data-ttu-id="171ee-114"><xref:System.Windows.Media.Animation.PowerEase.Power%2A>値は非常に高いために、減速急激な下限値を使用した場合と比較します。</span><span class="sxs-lookup"><span data-stu-id="171ee-114">Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.</span></span>  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PowerEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="171ee-115">
            <see cref="T:System.Windows.Media.Animation.PowerEase" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-115">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PowerEase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="powerEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="171ee-116">
            <see cref="T:System.Windows.Freezable" /> 派生クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-116">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
          <span data-ttu-id="171ee-117">派生クラスを作成するときには、このメソッドをオーバーライドする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-117">When creating a derived class, you must override this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="171ee-118">新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-118">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="171ee-119">アニメーションのクラスに継承直接から<xref:System.Windows.Freezable>です。</span><span class="sxs-lookup"><span data-stu-id="171ee-119">Animation classes inherit indirectly from <xref:System.Windows.Freezable>.</span></span> <span data-ttu-id="171ee-120">このため、オーバーライドする必要があります、<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>アニメーション オブジェクトを構築するメソッド。</span><span class="sxs-lookup"><span data-stu-id="171ee-120">Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="171ee-121">次の例は、の一般的な実装を示しています。<xref:System.Windows.Freezable.CreateInstanceCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="171ee-121">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="powerEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">
          <span data-ttu-id="171ee-122">アニメーションの正規化された時間 (進行状況)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-122">Normalized time (progress) of the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="171ee-123">カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできるイージング関数のロジック部分を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-123">Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="171ee-124">変換された進行状況を表す double 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-124">A double that represents the transformed progress.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="171ee-125">このメソッドは変換のアニメーションの速度を制御する正規化された時間、<xref:System.Windows.Media.Animation.EasingMode.EaseIn>の case<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>です。</span><span class="sxs-lookup"><span data-stu-id="171ee-125">This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</span></span>  
  
 <span data-ttu-id="171ee-126">のみのイージング関数を指定する必要が、<xref:System.Windows.Media.Animation.EasingMode.EaseIn>ためにのケースの実装、<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>メソッド変換`normalizedTime`の<xref:System.Windows.Media.Animation.EasingMode.EaseOut>と<xref:System.Windows.Media.Animation.EasingMode.EaseInOut>場合。</span><span class="sxs-lookup"><span data-stu-id="171ee-126">You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Power" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.PowerEase.Power" />
      <MemberSignature Language="VB.NET" Value="Public Property Power As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Power { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Power : double with get, set" Usage="System.Windows.Media.Animation.PowerEase.Power" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="171ee-127">アニメーション補間の指数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-127">Gets or sets the exponential power of the animation interpolation.</span>
          </span>
          <span data-ttu-id="171ee-128">たとえば、値が 7 の場合、*f*(*t*) = *t*<sup>7</sup> という数式に従うアニメーションの補間曲線が作成されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-128">For example, a value of 7 will create an animation interpolation curve that follows the formula *f*(*t*) = *t*<sup>7</sup>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="171ee-129">アニメーション補間の指数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-129">The exponential power of the animation interpolation.</span>
          </span>
          <span data-ttu-id="171ee-130">この値は、0 以上である必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-130">This value must be greater or equal to 0.</span>
          </span>
          <span data-ttu-id="171ee-131">既定値は 2 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-131">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)]<span data-ttu-id="171ee-132"> <xref:System.Windows.Media.Animation.PowerEase.PowerProperty></span><span class="sxs-lookup"><span data-stu-id="171ee-132"> <xref:System.Windows.Media.Animation.PowerEase.PowerProperty></span></span>  
  
<a name="xamlAttributeUsage_Power"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="171ee-133">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="171ee-133">XAML Attribute Usage</span></span>  
  
```  
<object Power="double" .../>  
```  
  
   
  
## Examples  
 <span data-ttu-id="171ee-134">次の例に適用されます、<xref:System.Windows.Media.Animation.PowerEase>イージング関数を<xref:System.Windows.Media.Animation.PowerEase.Power%2A>のプロパティの値`20`を<xref:System.Windows.Media.Animation.DoubleAnimation>decelerating アニメーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="171ee-134">The following example applies a <xref:System.Windows.Media.Animation.PowerEase> easing function with a <xref:System.Windows.Media.Animation.PowerEase.Power%2A> property value of `20` to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.</span></span> <span data-ttu-id="171ee-135"><xref:System.Windows.Media.Animation.PowerEase.Power%2A>値は非常に高いために、減速急激な下限値を使用した場合と比較します。</span><span class="sxs-lookup"><span data-stu-id="171ee-135">Because the <xref:System.Windows.Media.Animation.PowerEase.Power%2A> value is so high, the deceleration is sudden compared to if you used a lower value.</span></span>  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PowerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PowerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.PowerEase.PowerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PowerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PowerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PowerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.PowerEase.PowerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="171ee-136">
            <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="171ee-136">Identifies the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>