<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a938a-101"><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> オブジェクトによって使用される文字データと書式設定プロパティを指定するための抽象クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="a938a-101">Provides an abstract class for specifying character data and formatting properties to be used by the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a938a-102">内のテキストにすべてのアクセス、<xref:System.Windows.Media.TextFormatting.TextSource>オブジェクトはを通じて、 <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>、テキスト レイアウト クライアントを選択した任意の方法でテキストを仮想化を許可するようになっています。</span><span class="sxs-lookup"><span data-stu-id="a938a-102">All access to the text in the <xref:System.Windows.Media.TextFormatting.TextSource> object is through the <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, which is designed to allow the text layout client to virtualize text in any way it chooses.</span></span>  
  
 <span data-ttu-id="a938a-103"><xref:System.Windows.Media.TextFormatting.TextFormatter> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]テキストの書式設定し、テキストの行の重大なサービスを提供するテキスト エンジンです。</span><span class="sxs-lookup"><span data-stu-id="a938a-103"><xref:System.Windows.Media.TextFormatting.TextFormatter> is the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] text engine that provides services for formatting text and breaking text lines.</span></span> <span data-ttu-id="a938a-104"><xref:System.Windows.Media.TextFormatting.TextFormatter> 別のテキスト文字の書式および段落のスタイルを処理し、国際的なテキスト レイアウトのサポートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a938a-104"><xref:System.Windows.Media.TextFormatting.TextFormatter> can handle different text character formats and paragraph styles, and includes support for international text layout.</span></span> <span data-ttu-id="a938a-105">従来のテキストとは異なり[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]、<xref:System.Windows.Media.TextFormatting.TextFormatter>コールバック メソッドのセットを使用して、テキスト レイアウト クライアントと対話します。</span><span class="sxs-lookup"><span data-stu-id="a938a-105">Unlike a traditional text [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], the <xref:System.Windows.Media.TextFormatting.TextFormatter> interacts with a text layout client through a set of callback methods.</span></span> <span data-ttu-id="a938a-106">実装でこれらのメソッドを提供するために必要な<xref:System.Windows.Media.TextFormatting.TextSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a938a-106">It requires the client to provide these methods in an implementation of the <xref:System.Windows.Media.TextFormatting.TextSource> class.</span></span> <span data-ttu-id="a938a-107">次の一覧には、3 つのメンバーをオーバーライドする必要がありますがについて説明します。</span><span class="sxs-lookup"><span data-stu-id="a938a-107">The following list describes the three members you must override:</span></span>  
  
-   <span data-ttu-id="a938a-108"><xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: 取得、<xref:System.Windows.Media.TextFormatting.TextRun>始まる、指定した<xref:System.Windows.Media.TextFormatting.TextSource>位置。</span><span class="sxs-lookup"><span data-stu-id="a938a-108"><xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Retrieves a <xref:System.Windows.Media.TextFormatting.TextRun> starting at a specified <xref:System.Windows.Media.TextFormatting.TextSource> position.</span></span>  
  
-   <span data-ttu-id="a938a-109"><xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: 直前に指定したテキスト範囲を取得する<xref:System.Windows.Media.TextFormatting.TextSource>位置。</span><span class="sxs-lookup"><span data-stu-id="a938a-109"><xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Retrieves the text span immediately before the specified <xref:System.Windows.Media.TextFormatting.TextSource> position.</span></span>  
  
-   <span data-ttu-id="a938a-110"><xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: マップする値を取得、<xref:System.Windows.Media.TextFormatting.TextSource>文字のインデックス、<xref:System.Windows.Media.TextEffect>文字インデックス。</span><span class="sxs-lookup"><span data-stu-id="a938a-110"><xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Retrieves a value that maps a <xref:System.Windows.Media.TextFormatting.TextSource> character index to a <xref:System.Windows.Media.TextEffect> character index.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a938a-111">派生を実装する方法を示す完全なコード サンプルの<xref:System.Windows.Media.TextFormatting.TextSource>クラスを参照してください[テキスト書式設定のサンプルの高度な](http://go.microsoft.com/fwlink/?LinkID=159965)します。</span><span class="sxs-lookup"><span data-stu-id="a938a-111">For a complete code sample that shows how to implement a derived <xref:System.Windows.Media.TextFormatting.TextSource> class, see [Advanced Text Formatting Sample](http://go.microsoft.com/fwlink/?LinkID=159965) .</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a938a-112"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a938a-112">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit"><span data-ttu-id="a938a-113">テキストの取得を停止する文字インデックス位置を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a938a-113">An <see cref="T:System.Int32" /> value that specifies the character index position where text retrieval stops.</span></span></param>
        <summary><span data-ttu-id="a938a-114">指定した <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 位置の直前のテキスト範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="a938a-114">Retrieves the text span immediately before the specified <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> position.</span></span></summary>
        <returns><span data-ttu-id="a938a-115"><paramref name="textSourceCharacterIndexLimit" /> の直前のテキスト範囲を表す <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a938a-115">A <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> value that represents the text span immediately before <paramref name="textSourceCharacterIndexLimit" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a938a-116"><xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>メソッドは、空白を返します<xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange>テキストが直前にまたがる場合`textSourceCharacterIndexLimit`インライン オブジェクトまたは非表示の実行など、任意のテキストは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a938a-116">The <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> method returns an empty <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> if the text span immediately before `textSourceCharacterIndexLimit` does not contain any text, such as inline object or a hidden run.</span></span>  
  
 <span data-ttu-id="a938a-117">前の値がない場合、このメソッドは長さ 0 のテキスト範囲を返します`textSourceCharacterIndexLimit`です。</span><span class="sxs-lookup"><span data-stu-id="a938a-117">This method returns a zero-length text span if there are no values preceding `textSourceCharacterIndexLimit`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex"><span data-ttu-id="a938a-118">割り当てる <see cref="T:System.Int32" /> 文字インデックスを指定する <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a938a-118">An <see cref="T:System.Int32" /> value that specifies the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> character index to map.</span></span></param>
        <summary><span data-ttu-id="a938a-119"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 文字インデックスを <see cref="T:System.Windows.Media.TextEffect" /> 文字インデックスに割り当てる値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a938a-119">Retrieves a value that maps a <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> character index to a <see cref="T:System.Windows.Media.TextEffect" /> character index.</span></span></summary>
        <returns><span data-ttu-id="a938a-120"><see cref="T:System.Int32" /> 文字インデックスを表す <see cref="T:System.Windows.Media.TextEffect" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a938a-120">An <see cref="T:System.Int32" /> value that represents the <see cref="T:System.Windows.Media.TextEffect" /> character index.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex"><span data-ttu-id="a938a-121"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> の取得元となる <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> の文字インデックス位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="a938a-121">Specifies the character index position in the <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> where the <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> is retrieved.</span></span></param>
        <summary><span data-ttu-id="a938a-122">指定した <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> 位置を開始位置として <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="a938a-122">Retrieves a <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> starting at a specified <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> position.</span></span></summary>
        <returns><span data-ttu-id="a938a-123"><see cref="T:System.Windows.Media.TextFormatting.TextRun" />、または <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> の派生オブジェクトを表す値。</span><span class="sxs-lookup"><span data-stu-id="a938a-123">A value that represents a <see cref="T:System.Windows.Media.TextFormatting.TextRun" />, or an object derived from <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a938a-124">テキスト ランとは、1 つのプロパティ セットを共有する文字のシーケンスです。</span><span class="sxs-lookup"><span data-stu-id="a938a-124">A text run is a sequence of characters sharing a single property set.</span></span> <span data-ttu-id="a938a-125">フォント ファミリ、フォント スタイル、前景の色、テキスト装飾、またはその他の書式設定効果、テキスト ランなどの形式に変更します。</span><span class="sxs-lookup"><span data-stu-id="a938a-125">Any change to the format, such as font family, font style, foreground color, text decoration, or any other formatting effect, breaks the text run.</span></span> <span data-ttu-id="a938a-126"><xref:System.Windows.Media.TextFormatting.TextRun>クラスによって処理されたテキスト コンテンツのいくつかの型を表す型階層のルートは、<xref:System.Windows.Media.TextFormatting.TextFormatter>です。</span><span class="sxs-lookup"><span data-stu-id="a938a-126">The <xref:System.Windows.Media.TextFormatting.TextRun> class is the root of a type hierarchy representing several types of text content processed by <xref:System.Windows.Media.TextFormatting.TextFormatter>.</span></span> <span data-ttu-id="a938a-127">各クラスから派生した<xref:System.Windows.Media.TextFormatting.TextRun>テキスト コンテンツの種類を表します。</span><span class="sxs-lookup"><span data-stu-id="a938a-127">Each class that is derived from <xref:System.Windows.Media.TextFormatting.TextRun> represents a distinct type of text content.</span></span>  
  
|<span data-ttu-id="a938a-128">クラス</span><span class="sxs-lookup"><span data-stu-id="a938a-128">Class</span></span>|<span data-ttu-id="a938a-129">説明</span><span class="sxs-lookup"><span data-stu-id="a938a-129">Description</span></span>|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|<span data-ttu-id="a938a-130">階層のルートです。</span><span class="sxs-lookup"><span data-stu-id="a938a-130">Root of the hierarchy.</span></span> <span data-ttu-id="a938a-131">同じ文字のプロパティのセットを共有する文字のグループを定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-131">Defines a group of characters that share the same set of character properties.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|<span data-ttu-id="a938a-132">異なる物理タイプフェイスから文字のグリフのコレクションを定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-132">Defines a collection of character glyphs from a distinct physical typeface.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|<span data-ttu-id="a938a-133">どの測定、ヒット テスト、および全体のコンテンツの描画は個別のエンティティとして行われます、テキスト コンテンツの種類を定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-133">Defines a type of text content in which measuring, hit testing, and drawing of the entire content is done as a distinct entity.</span></span> <span data-ttu-id="a938a-134">この種類のコンテンツの例は、テキストの線の中央ボタンです。</span><span class="sxs-lookup"><span data-stu-id="a938a-134">An example of this type of content is a button in the middle of the line of text.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|<span data-ttu-id="a938a-135">改行文字のコードを定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-135">Defines a line-break character code.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|<span data-ttu-id="a938a-136">段落区切り文字のコードを定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-136">Defines a paragraph-break character code.</span></span> <span data-ttu-id="a938a-137"><xref:System.Windows.Media.TextFormatting.TextEndOfLine> から派生します。</span><span class="sxs-lookup"><span data-stu-id="a938a-137">Derives from <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|<span data-ttu-id="a938a-138">セグメント区切りマーカーを定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-138">Defines a segment break marker.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|<span data-ttu-id="a938a-139">非表示の文字の範囲を定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-139">Defines a range of non-visible characters.</span></span>|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|<span data-ttu-id="a938a-140">変更のスコープの先頭を定義します。</span><span class="sxs-lookup"><span data-stu-id="a938a-140">Defines the beginning of a modification scope.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a938a-141">次の例では、上書き、<xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="a938a-141">In the following example, an override for the <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> method is implemented.</span></span>  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a938a-142">テキストを表示する PixelsPerDip を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a938a-142">Get or sets the PixelsPerDip at which the text should be rendered.</span></span></summary>
        <value><span data-ttu-id="a938a-143">現在の <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a938a-143">The current <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a938a-144">拡張するクラス<xref:System.Windows.Media.TextFormatting.TextSource>更新する必要があります<xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A>あたりモニター DPI 対応のアプリケーションの DPI が変更されるたびにします。</span><span class="sxs-lookup"><span data-stu-id="a938a-144">Any class that extends <xref:System.Windows.Media.TextFormatting.TextSource> should update         <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> whenever the DPI changes for a Per Monitor DPI Aware application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>