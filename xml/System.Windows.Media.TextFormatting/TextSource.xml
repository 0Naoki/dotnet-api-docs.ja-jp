<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2bef48588523726716b58c52ee542cfb766e6e7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51938694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> オブジェクトによって使用される文字データと書式設定プロパティを指定するための抽象クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内のテキストにすべてのアクセス、<xref:System.Windows.Media.TextFormatting.TextSource>オブジェクトは、 <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>、選択した任意の方法でテキストを仮想化のテキスト レイアウト クライアントを許可するがいます。  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]テキスト エンジンの書式設定およびテキスト行の改行のサービスを提供します。 <xref:System.Windows.Media.TextFormatting.TextFormatter> 別のテキスト文字書式および段落のスタイルを処理し、国際対応テキストのレイアウトのサポートが含まれています。 従来のテキストとは異なり[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]、<xref:System.Windows.Media.TextFormatting.TextFormatter>一連のコールバック メソッドを介してテキスト レイアウト クライアントと対話します。 クライアントは、これらのメソッドの実装を提供する必要があります、<xref:System.Windows.Media.TextFormatting.TextSource>クラス。 次の一覧には、3 つのメンバーをオーバーライドする必要がありますがについて説明します。  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: 取得、<xref:System.Windows.Media.TextFormatting.TextRun>で指定した開始<xref:System.Windows.Media.TextFormatting.TextSource>位置。  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: 直前に指定したテキスト範囲を取得する<xref:System.Windows.Media.TextFormatting.TextSource>位置。  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: マップする値を取得、<xref:System.Windows.Media.TextFormatting.TextSource>文字インデックスを、<xref:System.Windows.Media.TextEffect>文字インデックス。  
  
> [!NOTE]
>  派生を実装する方法を示す完全なコード サンプル<xref:System.Windows.Media.TextFormatting.TextSource>クラスを参照してください[高度なテキストの書式設定サンプル](https://go.microsoft.com/fwlink/?LinkID=159965)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">高度なテキスト書式設定のサンプル</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">テキストの取得を停止する文字インデックス位置を指定する <see cref="T:System.Int32" /> 値。</param>
        <summary>指定した <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 位置の直前のテキスト範囲を取得します。</summary>
        <returns>
          <paramref name="textSourceCharacterIndexLimit" /> の直前のテキスト範囲を表す <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>メソッドは、空を返します<xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange>がテキストにする直前にまたがる場合`textSourceCharacterIndexLimit`インライン オブジェクトまたは非表示の実行などの任意のテキストは含まれません。  
  
 このメソッドは、前の値がない場合に、長さ 0 のテキスト範囲を返します`textSourceCharacterIndexLimit`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">割り当てる <see cref="T:System.Int32" /> 文字インデックスを指定する <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 値。</param>
        <summary>
          <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 文字インデックスを <see cref="T:System.Windows.Media.TextEffect" /> 文字インデックスに割り当てる値を取得します。</summary>
        <returns>
          <see cref="T:System.Int32" /> 文字インデックスを表す <see cref="T:System.Windows.Media.TextEffect" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">
          <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> の取得元となる <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> の文字インデックス位置を指定します。</param>
        <summary>指定した <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> 位置を開始位置として <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> を取得します。</summary>
        <returns>
          <see cref="T:System.Windows.Media.TextFormatting.TextRun" />、または <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> の派生オブジェクトを表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト ランは、1 つのプロパティ セットを共有する文字のシーケンスです。 フォント ファミリ、フォント スタイル、前景の色、装飾、またはその他の書式設定効果、テキスト ランなどの形式に変更します。 <xref:System.Windows.Media.TextFormatting.TextRun>クラスによって処理されるテキスト コンテンツのいくつかの型を表す型の階層のルートである<xref:System.Windows.Media.TextFormatting.TextFormatter>します。 各クラスから派生した<xref:System.Windows.Media.TextFormatting.TextRun>特殊な種類のテキスト コンテンツを表します。  
  
|クラス|説明|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|階層のルートです。 同じ文字プロパティのセットを共有する文字のグループを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|異なる物理タイプフェイスからの文字のグリフのコレクションを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|個別のエンティティとしてどの測定、ヒット テスト、および全体のコンテンツの描画が行われます、テキスト コンテンツの種類を定義します。 この種類のコンテンツの例は、テキストの線の中央ボタンです。|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|改行文字のコードを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|段落区切り文字のコードを定義します。 <xref:System.Windows.Media.TextFormatting.TextEndOfLine>から派生します。|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|セグメント区切りマーカーを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|非表示の文字の範囲を定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|変更のスコープの先頭を定義します。|  
  
   
  
## Examples  
 次の例では、上書きを<xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>メソッドを実装します。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストを表示する PixelsPerDip を取得または設定します。</summary>
        <value>現在の <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任意のクラスを拡張する<xref:System.Windows.Media.TextFormatting.TextSource>更新する必要があります<xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A>あたりモニター DPI 対応のアプリケーションの DPI が変更されるたびにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>