<Namespace Name="System.Net.Http">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2117b45807e03a0cb71286977f2d8b3cddbfe4c1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30734916" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="6bfe2-101">
        <see cref="N:System.Net.Http" /> 名前空間は、最新の HTTP アプリケーション用のプログラミング インターフェイスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bfe2-101">The <see cref="N:System.Net.Http" /> namespace provides a programming interface for modern HTTP applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfe2-102"><xref:System.Net.Http>名前空間は、次を提供する設計されています。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-102">The <xref:System.Net.Http> namespace is designed to provide the following:</span></span>  
  
1.  <span data-ttu-id="6bfe2-103">HTTP 経由で最新の web サービスを使用するようにすることが HTTP クライアント コンポーネント。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-103">HTTP client components that allow users to consume modern web services over HTTP.</span></span>  
  
2.  <span data-ttu-id="6bfe2-104">使用できる HTTP コンポーネント クライアントとサーバー (HTTP ヘッダーと例については、メッセージ) の両方でします。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-104">HTTP components that can be used by both clients and servers (HTTP headers and messages, for example).</span></span> <span data-ttu-id="6bfe2-105">これは、一貫性のあるプログラミング モデル、クライアントとサーバー側の両方で最新の web サービスの HTTP 経由の提供します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-105">This provides a consistent programming model on both the client and the server side for modern web services over HTTP.</span></span>  
  
 <span data-ttu-id="6bfe2-106"><xref:System.Net.Http>名前空間と、関連<xref:System.Net.Http.Headers>名前空間は、次のコンポーネントのセットを提供します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-106">The <xref:System.Net.Http> namespace and the related <xref:System.Net.Http.Headers> namespace provide the following set of components:</span></span>  
  
1.  <span data-ttu-id="6bfe2-107"><xref:System.Net.Http.HttpClient> -主要なクラスを送信して、HTTP 経由で要求を受信するために使用します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-107"><xref:System.Net.Http.HttpClient> - the primary class used to send and receive requests over HTTP.</span></span>  
  
2.  <span data-ttu-id="6bfe2-108"><xref:System.Net.Http.HttpRequestMessage> <xref:System.Net.Http.HttpResponseMessage> -HTTP メッセージのように、IETF によって RFC 2616 で定義します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-108"><xref:System.Net.Http.HttpRequestMessage> and <xref:System.Net.Http.HttpResponseMessage> - HTTP messages as defined in RFC 2616 by the IETF.</span></span>  
  
3.  <span data-ttu-id="6bfe2-109"><xref:System.Net.Http.Headers.HttpHeaders> HTTP ヘッダー、IETF によって RFC 2616 で定義されているようです。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-109"><xref:System.Net.Http.Headers.HttpHeaders> - HTTP headers as defined in RFC 2616 by the IETF.</span></span>  
  
4.  <span data-ttu-id="6bfe2-110"><xref:System.Net.Http.HttpClientHandler> HTTP ハンドラーが HTTP 応答メッセージの生成を担当します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-110"><xref:System.Net.Http.HttpClientHandler> - HTTP handlers responsible for producing HTTP response messages.</span></span>  
  
 <span data-ttu-id="6bfe2-111">使用できるさまざまな HTTP メッセージ ハンドルがあります。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-111">There are various HTTP message handles that can be used.</span></span> <span data-ttu-id="6bfe2-112">これらは、次に示します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-112">These include the following.</span></span>  
  
1.  <span data-ttu-id="6bfe2-113"><xref:System.Net.Http.DelegatingHandler> -クラスでは、ハンドラー チェーンにハンドラーを接続するために使用します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-113"><xref:System.Net.Http.DelegatingHandler> - A class used to plug a handler into a handler chain.</span></span>  
  
2.  <span data-ttu-id="6bfe2-114"><xref:System.Net.Http.HttpMessageHandler> ほとんどのアプリケーションの最も一般的な要件をサポートするクラスから派生する-簡単です。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-114"><xref:System.Net.Http.HttpMessageHandler> - A simple to class to derive from that supports the most common requirements for most applications.</span></span>  
  
3.  <span data-ttu-id="6bfe2-115"><xref:System.Net.Http.HttpClientHandler> -は実際には、HTTP トランスポートの操作を処理するハンドラー チェーンの下で動作するクラス。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-115"><xref:System.Net.Http.HttpClientHandler> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</span></span>  
  
4.  <span data-ttu-id="6bfe2-116"><xref:System.Net.Http.WebRequestHandler> -に固有のオプションを使用して HTTP トランスポートの操作を処理するハンドラー チェーン クラスの下で動作する特殊クラス、<xref:System.Net.HttpWebRequest?displayProperty=nameWithType>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-116"><xref:System.Net.Http.WebRequestHandler> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="6bfe2-117">HTTP メッセージの内容は、RFC 2616 で定義されているエンティティ ボディに対応します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-117">The contents of an HTTP message corresponds to the entity body defined in RFC 2616.</span></span>  
  
 <span data-ttu-id="6bfe2-118">クラスの数は、HTTP コンテンツを使用できます。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-118">A number of classes can be used for HTTP content.</span></span> <span data-ttu-id="6bfe2-119">これらは、次に示します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-119">These include the following.</span></span>  
  
1.  <span data-ttu-id="6bfe2-120"><xref:System.Net.Http.ByteArrayContent> -に基づく HTTP コンテンツをバイト配列。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-120"><xref:System.Net.Http.ByteArrayContent> - HTTP content based on a byte array.</span></span>  
  
2.  <span data-ttu-id="6bfe2-121"><xref:System.Net.Http.FormUrlEncodedContent> 名前/値の組の HTTP コンテンツは、アプリケーション/x-www-form-urlencoded MIME の種類を使用してエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-121"><xref:System.Net.Http.FormUrlEncodedContent> - HTTP content of name/value tuples encoded using application/x-www-form-urlencoded MIME type.</span></span>  
  
3.  <span data-ttu-id="6bfe2-122"><xref:System.Net.Http.MultipartContent> 、マルチパートを使用してシリアル化され HTTP コンテンツ/\* コンテンツ タイプの指定。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-122"><xref:System.Net.Http.MultipartContent> - HTTP content that gets serialized using the multipart/\* content type specification.</span></span>  
  
4.  <span data-ttu-id="6bfe2-123"><xref:System.Net.Http.MultipartFormDataContent> HTTP コンテンツは、マルチパート/フォーム データの MIME の種類を使用してエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-123"><xref:System.Net.Http.MultipartFormDataContent> - HTTP content encoded using the multipart/form-data MIME type.</span></span>  
  
5.  <span data-ttu-id="6bfe2-124"><xref:System.Net.Http.StreamContent> -に基づく HTTP コンテンツ ストリーム。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-124"><xref:System.Net.Http.StreamContent> - HTTP content based on a stream.</span></span>  
  
6.  <span data-ttu-id="6bfe2-125"><xref:System.Net.Http.StringContent> -に基づく HTTP コンテンツを文字列。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-125"><xref:System.Net.Http.StringContent> - HTTP content based on a string.</span></span>  
  
 <span data-ttu-id="6bfe2-126">使用して、アプリの場合、<xref:System.Net.Http>と<xref:System.Net.Http.Headers>名前空間が、大量のデータ (50 メガバイトまたはそれ以上) をダウンロードしようとしています。 その後、アプリのダウンロードのストリームと既定のバッファリングを使用しない必要があります。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-126">If an app using the <xref:System.Net.Http> and <xref:System.Net.Http.Headers> namespaces intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="6bfe2-127">既定のバッファリングを使用する場合は、クライアントのメモリ使用量が非常に大きな取得、パフォーマンスが低下するためになる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-127">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="6bfe2-128">クラス、<xref:System.Net.Http>と<xref:System.Net.Http.Headers>名前空間は、Windows ストア アプリまたはデスクトップ アプリを開発に使用できます。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-128">Classes in the <xref:System.Net.Http> and <xref:System.Net.Http.Headers> namespaces can be used to develop Windows Store apps or desktop apps.</span></span> <span data-ttu-id="6bfe2-129">クラスでの Windows ストア アプリで使用する場合、<xref:System.Net.Http>と<xref:System.Net.Http.Headers>名前空間がによって使用されるアプリケーションのセキュリティ モデルの一部であるネットワーク分離機能によって影響を受ける、[!INCLUDE[win8](~/includes/win8-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-129">When used in a Windows Store app, classes in the <xref:System.Net.Http> and <xref:System.Net.Http.Headers> namespaces are affected by network isolation feature, part of the application security model used by the [!INCLUDE[win8](~/includes/win8-md.md)].</span></span> <span data-ttu-id="6bfe2-130">システムがネットワーク アクセスを許可するため、Windows ストア アプリでの Windows ストア アプリのアプリ マニフェストでは、適切なネットワーク機能を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-130">The appropriate network capabilities must be enabled in the app manifest for a Windows Store app for the system to allow network access by a Windows store app.</span></span> <span data-ttu-id="6bfe2-131">詳細については、「[Network Isolation for Windows Store Apps (Windows ストア アプリのネットワークの分離)](~/docs/framework/network-programming/network-isolation-for-windows-store-apps.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="6bfe2-131">For more information, see the [Network Isolation for Windows Store Apps](~/docs/framework/network-programming/network-isolation-for-windows-store-apps.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Http.Headers" />
  </Docs>
</Namespace>