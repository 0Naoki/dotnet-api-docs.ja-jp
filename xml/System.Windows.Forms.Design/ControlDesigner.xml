<Type Name="ControlDesigner" FullName="System.Windows.Forms.Design.ControlDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd08e6953e367fdde14eadb10cdd95744bed53bc" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65136150" /></Metadata><TypeSignature Language="C#" Value="public class ControlDesigner : System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits ComponentDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::ComponentModel::Design::ComponentDesigner" />
  <TypeSignature Language="F#" Value="type ControlDesigner = class&#xA;    inherit ComponentDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.ComponentDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="54045-101"><see cref="T:System.Windows.Forms.Control" /> のデザイン モードの動作を拡張します。</span><span class="sxs-lookup"><span data-stu-id="54045-101">Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-102"><xref:System.Windows.Forms.Design.ControlDesigner> 基本クラスから派生したコンポーネントのデザイナーを提供します<xref:System.Windows.Forms.Control>します。</span><span class="sxs-lookup"><span data-stu-id="54045-102"><xref:System.Windows.Forms.Design.ControlDesigner> provides a base class for designers of components that derive from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="54045-103">メソッドとから継承された機能だけでなく、<xref:System.ComponentModel.Design.ComponentDesigner>クラス、<xref:System.Windows.Forms.Design.ControlDesigner>を拡張して、関連付けられた動作の変更をサポートする追加のメソッドを提供します<xref:System.Windows.Forms.Control>デザイン時にします。</span><span class="sxs-lookup"><span data-stu-id="54045-103">In addition to the methods and functionality inherited from the <xref:System.ComponentModel.Design.ComponentDesigner> class, <xref:System.Windows.Forms.Design.ControlDesigner> provides additional methods to support extending and altering the behavior of an associated <xref:System.Windows.Forms.Control> at design time.</span></span>  
  
 <span data-ttu-id="54045-104">使用して型をデザイナーを関連付けることができます、<xref:System.ComponentModel.DesignerAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="54045-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="54045-105">デザイン時の動作のカスタマイズの概要については、次を参照してください。[デザイン時サポートの拡張](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="54045-105">For an overview of customizing design time behavior, see [Extending Design-Time Support](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54045-106">次の例では、<xref:System.Windows.Forms.Design.ControlDesigner>実装は、処理を示しています。`MouseEnter`と`MouseLeave`イベント、デザイナーのコードからコントロールの描画およびの一部を使用して、<xref:System.ComponentModel.Design.IDesignerFilter>デザイン時にコントロールのプロパティを追加するインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="54045-106">The following example <xref:System.Windows.Forms.Design.ControlDesigner> implementation demonstrates handling `MouseEnter` and `MouseLeave` events, drawing on a control from designer code, and using part of the <xref:System.ComponentModel.Design.IDesignerFilter> interface to add a property for the control at design time.</span></span> <span data-ttu-id="54045-107">次のサンプル コードには、デザイナーと、デザイナーに関連付けられたサンプルのユーザー コントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="54045-107">The following sample code contains a designer and a sample user control associated with the designer.</span></span> <span data-ttu-id="54045-108">このサンプルをビルドするには、サンプルをコンパイルしてクラス ライブラリ、Windows フォーム プロジェクトにライブラリへの参照を追加、ツールボックスにコントロールを追加しをフォームにコントロールのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="54045-108">To build this sample, compile the sample into a class library, add a reference to the library to a Windows Forms project, add the control to the Toolbox, and add an instance of the control to your form.</span></span> <span data-ttu-id="54045-109">コントロールをポイントすると、コントロールの境界の内側のアウトラインが強調表示、アウトラインを描画するために使用される色の対応する、`OutlineColor`コントロールのデザイナーがプロパティに追加するプロパティが一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="54045-109">When you point to the control, the inner outline of the perimeter of the control is highlighted, and the color used to draw the outline corresponds to the `OutlineColor` property that the designer has added to the properties listed for the control.</span></span>  
  
 <span data-ttu-id="54045-110">コード例をコンパイルする System.Design アセンブリへの参照を追加します。</span><span class="sxs-lookup"><span data-stu-id="54045-110">Add a reference to the System.Design assembly to compile the code example.</span></span>  
  
 [!code-cpp[ControlDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#1)]
 [!code-csharp[ControlDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#1)]
 [!code-vb[ControlDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)"><span data-ttu-id="54045-111">デザイン時サポートの拡張</span><span class="sxs-lookup"><span data-stu-id="54045-111">Extending Design-Time Support</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-112"><see cref="T:System.Windows.Forms.Design.ControlDesigner" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="54045-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accessibilityObj">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AccessibleObject accessibilityObj;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Windows.Forms.AccessibleObject accessibilityObj" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberSignature Language="VB.NET" Value="Protected accessibilityObj As AccessibleObject " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Windows::Forms::AccessibleObject ^ accessibilityObj;" />
      <MemberSignature Language="F#" Value="val mutable accessibilityObj : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-113">デザイナーのユーザー補助オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="54045-113">Specifies the accessibility object for the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-114">既定値は `null` です。</span><span class="sxs-lookup"><span data-stu-id="54045-114">The default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-115">コントロールに割り当てられた <see cref="T:System.Windows.Forms.AccessibleObject" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="54045-115">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></summary>
        <value><span data-ttu-id="54045-116">コントロールに割り当てられた <see cref="T:System.Windows.Forms.AccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="54045-116">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-117">ユーザー補助オブジェクトの詳細については、MSDN ライブラリの「Active Accessibility」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="54045-117">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedComponents : System.Collections.ICollection" Usage="System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-118">デザイナーによって管理されているコンポーネントに関連付けられているコンポーネントのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="54045-118">Gets the collection of components associated with the component managed by the designer.</span></span></summary>
        <value><span data-ttu-id="54045-119">デザイナーによって管理されているコンポーネントに関連付けられているコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="54045-119">The components that are associated with the component managed by the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-120">このプロパティは、コピーまたは移動、コピー中に、デザイナーによって管理されるコンポーネントと任意コンポーネントをドラッグ、または移動操作を示します。</span><span class="sxs-lookup"><span data-stu-id="54045-120">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="54045-121">このコレクションに現在のデザイン モードのドキュメントでは、他のコンポーネントへの参照が含まれている場合は、コピー操作中に、デザイナーによって管理されるコンポーネントとそれらのコンポーネントがコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54045-121">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="54045-122">デザイナーによって管理されているコンポーネントを選択すると、このコレクションに任意の入れ子になったコントロールが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54045-122">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="54045-123">このコレクションには、ツールバーのボタンなどの他のコンポーネントを含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="54045-123">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeHandles">
      <MemberSignature Language="C#" Value="public bool AutoResizeHandles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoResizeHandles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoResizeHandles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoResizeHandles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoResizeHandles : bool with get, set" Usage="System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-124">サイズを変更するかどうかを示す値を取得または設定の値には依存ハンドルを割り当てる、<see cref="P:System.Windows.Forms.Control.AutoSize" />プロパティ。</span><span class="sxs-lookup"><span data-stu-id="54045-124">Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property.</span></span></summary>
        <value><span data-ttu-id="54045-125"><see langword="true" /> 場合のサイズ変更ハンドルの割り当ての値に依存、<see cref="P:System.Windows.Forms.Control.AutoSize" />と<see langword="AutoSizeMode" />プロパティ、それ以外の<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-125"><see langword="true" /> if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and <see langword="AutoSizeMode" /> properties; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54045-126">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="54045-126">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseWndProc">
      <MemberSignature Language="C#" Value="protected void BaseWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.BaseWndProc :  -&gt; unit" Usage="controlDesigner.BaseWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="54045-127">処理対象の <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="54045-127">The <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="54045-128">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="54045-128">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-129">このメソッドは、Windows、によって処理されるメッセージによって、コントロールをスキップしています。</span><span class="sxs-lookup"><span data-stu-id="54045-129">This method causes the message to be processed by Windows, skipping the control.</span></span> <span data-ttu-id="54045-130">これは、コントロールの取得からメッセージをブロックするが、他のメッセージを生成する可能性があるので、Windows 自体を取得する禁止たくはない場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="54045-130">This is useful if you want to block the message from getting to the control, but you do not want to block it from getting to Windows itself because it can cause other messages to be generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BehaviorService As BehaviorService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Design::Behavior::BehaviorService ^ BehaviorService { System::Windows::Forms::Design::Behavior::BehaviorService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BehaviorService : System.Windows.Forms.Design.Behavior.BehaviorService" Usage="System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-131">取得、<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />デザイン環境から。</span><span class="sxs-lookup"><span data-stu-id="54045-131">Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</span></span></summary>
        <value><span data-ttu-id="54045-132"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />、または<see langword="null" />サービスが利用できない場合。</span><span class="sxs-lookup"><span data-stu-id="54045-132">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or <see langword="null" /> if the service is unavailable.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.ComponentModel.Design.IDesigner parentDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.ComponentModel.Design.IDesigner parentDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentDesigner As IDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::ComponentModel::Design::IDesigner ^ parentDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CanBeParentedTo : System.ComponentModel.Design.IDesigner -&gt; bool&#xA;override this.CanBeParentedTo : System.ComponentModel.Design.IDesigner -&gt; bool" Usage="controlDesigner.CanBeParentedTo parentDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentDesigner" Type="System.ComponentModel.Design.IDesigner" />
      </Parameters>
      <Docs>
        <param name="parentDesigner"><span data-ttu-id="54045-133"><see cref="T:System.ComponentModel.Design.IDesigner" />チェックするコントロールを管理します。</span><span class="sxs-lookup"><span data-stu-id="54045-133">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check.</span></span></param>
        <summary><span data-ttu-id="54045-134">指定したデザイナーのコントロールをこのデザイナーのコントロールになれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="54045-134">Indicates if this designer's control can be parented by the control of the specified designer.</span></span></summary>
        <returns><span data-ttu-id="54045-135"><see langword="true" /> コントロールは、指定したデザイナーによって管理されている場合は、このデザイナーによって管理されるコントロールを親できます。それ以外の場合、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-135"><see langword="true" /> if the control managed by the specified designer can parent the control managed by this designer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-136">このメソッドは、親の特定の種類によって、コントロールになれるかどうかをテストするために便利です。</span><span class="sxs-lookup"><span data-stu-id="54045-136">This method is useful for testing whether a control can be parented by a particular type of parent.</span></span> <span data-ttu-id="54045-137">たとえば、<xref:System.Windows.Forms.TabPage>によってのみコントロールになれる<xref:System.Windows.Forms.TabControl>コントロール。</span><span class="sxs-lookup"><span data-stu-id="54045-137">For example, <xref:System.Windows.Forms.TabPage> controls can only be parented by <xref:System.Windows.Forms.TabControl> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54045-138">項目がドラッグされるときに、このメソッドは呼び出されませんが、**ツールボックス**デザイン サーフェイスにします。</span><span class="sxs-lookup"><span data-stu-id="54045-138">This method is not called when an item is dragged from the **Toolbox** onto the design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-139">デザイナーがデザインするコントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="54045-139">Gets the control that the designer is designing.</span></span></summary>
        <value><span data-ttu-id="54045-140">デザイナーがデザインするコントロール。</span><span class="sxs-lookup"><span data-stu-id="54045-140">The control that the designer is designing.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.DefWndProc :  -&gt; unit" Usage="controlDesigner.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="54045-141">処理対象の <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="54045-141">The <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="54045-142">既定の Windows メッセージの処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="54045-142">Provides default processing for Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-143">このメソッドは、デザイナーではなく、コントロールによって処理されるメッセージです。</span><span class="sxs-lookup"><span data-stu-id="54045-143">This method causes the message to be processed by the control, rather than by the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayError">
      <MemberSignature Language="C#" Value="protected void DisplayError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisplayError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisplayError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisplayError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.DisplayError : Exception -&gt; unit" Usage="controlDesigner.DisplayError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54045-144">表示する <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="54045-144">The <see cref="T:System.Exception" /> to display.</span></span></param>
        <summary><span data-ttu-id="54045-145">ユーザーに指定された例外に関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="54045-145">Displays information about the specified exception to the user.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="controlDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="54045-146">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54045-146"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="54045-147"><see cref="T:System.Windows.Forms.Design.ControlDesigner" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="54045-147">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-148">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="54045-148">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="54045-149">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="54045-149">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="54045-150"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="54045-150"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="54045-151">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Windows.Forms.Design.ControlDesigner> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="54045-151">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Design.ControlDesigner> references.</span></span> <span data-ttu-id="54045-152">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="54045-152">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="54045-153">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="54045-153">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="54045-154">オーバーライドするときに<see langword="Dispose(Boolean)" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-154">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="54045-155">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="54045-155">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="54045-156">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="54045-156">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="EnableDesignMode">
      <MemberSignature Language="C#" Value="protected bool EnableDesignMode (System.Windows.Forms.Control child, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool EnableDesignMode(class System.Windows.Forms.Control child, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EnableDesignMode (child As Control, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool EnableDesignMode(System::Windows::Forms::Control ^ child, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.EnableDesignMode : System.Windows.Forms.Control * string -&gt; bool" Usage="controlDesigner.EnableDesignMode (child, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="54045-157">デザイン モードを有効にする子コントロールします。</span><span class="sxs-lookup"><span data-stu-id="54045-157">The child control for which design mode will be enabled.</span></span></param>
        <param name="name"><span data-ttu-id="54045-158">名前<paramref name="child" />エンドユーザーに公開されているとします。</span><span class="sxs-lookup"><span data-stu-id="54045-158">The name of <paramref name="child" /> as exposed to the end user.</span></span></param>
        <summary><span data-ttu-id="54045-159">有効では、子コントロールの時の機能を設計します。</span><span class="sxs-lookup"><span data-stu-id="54045-159">Enables design time functionality for a child control.</span></span></summary>
        <returns><span data-ttu-id="54045-160"><see langword="true" /> デザイン時の子コントロールを有効にすることが場合<see langword="false" />ホスティング インフラストラクチャがサポートしていない場合。</span><span class="sxs-lookup"><span data-stu-id="54045-160"><see langword="true" /> if the child control could be enabled for design time; <see langword="false" /> if the hosting infrastructure does not support it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-161">指定された子コントロール`child`このコントロール デザイナーのコントロールの子です。</span><span class="sxs-lookup"><span data-stu-id="54045-161">The child control specified by `child` is a child of this control designer's control.</span></span> <span data-ttu-id="54045-162">子が、永続化に直接参加していないが、メインのコントロールのプロパティとして公開される場合は。</span><span class="sxs-lookup"><span data-stu-id="54045-162">The child does not directly participate in persistence, but it will if it is exposed as a property of the main control.</span></span> <span data-ttu-id="54045-163">などのコントロールについて考えてみます、 <xref:System.Windows.Forms.SplitContainer>: 2 つのパネルが`Panel1`と`Panel2`します。</span><span class="sxs-lookup"><span data-stu-id="54045-163">Consider a control like the <xref:System.Windows.Forms.SplitContainer>: it has two panels, `Panel1` and `Panel2`.</span></span> <span data-ttu-id="54045-164">これらのパネルが読み取り専用を通じて公開される<xref:System.Windows.Forms.SplitContainer.Panel1%2A>と<xref:System.Windows.Forms.SplitContainer.Panel2%2A>プロパティを<xref:System.Windows.Forms.SplitContainer>コントロール。</span><span class="sxs-lookup"><span data-stu-id="54045-164">These panels are exposed through read only <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> properties on the <xref:System.Windows.Forms.SplitContainer> control.</span></span> <span data-ttu-id="54045-165"><xref:System.Windows.Forms.SplitContainer>コントロールのデザイナー呼び出し<xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A>、各パネルの他のコンポーネントを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54045-165">The <xref:System.Windows.Forms.SplitContainer> control's designer calls <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> for each panel, which allows other components to be dropped on them.</span></span> <span data-ttu-id="54045-166">内容の順序で<xref:System.Windows.Forms.SplitContainer.Panel1%2A>と<xref:System.Windows.Forms.SplitContainer.Panel2%2A>を保存する、<xref:System.Windows.Forms.SplitContainer>コントロール自体にパブリック プロパティとしてパネルを公開する必要があります。</span><span class="sxs-lookup"><span data-stu-id="54045-166">But, in order for the contents of <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> to be saved, the <xref:System.Windows.Forms.SplitContainer> control itself must expose the panels as public properties.</span></span>  
  
 <span data-ttu-id="54045-167">コントロール名は、コントロール デザイナー内で一意である必要がありますが、他のコントロール デザイナーの子の間で一意である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="54045-167">Control names must be unique within a control designer, but they are not required to be unique with respect to the children of other control designers.</span></span>  
  
 <span data-ttu-id="54045-168">この機能をサポートするホスティング インフラストラクチャが公開する必要があります、<xref:System.ComponentModel.INestedContainer>サイトを使用してサービスとしてのクラス。</span><span class="sxs-lookup"><span data-stu-id="54045-168">To support this feature, the hosting infrastructure must expose the <xref:System.ComponentModel.INestedContainer> class as a service through the site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54045-169"><paramref name="child" /> または <paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="54045-169"><paramref name="child" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableDragDrop">
      <MemberSignature Language="C#" Value="protected void EnableDragDrop (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnableDragDrop(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnableDragDrop (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnableDragDrop(bool value);" />
      <MemberSignature Language="F#" Value="member this.EnableDragDrop : bool -&gt; unit" Usage="controlDesigner.EnableDragDrop value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="54045-170"><see langword="true" /> コントロールのドラッグ アンド ドロップのサポートを有効にするには<see langword="false" />場合は、コントロールには、ドラッグ アンド ドロップのサポートはありません。</span><span class="sxs-lookup"><span data-stu-id="54045-170"><see langword="true" /> to enable drag-and-drop support for the control; <see langword="false" /> if the control should not have drag-and-drop support.</span></span> <span data-ttu-id="54045-171">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="54045-171">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="54045-172">有効または、デザインしているコントロールのドラッグ アンド ドロップのサポートを無効にします。</span><span class="sxs-lookup"><span data-stu-id="54045-172">Enables or disables drag-and-drop support for the control being designed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-173">既定値`false`コントロールがデザイン時にドラッグする子を持つことはできませんを指定します。</span><span class="sxs-lookup"><span data-stu-id="54045-173">The default value of `false` specifies that a control cannot have children dragged onto it at design time.</span></span> <span data-ttu-id="54045-174">派生したデザイナーに関連付けるためにデザイン時に他のコントロールの親を<xref:System.Windows.Forms.Design.ParentControlDesigner>します。</span><span class="sxs-lookup"><span data-stu-id="54045-174">To allow a control to parent other controls at design time, associate it with a designer that derives from <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDragRect">
      <MemberSignature Language="C#" Value="protected virtual bool EnableDragRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDragRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnableDragRect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool EnableDragRect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableDragRect : bool" Usage="System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-175">ドラッグするかどうかを示す値を取得します。 このデザイナー コンポーネントに四角形を描画することができます。</span><span class="sxs-lookup"><span data-stu-id="54045-175">Gets a value indicating whether drag rectangles can be drawn on this designer component.</span></span></summary>
        <value><span data-ttu-id="54045-176"><see langword="true" /> 場合ドラッグ四角形を描画することができます。それ以外の場合、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-176"><see langword="true" /> if drag rectangles can be drawn; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlGlyph">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControlGlyph (selectionType As GlyphSelectionType) As ControlBodyGlyph" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Design::Behavior::ControlBodyGlyph ^ GetControlGlyph(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph&#xA;override this.GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph" Usage="controlDesigner.GetControlGlyph selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.ControlBodyGlyph</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="selectionType"><span data-ttu-id="54045-177">A<see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />選択状態を指定する値。</span><span class="sxs-lookup"><span data-stu-id="54045-177">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span></span></param>
        <summary><span data-ttu-id="54045-178">返します、<see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />このコントロールの境界を表します。</span><span class="sxs-lookup"><span data-stu-id="54045-178">Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span></span></summary>
        <returns><span data-ttu-id="54045-179">A<see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />このコントロールの境界を表します。</span><span class="sxs-lookup"><span data-stu-id="54045-179">A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlyphs (selectionType As GlyphSelectionType) As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::Behavior::GlyphCollection ^ GetGlyphs(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection&#xA;override this.GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection" Usage="controlDesigner.GetGlyphs selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="selectionType"><span data-ttu-id="54045-180">A<see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />選択状態を指定する値。</span><span class="sxs-lookup"><span data-stu-id="54045-180">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span></span></param>
        <summary><span data-ttu-id="54045-181">コレクションを取得<see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />選択境界線と標準コントロールのグラブ ハンドルを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="54045-181">Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</span></span></summary>
        <returns><span data-ttu-id="54045-182"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> オブジェクトのコレクション。</span><span class="sxs-lookup"><span data-stu-id="54045-182">A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-183">基づく注`selectionType`、<xref:System.Windows.Forms.Design.Behavior.Glyph>返されるオブジェクトを表すこれらの選択状態のいずれか。</span><span class="sxs-lookup"><span data-stu-id="54045-183">Note that based on `selectionType`, the <xref:System.Windows.Forms.Design.Behavior.Glyph> objects returned will represent one of these selection states:</span></span>  
  
-   <span data-ttu-id="54045-184">グラブ ハンドルを完全にサイズ変更可能な選択範囲の境界線</span><span class="sxs-lookup"><span data-stu-id="54045-184">A fully resizable selection border with grab handles;</span></span>  
  
-   <span data-ttu-id="54045-185">ロックされた選択範囲の境界線。</span><span class="sxs-lookup"><span data-stu-id="54045-185">A locked selection border;</span></span>  
  
-   <span data-ttu-id="54045-186">単一の 'hidden' 選択<xref:System.Windows.Forms.Design.Behavior.Glyph>します。</span><span class="sxs-lookup"><span data-stu-id="54045-186">A single 'hidden' selection <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitTest">
      <MemberSignature Language="C#" Value="protected virtual bool GetHitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetHitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetHitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="abstract member GetHitTest : System.Drawing.Point -&gt; bool&#xA;override this.GetHitTest : System.Drawing.Point -&gt; bool" Usage="controlDesigner.GetHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="54045-187">A<see cref="T:System.Drawing.Point" />位置、マウス クリックしてされた位置を画面座標を示します。</span><span class="sxs-lookup"><span data-stu-id="54045-187">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="54045-188">コントロールによって、指定したポイントでのマウス クリックを処理する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="54045-188">Indicates whether a mouse click at the specified point should be handled by the control.</span></span></summary>
        <returns><span data-ttu-id="54045-189"><see langword="true" /> 指定したポイントでのクリックがコントロールによって処理される場合それ以外の場合、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-189"><see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-190"><xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A>メソッドは、指定したポイントでのクリックをコントロールがデザイン モードのときに、コントロールに渡す必要があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="54045-190">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method determines whether a click at the specified point should be passed to the control, while the control is in design mode.</span></span> <span data-ttu-id="54045-191">オーバーライドして、デザイン時環境で数回のクリックを受信するコントロールを有効にするには、このメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="54045-191">You can override and implement this method to enable your control to receive clicks in the design-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54045-192">画面座標の点を渡すことができます、<xref:System.Windows.Forms.Control.PointToClient%2A>のメソッド、<xref:System.Windows.Forms.Control>コントロールの左上隅に対する相対ポイントの座標を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="54045-192">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 <span data-ttu-id="54045-193"><xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A>各マウスの移動で呼び出されるように、WM_NCHITTEST メッセージへの応答でメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="54045-193">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method is called in response to the WM_NCHITTEST message, so it is called on each mouse move.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookChildControls">
      <MemberSignature Language="C#" Value="protected void HookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberSignature Language="F#" Value="member this.HookChildControls : System.Windows.Forms.Control -&gt; unit" Usage="controlDesigner.HookChildControls firstChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild"><span data-ttu-id="54045-194">最初の子<see cref="T:System.Windows.Forms.Control" />プロセスにします。</span><span class="sxs-lookup"><span data-stu-id="54045-194">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span></span> <span data-ttu-id="54045-195">このメソッドが再帰的に呼び出す自体の子コントロールの。</span><span class="sxs-lookup"><span data-stu-id="54045-195">This method may recursively call itself for children of the control.</span></span></param>
        <summary><span data-ttu-id="54045-196">指定したコントロールの子コントロールから、デザイナーへのメッセージをルーティングします。</span><span class="sxs-lookup"><span data-stu-id="54045-196">Routes messages from the child controls of the specified control to the designer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceAttribute : System.ComponentModel.InheritanceAttribute" Usage="System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-197">取得、<see cref="T:System.ComponentModel.InheritanceAttribute" />のデザイナー。</span><span class="sxs-lookup"><span data-stu-id="54045-197">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</span></span></summary>
        <value><span data-ttu-id="54045-198"><see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> デザイナーがルート デザイナーの場合それ以外の場合、親デザイナーの値<see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />プロパティ。</span><span class="sxs-lookup"><span data-stu-id="54045-198"><see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="controlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="54045-199"><see cref="T:System.ComponentModel.IComponent" />を使用して、デザイナーを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="54045-199">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with.</span></span> <span data-ttu-id="54045-200">このコンポーネントのインスタンスである常に、またはから派生する必要があります<see cref="T:System.Windows.Forms.Control" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-200">This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="54045-201">指定したコンポーネントを使用してデザイナーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="54045-201">Initializes the designer with the specified component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-202">このメソッドは、デザイナーを初期化するためにデザイナー ホストによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="54045-202">This method is called by the designer host to initialize the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public override void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeExistingComponent : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.InitializeExistingComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="54045-203">プロパティに適用する既定値の名前/値のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="54045-203">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="54045-204">既定値が指定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54045-204">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="54045-205">既存のコンポーネントを再初期化します。</span><span class="sxs-lookup"><span data-stu-id="54045-205">Re-initializes an existing component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-206"><xref:System.Windows.Forms.Design.ControlDesigner>クラス ドロップ後のケースを処理するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="54045-206">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method to handle after-drop cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public override void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="54045-207">プロパティに適用する既定値の名前/値のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="54045-207">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="54045-208">既定値が指定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54045-208">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="54045-209">新たに作成されたコンポーネントを初期化します。</span><span class="sxs-lookup"><span data-stu-id="54045-209">Initializes a newly created component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-210"><xref:System.Windows.Forms.Design.ControlDesigner>クラスは、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="54045-210">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method.</span></span> <span data-ttu-id="54045-211">コントロールの既定のプロパティを見て、型の場合と、 `string`、このプロパティの値、コンポーネントの名前に設定されます。</span><span class="sxs-lookup"><span data-stu-id="54045-211">It will look at the default property for the control and, if it is of type `string`, it will set this property's value to the name of the component.</span></span> <span data-ttu-id="54045-212">これは、オプションのサービスでは、このオプションでは、デザイナーが構成されている場合。</span><span class="sxs-lookup"><span data-stu-id="54045-212">It only does this if the designer has been configured with this option in the options service.</span></span> <span data-ttu-id="54045-213">また、このメソッドは、親コントロールを接続し、配置。</span><span class="sxs-lookup"><span data-stu-id="54045-213">This method also connects the control to its parent and positions it.</span></span> <span data-ttu-id="54045-214">このメソッドをオーバーライドする場合、基本常に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="54045-214">If you override this method, you should always call base.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public override void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNonDefault();" />
      <MemberSignature Language="F#" Value="override this.InitializeNonDefault : unit -&gt; unit" Usage="controlDesigner.InitializeNonDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-215">既定以外の任意の値をコントロールのプロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="54045-215">Initializes properties of the control to any non-default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalControlDesigner">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.ControlDesigner InternalControlDesigner (int internalControlIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.ControlDesigner InternalControlDesigner(int32 internalControlIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InternalControlDesigner (internalControlIndex As Integer) As ControlDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::ControlDesigner ^ InternalControlDesigner(int internalControlIndex);" />
      <MemberSignature Language="F#" Value="abstract member InternalControlDesigner : int -&gt; System.Windows.Forms.Design.ControlDesigner&#xA;override this.InternalControlDesigner : int -&gt; System.Windows.Forms.Design.ControlDesigner" Usage="controlDesigner.InternalControlDesigner internalControlIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.ControlDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalControlIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="internalControlIndex"><span data-ttu-id="54045-216">内部コントロール デザイナーを選択する指定されたインデックス。</span><span class="sxs-lookup"><span data-stu-id="54045-216">A specified index to select the internal control designer.</span></span> <span data-ttu-id="54045-217">このインデックスは 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="54045-217">This index is zero-based.</span></span></param>
        <summary><span data-ttu-id="54045-218">内部コントロール デザイナーで指定されたインデックスを返します、<see cref="T:System.Windows.Forms.Design.ControlDesigner" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-218">Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></summary>
        <returns><span data-ttu-id="54045-219">A<see cref="T:System.Windows.Forms.Design.ControlDesigner" />指定したインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="54045-219">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-220">内部のコントロールにないコントロール、<xref:System.ComponentModel.IContainer.Components%2A>のコレクション、<xref:System.ComponentModel.Design.IDesignerHost.Container%2A>します。</span><span class="sxs-lookup"><span data-stu-id="54045-220">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="54045-221"><xref:System.Windows.Forms.SplitterPanel> このような 1 つのコントロールの例に示します。</span><span class="sxs-lookup"><span data-stu-id="54045-221"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoint">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Point InvalidPoint;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Point InvalidPoint" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidPoint As Point " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Point InvalidPoint;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidPoint : System.Drawing.Point" Usage="System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-222">ローカル定義<see cref="T:System.Drawing.Point" />の無効な値を表す<see cref="T:System.Drawing.Point" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-222">Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-223"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> <xref:System.Drawing.Point.X%2A>と<xref:System.Drawing.Point.Y%2A>プロパティが、整数データ型の最小値に設定します。</span><span class="sxs-lookup"><span data-stu-id="54045-223"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> has an <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> property set to the minimum value for the integer data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfInternalControlDesigners">
      <MemberSignature Language="C#" Value="public virtual int NumberOfInternalControlDesigners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NumberOfInternalControlDesigners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NumberOfInternalControlDesigners () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int NumberOfInternalControlDesigners();" />
      <MemberSignature Language="F#" Value="abstract member NumberOfInternalControlDesigners : unit -&gt; int&#xA;override this.NumberOfInternalControlDesigners : unit -&gt; int" Usage="controlDesigner.NumberOfInternalControlDesigners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-224">内の内部コントロール デザイナーの数を返します、<see cref="T:System.Windows.Forms.Design.ControlDesigner" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-224">Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></summary>
        <returns><span data-ttu-id="54045-225">内の内部コントロール デザイナーの数、<see cref="T:System.Windows.Forms.Design.ControlDesigner" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-225">The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-226">内部のコントロールにないコントロール、<xref:System.ComponentModel.IContainer.Components%2A>のコレクション、<xref:System.ComponentModel.Design.IDesignerHost.Container%2A>します。</span><span class="sxs-lookup"><span data-stu-id="54045-226">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="54045-227"><xref:System.Windows.Forms.SplitterPanel> このような 1 つのコントロールの例に示します。</span><span class="sxs-lookup"><span data-stu-id="54045-227"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenu (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenu(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenu (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenu(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenu : int * int -&gt; unit&#xA;override this.OnContextMenu : int * int -&gt; unit" Usage="controlDesigner.OnContextMenu (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="54045-228">コンテキスト メニューを表示する位置の x 座標。</span><span class="sxs-lookup"><span data-stu-id="54045-228">The x coordinate at which to display the context menu.</span></span></param>
        <param name="y"><span data-ttu-id="54045-229">コンテキスト メニューを表示する位置の y 座標。</span><span class="sxs-lookup"><span data-stu-id="54045-229">The y coordinate at which to display the context menu.</span></span></param>
        <summary><span data-ttu-id="54045-230">コンテキスト メニューを表示し、コンテキスト メニューが表示されるときに、追加の処理を実行する機会を提供します。</span><span class="sxs-lookup"><span data-stu-id="54045-230">Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateHandle : unit -&gt; unit&#xA;override this.OnCreateHandle : unit -&gt; unit" Usage="controlDesigner.OnCreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-231">コントロール ハンドルが作成された直後後に、追加の処理を実行する機会を提供します。</span><span class="sxs-lookup"><span data-stu-id="54045-231">Provides an opportunity to perform additional processing immediately after the control handle has been created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDragComplete (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragComplete(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragComplete (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragComplete(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragComplete de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="54045-232">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="54045-232">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="54045-233">ドラッグ アンド ドロップ操作をクリーンアップする呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-233">Receives a call to clean up a drag-and-drop operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragDrop de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="54045-234">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="54045-234">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="54045-235">コントロールのデザイナー ビューにドラッグ アンド ドロップ オブジェクトが削除されるときに、呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-235">Receives a call when a drag-and-drop object is dropped onto the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragEnter de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="54045-236">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="54045-236">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="54045-237">ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューに入ったときに、呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-237">Receives a call when a drag-and-drop operation enters the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="controlDesigner.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54045-238"><see cref="T:System.EventArgs" />イベントに対してデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="54045-238">An <see cref="T:System.EventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="54045-239">ドラッグ アンド ドロップ操作がコントロールのデザイナー ビューを離れると呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-239">Receives a call when a drag-and-drop operation leaves the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="controlDesigner.OnDragOver de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="54045-240">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="54045-240">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="54045-241">コントロールのデザイナー ビュー上にドラッグ アンド ドロップ オブジェクトがドラッグされるときに、呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-241">Receives a call when a drag-and-drop object is dragged over the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="controlDesigner.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54045-242">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="54045-242">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="54045-243">ドラッグ アンド ドロップ操作がドラッグ操作が進行中は、マウスの位置に基づいてビジュアル キューを提供する進行状況の場合は、呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-243">Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-244">デザイナーのホストは、OLE ドラッグ イベントの発生時に、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="54045-244">The designer host calls this method when an OLE drag event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragBegin : int * int -&gt; unit&#xA;override this.OnMouseDragBegin : int * int -&gt; unit" Usage="controlDesigner.OnMouseDragBegin (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="54045-245">画面座標で、マウスの x 位置。</span><span class="sxs-lookup"><span data-stu-id="54045-245">The x position of the mouse in screen coordinates.</span></span></param>
        <param name="y"><span data-ttu-id="54045-246">画面座標で、マウスの y 位置。</span><span class="sxs-lookup"><span data-stu-id="54045-246">The y position of the mouse in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="54045-247">押したままコンポーネント上でマウスの左ボタンをしばらくへの応答で呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-247">Receives a call in response to the left mouse button being pressed and held while over the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-248">このメソッドは、ドラッグ アンド ドロップ操作の開始時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="54045-248">This method is called at the start of a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54045-249">画面座標の点を渡すことができます、<xref:System.Windows.Forms.Control.PointToClient%2A>のメソッド、<xref:System.Windows.Forms.Control>コントロールの左上隅に対する相対ポイントの座標を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="54045-249">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragEnd : bool -&gt; unit&#xA;override this.OnMouseDragEnd : bool -&gt; unit" Usage="controlDesigner.OnMouseDragEnd cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><span data-ttu-id="54045-250"><see langword="true" /> ドラッグをキャンセルするには<see langword="false" />をコミットします。</span><span class="sxs-lookup"><span data-stu-id="54045-250"><see langword="true" /> to cancel the drag; <see langword="false" /> to commit it.</span></span></param>
        <summary><span data-ttu-id="54045-251">操作を完了またはキャンセルのドラッグ アンド ドロップ操作の終了時に呼び出しを受信します。</span><span class="sxs-lookup"><span data-stu-id="54045-251">Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragMove : int * int -&gt; unit&#xA;override this.OnMouseDragMove : int * int -&gt; unit" Usage="controlDesigner.OnMouseDragMove (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="54045-252">画面座標で、マウスの x 位置。</span><span class="sxs-lookup"><span data-stu-id="54045-252">The x position of the mouse in screen coordinates.</span></span></param>
        <param name="y"><span data-ttu-id="54045-253">画面座標で、マウスの y 位置。</span><span class="sxs-lookup"><span data-stu-id="54045-253">The y position of the mouse in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="54045-254">ドラッグ アンド ドロップ操作中にマウスを移動するたびに呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-254">Receives a call for each movement of the mouse during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="54045-255">画面座標の点を渡すことができます、<xref:System.Windows.Forms.Control.PointToClient%2A>のメソッド、<xref:System.Windows.Forms.Control>コントロールの左上隅に対する相対ポイントの座標を取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="54045-255">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : unit -&gt; unit&#xA;override this.OnMouseEnter : unit -&gt; unit" Usage="controlDesigner.OnMouseEnter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-256">マウスがコントロールを最初に入ると呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-256">Receives a call when the mouse first enters the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : unit -&gt; unit&#xA;override this.OnMouseHover : unit -&gt; unit" Usage="controlDesigner.OnMouseHover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-257">マウスがコントロール上には、呼び出しを受信します。</span><span class="sxs-lookup"><span data-stu-id="54045-257">Receives a call after the mouse hovers over the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : unit -&gt; unit&#xA;override this.OnMouseLeave : unit -&gt; unit" Usage="controlDesigner.OnMouseLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-258">マウスがコントロールを最初に入ると呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-258">Receives a call when the mouse first enters the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintAdornments">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintAdornments (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintAdornments(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintAdornments (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintAdornments(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="controlDesigner.OnPaintAdornments pe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe"><span data-ttu-id="54045-259">A<see cref="T:System.Windows.Forms.PaintEventArgs" />デザイナーでコントロールを描画するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="54045-259">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control.</span></span></param>
        <summary><span data-ttu-id="54045-260">デザイナーがコントロールの上部に追加の表示要素を描画できるように、デザイナーが管理しているコントロールが表面を描画したときに、呼び出しを受け取ります。</span><span class="sxs-lookup"><span data-stu-id="54045-260">Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public override void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnSetComponentDefaults();" />
      <MemberSignature Language="F#" Value="override this.OnSetComponentDefaults : unit -&gt; unit" Usage="controlDesigner.OnSetComponentDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-261">デザイナーが初期化されるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="54045-261">Called when the designer is initialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnSetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetCursor();" />
      <MemberSignature Language="F#" Value="abstract member OnSetCursor : unit -&gt; unit&#xA;override this.OnSetCursor : unit -&gt; unit" Usage="controlDesigner.OnSetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54045-262">カーソルを設定する必要があるたびに呼び出しを受信します。</span><span class="sxs-lookup"><span data-stu-id="54045-262">Receives a call each time the cursor needs to be set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-263">このメソッドは、リダイレクトとカーソルの設定のイベントの処理を処理します。</span><span class="sxs-lookup"><span data-stu-id="54045-263">This method handles redirection and handling of the set cursor event.</span></span> <span data-ttu-id="54045-264">ツールボックス サービスは、選択したツールがある、このメソッドは、カーソルを設定するツールボックス サービスを許可します。</span><span class="sxs-lookup"><span data-stu-id="54045-264">If the toolbox service has a tool selected, this method will allow the toolbox service to set the cursor.</span></span> <span data-ttu-id="54045-265">選択 UI サービス ロックの選択されている場合、またはコントロールの場所のプロパティがない場合は、既定の矢印カーソルが設定されます。</span><span class="sxs-lookup"><span data-stu-id="54045-265">If the selection UI service has a locked selection, or if there is no location property on the control, the default arrow cursor will be set.</span></span> <span data-ttu-id="54045-266">ユーザーがコンポーネントをドラッグして、十字カーソルが設定されます。</span><span class="sxs-lookup"><span data-stu-id="54045-266">If a user is dragging a component, the crosshair cursor will be set.</span></span> <span data-ttu-id="54045-267">それ以外の場合、4 方向の矢印カーソルは、コンポーネントのクリックし、移動したことを示すために設定されます。</span><span class="sxs-lookup"><span data-stu-id="54045-267">Otherwise, a four headed arrow cursor will be set to indicate that the component can be clicked and moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentComponent : System.ComponentModel.IComponent" Usage="System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-268">親コンポーネントを取得、<see cref="T:System.Windows.Forms.Design.ControlDesigner" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-268">Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></summary>
        <value><span data-ttu-id="54045-269">親コンポーネント、 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />、それ以外の<see langword="null" />親コンポーネントがない場合。</span><span class="sxs-lookup"><span data-stu-id="54045-269">The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, <see langword="null" /> if there is no parent component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-270">既定の実装は単純に場合は、設計対象のコンポーネントがコントロールの場合とを確認します<xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A>親を返します。</span><span class="sxs-lookup"><span data-stu-id="54045-270">The default implementation simply checks to see if the component being designed is a control and if it is, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> returns its parent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipatesWithSnapLines">
      <MemberSignature Language="C#" Value="public virtual bool ParticipatesWithSnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParticipatesWithSnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParticipatesWithSnapLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ParticipatesWithSnapLines { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipatesWithSnapLines : bool" Usage="System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-271">示す値を取得するかどうか、<see cref="T:System.Windows.Forms.Design.ControlDesigner" />ドラッグ操作中にスナップ線を配置できるようになります。</span><span class="sxs-lookup"><span data-stu-id="54045-271">Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</span></span></summary>
        <value><span data-ttu-id="54045-272"><see langword="true" /> 場合、<see cref="T:System.Windows.Forms.Design.ControlDesigner" />デザイナー。 それ以外には、このプライマリ ドラッグ コントロールが、ときに、ドラッグ操作中にスナップ線を配置が許可<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-272"><see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="54045-273">既定の実装では、常に <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="54045-273">The default implementation always returns <see langword="true" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="controlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="54045-274"><see cref="T:System.Collections.IDictionary" />クラス、コンポーネントのプロパティを格納します。</span><span class="sxs-lookup"><span data-stu-id="54045-274">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</span></span></param>
        <summary><span data-ttu-id="54045-275">コンポーネントを通じて公開するプロパティのセットを調整する<see cref="T:System.ComponentModel.TypeDescriptor" />します。</span><span class="sxs-lookup"><span data-stu-id="54045-275">Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-276">これは、<xref:System.ComponentModel.Design.IDesignerFilter>インターフェイス メソッドのオーバーライドは、デザイン時にこのデザイナーのコンポーネントに一連のプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="54045-276">This <xref:System.ComponentModel.Design.IDesignerFilter> interface method override adds a set of properties to this designer's component at design time.</span></span> <span data-ttu-id="54045-277">このメソッドは、次の参照可能なプロパティを追加します: `Visible`、 `Enabled`、 `ContextMenu`、 `AllowDrop`、 `Location`、 `Name`、 `Controls`、および`Locked`します。</span><span class="sxs-lookup"><span data-stu-id="54045-277">This method adds the following browsable properties: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, and `Locked`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRules">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.SelectionRules SelectionRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.SelectionRules SelectionRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectionRules As SelectionRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Design::SelectionRules SelectionRules { System::Windows::Forms::Design::SelectionRules get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionRules : System.Windows.Forms.Design.SelectionRules" Usage="System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.SelectionRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-278">コンポーネントの移動機能を示す選択規則を取得します。</span><span class="sxs-lookup"><span data-stu-id="54045-278">Gets the selection rules that indicate the movement capabilities of a component.</span></span></summary>
        <value><span data-ttu-id="54045-279"><see cref="T:System.Windows.Forms.Design.SelectionRules" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="54045-279">A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-280">デザイナーは、コンポーネントのルールを提供しない、コンポーネントは UI サービスを取得できません。</span><span class="sxs-lookup"><span data-stu-id="54045-280">If no designer provides rules for a component, the component will not get any UI services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.SelectionRules" />
      </Docs>
    </Member>
    <Member MemberName="SnapLines">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList SnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SnapLines As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IList ^ SnapLines { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SnapLines : System.Collections.IList" Usage="System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54045-281">一覧を取得<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />このコントロールの有効な配置ポイントを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="54045-281">Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span></span></summary>
        <value><span data-ttu-id="54045-282">一連の<see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />このコントロールの有効な配置ポイントを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="54045-282">A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-283">提供された、使用することができます<xref:System.Windows.Forms.Design.Behavior.SnapLine>デザイン画面で、コントロールの配置を支援するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="54045-283">You can use the offered <xref:System.Windows.Forms.Design.Behavior.SnapLine> objects to assist in positioning the control on a design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhookChildControls">
      <MemberSignature Language="C#" Value="protected void UnhookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UnhookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UnhookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UnhookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberSignature Language="F#" Value="member this.UnhookChildControls : System.Windows.Forms.Control -&gt; unit" Usage="controlDesigner.UnhookChildControls firstChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild"><span data-ttu-id="54045-284">最初の子<see cref="T:System.Windows.Forms.Control" />プロセスにします。</span><span class="sxs-lookup"><span data-stu-id="54045-284">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span></span> <span data-ttu-id="54045-285">このメソッドが再帰的に呼び出す自体の子コントロールの。</span><span class="sxs-lookup"><span data-stu-id="54045-285">This method may recursively call itself for children of the control.</span></span></param>
        <summary><span data-ttu-id="54045-286">親デザイナーではなく、各コントロールに指定したコントロールの子のメッセージをルーティングします。</span><span class="sxs-lookup"><span data-stu-id="54045-286">Routes messages for the children of the specified control to each control rather than to a parent designer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="controlDesigner.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="54045-287">処理対象の <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="54045-287">The <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="54045-288">Windows メッセージを処理し、必要に応じてそれらをコントロールにルーティングします。</span><span class="sxs-lookup"><span data-stu-id="54045-288">Processes Windows messages and optionally routes them to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54045-289">このメソッドは、コントロールは通常、送信メッセージごとに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="54045-289">This method is called for each message the control would usually receive.</span></span> <span data-ttu-id="54045-290">これにより、必要に応じてそれらをコントロールにルーティングする前にメッセージを前処理するデザイナー。</span><span class="sxs-lookup"><span data-stu-id="54045-290">This allows the designer to preprocess messages before optionally routing them to the control.</span></span>  
  
 <span data-ttu-id="54045-291">コントロールのメッセージを送信する<xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType>メソッドを呼び出します<xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A>コントロールのデザイナー。</span><span class="sxs-lookup"><span data-stu-id="54045-291">To send the message to the control's <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> method, call <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> on the control's designer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54045-292">デザイナーは、いくつかのメッセージは、コントロールには送信されませんので、メッセージをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="54045-292">The designer filters messages, so some messages will not be sent to the control.</span></span> <span data-ttu-id="54045-293">たとえば、マウス メッセージが、デザイナーによって受け取られます。</span><span class="sxs-lookup"><span data-stu-id="54045-293">For example, mouse messages are intercepted by the designer.</span></span> <span data-ttu-id="54045-294">目的の動作を表示しない場合は、呼び出す<xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="54045-294">If this is not the behavior you want, call <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> instead.</span></span>  
  
 <span data-ttu-id="54045-295">渡す`m`をパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="54045-295">Pass `m` as a parameter.</span></span> <span data-ttu-id="54045-296">必要に応じて、変更または新規作成<xref:System.Windows.Forms.Message?displayProperty=nameWithType>コントロールのメソッドに渡す。</span><span class="sxs-lookup"><span data-stu-id="54045-296">Optionally, you can alter or create a new <xref:System.Windows.Forms.Message?displayProperty=nameWithType> to pass to the control's method.</span></span>  
  
 <span data-ttu-id="54045-297">次の表は、メッセージのフローを示しています。</span><span class="sxs-lookup"><span data-stu-id="54045-297">The following table shows the flow of messages.</span></span>  
  
|<span data-ttu-id="54045-298">デザイナーなし</span><span class="sxs-lookup"><span data-stu-id="54045-298">Without a designer</span></span>|<span data-ttu-id="54045-299">デザイナー</span><span class="sxs-lookup"><span data-stu-id="54045-299">With a designer</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="54045-300">USER32</span><span class="sxs-lookup"><span data-stu-id="54045-300">USER32</span></span><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="54045-301">USER32</span><span class="sxs-lookup"><span data-stu-id="54045-301">USER32</span></span>|<span data-ttu-id="54045-302">USER32</span><span class="sxs-lookup"><span data-stu-id="54045-302">USER32</span></span><br /><br /> <span data-ttu-id="54045-303">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span><span class="sxs-lookup"><span data-stu-id="54045-303">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span></span><br /><br /> <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="54045-304">USER32</span><span class="sxs-lookup"><span data-stu-id="54045-304">USER32</span></span>|  
  
 <span data-ttu-id="54045-305">デザイナーは、置き換えることで、メッセージを途中受信、<xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType>コントロールのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="54045-305">The designer intercepts messages by replacing the <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> property on the control.</span></span> <span data-ttu-id="54045-306">通常、<xref:System.Windows.Forms.Control.WindowTarget%2A>を指す、<xref:System.Windows.Forms.NativeWindow>コントロール内に含まれています。</span><span class="sxs-lookup"><span data-stu-id="54045-306">Usually, <xref:System.Windows.Forms.Control.WindowTarget%2A> points to the <xref:System.Windows.Forms.NativeWindow> contained within the control.</span></span> <span data-ttu-id="54045-307">、デザイン時に、デザイナーは、独自のウィンドウのターゲットではこれを置き換えてし、元の値をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="54045-307">During design time, the designer replaces this with its own window target, and caches the original value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>