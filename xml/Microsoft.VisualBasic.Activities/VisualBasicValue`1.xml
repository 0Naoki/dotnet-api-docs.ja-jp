<Type Name="VisualBasicValue&lt;TResult&gt;" FullName="Microsoft.VisualBasic.Activities.VisualBasicValue&lt;TResult&gt;">
  <TypeSignature Language="C#" Value="public sealed class VisualBasicValue&lt;TResult&gt; : System.Activities.CodeActivity&lt;TResult&gt;, System.Activities.Expressions.ITextExpression, System.Activities.XamlIntegration.IValueSerializableExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualBasicValue`1&lt;TResult&gt; extends System.Activities.CodeActivity`1&lt;!TResult&gt; implements class System.Activities.Expressions.ITextExpression, class System.Activities.XamlIntegration.IValueSerializableExpression" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualBasicValue(Of TResult)&#xA;Inherits CodeActivity(Of TResult)&#xA;Implements ITextExpression, IValueSerializableExpression" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class VisualBasicValue sealed : System::Activities::CodeActivity&lt;TResult&gt;, System::Activities::Expressions::ITextExpression, System::Activities::XamlIntegration::IValueSerializableExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.CodeActivity&lt;TResult&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">TResult</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Expressions.ITextExpression</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Activities.XamlIntegration.IValueSerializableExpression</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="80635-101">式の型。</span><span class="sxs-lookup"><span data-stu-id="80635-101">The type of the expression.</span></span></typeparam>
    <summary><span data-ttu-id="80635-102"><see cref="F:System.Activities.ArgumentDirection.In" /> 引数のバインドをサポートし、結果が r 値になる Visual Basic 構文の式が格納されます。</span><span class="sxs-lookup"><span data-stu-id="80635-102">Contains an expression in Visual Basic syntax that evaluates to an r-value, which supports binding of <see cref="F:System.Activities.ArgumentDirection.In" /> arguments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80635-103">このアクティビティでは、LINQ to エンティティ プロバイダーを使用して、LINQ 式を評価します。</span><span class="sxs-lookup"><span data-stu-id="80635-103">This activity uses the LINQ to Entity provider to evaluate LINQ expressions.</span></span> <span data-ttu-id="80635-104">このアクティビティと共に使用、LINQ 式は、ADO.Net Entity Data Model によって評価である必要があります。</span><span class="sxs-lookup"><span data-stu-id="80635-104">Any LINQ expressions used with this activity must be evaluatable by the ADO.Net Entity Data Model.</span></span> <span data-ttu-id="80635-105">たとえば、アクティビティ、変数、またはワークフロー自体の引数を参照する LINQ 式を使用できません。</span><span class="sxs-lookup"><span data-stu-id="80635-105">For example, LINQ expressions cannot be used to reference activities, variables, or arguments of the workflow itself.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80635-106"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="80635-106">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBasicValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBasicValue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80635-107"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="80635-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBasicValue (string expressionText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBasicValue(System::String ^ expressionText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionText"><span data-ttu-id="80635-108">Visual Basic 構文で記述された式文字列。</span><span class="sxs-lookup"><span data-stu-id="80635-108">The expression string in Visual Basic syntax.</span></span></param>
        <summary><span data-ttu-id="80635-109">指定した式を使用して、<see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="80635-109">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> class using the specified expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public bool CanConvertToString (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertToString (context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="80635-110">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="80635-110">The context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="80635-111"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> を <see cref="T:System.String" /> に変換できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="80635-111">Determines whether the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns>
          <span data-ttu-id="80635-112"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> を文字列に変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="80635-112"><see langword="true" /> if the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> can be converted into a string; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80635-113">このメソッドは常に `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="80635-113">This method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="80635-114">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="80635-114">The context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="80635-115"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> を <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="80635-115">Converts the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="80635-116"><see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="80635-116">A string representation of the <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80635-117">文字列形式は、かっこで囲まれた <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601.ExpressionText%2A> で構成されます。</span><span class="sxs-lookup"><span data-stu-id="80635-117">The string representation consists of the <xref:Microsoft.VisualBasic.Activities.VisualBasicValue%601.ExpressionText%2A> surrounded by brackets.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override TResult Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance !TResult Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (context As CodeActivityContext) As TResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override TResult Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionText">
      <MemberSignature Language="C#" Value="public string ExpressionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.ExpressionText" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80635-118">この <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" /> によって表される Visual Basic 式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="80635-118">Gets or set the Visual Basic expression represented by this <see cref="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" />.</span></span></summary>
        <value><span data-ttu-id="80635-119">Visual Basic の式。</span><span class="sxs-lookup"><span data-stu-id="80635-119">The Visual Basic expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionTree">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetExpressionTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetExpressionTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Activities.VisualBasicValue`1.GetExpressionTree" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpressionTree () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::Expressions::Expression ^ GetExpressionTree();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Expressions.ITextExpression.GetExpressionTree</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80635-120">この値の式ツリーを返します。</span><span class="sxs-lookup"><span data-stu-id="80635-120">Returns the expression tree for the value.</span></span></summary>
        <returns><span data-ttu-id="80635-121">値の式ツリー。</span><span class="sxs-lookup"><span data-stu-id="80635-121">The expression tree for the value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.Expressions.ITextExpression.Language</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80635-122">値に使用される言語を取得します。</span><span class="sxs-lookup"><span data-stu-id="80635-122">Gets the language used for the value.</span></span></summary>
        <value><span data-ttu-id="80635-123">使用されている言語。</span><span class="sxs-lookup"><span data-stu-id="80635-123">The language used.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresCompilation">
      <MemberSignature Language="C#" Value="public bool RequiresCompilation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresCompilation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Activities.VisualBasicValue`1.RequiresCompilation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresCompilation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresCompilation { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.Expressions.ITextExpression.RequiresCompilation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80635-124">値がコンパイルを必要とするかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="80635-124">Gets whether the value requires compilation.</span></span></summary>
        <value>
          <span data-ttu-id="80635-125">値がコンパイルを必要とする場合は <see langword="True" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="80635-125"><see langword="True" /> if the value requires compilation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>