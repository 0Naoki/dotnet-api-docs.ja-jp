<Type Name="CharacterRange" FullName="System.Drawing.CharacterRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e288e6df2ff13ffc19d8b4e42aa432e78d6bf5a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37761649" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CharacterRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.CharacterRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterRange" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterRange" />
  <TypeSignature Language="F#" Value="type CharacterRange = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>文字列内の文字位置の範囲を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、作成する方法を示します、<xref:System.Drawing.CharacterRange>文字列の一部を強調表示に使用します。 この例は、Windows フォームで使用する設計されています。 例では、エディターに貼り付け、フォームが呼び出し、`HighlightACharacterRange`メソッド、フォームを処理するときに<xref:System.Windows.Forms.Control.Paint>渡すイベント`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterRange (int First, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 First, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (First As Integer, Length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterRange(int First, int Length);" />
      <MemberSignature Language="F#" Value="new System.Drawing.CharacterRange : int * int -&gt; System.Drawing.CharacterRange" Usage="new System.Drawing.CharacterRange (First, Length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="First" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="First">範囲内の最初の文字の位置。 たとえば、<c>First</c> を 0 に設定すると、この範囲の最初の位置は文字列の位置 0 になります。</param>
        <param name="Length">範囲内の位置の数。</param>
        <summary>
          <see cref="T:System.Drawing.CharacterRange" /> 構造の新しいインスタンスを初期化して、文字列内の文字位置の範囲を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、作成する方法を示します、<xref:System.Drawing.CharacterRange>文字列の一部を強調表示に使用します。 この例は、Windows フォームで使用する設計されています。 例では、エディターに貼り付け、フォームが呼び出し、`HighlightACharacterRange`メソッド、フォームを処理するときに<xref:System.Windows.Forms.Control.Paint>渡すイベント`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">等しいかどうかを比較するオブジェクト。</param>
        <summary>このオブジェクトが指定されたオブジェクトと等しいかどうかを示す値を取得します。</summary>
        <returns>指定したオブジェクトが、このインスタンスと同じ <see cref="P:System.Drawing.CharacterRange.First" /> と <see cref="P:System.Drawing.CharacterRange.Length" /> 値のインスタンスであることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することも<xref:System.Drawing.CharacterRange.op_Equality%2A>等しいかどうかをテストします。  
  
   
  
## Examples  
 <xref:System.Drawing.CharacterRange.Equals%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームに貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`CharacterRangeEquality2`からメソッド、<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 First" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.First" />
      <MemberSignature Language="VB.NET" Value="Public Property First As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int First { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.First : int with get, set" Usage="System.Drawing.CharacterRange.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Drawing.CharacterRange" /> の、最初の文字の文字列の位置を取得または設定します。</summary>
        <value>
          <see cref="T:System.Drawing.CharacterRange" /> の開始位置。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>このインスタンスのハッシュ コードである 32 ビット符号付き整数。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Drawing.CharacterRange.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Drawing.CharacterRange" /> 内の位置の数を取得または設定します。</summary>
        <value>
          <see cref="T:System.Drawing.CharacterRange" /> 内の位置の数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="cr1 = cr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">等しいかどうかを比較する <see cref="T:System.Drawing.CharacterRange" />。</param>
        <param name="cr2">等しいかどうかを比較する <see cref="T:System.Drawing.CharacterRange" />。</param>
        <summary>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトを比較します。 2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値および <see cref="P:System.Drawing.CharacterRange.Length" /> 値が等しいかどうかを示す値を取得します。</summary>
        <returns>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値と <see cref="P:System.Drawing.CharacterRange.Length" /> 値が同じであることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等しいかどうかを使用してテストすることも、<xref:System.Drawing.CharacterRange.Equals%2A>メソッド。  
  
 この演算子を同等のメソッドは、します。 <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 次の例では、使用する方法、<xref:System.Drawing.CharacterRange.op_Equality%2A>演算子。 この例を実行するには、Windows フォームに貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`CharacterRangeEquality1`からメソッド、<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="System.Drawing.CharacterRange.op_Inequality (cr1, cr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">等しくないかどうかを比較する <see cref="T:System.Drawing.CharacterRange" />。</param>
        <param name="cr2">等しくないかどうかを比較する <see cref="T:System.Drawing.CharacterRange" />。</param>
        <summary>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトを比較します。 2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値または <see cref="P:System.Drawing.CharacterRange.Length" /> 値が等しくないかどうかを示す値を取得します。</summary>
        <returns>2 つの <see cref="T:System.Drawing.CharacterRange" /> オブジェクトの <see cref="P:System.Drawing.CharacterRange.First" /> 値または <see cref="P:System.Drawing.CharacterRange.Length" /> 値が異なることを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.CharacterRange.op_Inequality%2A>メソッドは逆を返します、<xref:System.Drawing.CharacterRange.op_Equality%2A>メソッド。  
  
 この演算子を同等のメソッドは、します。 <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 <xref:System.Drawing.CharacterRange.op_Inequality%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームに貼り付けます。 フォームの処理<xref:System.Windows.Forms.Control.Paint>イベントと呼び出し、`CharacterRangeInequality`からメソッド、<xref:System.Windows.Forms.Control.Paint>イベント処理メソッドを渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.CharacterRange.Equals(System.Object)" />
        <altmember cref="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      </Docs>
    </Member>
  </Members>
</Type>