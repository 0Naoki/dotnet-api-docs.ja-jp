<Type Name="StringFormatFlags" FullName="System.Drawing.StringFormatFlags">
  <TypeSignature Language="C#" Value="public enum StringFormatFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StringFormatFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.StringFormatFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum StringFormatFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class StringFormatFlags" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a4c15-101">文字列の表示情報およびレイアウト情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="a4c15-101">Specifies the display and layout information for text strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4c15-102"><xref:System.Drawing.StringFormatFlags> によって使用される、<xref:System.Drawing.StringFormat>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a4c15-102"><xref:System.Drawing.StringFormatFlags> is used by the <xref:System.Drawing.StringFormat> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a4c15-103">FitBlackBox フィールドが誤った名前が付いてし、その動作がに似ていますが、`NoFitBlackBox`フィールドで元の GDI + の実装です。</span><span class="sxs-lookup"><span data-stu-id="a4c15-103">The FitBlackBox field was misnamed and its behavior is similar to the `NoFitBlackBox` field in the original GDI+ implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4c15-104">次のコード例では、次のメンバーを示しています。</span><span class="sxs-lookup"><span data-stu-id="a4c15-104">The following code example demonstrates the following members:</span></span>  
  
-   <xref:System.Drawing.Rectangle.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.Alignment%2A>  
  
-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  
  
-   <xref:System.Drawing.StringAlignment>  
  
-   <xref:System.Drawing.StringFormatFlags>  
  
 <span data-ttu-id="a4c15-105">この例は、Windows フォームで使用するよう設計されています。</span><span class="sxs-lookup"><span data-stu-id="a4c15-105">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="a4c15-106">フォームと呼び出しにコードを貼り付けます、`ShowLineAndAlignment`メソッドは、フォームの処理と<xref:System.Windows.Forms.Control.Paint>イベント、渡す`e`として<xref:System.Windows.Forms.PaintEventArgs>です。</span><span class="sxs-lookup"><span data-stu-id="a4c15-106">Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectionRightToLeft">
      <MemberSignature Language="C#" Value="DirectionRightToLeft" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags DirectionRightToLeft = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.DirectionRightToLeft" />
      <MemberSignature Language="VB.NET" Value="DirectionRightToLeft" />
      <MemberSignature Language="C++ CLI" Value="DirectionRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-107">テキストを右から左へ表示します。</span><span class="sxs-lookup"><span data-stu-id="a4c15-107">Text is displayed from right to left.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DirectionVertical">
      <MemberSignature Language="C#" Value="DirectionVertical" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags DirectionVertical = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.DirectionVertical" />
      <MemberSignature Language="VB.NET" Value="DirectionVertical" />
      <MemberSignature Language="C++ CLI" Value="DirectionVertical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-108">テキストを縦方向に位置合わせします。</span><span class="sxs-lookup"><span data-stu-id="a4c15-108">Text is vertically aligned.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormatControl">
      <MemberSignature Language="C#" Value="DisplayFormatControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags DisplayFormatControl = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.DisplayFormatControl" />
      <MemberSignature Language="VB.NET" Value="DisplayFormatControl" />
      <MemberSignature Language="C++ CLI" Value="DisplayFormatControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-109">左から右を指示するマークなどの制御文字をグリフで表現します。</span><span class="sxs-lookup"><span data-stu-id="a4c15-109">Control characters such as the left-to-right mark are shown in the output with a representative glyph.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FitBlackBox">
      <MemberSignature Language="C#" Value="FitBlackBox" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags FitBlackBox = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.FitBlackBox" />
      <MemberSignature Language="VB.NET" Value="FitBlackBox" />
      <MemberSignature Language="C++ CLI" Value="FitBlackBox" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-110">文字の一部が文字列のレイアウト四角形からはみ出すことを許可します。</span><span class="sxs-lookup"><span data-stu-id="a4c15-110">Parts of characters are allowed to overhang the string's layout rectangle.</span></span> <span data-ttu-id="a4c15-111">既定では、はみ出さないように文字が移動されます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-111">By default, characters are repositioned to avoid any overhang.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="LineLimit">
      <MemberSignature Language="C#" Value="LineLimit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags LineLimit = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.LineLimit" />
      <MemberSignature Language="VB.NET" Value="LineLimit" />
      <MemberSignature Language="C++ CLI" Value="LineLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-112">書式指定用の四角形には、完全な直線だけがレイアウトされます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-112">Only entire lines are laid out in the formatting rectangle.</span></span> <span data-ttu-id="a4c15-113">既定では、クリッピングの結果、テキストの末尾が表示された状態、または行が表示されなくなった状態のうち、いずれか早い方の状態になるまでレイアウトが継続します。</span><span class="sxs-lookup"><span data-stu-id="a4c15-113">By default layout continues until the end of the text, or until no more lines are visible as a result of clipping, whichever comes first.</span></span> <span data-ttu-id="a4c15-114">既定の設定では、行高さの整数倍でない書式指定用四角形を用いた場合は、最後の行の一部が隠れることがあります。</span><span class="sxs-lookup"><span data-stu-id="a4c15-114">Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height.</span></span> <span data-ttu-id="a4c15-115">必ず行全体が表示されるようにするには、この値を指定した上で、少なくとも 1 つの行と高さが同じの書式指定用の四角形を使用してください。</span><span class="sxs-lookup"><span data-stu-id="a4c15-115">To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="MeasureTrailingSpaces">
      <MemberSignature Language="C#" Value="MeasureTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags MeasureTrailingSpaces = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="MeasureTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="MeasureTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-116">各行の行末に空白を含めます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-116">Includes the trailing space at the end of each line.</span></span> <span data-ttu-id="a4c15-117">既定では、<see cref="Overload:System.Drawing.Graphics.MeasureString" /> メソッドから返される外接四角形によって、各行末の空白が除外されます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-117">By default the boundary rectangle returned by the <see cref="Overload:System.Drawing.Graphics.MeasureString" /> method excludes the space at the end of each line.</span></span> <span data-ttu-id="a4c15-118">各行末の空白を計測に含める場合はこのフラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="a4c15-118">Set this flag to include that space in measurement.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoClip">
      <MemberSignature Language="C#" Value="NoClip" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags NoClip = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.NoClip" />
      <MemberSignature Language="VB.NET" Value="NoClip" />
      <MemberSignature Language="C++ CLI" Value="NoClip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-119">グリフの突出部と書式指定用の四角形からはみ出すラップされていないテキストを表示できます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-119">Overhanging parts of glyphs, and unwrapped text reaching outside the formatting rectangle are allowed to show.</span></span> <span data-ttu-id="a4c15-120">既定では、書式指定用の四角形からはみ出たテキストとグリフ部はすべてクリップされます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-120">By default all text and glyph parts reaching outside the formatting rectangle are clipped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoFontFallback">
      <MemberSignature Language="C#" Value="NoFontFallback" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags NoFontFallback = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.NoFontFallback" />
      <MemberSignature Language="VB.NET" Value="NoFontFallback" />
      <MemberSignature Language="C++ CLI" Value="NoFontFallback" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-121">要求されたフォントでサポートされていない文字のフォントを切り替えるフォールバックを無効にします。</span><span class="sxs-lookup"><span data-stu-id="a4c15-121">Fallback to alternate fonts for characters not supported in the requested font is disabled.</span></span> <span data-ttu-id="a4c15-122">欠落文字は、グリフの欠落したフォント (通常は空白の正方形) で表示されます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-122">Any missing characters are displayed with the fonts missing glyph, usually an open square.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="NoWrap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags NoWrap = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.NoWrap" />
      <MemberSignature Language="VB.NET" Value="NoWrap" />
      <MemberSignature Language="C++ CLI" Value="NoWrap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a4c15-123">四角形内の書式を指定するときに、行のテキストの折り返しを無効にします。</span><span class="sxs-lookup"><span data-stu-id="a4c15-123">Text wrapping between lines when formatting within a rectangle is disabled.</span></span> <span data-ttu-id="a4c15-124">このフラグは、四角形ではなく点が渡された場合、または長さゼロの行の四角形が指定された場合に暗黙的に指定されます。</span><span class="sxs-lookup"><span data-stu-id="a4c15-124">This flag is implied when a point is passed instead of a rectangle, or when the specified rectangle has a zero line length.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>