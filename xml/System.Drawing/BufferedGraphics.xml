<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="06992-101">ダブル バッファリングのためのグラフィックス バッファーを提供します。</span><span class="sxs-lookup"><span data-stu-id="06992-101">Provides a graphics buffer for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06992-102"><xref:System.Drawing.BufferedGraphics>クラスでは、グラフィックスのカスタムのダブル バッファリングを実装することができます。</span><span class="sxs-lookup"><span data-stu-id="06992-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="06992-103">バッファーに書き込むし、出力デバイスにコンテンツのレンダリングに使用できるメソッドと、グラフィックス バッファーのラッパーを提供します。</span><span class="sxs-lookup"><span data-stu-id="06992-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="06992-104">ダブル バッファリングを使用するグラフィックスを軽減または、画面の表面を再描画が原因で発生するちらつきを除去します。</span><span class="sxs-lookup"><span data-stu-id="06992-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="06992-105">ダブル バッファリングを使用して、更新されたグラフィックスがメモリ内のバッファーを最初に描画され、表示される画面の一部またはすべてをこのバッファーの内容がすぐに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="06992-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="06992-106">この比較的簡単な上書き、表示されているグラフィックスの低減またはときどきグラフィックスが更新されたときに発生するちらつきを除去します。</span><span class="sxs-lookup"><span data-stu-id="06992-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06992-107">ダブル バッファリングを使用する最も簡単な方法が設定するには、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>を使用してコントロールのスタイル フラグを制御、<xref:System.Windows.Forms.Control.SetStyle%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="06992-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="06992-108">設定、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>コントロールは、追加のコードを必要とせず、既定のグラフィックス バッファーを使用してコントロールのすべての描画をリダイレクトのフラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="06992-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="06992-109">このフラグに設定されている`true`既定です。</span><span class="sxs-lookup"><span data-stu-id="06992-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="06992-110"><xref:System.Drawing.BufferedGraphics>クラスのパブリック コンス トラクターを持たないし、によって作成する必要があります、<xref:System.Drawing.BufferedGraphicsContext>のアプリケーション ドメインを使用して、その<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="06992-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="06992-111">取得することができます、<xref:System.Drawing.BufferedGraphicsContext>静的から現在のアプリケーション ドメインに対する<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="06992-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06992-112"><xref:System.Drawing.BufferedGraphics.Graphics%2A>グラフィックス バッファーに描画には、プロパティを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="06992-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="06992-113">このプロパティへのアクセスを提供する、<xref:System.Drawing.Graphics>これに割り当てられたグラフィックス バッファーに描画オブジェクト<xref:System.Drawing.BufferedGraphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="06992-114"><xref:System.Drawing.BufferedGraphics.Render%2A>バッファーが割り当てられた画面に、グラフィックスの内容をバッファーなし引数描画を持つメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="06992-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="06992-115">他のオーバー ロード、<xref:System.Drawing.BufferedGraphics.Render%2A>メソッドでは、指定できる、<xref:System.Drawing.Graphics>オブジェクトまたは<xref:System.IntPtr>グラフィックス バッファーの内容を描画するためにデバイス コンテキストを示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="06992-116">ダブル バッファリングされたグラフィックスを描画の詳細については、次を参照してください。[ダブル バッファリングされたグラフィックス](~/docs/framework/winforms/advanced/double-buffered-graphics.md)です。</span><span class="sxs-lookup"><span data-stu-id="06992-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06992-117">次のコード例では、使用方法を示します、<xref:System.Drawing.BufferedGraphics>実装のバッファリングのいくつかの型を使用してグラフィックスを描画するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="06992-118">フォームをクリックしてまたは開始し、原因が更新を描画するタイマーを停止します。</span><span class="sxs-lookup"><span data-stu-id="06992-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="06992-119">描画の更新を使用すると、ダブル バッファリングの効果を観察できます。</span><span class="sxs-lookup"><span data-stu-id="06992-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="06992-120">フォームの次の描画モード順番を右クリックします。</span><span class="sxs-lookup"><span data-stu-id="06992-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="06992-121">直接描画、<xref:System.Windows.Forms.Control.Handle%2A>の<xref:System.Windows.Forms.Form>です。</span><span class="sxs-lookup"><span data-stu-id="06992-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="06992-122">オーバーライドすることで描画、<xref:System.Windows.Forms.Form.OnPaint%2A>メソッドを使用して、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>スタイルを制御します。</span><span class="sxs-lookup"><span data-stu-id="06992-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="06992-123">オーバーライドすることで描画、<xref:System.Windows.Forms.Form.OnPaint%2A>のフォーム メソッドを使用せずにメソッド、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>スタイルを制御します。</span><span class="sxs-lookup"><span data-stu-id="06992-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="06992-124">各モードでは、現在のモードを示し、それぞれのマウス ボタンが押されたときに発生する動作について説明するテキストを描画します。</span><span class="sxs-lookup"><span data-stu-id="06992-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="06992-125"><see cref="T:System.Drawing.BufferedGraphics" /> クラスはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="06992-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span></span> <span data-ttu-id="06992-126">グラフィックス バッファー個別のスレッドからにアクセスするときに、スレッド アクセス コントロール機構を使用して競合を防ぐ必要があります。</span><span class="sxs-lookup"><span data-stu-id="06992-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06992-127">この <see cref="T:System.Drawing.BufferedGraphics" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="06992-127">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06992-128">呼び出す<xref:System.Drawing.BufferedGraphics.Dispose%2A>が終了したらを使用して、<xref:System.Drawing.BufferedGraphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-128">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="06992-129"><xref:System.Drawing.BufferedGraphics.Dispose%2A>メソッドによって、<xref:System.Drawing.BufferedGraphics>使用不可の状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-129">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="06992-130">呼び出した後<xref:System.Drawing.BufferedGraphics.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Drawing.BufferedGraphics>オブジェクトのガベージ コレクターがメモリを再利用できるようにする、<xref:System.Drawing.BufferedGraphics>オブジェクトが占有されていた。</span><span class="sxs-lookup"><span data-stu-id="06992-130">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="06992-131">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="06992-131">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06992-132">常に呼び出す<xref:System.Drawing.BufferedGraphics.Dispose%2A>への参照を解放する前に、<xref:System.Drawing.BufferedGraphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-132">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="06992-133">そうしないと、ガベージ コレクターが <xref:System.Drawing.BufferedGraphics> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="06992-133">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06992-134">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="06992-134">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06992-135">グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06992-135">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></summary>
        <value><span data-ttu-id="06992-136">グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-136">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06992-137">このプロパティでは、<xref:System.Drawing.Graphics>これに割り当てられたグラフィックス バッファーに描画オブジェクト<xref:System.Drawing.BufferedGraphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-137">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06992-138">グラフィックス バッファーの内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="06992-138">Writes the contents of the graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06992-139">グラフィックス バッファーの内容を既定のデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="06992-139">Writes the contents of the graphics buffer to the default device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06992-140">このメソッドは、呼び出すことによって指定されたデバイスにグラフィックス バッファーの内容を書き込みます、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>のメソッド、<xref:System.Drawing.BufferedGraphicsContext>これを作成するために使用<xref:System.Drawing.BufferedGraphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-140">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="06992-141">グラフィックス バッファーの内容を書き込む <see cref="T:System.Drawing.Graphics" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-141">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="06992-142">グラフィックス バッファーの内容を指定された <see cref="T:System.Drawing.Graphics" /> オブジェクトに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="06992-142">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06992-143">このメソッドは、指定したグラフィックス バッファーの内容を書き込みます<xref:System.Drawing.Graphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-143">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06992-144">次のコード例では、指定したグラフィックス バッファーの内容の表示を示しています<xref:System.Drawing.Graphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06992-144">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="06992-145">このコードに示されている例の一部である、<xref:System.Drawing.BufferedGraphics>クラスです。</span><span class="sxs-lookup"><span data-stu-id="06992-145">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="06992-146">グラフィックス バッファーの内容の書き込み先のデバイス コンテキストを指す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="06992-146">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="06992-147">グラフィックス バッファーの内容を、指定した <see cref="T:System.IntPtr" /> ハンドルに関連付けられているデバイス コンテキストに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="06992-147">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06992-148">このメソッドは、指定したに関連付けられているデバイス コンテキストにグラフィックス バッファーの内容を書き込みます<xref:System.IntPtr>を処理します。</span><span class="sxs-lookup"><span data-stu-id="06992-148">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06992-149">次のコード例は、グラフィックス バッファーの内容を表示する方法を示します`grafx`を指定したデバイス コンテキストにします。</span><span class="sxs-lookup"><span data-stu-id="06992-149">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="06992-150">このコードに示されている例の一部である、<xref:System.Drawing.BufferedGraphics>クラスです。</span><span class="sxs-lookup"><span data-stu-id="06992-150">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06992-151">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="06992-151">for access to unmanaged code.</span></span> <span data-ttu-id="06992-152">関連する列挙体:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />です。</span><span class="sxs-lookup"><span data-stu-id="06992-152">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.IntPtr" />
      </Docs>
    </Member>
  </Members>
</Type>