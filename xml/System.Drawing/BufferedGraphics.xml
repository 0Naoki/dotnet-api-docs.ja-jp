<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f90a3c5f4db84bd5f68a5712d372277ba698ea4c" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56766669" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ダブル バッファリングのためのグラフィックス バッファーを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.BufferedGraphics>グラフィックスのカスタムのダブル バッファリングを実装するクラスを使用できます。 バッファーに書き込むし、出力デバイスにコンテンツのレンダリングに使用できるメソッドと共にのグラフィックス バッファーのラッパーを提供します。  
  
 ダブル バッファリングを使用するグラフィックスでは、削減したり、表示画面を再描画によるちらつきすることができます。 ダブル バッファリングを使用して、更新されたグラフィックスは最初に、メモリ内のバッファーに描画され、このバッファーの内容が表示される画面の一部またはすべてにすばやく書き込まれますし。 表示されるグラフィックスの比較的簡単なこの上書きを低減またはグラフィックスが更新されたときに発生しやすいちらつきがなくなります。  
  
> [!NOTE]
>  ダブル バッファリングを使用する最も簡単な方法を設定するのには、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>制御を使用してコントロールのスタイルのフラグ、<xref:System.Windows.Forms.Control.SetStyle%2A>メソッド。 設定、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>コントロール、追加のコードを必要とせず、既定のグラフィックス バッファーを使用してコントロールのすべての描画のリダイレクトのフラグを設定します。 このフラグに設定されて`true`既定。  
  
 <xref:System.Drawing.BufferedGraphics>クラスのパブリック コンス トラクターを持たないし、によって作成する必要があります、<xref:System.Drawing.BufferedGraphicsContext>を使用してアプリケーション ドメイン、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッド。 取得することができます、<xref:System.Drawing.BufferedGraphicsContext>の現在のアプリケーション ドメインを静的から<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>プロパティ。  
  
 <xref:System.Drawing.BufferedGraphics.Graphics%2A>プロパティは、グラフィックス バッファーへの描画に使用できます。 このプロパティへのアクセスを提供する、<xref:System.Drawing.Graphics>この割り当てられたグラフィックス バッファーに描画オブジェクト<xref:System.Drawing.BufferedGraphics>オブジェクト。  
  
 <xref:System.Drawing.BufferedGraphics.Render%2A>を画面に、グラフィックスの内容をバッファーなし引数描画メソッドは、バッファーが割り当てられたを指定します。 他のオーバー ロード、<xref:System.Drawing.BufferedGraphics.Render%2A>メソッドでは、指定すること、<xref:System.Drawing.Graphics>オブジェクトまたは<xref:System.IntPtr>グラフィックス バッファーの内容を描画するためにデバイス コンテキストを指しているオブジェクト。  
  
 ダブル バッファリングされたグラフィックスの描画の詳細については、次を参照してください。[ダブル バッファリングされたグラフィックス](~/docs/framework/winforms/advanced/double-buffered-graphics.md)します。  
  
   
  
## Examples  
 次のコード例に示しますを使用して、<xref:System.Drawing.BufferedGraphics>実装のバッファリングのいくつかの型を使用してグラフィックスを描画するオブジェクト。 フォームをクリックしてまたは起動をエラーの原因が更新プログラムを描画するタイマーを停止します。 描画の更新を使用すると、ダブル バッファリングの効果を確認できます。 フォームを順番に次の描画モードを右クリックします。  
  
-   直接描画、<xref:System.Windows.Forms.Control.Handle%2A>の<xref:System.Windows.Forms.Form>します。  
  
-   オーバーライドすることで描画、<xref:System.Windows.Forms.Form.OnPaint%2A>メソッドを使用して、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>スタイルを制御します。  
  
-   オーバーライドすることで描画、<xref:System.Windows.Forms.Form.OnPaint%2A>フォーム メソッドを使用せずにメソッド、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>スタイルを制御します。  
  
 各モードでは、現在のモードを識別し、各マウス ボタンが押されたときに発生する動作について説明テキストを描画します。  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
  <see cref="T:System.Drawing.BufferedGraphics" /> クラスはスレッド セーフではありません。 グラフィックス バッファーを別のスレッドからにアクセスするときは、スレッド アクセスの制御メカニズムを使用して、競合を回避する必要があります。</threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">ダブル バッファリングされたグラフィックス</related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.BufferedGraphics" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す<xref:System.Drawing.BufferedGraphics.Dispose%2A>が終了したらを使用して、<xref:System.Drawing.BufferedGraphics>オブジェクト。 <xref:System.Drawing.BufferedGraphics.Dispose%2A>メソッドによって、<xref:System.Drawing.BufferedGraphics>オブジェクトを使用できない状態です。 呼び出した後<xref:System.Drawing.BufferedGraphics.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Drawing.BufferedGraphics>オブジェクトのガベージ コレクターがメモリをクリアできるようにする、<xref:System.Drawing.BufferedGraphics>オブジェクトによって占有されていた。 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  常に呼び出す<xref:System.Drawing.BufferedGraphics.Dispose%2A>への参照を解放する前に、<xref:System.Drawing.BufferedGraphics>オブジェクト。 そうしないと、ガベージ コレクターが <xref:System.Drawing.BufferedGraphics> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">ダブル バッファリングされたグラフィックス</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクトを取得します。</summary>
        <value>グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティでは、<xref:System.Drawing.Graphics>この割り当てられたグラフィックス バッファーに描画オブジェクト<xref:System.Drawing.BufferedGraphics>オブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">ダブル バッファリングされたグラフィックス</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>グラフィックス バッファーの内容を書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>グラフィックス バッファーの内容を既定のデバイスに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、グラフィックス バッファーの内容を呼び出すことによって指定されたデバイスに書き込みます、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>のメソッド、<xref:System.Drawing.BufferedGraphicsContext>これを作成するために使用<xref:System.Drawing.BufferedGraphics>オブジェクト。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">ダブル バッファリングされたグラフィックス</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target">グラフィックス バッファーの内容を書き込む <see cref="T:System.Drawing.Graphics" /> オブジェクト。</param>
        <summary>グラフィックス バッファーの内容を指定された <see cref="T:System.Drawing.Graphics" /> オブジェクトに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定したグラフィックス バッファーの内容を書き込みます<xref:System.Drawing.Graphics>オブジェクト。  
  
   
  
## Examples  
 次のコード例は、指定されたグラフィックス バッファーの内容をレンダリングの例<xref:System.Drawing.Graphics>オブジェクト。 このコードは示されている例の一部、<xref:System.Drawing.BufferedGraphics>クラス。  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">ダブル バッファリングされたグラフィックス</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC">グラフィックス バッファーの内容の書き込み先のデバイス コンテキストを指す <see cref="T:System.IntPtr" />。</param>
        <summary>グラフィックス バッファーの内容を、指定した <see cref="T:System.IntPtr" /> ハンドルに関連付けられているデバイス コンテキストに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、グラフィックス バッファーの内容を指定した関連付けられているデバイス コンテキストに書き込みます<xref:System.IntPtr>を処理します。  
  
   
  
## Examples  
 次のコード例は、グラフィックス バッファーの内容を表示する方法を示します`grafx`を指定したデバイス コンテキストにします。 このコードは示されている例の一部、<xref:System.Drawing.BufferedGraphics>クラス。  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 列挙に関連:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />します。</permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">ダブル バッファリングされたグラフィックス</related>
      </Docs>
    </Member>
  </Members>
</Type>