<Type Name="Graphics+DrawImageAbort" FullName="System.Drawing.Graphics+DrawImageAbort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07ba4559a69b40a9d30f8680daa62570accc52f1" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52914471" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/DrawImageAbort extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.DrawImageAbort" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.DrawImageAbort(callbackdata As IntPtr) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="F#" Value="type Graphics.DrawImageAbort = delegate of nativeint -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="callbackdata" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="callbackdata">コールバック メソッドのデータを指定する内部ポインター。 このパラメーターは、どの <see cref="Overload:System.Drawing.Graphics.DrawImage" /> オーバーロードでも渡されません。 存在しないかどうかをテストするには、値 <see cref="F:System.IntPtr.Zero" /> がないかどうかを確認します。</param>
    <summary><see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドが、実行を早期キャンセルし、イメージの描画を停止するタイミングを決定するコールバック メソッドを提供します。</summary>
    <returns><see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドに実行を早期停止させる場合、このメソッドは <see langword="true" /> を返します。 それ以外の場合は <see langword="false" /> を返して <see cref="Overload:System.Drawing.Graphics.DrawImage" /> メソッドに実行を継続させることを示します。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを組み合わせて使用、<xref:System.Drawing.Graphics.DrawImage%2A>のメソッド、<xref:System.Drawing.Graphics>クラス。 特定のオーバー ロード、<xref:System.Drawing.Graphics.DrawImage%2A>メソッドがオーバー ロードが停止するか実行を続けるかどうか、確認するには、この種類のアプリケーション定義のコールバック メソッドを呼び出します。  
  
 関連する、実行中に<xref:System.Drawing.Graphics.DrawImage%2A>オーバー ロードが頻繁に、指定されたイメージの描画が終了するか、イメージを描画する必要がありますが引き続き確認するには、このコールバック メソッドを呼び出します。 <xref:System.Drawing.Graphics.DrawImageAbort>コールバック メソッドは、続行するかどうかを判断できますまたはしてここパラメーターでが含まれて、選択したアルゴリズムに基づいていない、必要に応じて、データを使用して渡されました。 たとえば、アルゴリズムをイメージが画面に表示されていないかを判断し、に、キャンセルの信号可能性があります、<xref:System.Drawing.Graphics.DrawImage%2A>描画を中止するメソッド。  
  
 このイベント処理メソッドのユーザーの宣言と同じパラメーターをいる必要があります、<xref:System.Drawing.Graphics.DrawImageAbort>宣言を委任します。  
  
   
  
## Examples  
 この例は単純な実装の<xref:System.Drawing.Graphics.DrawImageAbort>を委任します。 だけをチェックする場合、<xref:System.Drawing.Graphics.DrawImage%2A>メソッドに成功しましたここパラメーターを使用してデータ。 (一部<xref:System.Drawing.Graphics.DrawImage%2A>オーバー ロードがのみ、`DrawImageAbort`パラメーターとデータが渡されない一部のオーバー ロード両方`DrawImageAbort`と`callbackdata`パラメーター データを渡すことができます。)。返すかどうかデータが渡されなかった、 `true` 、呼び出し元に通知する<xref:System.Drawing.Graphics.DrawImage%2A>メソッドは、描画を中止しなければならないことです。 返すかどうかは、データが渡された、`false`図面を続行することを通知します。  
  
 このコールバックの現実的な実装は、実際の精査を取り消すか、実行を継続するいくつかの条件の必要があります。  
  
```vb  
Private Function DrawImageCallback(callBackData As IntPtr) As Boolean  
     ' Test for call that passes callBackData parameter.  
     If callBackData.Equals(IntPtr.Zero) Then  
         ' If no callBackData passed, abort DrawImage method.  
         Return True  
     Else  
         ' If callBackData passed, continue DrawImage method.  
         Return False  
     End If  
 End Function 'DrawImageCallback  
```  
  
```csharp  
// Define DrawImageAbort callback method.  
 private bool DrawImageCallback(IntPtr callbackdata)  
 {  
    // Test for call that passes callBackData parameter.  
    if(callbackdata==IntPtr.Zero)  
    {  
       // If no callbackdata passed, cancel DrawImage method.  
       return true;  
    }  
    else  
    {  
       // If callbackdata passed, continue DrawImage method.  
       return false;  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>