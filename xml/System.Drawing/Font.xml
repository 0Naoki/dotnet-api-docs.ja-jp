<Type Name="Font" FullName="System.Drawing.Font">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e133e23bb54195e4cb1429b05d0495bd77d50806" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36490659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Font : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Font extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Font" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Font&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Font sealed : MarshalByRefObject, ICloneable, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Font = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.FontEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines a particular format for text, including font face, size, and style attributes. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フォントを作成する方法の詳細については、次を参照してください。[する方法: フォント ファミリの構築とフォント](~/docs/framework/winforms/advanced/how-to-construct-font-families-and-fonts.md)です。 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 サポートされていないフォントを使用しようとする、またはフォントが、アプリケーションを実行しているコンピューターにインストールされていない、Microsoft Sans Serif フォントが置き換えられます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターと<xref:System.Drawing.Font.Size%2A>、 <xref:System.Drawing.Font.SizeInPoints%2A>、および<xref:System.Drawing.Font.Unit%2A>プロパティです。 この例を含む Windows フォームで使用するように設計された、<xref:System.Windows.Forms.ComboBox>という名前`ComboBox1`「大規模」、「小さい」の文字列に設定されます、<xref:System.Windows.Forms.Label>という名前`Label1`です。 次のコードをフォームに貼り付け、`ComboBox1_SelectedIndexChanged`メソッドを<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>のイベント、<xref:System.Windows.Forms.ComboBox>コントロール。  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> that uses the specified existing <see cref="T:System.Drawing.Font" /> and <see cref="T:System.Drawing.FontStyle" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.Font prototype, System.Drawing.FontStyle newStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Font prototype, valuetype System.Drawing.FontStyle newStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (prototype As Font, newStyle As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::Font ^ prototype, System::Drawing::FontStyle newStyle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.Font * System.Drawing.FontStyle -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (prototype, newStyle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prototype" Type="System.Drawing.Font" />
        <Parameter Name="newStyle" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="prototype">The existing <see cref="T:System.Drawing.Font" /> from which to create the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="newStyle">The <see cref="T:System.Drawing.FontStyle" /> to apply to the new <see cref="T:System.Drawing.Font" />. Multiple values of the <see cref="T:System.Drawing.FontStyle" /> enumeration can be combined with the <see langword="OR" /> operator.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> that uses the specified existing <see cref="T:System.Drawing.Font" /> and <see cref="T:System.Drawing.FontStyle" /> enumeration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基づくローカライズされたアプリケーションに対して、 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 、以前のリリースでのフォントを指定する`prototype`ときにそのフォントがインストールされていないアプリケーションをビルドするために使用するコンピューターでは使用する Microsoft Sans Serif フォントなります。その代わりに。 この動作に依存するアプリケーションと .NET Framework 3.0 のアプリケーションを再コンパイルする必要がありますの Microsoft Sans Serif フォントを指定する必要があります`prototype`です。  
  
   
  
## Examples  
 次のコード例を示しています、<xref:System.Drawing.Color.op_Inequality%2A>演算子、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクター、および<xref:System.Drawing.Font.Bold%2A>プロパティです。 この例は、という名前のボタンを含む Windows フォームで使用するように設計された`Button2`です。 次のコードをフォームに貼り付け、`Button2_Click`ボタンのメソッド<xref:System.Windows.Forms.Control.Click>イベント。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.CharacterRangeExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.FontFamily * single -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (family, emSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size, in points, of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結果として得られるフォントにその<xref:System.Drawing.Font.Style%2A>プロパティに設定<xref:System.Drawing.FontStyle.Regular>とその<xref:System.Drawing.Font.Unit%2A>プロパティに設定<xref:System.Drawing.GraphicsUnit.Point>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : string * single -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (familyName, emSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size, in points, of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結果として得られるフォントにその<xref:System.Drawing.Font.Style%2A>プロパティに設定<xref:System.Drawing.FontStyle.Regular?displayProperty=nameWithType>とその<xref:System.Drawing.Font.Unit%2A>プロパティに設定<xref:System.Drawing.GraphicsUnit.Point?displayProperty=nameWithType>です。 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターです。 この例は、Windows フォームで使用するよう設計されていて、必要があります、 <xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント。  
  
 [!code-csharp[System.Drawing.Misc3#ConstructFontWithString](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#constructfontwithstring)]
 [!code-vb[System.Drawing.Misc3#ConstructFontWithString](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#constructfontwithstring)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.FontFamily * single * System.Drawing.FontStyle -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (family, emSize, style)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size, in points, of the new font.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and style.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結果として得られるフォントにその<xref:System.Drawing.Font.Unit%2A>プロパティに設定<xref:System.Drawing.GraphicsUnit.Point>です。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Drawing.Font>プロパティの新しいの太字スタイルのボタンの<xref:System.Drawing.Font>します。 この例は、という名前のボタンを含む Windows フォームで使用するように設計された`Button1`です。 次のコードをフォームに貼り付け、`Button1_Click`ボタンのメソッド<xref:System.Windows.Forms.Control.Click>イベント。  
  
 [!code-cpp[System.Drawing.MiscExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.MiscExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.MiscExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.FontFamily * single * System.Drawing.GraphicsUnit -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (family, emSize, unit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and unit. Sets the style to <see cref="F:System.Drawing.FontStyle.Regular" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結果として得られるフォントにその<xref:System.Drawing.Font.Style%2A>プロパティに設定<xref:System.Drawing.FontStyle.Regular?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : string * single * System.Drawing.FontStyle -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (familyName, emSize, style)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size, in points, of the new font.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and style.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結果として得られるフォントにその<xref:System.Drawing.Font.Unit%2A>プロパティに設定<xref:System.Drawing.GraphicsUnit.Point>です。 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : string * single * System.Drawing.GraphicsUnit -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (familyName, emSize, unit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size and unit. The style is set to <see cref="F:System.Drawing.FontStyle.Regular" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結果として得られるフォントにその<xref:System.Drawing.Font.Style%2A>プロパティに設定<xref:System.Drawing.FontStyle.Regular?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.FontFamily * single * System.Drawing.FontStyle * System.Drawing.GraphicsUnit -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (family, emSize, style, unit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, and unit.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle, unit As GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : string * single * System.Drawing.FontStyle * System.Drawing.GraphicsUnit -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (familyName, emSize, style, unit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, and unit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターです。 この例は、Windows フォームで使用するよう設計されています。 この例を実行するには、という名前のボタンを含むフォームにこのコードを貼り付けます`Button2`、関連付けると、`Button2_Click`メソッドを<xref:System.Windows.Forms.Control.Click>ボタンのイベントです。  
  
 [!code-cpp[System.Drawing.FontsExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#3)]
 [!code-csharp[System.Drawing.FontsExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.FontsExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.FontFamily * single * System.Drawing.FontStyle * System.Drawing.GraphicsUnit * byte -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (family, emSize, style, unit, gdiCharSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a  [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] character set to use for the new font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, unit, and character set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : string * single * System.Drawing.FontStyle * System.Drawing.GraphicsUnit * byte -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (familyName, emSize, style, unit, gdiCharSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] character set to use for this font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, unit, and character set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.FontFamily family, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet, bool gdiVerticalFont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As FontFamily, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte, gdiVerticalFont As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::Drawing::FontFamily ^ family, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : System.Drawing.FontFamily * single * System.Drawing.FontStyle * System.Drawing.GraphicsUnit * byte * bool -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (family, emSize, style, unit, gdiCharSet, gdiVerticalFont)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
        <Parameter Name="gdiVerticalFont" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="family">The <see cref="T:System.Drawing.FontFamily" /> of the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a  [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] character set to use for this font.</param>
        <param name="gdiVerticalFont">A Boolean value indicating whether the new font is derived from a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] vertical font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using a specified size, style, unit, and character set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="family" /> is <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName, float32 emSize, valuetype System.Drawing.FontStyle style, valuetype System.Drawing.GraphicsUnit unit, unsigned int8 gdiCharSet, bool gdiVerticalFont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String, emSize As Single, style As FontStyle, unit As GraphicsUnit, gdiCharSet As Byte, gdiVerticalFont As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Font(System::String ^ familyName, float emSize, System::Drawing::FontStyle style, System::Drawing::GraphicsUnit unit, System::Byte gdiCharSet, bool gdiVerticalFont);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Font : string * single * System.Drawing.FontStyle * System.Drawing.GraphicsUnit * byte * bool -&gt; System.Drawing.Font" Usage="new System.Drawing.Font (familyName, emSize, style, unit, gdiCharSet, gdiVerticalFont)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="gdiCharSet" Type="System.Byte" />
        <Parameter Name="gdiVerticalFont" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="familyName">A string representation of the <see cref="T:System.Drawing.FontFamily" /> for the new <see cref="T:System.Drawing.Font" />.</param>
        <param name="emSize">The em-size of the new font in the units specified by the <c>unit</c> parameter.</param>
        <param name="style">The <see cref="T:System.Drawing.FontStyle" /> of the new font.</param>
        <param name="unit">The <see cref="T:System.Drawing.GraphicsUnit" /> of the new font.</param>
        <param name="gdiCharSet">A <see cref="T:System.Byte" /> that specifies a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] character set to use for this font.</param>
        <param name="gdiVerticalFont">A Boolean value indicating whether the new <see cref="T:System.Drawing.Font" /> is derived from a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] vertical font.</param>
        <summary>Initializes a new <see cref="T:System.Drawing.Font" /> using the specified size, style, unit, and character set.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity, or is not a valid number.</exception>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="Bold">
      <MemberSignature Language="C#" Value="public bool Bold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Bold" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Bold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Bold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Bold : bool" Usage="System.Drawing.Font.Bold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> is bold.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> が太字の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を示しています、<xref:System.Drawing.Color.op_Inequality%2A>演算子、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクター、および<xref:System.Drawing.Font.Bold%2A>プロパティです。 この例は、という名前のボタンを含む Windows フォームで使用するように設計された`Button2`です。 次のコードをフォームに貼り付け、`Button2_Click`ボタンのメソッド<xref:System.Windows.Forms.Control.Click>イベント。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.CharacterRangeExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.CharacterRangeExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="font.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an exact copy of this <see cref="T:System.Drawing.Font" />.</summary>
        <returns>The <see cref="T:System.Drawing.Font" /> this method creates, cast as an <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コード クローンを作成、<xref:System.Drawing.Font>し、そのフォントとテキストを描画します。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicFontsExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="font.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources used by this <see cref="T:System.Drawing.Font" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す<xref:System.Drawing.Font.Dispose%2A>により、これによって使用されるリソース<xref:System.Drawing.Font>を他の目的に再割り当てされます。  
  
 <xref:System.Drawing.Font.Dispose%2A> を使い終わったら <xref:System.Drawing.Font> を呼び出します。 <xref:System.Drawing.Font.Dispose%2A> メソッドによって、<xref:System.Drawing.Font> は使用不可の状態になります。 呼び出した後<xref:System.Drawing.Font.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Drawing.Font>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Drawing.Font>占有されていた。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。  
  
> [!NOTE]
>  <xref:System.Drawing.Font.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Drawing.Font> を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Drawing.Font> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="font.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to test.</param>
        <summary>Indicates whether the specified object is a <see cref="T:System.Drawing.Font" /> and has the same <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" />, and <see cref="P:System.Drawing.Font.Unit" /> property values as this <see cref="T:System.Drawing.Font" />.</summary>
        <returns>
          <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Drawing.Font" /> and has the same <see cref="P:System.Drawing.Font.FontFamily" />, <see cref="P:System.Drawing.Font.GdiVerticalFont" />, <see cref="P:System.Drawing.Font.GdiCharSet" />, <see cref="P:System.Drawing.Font.Style" />, <see cref="P:System.Drawing.Font.Size" />, and <see cref="P:System.Drawing.Font.Unit" /> property values as this <see cref="T:System.Drawing.Font" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードでは、2 つ作成されます<xref:System.Drawing.Font>オブジェクトし、それらが等しいかどうかをテストします。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicFontsExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Font ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Font ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="font.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Drawing.FontFamily FontFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::FontFamily ^ FontFamily { System::Drawing::FontFamily ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FontFamily : System.Drawing.FontFamily" Usage="System.Drawing.Font.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Drawing.FontFamily" /> associated with this <see cref="T:System.Drawing.Font" />.</summary>
        <value>この <see cref="T:System.Drawing.FontFamily" /> に関連付けられている <see cref="T:System.Drawing.Font" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Drawing.FontFamily>と同様のフォント フェイス、サイズが異なると (たとえば、Arial、Times New Roman、および Verdana) のスタイルがありますフォントのグループを表します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint -&gt; System.Drawing.Font" Usage="System.Drawing.Font.FromHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">A handle to a device context.</param>
        <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified Windows handle to a device context.</summary>
        <returns>The <see cref="T:System.Drawing.Font" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 を使用するには、このメソッドの、`hdc`パラメーターは、フォントが選択されているデバイス コンテキストへのハンドルを含める必要があります。 このメソッドは機能しません、`hdc`ハンドルがから取得した、 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics>オブジェクトのため、`hdc`ハンドルには、選択されているフォントはありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The font for the specified device context is not a TrueType font.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHfont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromHfont (IntPtr hfont);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromHfont(native int hfont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromHfont(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHfont (hfont As IntPtr) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromHfont(IntPtr hfont);" />
      <MemberSignature Language="F#" Value="static member FromHfont : nativeint -&gt; System.Drawing.Font" Usage="System.Drawing.Font.FromHfont hfont" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hfont" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hfont">A Windows handle to a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] font.</param>
        <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified Windows handle.</summary>
        <returns>The <see cref="T:System.Drawing.Font" /> this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   ハンドルを取得、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]フォントです。  
  
-   作成、<xref:System.Drawing.Font>そのハンドルからです。  
  
-   テキストを new を使用して、画面に描画<xref:System.Drawing.Font>です。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicFontsExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hfont" /> points to an object that is not a TrueType font.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromLogFont">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified GDI logical font (<c>LOGFONT</c>) structure.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromLogFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromLogFont (object lf);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromLogFont(object lf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromLogFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLogFont (lf As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromLogFont(System::Object ^ lf);" />
      <MemberSignature Language="F#" Value="static member FromLogFont : obj -&gt; System.Drawing.Font" Usage="System.Drawing.Font.FromLogFont lf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lf" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lf">An <see cref="T:System.Object" /> that represents the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" />.</param>
        <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified GDI logical font (<c>LOGFONT</c>) structure.</summary>
        <returns>The <see cref="T:System.Drawing.Font" /> that this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `LOGFONT`、または論理のフォントが特定のフォントを表す 14 個のプロパティを格納する構造体。 詳細についてを参照してください「の論理フォント」で、Windows 開発ドキュメント[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromLogFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FromLogFont (object lf, IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Font FromLogFont(object lf, native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLogFont (lf As Object, hdc As IntPtr) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FromLogFont(System::Object ^ lf, IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromLogFont : obj * nativeint -&gt; System.Drawing.Font" Usage="System.Drawing.Font.FromLogFont (lf, hdc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lf" Type="System.Object" />
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="lf">An <see cref="T:System.Object" /> that represents the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" />.</param>
        <param name="hdc">A handle to a device context that contains additional information about the <c>lf</c> structure.</param>
        <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified GDI logical font (<c>LOGFONT</c>) structure.</summary>
        <returns>The <see cref="T:System.Drawing.Font" /> that this method creates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `LOGFONT`、または論理のフォントが特定のフォントを表す 14 個のプロパティを格納する構造体。 詳細についてを参照してください「の論理フォント」で、Windows 開発ドキュメント[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The font is not a TrueType font.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GdiCharSet">
      <MemberSignature Language="C#" Value="public byte GdiCharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 GdiCharSet" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.GdiCharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GdiCharSet As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte GdiCharSet { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.GdiCharSet : byte" Usage="System.Drawing.Font.GdiCharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a byte value that specifies the GDI character set that this <see cref="T:System.Drawing.Font" /> uses.</summary>
        <value>指定するバイト値、[です。INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 文字セットをこの<see cref="T:System.Drawing.Font" />を使用します。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 別の文字セットを指定しない限り、このプロパティは 1 を返します、<xref:System.Drawing.Font.%23ctor%28System.String%2CSystem.Single%2CSystem.Drawing.FontStyle%2CSystem.Drawing.GraphicsUnit%2CSystem.Byte%29>コンス トラクターです。 このプロパティは、Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値をとります。 文字セットとバイト値は、次の表に一覧表示されます。  
  
|文字セット|[値]|  
|-------------------|-----------|  
|ANSI|0|  
|DEFAULT|1|  
|シンボル|2|  
|語は SHIFTJIS|128|  
|ハングル文字|129|  
|ハングル|129|  
|GB2312|134|  
|CHINESEBIG5|136|  
|OEM|255|  
|JOHAB|130|  
|ヘブライ語|177|  
|アラビア語|178|  
|ギリシャ語|161|  
|トルコ語|162|  
|ベトナム語|163|  
|タイ語|222|  
|EASTEUROPE|238|  
|ロシア語|204|  
|MAC|77|  
|バルト語|186|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GdiVerticalFont">
      <MemberSignature Language="C#" Value="public bool GdiVerticalFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GdiVerticalFont" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.GdiVerticalFont" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GdiVerticalFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GdiVerticalFont { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GdiVerticalFont : bool" Usage="System.Drawing.Font.GdiVerticalFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a Boolean value that indicates whether this <see cref="T:System.Drawing.Font" /> is derived from a GDI vertical font.</summary>
        <value>
          <see langword="true" /> この場合<see cref="T:System.Drawing.Font" />から派生したは、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 縦書きフォントです。それ以外の場合、<see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、フォントが Unicode 以外のプラットフォームでネイティブの Win32 コントロールとの互換性を判断します。  
  
 <xref:System.Drawing.Font.GdiVerticalFont%2A> のみを返します`true`クラシック GDI からこのフォントを作成した場合  
  
 フォントの定義、LOGFONT または HFONT と同様にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="font.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the hash code for this <see cref="T:System.Drawing.Font" />.</summary>
        <returns>The hash code for this <see cref="T:System.Drawing.Font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   
          <xref:System.Drawing.Font> を作成します。  
  
-   そのフォントのハッシュ コードを取得します。  
  
-   ハッシュ コードの値を含むメッセージ ボックスが表示されます。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicFontsExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHeight">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the line spacing of this font.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHeight" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHeight () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetHeight();" />
      <MemberSignature Language="F#" Value="member this.GetHeight : unit -&gt; single" Usage="font.GetHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the line spacing, in pixels, of this font.</summary>
        <returns>The line spacing, in pixels, of this font.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行間隔、<xref:System.Drawing.Font>は、次の 2 つの連続するテキスト行のベース ライン間の垂直距離です。 したがって、線の間隔には、文字そのものの高さと線の間の空白のスペースが含まれています。  
  
 場合、<xref:System.Drawing.Font.Unit%2A>フォントのプロパティが何もする以外の<xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>、画面表示の垂直方向の解像度を使用して、高さ (ピクセル単位) を計算します。 たとえば、フォントの単位がインチと 0.3 のフォント サイズです。 また、対応するフォント ファミリと仮定します、em の高さが 2048、行間 2355 です。 、垂直方向の解像度が 96 ドット/インチの画面表示のように高さを計算できます。  
  
 2355*(0.3/2048)\*96 = 33.11719  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight (System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetHeight(class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetHeight(System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.GetHeight : System.Drawing.Graphics -&gt; single" Usage="font.GetHeight graphics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="graphics">A <see cref="T:System.Drawing.Graphics" /> that holds the vertical resolution, in dots per inch, of the display device as well as settings for page unit and page scale.</param>
        <summary>Returns the line spacing, in the current unit of a specified <see cref="T:System.Drawing.Graphics" />, of this font.</summary>
        <returns>The line spacing, in pixels, of this font.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行間隔、<xref:System.Drawing.Font>は、次の 2 つの連続するテキスト行のベース ライン間の垂直距離です。 したがって、線の間隔には、文字そのものの高さと線の間の空白のスペースが含まれています。  
  
 場合、<xref:System.Drawing.Font.Unit%2A>フォントのプロパティが何もする以外の<xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>、高さをピクセル単位では、指定した垂直方向の解像度を使って計算<xref:System.Drawing.Graphics>オブジェクト。 たとえば、フォントの単位がインチと 0.3 のフォント サイズです。 また、対応するフォント ファミリと仮定します、em の高さが 2048、行間 2355 です。 場合、<xref:System.Drawing.Graphics>オブジェクトが、<xref:System.Drawing.Font.Unit%2A>のプロパティの値<xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>と<xref:System.Drawing.Graphics.DpiY%2A>96 ドット/インチ、高さのプロパティの値が次のように計算されます。  
  
 2355*(0.3/2048)\*96 = 33.1171875  
  
 たとえば、ある同じ例を続行、<xref:System.Drawing.Font.Unit%2A>のプロパティ、<xref:System.Drawing.Graphics>にオブジェクトが設定されている<xref:System.Drawing.GraphicsUnit.Millimeter?displayProperty=nameWithType>なく<xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>です。 (1 インチ = 25.4 ミリメートルを使用) し、高さをミリメートル単位では次のように計算されます。  
  
 2355*(0.3/2048)25.4 = 8.762256  
  
   
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   
          <xref:System.Drawing.Font> を作成します。  
  
-   行のテキストを new を使用して、画面に描画<xref:System.Drawing.Font>です。  
  
-   フォントの高さを取得します。  
  
-   2 番目の行の最初の行のすぐ下のテキストを描画します。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicFontsExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public float GetHeight (float dpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetHeight(float32 dpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.GetHeight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHeight (dpi As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetHeight(float dpi);" />
      <MemberSignature Language="F#" Value="member this.GetHeight : single -&gt; single" Usage="font.GetHeight dpi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dpi">The vertical resolution, in dots per inch, used to calculate the height of the font.</param>
        <summary>Returns the height, in pixels, of this <see cref="T:System.Drawing.Font" /> when drawn to a device with the specified vertical resolution.</summary>
        <returns>The height, in pixels, of this <see cref="T:System.Drawing.Font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Drawing.Font.Unit%2A>フォントのプロパティが何もする以外の<xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>、画面表示の垂直方向の解像度を使用して、高さ (ピクセル単位) を計算します。 たとえば、フォントの単位がインチと 0.3 のフォント サイズです。 また、対応するフォント ファミリと仮定します、em の高さが 2048、行間 2355 です。 指定の垂直方向の解像度が 96 ドット/インチである場合は、高さは、次のように計算されます。  
  
 2355*(0.3/2048)\*96 = 33.1171875  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="System.Drawing.Font.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line spacing of this font.</summary>
        <value>フォントの行間 (ピクセル単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行間とは、2 つの連続するテキスト行のベース ライン間の垂直距離です。 したがって、線の間隔には、文字そのものの高さと線の間の空白のスペースが含まれています。  
  
 場合、<xref:System.Drawing.Font.Unit%2A>フォントのプロパティが何もする以外の<xref:System.Drawing.GraphicsUnit.Pixel?displayProperty=nameWithType>、画面表示の垂直方向の解像度を使用して、高さ (ピクセル単位) を計算します。 たとえば、フォントの単位がインチと 0.3 のフォント サイズです。 また、対応するフォント ファミリと仮定します、em の高さが 2048、行間 2355 です。 、垂直方向の解像度が 96 ドット/インチの画面表示のように高さを計算できます。  
  
 2355*(0.3/2048)\*96 = 33.11719  
  
 によって返される値、<xref:System.Drawing.Font.GetHeight%2A>メソッドは 33.11719 として返される値、<xref:System.Drawing.Font.Height%2A>プロパティ 34 になります。 <xref:System.Drawing.Font.Height%2A>プロパティによって返される値は、 <xref:System.Drawing.Font.GetHeight%2A>、最も近い整数に切り上げられます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemFont">
      <MemberSignature Language="C#" Value="public bool IsSystemFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystemFont" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.IsSystemFont" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystemFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSystemFont { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystemFont : bool" Usage="System.Drawing.Font.IsSystemFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the font is a member of <see cref="T:System.Drawing.SystemFonts" />.</summary>
        <value>フォントが <see cref="T:System.Drawing.SystemFonts" /> のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーには、システム フォントが変更されたときに、<xref:System.Drawing.Font.IsSystemFont%2A>プロパティが返すことが`true`フォントが実際にはシステム フォントではない場合でも、します。 アプリケーションでのシステム フォントを使用している場合は、このような状況を避けるため、処理することによりユーザーの基本設定の変更を追跡する必要があります、<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging>または<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic">
      <MemberSignature Language="C#" Value="public bool Italic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Italic" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Italic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Italic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Italic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Italic : bool" Usage="System.Drawing.Font.Italic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this font has the italic style applied.</summary>
        <value>このフォントに斜体スタイルが適用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Drawing.Font.Style" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Drawing.Font.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.FontNameEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter/FontNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the face name of this <see cref="T:System.Drawing.Font" />.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> の書体名の文字列形式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターと<xref:System.Drawing.Font.Size%2A>、 <xref:System.Drawing.Font.SizeInPoints%2A>、 <xref:System.Drawing.Font.Name%2A>、 <xref:System.Drawing.Font.Style%2A>、および<xref:System.Drawing.Font.Unit%2A>プロパティです。 この例を含む Windows フォームで使用するように設計された、<xref:System.Windows.Forms.ComboBox>という`ComboBox1`「大規模」、「小さい」の文字列に設定されます。 次のコードをフォームに貼り付け、`ComboBox1_SelectedIndexChanged`メソッドを<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>のイベント、<xref:System.Windows.Forms.ComboBox>コントロール。  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFontName">
      <MemberSignature Language="C#" Value="public string OriginalFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFontName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.OriginalFontName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFontName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalFontName : string" Usage="System.Drawing.Font.OriginalFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the font originally specified.</summary>
        <value>最初に指定したフォントの名前を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元のフォント名と実際のフォントの名前が異なるできます。 システム要件以外、最初に指定されたフォントのフォントの使用があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public float Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Size { float get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : single" Usage="System.Drawing.Font.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the em-size of this <see cref="T:System.Drawing.Font" /> measured in the units specified by the <see cref="P:System.Drawing.Font.Unit" /> property.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> の em サイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターと<xref:System.Drawing.Font.Size%2A>、 <xref:System.Drawing.Font.SizeInPoints%2A>、および<xref:System.Drawing.Font.Unit%2A>プロパティです。 この例を含む Windows フォームで使用するように設計された、<xref:System.Windows.Forms.ComboBox>という`ComboBox1`「大規模」、「小さい」の文字列に設定されます。 次のコードをフォームに貼り付け、`ComboBox1_SelectedIndexChanged`メソッドを<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>のイベント、<xref:System.Windows.Forms.ComboBox>コントロール。  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeInPoints">
      <MemberSignature Language="C#" Value="public float SizeInPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SizeInPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.SizeInPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SizeInPoints As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float SizeInPoints { float get(); };" />
      <MemberSignature Language="F#" Value="member this.SizeInPoints : single" Usage="System.Drawing.Font.SizeInPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the em-size, in points, of this <see cref="T:System.Drawing.Font" />.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> の em サイズ (ポイント)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターと<xref:System.Drawing.Font.Size%2A>、 <xref:System.Drawing.Font.SizeInPoints%2A>、および<xref:System.Drawing.Font.Unit%2A>プロパティです。 この例を含む Windows フォームで使用するように設計された、<xref:System.Windows.Forms.ComboBox>という`ComboBox1`「大規模」、「小さい」の文字列に設定されます。 次のコードをフォームに貼り付け、`ComboBox1_SelectedIndexChanged`メソッドを<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>のイベント、<xref:System.Windows.Forms.ComboBox>コントロール。  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strikeout">
      <MemberSignature Language="C#" Value="public bool Strikeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Strikeout" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Strikeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Strikeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Strikeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Strikeout : bool" Usage="System.Drawing.Font.Strikeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> specifies a horizontal line through the font.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> がフォントを通る水平線を持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Drawing.FontStyle Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.FontStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As FontStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::FontStyle Style { System::Drawing::FontStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Drawing.FontStyle" Usage="System.Drawing.Font.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets style information for this <see cref="T:System.Drawing.Font" />.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> のスタイル情報が格納されている <see cref="T:System.Drawing.FontStyle" /> 列挙体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Drawing.Font>新しい太字のフォントを使用して、ボタンのプロパティ、<xref:System.Drawing.FontStyle>列挙します。 この例は、Windows フォームで使用するよう設計されています。 という名前のボタンを含むフォームを作成`Button1`し、次のコードを貼り付けます。 関連付ける、`Button1_Click`ボタンのメソッド<xref:System.Windows.Forms.Control.Click>イベント。  
  
 [!code-cpp[System.Drawing.MiscExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.MiscExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.MiscExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
        <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemFontName">
      <MemberSignature Language="C#" Value="public string SystemFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemFontName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.SystemFontName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemFontName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemFontName : string" Usage="System.Drawing.Font.SystemFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the system font if the <see cref="P:System.Drawing.Font.IsSystemFont" /> property returns <see langword="true" />.</summary>
        <value>
          <see cref="P:System.Drawing.Font.IsSystemFont" /> が <see langword="true" /> を返す場合はシステム フォントの名前。それ以外の場合は空の文字列 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返される名、<xref:System.Drawing.Font.SystemFontName%2A>プロパティには、メンバーのいずれかになります、<xref:System.Drawing.SystemFonts>文字列に変換されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHfont">
      <MemberSignature Language="C#" Value="public IntPtr ToHfont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int ToHfont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToHfont" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHfont () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr ToHfont();" />
      <MemberSignature Language="F#" Value="member this.ToHfont : unit -&gt; nativeint" Usage="font.ToHfont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a handle to this <see cref="T:System.Drawing.Font" />.</summary>
        <returns>A Windows handle to this <see cref="T:System.Drawing.Font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用する場合は、結果を破棄する必要があります`Hfont`を使用して、 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject`メソッドに、リソースが解放されます。  
  
   
  
## Examples  
 次のコード例を作成、<xref:System.Drawing.Font>をへのハンドルを取得および<xref:System.Drawing.Font>です。 Windows フォームで使用するため、例の目的を必要と<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicFontsExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">The operation was unsuccessful.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLogFont">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a GDI logical font (<c>LOGFONT</c>) structure from this <see cref="T:System.Drawing.Font" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLogFont">
      <MemberSignature Language="C#" Value="public void ToLogFont (object logFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToLogFont(object logFont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToLogFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToLogFont (logFont As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToLogFont(System::Object ^ logFont);" />
      <MemberSignature Language="F#" Value="member this.ToLogFont : obj -&gt; unit" Usage="font.ToLogFont logFont" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logFont" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="logFont">An <see cref="T:System.Object" /> to represent the <see langword="LOGFONT" /> structure that this method creates.</param>
        <summary>Creates a GDI logical font (<c>LOGFONT</c>) structure from this <see cref="T:System.Drawing.Font" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを設定、`logFont`フォントが変換の結果のパラメーターです。 論理フォントの詳細については、次を参照してください。 [LOGFONT 構造](http://msdn.microsoft.com/library/dd145037.aspx)です。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ToLogFont">
      <MemberSignature Language="C#" Value="public void ToLogFont (object logFont, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToLogFont(object logFont, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToLogFont(System::Object ^ logFont, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.ToLogFont : obj * System.Drawing.Graphics -&gt; unit" Usage="font.ToLogFont (logFont, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logFont" Type="System.Object" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="logFont">An <see cref="T:System.Object" /> to represent the <see langword="LOGFONT" /> structure that this method creates.</param>
        <param name="graphics">A <see cref="T:System.Drawing.Graphics" /> that provides additional information for the <see langword="LOGFONT" /> structure.</param>
        <summary>Creates a GDI logical font (<c>LOGFONT</c>) structure from this <see cref="T:System.Drawing.Font" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを設定、`logFont`フォントが変換の結果のパラメーターです。 論理フォントの詳細については、次を参照してください。 [LOGFONT 構造](http://msdn.microsoft.com/library/dd145037.aspx)です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> is <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">アンマネージ コードにアクセスします。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Font.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="font.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a human-readable string representation of this <see cref="T:System.Drawing.Font" />.</summary>
        <returns>A string that represents this <see cref="T:System.Drawing.Font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返される文字列には、次の形式があります。  
  
 [フォント: 名前 =*fontName*、サイズ =*サイズ*、ユニット =*ユニット*、GDiCharSet =*gdiCharSet*、GdiVerticalFont =*ブール*]  
  
   
  
## Examples  
 次のコード例は Windows フォームで使用するために設計され、必要があります<xref:System.Windows.Forms.PaintEventArgs>`e`はのパラメーターである、<xref:System.Windows.Forms.Control.Paint>イベント ハンドラー。 コードは、次のアクションを実行します。  
  
-   
          <xref:System.Drawing.Font> を作成します。  
  
-   フォントを表す文字列を取得します。  
  
-   メッセージ ボックスに、文字列を表示します。  
  
 [!code-cpp[System.Drawing.ClassicFontsExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicFontsExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicFontsExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontsExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public bool Underline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Underline" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Underline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Underline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Underline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Underline : bool" Usage="System.Drawing.Font.Underline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> is underlined.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> が下線付きの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unit">
      <MemberSignature Language="C#" Value="public System.Drawing.GraphicsUnit Unit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.GraphicsUnit Unit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Font.Unit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unit As GraphicsUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::GraphicsUnit Unit { System::Drawing::GraphicsUnit get(); };" />
      <MemberSignature Language="F#" Value="member this.Unit : System.Drawing.GraphicsUnit" Usage="System.Drawing.Font.Unit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter/FontUnitConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.GraphicsUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unit of measure for this <see cref="T:System.Drawing.Font" />.</summary>
        <value>この <see cref="T:System.Drawing.Font" /> の長さの単位を表す <see cref="T:System.Drawing.GraphicsUnit" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Drawing.Font.%23ctor%2A>コンス トラクターと<xref:System.Drawing.Font.Size%2A>、 <xref:System.Drawing.Font.SizeInPoints%2A>、および<xref:System.Drawing.Font.Unit%2A>プロパティです。 この例を含む Windows フォームで使用するように設計された、<xref:System.Windows.Forms.ComboBox>という`ComboBox1`「大規模」、「小さい」の文字列に設定されます。 次のコードをフォームに貼り付け、`ComboBox1_SelectedIndexChanged`メソッドを<xref:System.Windows.Forms.ComboBox.SelectedIndexChanged>のイベント、<xref:System.Windows.Forms.ComboBox>コントロール。  
  
 [!code-cpp[System.Drawing.FontsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.FontsExample/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.FontsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.FontsExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.FontsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.FontsExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>