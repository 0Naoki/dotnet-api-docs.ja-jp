<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3cd33420e3c9ab1872718713285569f6c1365879" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52908917" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b4311-101">ダブル バッファリングに使用できるグラフィックス バッファーを作成するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="b4311-101">Provides methods for creating graphics buffers that can be used for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-102"><xref:System.Drawing.BufferedGraphicsContext>グラフィックスのカスタムのダブル バッファリングを実装するクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="b4311-102">The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="b4311-103">ダブル バッファリングを使用するグラフィックスでは、削減したり、表示画面を再描画によるちらつきすることができます。</span><span class="sxs-lookup"><span data-stu-id="b4311-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4311-104">ダブル バッファリングを使用する最も簡単な方法を設定するのには、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>制御を使用してコントロールのスタイルのフラグ、<xref:System.Windows.Forms.Control.SetStyle%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b4311-104">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="b4311-105">設定、<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>コントロールのコントロールのスタイルのフラグは、追加のコードを必要とせず、既定のグラフィックス バッファーを使用してコントロールのすべての描画をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b4311-105">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="b4311-106">このフラグに設定されて`true`既定。</span><span class="sxs-lookup"><span data-stu-id="b4311-106">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="b4311-107"><xref:System.Drawing.BufferedGraphicsContext>クラスを作成して、グラフィックス バッファーを構成するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="b4311-107">The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer.</span></span> <span data-ttu-id="b4311-108"><xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドを作成、 <xref:System.Drawing.BufferedGraphics>、また、バッファーに書き込むし、出力デバイスにコンテンツのレンダリングに使用できる方法を提供するグラフィックス バッファーのラッパーであります。</span><span class="sxs-lookup"><span data-stu-id="b4311-108">The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="b4311-109">取得することができます、<xref:System.Drawing.BufferedGraphicsContext>の現在のアプリケーション ドメインを静的から<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b4311-109">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b4311-110">アニメーションなどの視覚的に処理を要するアプリケーションを作成、専用<xref:System.Drawing.BufferedGraphicsContext>、コンス トラクターを使用して、ほとんどのアプリケーションが、<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>プロパティは十分になります。</span><span class="sxs-lookup"><span data-stu-id="b4311-110">For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property will be sufficient.</span></span>  
  
 <span data-ttu-id="b4311-111">バッファリングされたグラフィックスとカスタムのバッファリングの実装の描画の詳細については、次を参照してください。[ダブル バッファリングされたグラフィックス](~/docs/framework/winforms/advanced/double-buffered-graphics.md)と[方法: バッファリングされたグラフィックス管理手動で](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)します。</span><span class="sxs-lookup"><span data-stu-id="b4311-111">For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4311-112">次のコード例は、取得する方法を示します、<xref:System.Drawing.BufferedGraphicsContext>の現在のアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="b4311-112">The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="b4311-113">このコードは示されている例の一部、<xref:System.Drawing.BufferedGraphics>クラス。</span><span class="sxs-lookup"><span data-stu-id="b4311-113">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-114">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-114">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4311-115"><see cref="T:System.Drawing.BufferedGraphicsContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b4311-115">Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-116">アニメーションなどの画像を多用するアプリケーションは、場合によってパフォーマンスを向上できます専用を使用して<xref:System.Drawing.BufferedGraphicsContext>によって提供される既定のインスタンスではなく、<xref:System.Drawing.BufferedGraphicsManager>します。</span><span class="sxs-lookup"><span data-stu-id="b4311-116">For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>.</span></span> <span data-ttu-id="b4311-117">これにより、作成およびグラフィックス バッファーを個別に管理することができます。</span><span class="sxs-lookup"><span data-stu-id="b4311-117">This allows you to create and manage graphics buffers individually.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4311-118">常に呼び出す必要があります<xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>専用使い終わったら<xref:System.Drawing.BufferedGraphicsContext>します。</span><span class="sxs-lookup"><span data-stu-id="b4311-118">You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 <span data-ttu-id="b4311-119">専用のグラフィックス バッファーの詳細については、次を参照してください。[方法: バッファリングされたグラフィックス管理手動で](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)します。</span><span class="sxs-lookup"><span data-stu-id="b4311-119">For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-120">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-120">Double Buffered Graphics</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md"><span data-ttu-id="b4311-121">方法 : バッファリングされたグラフィックスを手動で管理する</span><span class="sxs-lookup"><span data-stu-id="b4311-121">How to: Manually Manage Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4311-122">グラフィックス バッファーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b4311-122">Creates a graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics"><span data-ttu-id="b4311-123">新しいバッファーのピクセル形式を一致させる <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-123">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="b4311-124">作成するバッファーのサイズを示す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-124">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="b4311-125">指定した <see cref="T:System.Drawing.Graphics" /> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b4311-125">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b4311-126">指定したサイズのバッファーに描画するために使用できる <see cref="T:System.Drawing.BufferedGraphics" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-126">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-127">呼び出すと、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドに値を超えるサイズの四角形の<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>プロパティ、一時的な<xref:System.Drawing.BufferedGraphicsContext>バッファーを割り当てるし、バッファーの一時的なコンテキストを提供するが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b4311-127">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="b4311-128">新しい<xref:System.Drawing.BufferedGraphicsContext>とは異なる、<xref:System.Drawing.BufferedGraphicsContext>アプリケーションのドメインとそれが破棄された自動的にとき、<xref:System.Drawing.BufferedGraphics>によって返される、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b4311-128">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4311-129">使用してグラフィックス バッファーを作成する次のコード例に示します、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b4311-129">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="b4311-130">このコードは示されている例の一部、<xref:System.Drawing.BufferedGraphics>クラス。</span><span class="sxs-lookup"><span data-stu-id="b4311-130">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-131">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-131">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="b4311-132">新しいバッファーのピクセル形式を一致させるデバイス コンテキストの <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-132">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="b4311-133">作成するバッファーのサイズを示す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-133">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="b4311-134">指定した <see cref="T:System.Drawing.Graphics" /> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b4311-134">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b4311-135">指定したサイズのバッファーに描画するために使用できる <see cref="T:System.Drawing.BufferedGraphics" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-135">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-136">呼び出すと、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドに値を超えるサイズの四角形の<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>プロパティ、一時的な<xref:System.Drawing.BufferedGraphicsContext>バッファーを割り当てるし、バッファーの一時的なコンテキストを提供するが作成されます。</span><span class="sxs-lookup"><span data-stu-id="b4311-136">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="b4311-137">新しい<xref:System.Drawing.BufferedGraphicsContext>とは異なる、<xref:System.Drawing.BufferedGraphicsContext>アプリケーションのドメインとそれが破棄された自動的にとき、<xref:System.Drawing.BufferedGraphics>によって返される、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッドを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b4311-137">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4311-138">使用してグラフィックス バッファーを作成する次のコード例に示します、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b4311-138">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="b4311-139">このコードは示されている例の一部、<xref:System.Drawing.BufferedGraphics>クラス。</span><span class="sxs-lookup"><span data-stu-id="b4311-139">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4311-140">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="b4311-140">for access to unmanaged code.</span></span> <span data-ttu-id="b4311-141">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4311-141">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-142">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-142">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4311-143"><see cref="T:System.Drawing.BufferedGraphicsContext" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b4311-143">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-144"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> を使い終わったら <xref:System.Drawing.BufferedGraphicsContext> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b4311-144">Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="b4311-145"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>メソッドによって、<xref:System.Drawing.BufferedGraphicsContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="b4311-145">The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state.</span></span> <span data-ttu-id="b4311-146"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>呼び出し後は、<xref:System.Drawing.BufferedGraphicsContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Drawing.BufferedGraphicsContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b4311-146">After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying.</span></span> <span data-ttu-id="b4311-147">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b4311-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4311-148"><xref:System.Drawing.BufferedGraphicsContext>への最後の参照を解放する前に、必ず<xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="b4311-148">Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="b4311-149">ガベージ コレクター呼び出すまではそれ以外の場合、するを使用しているリソースが解放されません、<xref:System.Object.Finalize%2A>のメソッド、<xref:System.Drawing.BufferedGraphicsContext>します。</span><span class="sxs-lookup"><span data-stu-id="b4311-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-150">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-150">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4311-151">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="b4311-151">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4311-152">バッファーが割り当てられていてまだ破棄されていない場合に、現在のグラフィックス バッファーを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b4311-152">Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-153">グラフィックス バッファーを使用している場合、マークする必要が廃棄は無料です。 すぐそれ以外の場合、インスタンスは破棄されますすぐにします。</span><span class="sxs-lookup"><span data-stu-id="b4311-153">If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-154">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-154">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4311-155">使用するバッファーの最大サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b4311-155">Gets or sets the maximum size of the buffer to use.</span></span></summary>
        <value><span data-ttu-id="b4311-156">バッファーの最大サイズを示す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="b4311-156">A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4311-157">このプロパティを取得またはメモリに保持するバッファーの最大サイズを設定できます。</span><span class="sxs-lookup"><span data-stu-id="b4311-157">This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</span></span> <span data-ttu-id="b4311-158">大きいディメンションを含むバッファーのいずれかが、任意のサイズのバッファーを割り当てることができます、<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>のサイズになりますで一時的に使用し、その後破棄するときに、<xref:System.Drawing.BufferedGraphics>オブジェクトを解放します。</span><span class="sxs-lookup"><span data-stu-id="b4311-158">You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4311-159">次の例でのバッファーの最大サイズを設定、<xref:System.Drawing.BufferedGraphicsContext>します。</span><span class="sxs-lookup"><span data-stu-id="b4311-159">The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="b4311-160">このコードは示されている例の一部、<xref:System.Drawing.BufferedGraphics>クラス。</span><span class="sxs-lookup"><span data-stu-id="b4311-160">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4311-161">サイズの高さまたは幅が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="b4311-161">The height or width of the size is less than or equal to zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="b4311-162">すべての windows へのユーザー アクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="b4311-162">for allowing user access to all windows.</span></span> <span data-ttu-id="b4311-163">関連する列挙。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="b4311-163">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="b4311-164">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="b4311-164">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>