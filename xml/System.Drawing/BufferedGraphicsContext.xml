<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphicsContext.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56cebe4384e5215400e3718cf0dc794274c63580a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cebe4384e5215400e3718cf0dc794274c63580a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Provides methods for creating graphics buffers that can be used for double buffering.</source>
          <target state="translated">ダブル バッファリングに使用できるグラフィックス バッファーを作成するためのメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>クラスでは、グラフィックスのカスタムのダブル バッファリングを実装することができます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">ダブル バッファリングを使用するグラフィックスを軽減または、画面の表面を再描画が原因で発生するちらつきを除去します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">ダブル バッファリングを使用する最も簡単な方法が設定するには、<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>を使用してコントロールのスタイル フラグを制御、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>コントロールのコントロールのスタイル フラグが追加のコードを必要とせず、既定のグラフィックス バッファーを使用してコントロールのすべての描画をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">このフラグに設定されている<ph id="ph1">`true`</ph>既定です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class provides methods for creating and configuring a graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>クラスを作成およびグラフィックス バッファーを構成するためのメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドを作成、 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>、これはまた、バッファーに書き込むし、出力デバイスにコンテンツのレンダリングに使用できる方法を提供するグラフィックス バッファーのラッパー。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">取得することができます、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>静的から現在のアプリケーション ドメインに対する<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>For graphically intensive applications such as animation, you can create a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> using the constructor, but for most applications the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property will be sufficient.</source>
          <target state="translated">アニメーションなどの画像を多用するアプリケーションは、作成、専用<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>、コンス トラクターを使用して、ほとんどのアプリケーションが、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph>プロパティでは十分です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>For more information on drawing buffered graphics and custom buffering implementations, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept> and <bpt id="p2">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p2">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.</source>
          <target state="translated">バッファリングされたグラフィックスとバッファー処理のカスタム実装の描画の詳細については、次を参照してください。<bpt id="p1">[</bpt>ダブル バッファリングされたグラフィックス<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>と<bpt id="p2">[</bpt>する方法: バッファリングされたグラフィックス管理手動で<ept id="p2">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The following code example demonstrates how to acquire the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain.</source>
          <target state="translated">次のコード例では、取得、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>の現在のアプリケーション ドメイン。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例の一部である、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> instead of the default instance provided by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>.</source>
          <target state="translated">アニメーションなどの画像を多用するアプリケーションは、場合によってパフォーマンスを向上できる専用を使用して<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>によって提供される既定のインスタンスではなく、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>This allows you to create and manage graphics buffers individually.</source>
          <target state="translated">これにより、作成およびグラフィックス バッファーを個別に管理することができます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>You should always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you finish using a dedicated <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">常に呼び出す必要があります<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>専用の使用が終了するときに<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>For more information about dedicated graphics buffers, see <bpt id="p1">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.</source>
          <target state="translated">専用のグラフィックス バッファーの詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: バッファリングされたグラフィックス管理手動で<ept id="p1">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Creates a graphics buffer.</source>
          <target state="translated">グラフィックス バッファーを作成します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to match the pixel format for the new buffer to.</source>
          <target state="translated">新しいバッファーのピクセル形式を一致させる <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> indicating the size of the buffer to create.</source>
          <target state="translated">作成するバッファーのサイズを示す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">指定したサイズのバッファーに描画するために使用できる <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">呼び出すと、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドに値を超えるサイズの四角形の<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph>プロパティ、一時的な<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>バッファーを割り当てるし、バッファーの一時的なコンテキストを指定するために作成します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The new <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>とは異なります、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>アプリケーションのドメインが破棄されて自動的にとき、<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>によって返される、<ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドが破棄されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example demonstrates creating a graphics buffer using the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">グラフィックス バッファーを使用して、作成するコード例を次に示します、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例の一部である、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> to a device context to match the pixel format of the new buffer to.</source>
          <target state="translated">新しいバッファーのピクセル形式を一致させるデバイス コンテキストの <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> indicating the size of the buffer to create.</source>
          <target state="translated">作成するバッファーのサイズを示す <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated">指定したサイズのバッファーに描画するために使用できる <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">呼び出すと、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドに値を超えるサイズの四角形の<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph>プロパティ、一時的な<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>バッファーを割り当てるし、バッファーの一時的なコンテキストを指定するために作成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>The new <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>とは異なります、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>アプリケーションのドメインが破棄されて自動的にとき、<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>によって返される、<ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドが破棄されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>The following code example demonstrates creating a graphics buffer using the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">グラフィックス バッファーを使用して、作成するコード例を次に示します、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例の一部である、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>for access to unmanaged code.</source>
          <target state="translated">アンマネージ コードにアクセスします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Invalidate">
          <source>Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</source>
          <target state="translated">バッファーが割り当てられていてまだ破棄されていない場合に、現在のグラフィックス バッファーを破棄します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Invalidate">
          <source>If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</source>
          <target state="translated">グラフィックス バッファーが使用中にある場合は、マークされます廃棄されるとすぐに、無料です。それ以外の場合、インスタンスは破棄されますすぐにします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>Gets or sets the maximum size of the buffer to use.</source>
          <target state="translated">使用するバッファーの最大サイズを取得または設定します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> indicating the maximum size of the buffer dimensions.</source>
          <target state="translated">バッファーの最大サイズを示す <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</source>
          <target state="translated">このプロパティを取得またはメモリに保持するバッファーの最大サイズを設定できます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>You can allocate a buffer of any size, however any buffer with dimensions greater than the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> size will be used temporarily and then discarded when the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object is released.</source>
          <target state="translated">ただしより大きいサイズのバッファーのいずれかの任意のサイズのバッファーを割り当てることができます、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph>サイズになります一時的に使用され、破棄時に、<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>オブジェクトを解放します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>The following example demonstrates setting the maximum size for the buffer for a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">次の例でのバッファーの最大サイズを設定、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">このコードに示されている例の一部である、<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>The height or width of the size is less than or equal to zero.</source>
          <target state="translated">サイズの高さまたは幅が 0 以下です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>for allowing user access to all windows.</source>
          <target state="translated">すべての windows へのユーザー アクセスを許可します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>