<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionAuthenticationModule.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b7d2c3e066c7161e9965fffcf3d748c0a45c666c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7d2c3e066c7161e9965fffcf3d748c0a45c666c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.</source>
          <target state="translated">WS-Federation シナリオのセッション クッキーを処理する ASP.NET モジュールを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>When present in the ASP.NET pipeline, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) processes session cookies in WS-Federation scenarios.</source>
          <target state="translated">ASP.NET パイプラインに存在する場合、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) は、WS フェデレーション シナリオでセッション cookie を処理します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It uses the cookie handler specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property to read the raw session cookie from the HTTP request and write it to the HTTP response.</source>
          <target state="translated">指定されたクッキー ハンドラーを使用して、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>を HTTP 要求から未加工のセッションの cookie を読み取り、HTTP 応答への書き込みプロパティです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It uses the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that is configured for an application to deserialize the raw session cookie into <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> objects.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>に生のセッションの cookie を逆シリアル化するアプリケーション用に構成された<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The session security token contains the claims (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>) and principal (<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) associated with the entity for which the request is being served.</source>
          <target state="translated">セッション セキュリティ トークンにはクレームが含まれています (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>) とプリンシパル (<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) 要求の処理対象のエンティティに関連付けられています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The SAM adds its <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> event handler to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the ASP.NET pipeline.</source>
          <target state="translated">SAM 追加その<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>イベント ハンドラーを<ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph>ASP.NET パイプライン内のイベントです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> properties to the claims principal contained in the session token.</source>
          <target state="translated">このハンドラー サインイン要求をインターセプトし、セッションの cookie がある場合、セッション トークンに逆シリアル化、設定、<ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph>セッション トークンに含まれる要求プリンシパルのプロパティです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It invokes several of the other methods exposed by the SAM during this process.</source>
          <target state="translated">この処理中、SAM によって公開されている他のメソッドのいくつかを呼び出します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> (たとえば、SignOut.aspx.cs 分離コード ファイル) に、セッションからユーザーをサインインするメソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The SAM exposes several events that provide access to its processing pipeline.</source>
          <target state="translated">SAM は、その処理パイプラインへのアクセスを提供するいくつかのイベントを公開します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> events enable you to modify session tokens that are read from cookies or created during processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph>cookie からの読み取りまたは処理中に作成されたセッション トークンを変更するイベントが有効にします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time.</source>
          <target state="translated">通常、これは追加、削除、または、トークンの要求を変換するか、有効期限を調整する行います。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> events provide hooks into the processing of sign-out requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>、 <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>、および<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph>イベントは、サインアウト要求の処理にフックを実現します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.</source>
          <target state="translated">多くのシナリオで global.asax.cs ファイルに多くの場合、これらのイベントのハンドラーを追加するだけでは十分です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>For more complicated scenarios, you can derive from <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> to implement a custom SAM.</source>
          <target state="translated">派生できますのより複雑なシナリオは、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>カスタム SAM を実装します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>To this end, many of the methods that are invoked during <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.</source>
          <target state="translated">このために、多くの中に呼び出されるメソッド<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>セッション処理ライフ サイクルの特定の段階でカスタム動作を提供できるように公開されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the <ph id="ph1">`&lt;system.webServer&gt;`</ph> element for IIS version 7 and later or under the <ph id="ph2">`&lt;system.web&gt;`</ph> element for versions prior to IIS 7.</source>
          <target state="translated">SAM を構成ファイル内の ASP.NET パイプラインに追加するにはいずれかで HTTP モジュールに追加することによって、 <ph id="ph1">`&lt;system.webServer&gt;`</ph> IIS 7 以降のバージョンのまたは下にある要素、 <ph id="ph2">`&lt;system.web&gt;`</ph> IIS 7 より前のバージョンの要素。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The cookie handler used by the SAM can be configured with the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">SAM によって使用されるクッキー ハンドラーを構成できます、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The following XML shows how to configure the SAM in the ASP.NET pipeline.</source>
          <target state="translated">次の XML では、ASP.NET パイプラインの SAM を構成する方法を示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Many other elements that are present in a typical configuration are omitted here for brevity.</source>
          <target state="translated">簡略化のためここでは、一般的な構成に存在するその他の多くの要素は省略します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized to a default instance of the <ph id="ph4">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`false`</ph>と<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>プロパティは、の既定のインスタンスを初期化、<ph id="ph4">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>The session security token to use to authenticate the incoming HTTP request.</source>
          <target state="translated">受信 HTTP 要求を認証するために使用するセッション セキュリティ トークン。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to write the session cookie; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">セッション クッキーを記述する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>Authenticates the incoming request by validating the incoming session token.</source>
          <target state="translated">受信セッション トークンを検証することにより受信要求を認証します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>Upon successful validation, it updates the current HTTP context and thread principal with the specified  <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">検証が成功した後、指定した <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を使用して、現在の HTTP コンテキストとスレッドのプリンシパルを更新します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method is called from the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph>からメソッドを呼び出した、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph> method to validate the incoming token and update the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph>受信トークンと更新プログラムを検証するメソッド、<ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph>プロパティ。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>If the <ph id="ph1">`writeCookie`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> method is invoked to write the session token to a cookie.</source>
          <target state="translated">場合、<ph id="ph1">`writeCookie`</ph>パラメーターは<ph id="ph2">`true`</ph>、 <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> cookie にセッション トークンを書き込むメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source>The collection of cookies in which to search.</source>
          <target state="translated">検索場所のクッキーのコレクション。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source>Determines whether a session cookie is in the specified cookie collection.</source>
          <target state="translated">セッション クッキーが指定したクッキー コレクション内にあるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a session cookie is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">セッション クッキーが見つかった場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source><ph id="ph1">&lt;paramref name="httpCookieCollection" /&gt;</ph> is null</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="httpCookieCollection" /&gt;</ph> が null です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
          <source>Gets the active <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> for the current <ph id="ph2">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> のアクティブな <ph id="ph2">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
          <source>The active session security token.</source>
          <target state="translated">アクティブなセッション セキュリティ トークン。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>Gets the cookie handler that is used to read, write, and delete session cookies.</source>
          <target state="translated">セッション クッキーの読み取り、書き込み、および削除に使用されるクッキー ハンドラーを取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>The cookie handler.</source>
          <target state="translated">クッキー ハンドラー。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized by the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>によってプロパティが初期化されて、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>This method initializes the property based on the cookie handler specified on the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph> object that is set on the <ph id="ph2">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このメソッドで指定されたクッキー ハンドラーに基づき、このプロパティは初期化、<ph id="ph1">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph>に設定されているオブジェクト、<ph id="ph2">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>You can set the cookie handler in a configuration file through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">構成ファイルで、クッキー ハンドラーを設定することができます、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The principal to be captured in the token.</source>
          <target state="translated">トークンでキャプチャされるプリンシパル。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>An application-defined context string.</source>
          <target state="translated">アプリケーション定義のコンテキスト文字列。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The first instant in which this token is valid.</source>
          <target state="translated">このトークン有効期間の開始時点。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The last instant in which this token is valid.</source>
          <target state="translated">このトークン有効期間の最終時点。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value should be persisted by the user agent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">値をユーザー エージェントによって永続化する必要がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from the specified parameters by using the configured session token handler.</source>
          <target state="translated">構成済みのセッション トークン ハンドラーを使用して指定されたパラメーターから <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The session token.</source>
          <target state="translated">セッション トークン。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">有効なセッション トークン ハンドラーが構成されていません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> プロパティに <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> が構成されていません)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>Deletes the session cookie and removes it from the cache.</source>
          <target state="translated">セッション クッキーを削除し、キャッシュから削除します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>Deletes the session cookie by using the cookie handler specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.</source>
          <target state="translated">指定されたクッキー ハンドラーを使用して、セッションの cookie を削除、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>This method is called during sign-out by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.</source>
          <target state="translated">中にこのメソッドは、サインアウト、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>The HTTP application object that contains this module.</source>
          <target state="translated">このモジュールを格納する HTTP アプリケーション オブジェクト。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>Initializes the module and prepares it to handle events from the module's <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> application object.</source>
          <target state="translated">モジュールを初期化し、モジュールの <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> アプリケーション オブジェクトからイベントを処理できるように準備します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>Adds the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handlers to the <ph id="ph3">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> events of the application object specified by the <ph id="ph5">`context`</ph> parameter.</source>
          <target state="translated">追加、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph>ハンドラーを<ph id="ph3">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph>と<ph id="ph4">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph>で指定されたアプリケーション オブジェクトのイベント、<ph id="ph5">`context`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>Initializes the module properties based on definitions in the configuration file.</source>
          <target state="translated">構成ファイルの定義に基づいてモジュール プロパティを初期化します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property from the handler specified in configuration by the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType&gt;</ph> object that is set on the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">初期化、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>プロパティによって構成で指定したハンドラーから、<ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType&gt;</ph>に設定されているオブジェクト、<ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>You can specify the cookie handler in a configuration file through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">クッキー ハンドラーをから構成ファイルで指定することができます、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.</source>
          <target state="translated">セッション情報 (クレーム値など) をセッション クッキーに保存するか、またはセッションの内容を、クッキーを使用して参照だけを保存することにより、サーバー側で保存するかを指定する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if issued cookies are in reference mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">発行されたクッキーが参照モードの場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, which specifies that issued cookies are not in reference mode.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> で、これは発行されたクッキーが参照モードでないことを示します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>In reference mode, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> is stored in a server-side cache (an object that derives from <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>).</source>
          <target state="translated">参照モードで、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>サーバー側のキャッシュに格納されます (オブジェクトから派生した<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>The issued cookie just contains a context identifier that is used to retrieve the token from the cache.</source>
          <target state="translated">発行された cookie には、キャッシュからトークンの取得に使用されるコンテキスト識別子にはのみが含まれます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>To operate in reference mode, Microsoft recommends providing a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and setting the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property on the token passed in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ハンドラーを提供することをお勧め参照モードで動作する、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType&gt;</ph> global.asax.cs ファイルと設定でイベント、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>に渡されたトークンのプロパティ、<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property on the Session Authentication Module.</source>
          <target state="translated">セッション トークンが要求ごとに参照モードで動作し、単なる設定が優先これにより、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>セッション認証モジュールのプロパティです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The source for the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This will be an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> object.</source>
          <target state="translated">これは <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event from the <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> パイプラインの <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベントを処理します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This method does the following:</source>
          <target state="translated">このメソッドは、次のこと。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph> method to read a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> from the session cookie, if one is present.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph>を読み取る方法、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>が存在する場合、セッション クッキーからです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If a session security token cannot be read (most likely because a session has not been established), return.</source>
          <target state="translated">場合、セッション セキュリティ トークンにすることはできません (ほとんどの場合、セッションが確立されていないため、読み取りを返します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph>させる方法、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled.</source>
          <target state="translated">これにより、変更する cookie から読み取られたトークンのまたは要求のキャンセルに、営業案件が提供します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The handler can also specify that the token should be reissued, by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ハンドラーは、トークンを再発行を設定しても指定できます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If the token is to be reissued, removes it from the cache and invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event.</source>
          <target state="translated">トークンを再発行する場合は、キャッシュから削除しを呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph>させる方法、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This provides opportunity for the token to again be modified.</source>
          <target state="translated">これは、もう一度変更するトークンの機会を提供します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The reissue behavior can also be modified by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> property in the event handler.</source>
          <target state="translated">設定して再発行動作を変更することも、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph>イベント ハンドラーのプロパティです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method to authenticate the user.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph>ユーザーを認証する方法です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If successful, this has the effect of setting the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property to the principal that is contained in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType&gt;</ph> property of the incoming token.</source>
          <target state="translated">かどうかは成功すると、これは、設定の<ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph>プロパティに含まれているプリンシパルを<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType&gt;</ph>着信トークンのプロパティです。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If the session has expired, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.</source>
          <target state="translated">セッションの有効期限が切れて場合を呼び出して、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method is added to the handlers for the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>メソッドが対応するハンドラーを追加、<ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph>内のイベント、<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">有効なセッション トークン ハンドラーが構成されていません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> プロパティに <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> が構成されていません)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The source for the event.</source>
          <target state="translated">イベントのソース。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This will be an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> object.</source>
          <target state="translated">これは <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> オブジェクトです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event from the <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> パイプラインの <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> イベントを処理します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The default implementation is empty.</source>
          <target state="translated">既定の実装は、空です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handler is added to the handlers for the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph>にハンドラーは、ハンドラーが追加されて、<ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph>内のイベント、<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">呼び出される、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">呼び出される、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method after the sign-out has been performed and the session cookie has been deleted.</source>
          <target state="translated">このメソッドが呼び出されて、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>サインアウトが実行されているし、セッションの cookie が削除された後にします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method to perform sign-out. It is invoked before the session cookie is deleted.</source>
          <target state="translated">このメソッドが呼び出されて、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>サインアウトを実行するメソッド。セッションの cookie が削除される前に呼び出されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method if an error occurs during sign-out.</source>
          <target state="translated">このメソッドが呼び出されて、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>メソッド サインアウト時にエラーが発生した場合。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>The cookie, in raw form, that contains the session token.</source>
          <target state="translated">セッション トークンを含む生の形式のクッキー。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from the specified session cookie.</source>
          <target state="translated">指定されたセッション クッキーから <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取ります。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>The session token that was read from the cookie.</source>
          <target state="translated">クッキーから読み取られたセッション トークン。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">有効なセッション トークン ハンドラーが構成されていません。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> プロパティに <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> が構成されていません)</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>Occurs when a session security token has been created.</source>
          <target state="translated">セッション セキュリティ トークンが作成されたときに発生します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You can use this event to modify the session security token before it is written to a cookie.</source>
          <target state="translated">このイベントを使用して、cookie に書き込まれる前に、セッション セキュリティ トークンを変更することができます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event is raised from within the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph>内からイベントは、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>セッション トークンの後にメソッド (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) が作成されました。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>This happens, for example, if an event handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event modifies the token.</source>
          <target state="translated">これは、場合に発生、たとえば、イベント ハンドラーを<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph>イベントは、トークンを変更します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</source>
          <target state="translated">このイベントを使用して、パイプラインに沿ってさらに渡されるして、エンティティ (ユーザー) の要求の認証に使用する前にセッション トークンのプロパティを変更することができます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>In an event handler, you can access the token through the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">イベント ハンドラー内からトークンを表示できます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">変更した後、トークン、ことができますを確認することに書き込まれるバックアップ cookie を設定して、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>Unlike, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> is not a cancelable event.</source>
          <target state="translated">異なり、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph>イベント、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph>キャンセル可能なイベントではありません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">次のコードのハンドラーを示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> ASP.NET web アプリケーションの global.asax.cs ファイルで実装するイベントです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You must also add the handler to the event.</source>
          <target state="translated">イベントにハンドラーを追加することも必要があります。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">完全な例を示します、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>Occurs when a session security token has been read from a cookie.</source>
          <target state="translated">クッキーからセッション セキュリティ トークンを読み込んだときに発生します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is raised from within the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been successfully read from the session cookie.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph>内からイベントは、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph>セッション トークンの後にメソッド (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) セッション cookie から正常に読み取られています。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</source>
          <target state="translated">このイベントを使用して、パイプラインに沿ってさらに渡されるして、エンティティ (ユーザー) の要求の認証に使用する前にセッション トークンのプロパティを変更することができます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>One of the most common scenarios involves modifying the session expiration time (accessible through the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType&gt;</ph> property) to override the session expiration time set in configuration through the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element.</source>
          <target state="translated">最も一般的なシナリオの 1 つは、セッションの有効期限の時刻を変更 (経由でアクセスできる、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType&gt;</ph>プロパティ) によって構成で設定されたセッションの有効期限時刻を上書きする、<ph id="ph2">`lifetime`</ph>の属性、 <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.</source>
          <target state="translated">要求ごとにこのプロパティを変更するには、スライディング セッションを実装することができます。つまりを有効期間は延長各セッションは、サイト ユーザーのアクセス時間です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>In an event handler, you can access the token through the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">イベント ハンドラー内からトークンを表示できます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">変更した後、トークン、ことができますを確認することに書き込まれるバックアップ cookie を設定して、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph>に<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>Finally, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is a cancelable event, and you can set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph> to abort further processing of the request.</source>
          <target state="translated">最後に、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph>イベントがキャンセル可能なイベント、および設定することができます、<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph>をさらに、要求の処理を中止します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">次のコードのハンドラーを示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> ASP.NET web アプリケーションの global.asax.cs ファイルで実装するイベントです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>You must also add the handler to the event.</source>
          <target state="translated">イベントにハンドラーを追加することも必要があります。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">完全な例を示します、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The session token from which to set the principal.</source>
          <target state="translated">プリンシパルを設定するセッション トークン。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Sets the principal on the <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> to the principal that is contained in the specified session token.</source>
          <target state="translated">指定されたセッション トークンに含まれるプリンシパルに <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> と <ph id="ph2">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> のプリンシパルを設定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph> method and sets the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph4">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType&gt;</ph> using the identities that are returned.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph>メソッドとセット、<ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph>プロパティおよび<ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph>プロパティ<ph id="ph4">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType&gt;</ph>返される id を使用しています。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>This method is called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>Occurs after the user is signed out.</source>
          <target state="translated">ユーザーがサインアウトした後に発生します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just after the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.</source>
          <target state="translated">発生した、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>メソッド直後、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">このイベントは、すべてのセッションに対して呼び出されるようには保証されません。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">クライアント側で、cookie を削除する可能性がありますなどの場合は、このとしないイベント セッションを削除するためのサーバー側のイベントが存在しないためです。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">次のコードのハンドラーを示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph> ASP.NET web アプリケーションの global.asax.cs ファイルで実装するイベントです。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>You must also add the handler to the event.</source>
          <target state="translated">イベントにハンドラーを追加することも必要があります。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">完全な例を示します、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>Occurs before deleting the sign-in session.</source>
          <target state="translated">サインイン セッションを削除する前に発生します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just before the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.</source>
          <target state="translated">発生した、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>メソッド直前に、<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">このイベントは、すべてのセッションに対して呼び出されるようには保証されません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">クライアント側で、cookie を削除する可能性がありますなどの場合は、このとしないイベント セッションを削除するためのサーバー側のイベントが存在しないためです。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">次のコードのハンドラーを示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph> ASP.NET web アプリケーションの global.asax.cs ファイルで実装するイベントです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>You must also add the handler to the event.</source>
          <target state="translated">イベントにハンドラーを追加することも必要があります。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">完全な例を示します、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>Signs the current user out and raises the associated events.</source>
          <target state="translated">現在のユーザーからサインアウトして、関連したイベントを発生させます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph> methods to perform sign-out. If an exception occurs, the <ph id="ph4">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph> method is invoked to raise the <ph id="ph5">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event.</source>
          <target state="translated">呼び出す、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph>サインアウトを実行するメソッド。例外が発生する場合、<ph id="ph4">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph>させるメソッドが呼び出され、<ph id="ph5">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>You can set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.</source>
          <target state="translated">設定することができます、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph>サインアウトを取り消すし、例外がクライアントに反映されないようにするには、このイベントのイベント ハンドラーに渡されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>You can override this method to add application-specific behavior.</source>
          <target state="translated">アプリケーション固有の動作を追加するには、このメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>The following code shows code for invoking the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application.</source>
          <target state="translated">次のコードを呼び出すコードを示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> ASP.NET web アプリケーションで SignOut.aspx ページ (SignOut.aspx.cs) からのメソッドです。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">完全な例を示します、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>Occurs when there is an error during sign-out.</source>
          <target state="translated">サインアウト中にエラーが発生したときに発生します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method when an error occurs during sign-out.</source>
          <target state="translated">発生した、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph>メソッド サインアウト時にエラーが発生したときにします。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>In an event handler, you can get the exception that resulted in the event being raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">イベント ハンドラー内から発生するイベントの原因となった例外を取得できます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">さらに設定して、クライアントに例外が伝達されませんの結果のある例外の処理を取り消すことができます、<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph>に<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">このイベントは、すべてのセッションに対して呼び出されるようには保証されません。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">クライアント側で、cookie を削除する可能性がありますなどの場合は、このとしないイベント セッションを削除するためのサーバー側のイベントが存在しないためです。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">次のコードのハンドラーを示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> ASP.NET web アプリケーションの global.asax.cs ファイルで実装するイベントです。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>You must also add the handler to the event.</source>
          <target state="translated">イベントにハンドラーを追加することも必要があります。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">完全な例を示します、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>When this method returns, contains the session security token that was read from the session cookie.</source>
          <target state="translated">このメソッドから制御が戻るときに、セッション クッキーから読み取られたセッション セキュリティ トークンが格納されます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>Attempts to read a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a session cookie and returns a value that indicates whether the session cookie was successfully read.</source>
          <target state="translated">セッション クッキーから <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を読み取り、セッション クッキーが正常に読み取られたかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the session cookie was successfully read from the request; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">セッション クッキーが要求から正常に読み取られた場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>Reads the cookie by using the cookie handler that is configured in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property and then invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> method to read the token from the cookie.</source>
          <target state="translated">構成されているクッキー ハンドラーを使用して cookie を読み取って、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>プロパティが呼び出され、および、 <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> cookie のトークンを読み取ります。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to validate.</source>
          <target state="translated">検証するトークン。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validates the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> and returns its identities.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> を検証し、ID を返します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The collection of identities that are contained in the token.</source>
          <target state="translated">トークンに含まれている ID のコレクション。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>This method is called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>It invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType&gt;</ph> method of the configured session token handler to validate the token and extract its identities.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType&gt;</ph>トークンを検証し、その id を抽出する構成済みのセッション トークン ハンドラーのメソッドです。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token has expired.</source>
          <target state="translated">トークンの期限が切れています。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token start time is not yet valid.</source>
          <target state="translated">トークンの開始時刻はまだ有効ではありません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">有効なセッション トークン ハンドラーが構成されていません。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> プロパティに <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> が構成されていません)</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The session security token to write.</source>
          <target state="translated">書き込むセッション セキュリティ トークン。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Writes the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> to a session cookie.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> をセッション クッキーに書き込みます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Writes the cookie by using the cookie handler that is configured in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.</source>
          <target state="translated">構成されているクッキー ハンドラーを使用して cookie を書き込みます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessionToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessionToken" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">有効なセッション トークン ハンドラーが構成されていません。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> プロパティに <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> が構成されていません)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>