<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsPrincipalPermission.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac583e7d38da992c06fbcfa631ea8af70aebe6366f0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83e7d38da992c06fbcfa631ea8af70aebe6366f0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Represents a permission that uses a <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> implementation to determine if access to a resource should be granted to the active principal.</source>
          <target state="translated">リソースへのアクセスがアクティブなプリンシパルに許可されているかどうかを判断する <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> の実装を使用する権限を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class provides the capability to perform imperative access checks by using the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that is configured for an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>クラスを使用して強制アクセス チェックを実行する機能を提供する、<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>アプリケーションに対して構成されています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>By invoking the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> method or the static <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph> method, you can provide protection to resources from within the execution path of your code according to the authorization policy defined for your claims authentication manager.</source>
          <target state="translated">呼び出すことによって、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>メソッドまたは静的<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph>メソッド、信頼性情報、認証マネージャーで定義された承認ポリシーに従って、コードの実行パス内からのリソースへの保護を提供できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Declarative access checks can be performed by using the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class.</source>
          <target state="translated">宣言型のアクセス チェックを使用して実行することができます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class uses the claims authorization manager configured by the <ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> that is set under the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>クラスで構成されている要求の承認マネージャーを使用して、<ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph>で設定されている、<ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications.</source>
          <target state="translated">これは、Ws-federation が使用されていない; シナリオにおいても、すべてのケースに当てはまりますたとえば、アクティブな (WCF) Web アプリケーションおよびコンソール アプリケーションです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>You can specify the claims authorization manager either in configuration or programmatically.</source>
          <target state="translated">要求承認マネージャーの構成で、またはプログラムによって指定できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>To specify the claims authorization manager in a configuration file, set the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element under an <bpt id="p2">[</bpt><ph id="ph3">&amp;lt;</ph>identityConfiguration<ph id="ph4">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element and ensure that this identity configuration is referenced by the <bpt id="p3">[</bpt><ph id="ph5">&amp;lt;</ph>federationConfiguration<ph id="ph6">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)</ept> element that is loaded by the runtime (for example, by setting the <ph id="ph7">`identityConfigurationName`</ph> attribute).</source>
          <target state="translated">要求承認マネージャーを構成ファイルを指定する設定、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>要素の下、 <bpt id="p2">[</bpt> <ph id="ph3">&amp;lt;</ph>identityConfiguration<ph id="ph4">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept>要素でこの id の構成が参照されていることを確認し、 <bpt id="p3">[</bpt> <ph id="ph5">&amp;lt;</ph>federationConfiguration<ph id="ph6">&amp;gt;</ph> <ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)</ept>要素は、ランタイムによって読み込まれる (たとえばを設定、<ph id="ph7">`identityConfigurationName`</ph>属性)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>To set the claims authorization manager programmatically, provide a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">要求承認マネージャーをプログラムで設定するにはハンドラーを作成して、<ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>On one level, the functionality provided by <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> is similar to the role-based access checks (RBAC) provided through the <ph id="ph2">&lt;xref:System.Security.Permissions.PrincipalPermission&gt;</ph> class; however, the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class performs checks based on the claims presented by the active principal.</source>
          <target state="translated">1 つのレベルでは、によって提供される機能<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>によって提供されるロールベースのアクセス チェック (RBAC) に似ていますが、<ph id="ph2">&lt;xref:System.Security.Permissions.PrincipalPermission&gt;</ph>クラスです。 ただし、、<ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>クラスは、アクティブなプリンシパルによって提示されるクレームに基づくチェックを実行します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>This enables far more granularity than is available through pure RBAC, where many permissions are typically collected under a single role.</source>
          <target state="translated">これによりより多くの粒度よりも多くのアクセス許可は通常の収集場所 1 つのロールの下では、純粋な RBAC できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Perhaps, more importantly, claims-based authorization enables better separation of business logic and authorization policy because permission can be demanded for a specific action on a resource in code and back-end policy can be used to configure which claims the presenting entity must possess in order to satisfy the demand.</source>
          <target state="translated">おそらく、さらに、クレーム ベースの承認のビジネス ロジックおよび承認ポリシーの分離を強化しが使用できるため、コード内のリソースに対する特定のアクションのアクセス許可が要求されることし、バック エンド ポリシーは、要求を満たすために、プレゼンテーション用のエンティティを処理する必要する要求の構成を使用することができます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Like RBAC, <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> performs a user-based access check, that is, unlike code access security implemented by classes that derive from the <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph> class and use a stack walk to ensure that all callers of the code have been granted a permission, <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> performs its check only on the current principal.</source>
          <target state="translated">などのでは、RBAC <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> 、ユーザーに基づくアクセス チェックを実行から派生したクラスによって実装されるコード アクセス セキュリティとは異なり、<ph id="ph2">&lt;xref:System.Security.CodeAccessPermission&gt;</ph>クラスを使用して、スタック ウォークをアクセス許可がコードのすべての呼び出し元に付与されていることを確認<ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>は現在のプリンシパルにのみ、チェックを実行します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>The static <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph> method checks access for a specified action on a specified resource.</source>
          <target state="translated">静的な<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph>メソッドは、指定したリソースに対して指定されたアクションへのアクセスをチェックします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>The resource and action are both strings and are typically URIs.</source>
          <target state="translated">リソースとアクション両方の文字列、通常は Uri です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>You can also initialize an instance of <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> with an action and a resource and call the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> method.</source>
          <target state="translated">インスタンスを初期化することもできます。<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>アクションとリソース呼び出しと、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Although the constructor only takes a single resource and action, <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> objects can be combined through the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt;</ph> methods.</source>
          <target state="translated">コンス トラクターは、1 つのリソースと操作にのみかかりますが<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>を通じてオブジェクトを組み合わせることができます、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>A permission created by using these methods may contain multiple resource-action pairs.</source>
          <target state="translated">これらのメソッドを使用して作成されたアクセス許可には、複数のリソース操作のペアが含まれます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Both methods determine access by invoking the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method of the configured claims authorization manager with an <ph id="ph2">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> composed of the active principal (<ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph>), the resource, and the action.</source>
          <target state="translated">両方のメソッドを呼び出すことによってアクセスを決定する、<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph>で構成されている要求の承認マネージャーのメソッド、 <ph id="ph2">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> 、アクティブなプリンシパルで構成されます (<ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph>)、リソース、およびアクション。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>They throw a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> if the current principal is not authorized to perform the action on the resource; otherwise, execution proceeds.</source>
          <target state="translated">スロー、 <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> ; リソースの操作を実行する現在のプリンシパルが許可されていない場合それ以外の場合、次に実行されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>In the case of a <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> that contains multiple resource-action pairs, the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method is invoked for each of the resource-action pairs contained in the permission.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>複数のリソース操作ペアを格納する、<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph>アクセス許可に含まれるリソース操作ペアの各メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>For the call to <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> to succeed, the active principal must be authorized for all of the resource-action pairs contained in the permission.</source>
          <target state="translated">呼び出しの<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>、成功をアクティブなプリンシパルは、アクセス許可に含まれるリソース操作のペアのすべての承認が必要です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>The following example shows how to protect a resource by using the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph> method, or a <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> declaration.</source>
          <target state="translated">次の例を使用してリソースを保護する方法を示しています、 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph>メソッド、または<ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph>宣言します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>In each case, the configured <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> is invoked to evaluate the current principal against the specified resource and action.</source>
          <target state="translated">構成された、各ケースで<ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph>が呼び出され、指定されたリソースと操作に対する現在のプリンシパルを評価します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>If the current principal is not authorized for the specified action on the specified resource, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown; otherwise, execution proceeds.</source>
          <target state="translated">現在のプリンシパルが、指定したリソースで指定されたアクションの権限がない場合、<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>がスローされた場合に実行されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>The following XML shows the minimum configuration required to use a custom claims authorization manager with the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class.</source>
          <target state="translated">次の XML は、カスタム クレーム承認を使用するために必要な最小構成マネージャーが、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>You must, at a minimum, declare both the <ph id="ph1">`system.identityModel`</ph> and the <ph id="ph2">`system.identityModel.services`</ph> sections in the <ph id="ph3">`&lt;configSection&gt;`</ph> element and then specify your authorization manager in a <bpt id="p1">[</bpt><ph id="ph4">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph5">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element under the default identity configuration.</source>
          <target state="translated">宣言する必要あります、少なくとも、両方、<ph id="ph1">`system.identityModel`</ph>と<ph id="ph2">`system.identityModel.services`</ph>セクション、<ph id="ph3">`&lt;configSection&gt;`</ph>要素で、承認マネージャーを指定し、 <bpt id="p1">[</bpt> <ph id="ph4">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph5">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>既定の id 構成要素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>This will ensure that your authorization manager is referenced from the default federation configuration.</source>
          <target state="translated">既定のフェデレーション構成から、承認マネージャーが参照されているようになります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
          <source>Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the <ph id="ph1">`identityConfigurationName`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>federationConfiguration<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)</ept> element.</source>
          <target state="translated">またで、承認マネージャーを指定する id の構成の名前を指定することができます、<ph id="ph1">`identityConfigurationName`</ph>の属性、 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>federationConfiguration<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>The resource on which the principal should be authorized.</source>
          <target state="translated">プリンシパルを承認する対象のリソース。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>The action for which the principal should be authorized.</source>
          <target state="translated">プリンシパルを承認する対象のアクション。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> object is initialized with the specified resource-action pair.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>オブジェクトは、指定したリソース操作のペアで初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>You can call the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> method to perform an access check.</source>
          <target state="translated">呼び出すことができます、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>アクセス チェックを実行するメソッド。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>Although the constructor only takes a single resource and action, <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> objects can be combined through the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt;</ph> methods.</source>
          <target state="translated">コンス トラクターは、1 つのリソースと操作にのみかかりますが<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>を通じてオブジェクトを組み合わせることができます、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source>The permission created through these methods may contain multiple resource-action pairs.</source>
          <target state="translated">これらの方法を介して作成されたアクセス許可には、複数のリソース操作のペアが含まれます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="resource" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="resource" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> または空の文字列です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="action" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The resource on which the principal should be authorized.</source>
          <target state="translated">プリンシパルを承認する対象のリソース。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The action for which the principal should be authorized.</source>
          <target state="translated">プリンシパルを承認する対象のアクション。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>Checks if the current principal is authorized to perform the specified action on the specified resource.</source>
          <target state="translated">指定したリソースの指定したアクションを実行する権限が現在のプリンシパルにあるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The principal must be authorized for the specified action on the specified resource or the <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception is thrown.</source>
          <target state="translated">プリンシパルは、指定されたリソースで指定されたアクションの承認が必要、または<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method of the configured claims authorization manager is invoked with an <ph id="ph2">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> composed of the active principal (<ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph>), the resource, and the action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph>で構成されている要求の承認マネージャーのメソッドが呼び出される、 <ph id="ph2">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> 、アクティブなプリンシパルで構成されます (<ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph>)、リソース、およびアクション。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The following example shows how to protect a resource by using the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph> method.</source>
          <target state="translated">次の例を使用してリソースを保護する方法を示しています、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</source>
          <target state="translated">指定されたリソースと操作に対する現在のプリンシパルを評価する構成済みの要求の承認マネージャーが呼び出されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>If the current principal is not authorized for the specified action on the specified resource, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown; otherwise, execution proceeds.</source>
          <target state="translated">現在のプリンシパルが、指定したリソースで指定されたアクションの権限がない場合、<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>がスローされた場合に実行されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The current principal is not assignable from <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>.</source>
          <target state="translated">現在のプリンシパルは <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> から割り当てることはできません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>There is no <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> configured.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> が構成されていません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
          <source>The authorization check failed.</source>
          <target state="translated">失敗した承認チェック。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy">
          <source>Returns a copy of the current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> instance.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> インスタンスのコピーを返します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> copied from the current instance.</source>
          <target state="translated">現在のインスタンスからコピーされた <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>Checks if the current principal is authorized for the resource-action pairs associated with the current instance.</source>
          <target state="translated">現在のインスタンスに関連付けられているリソースとアクションのペアに対して現在のプリンシパルが承認されるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The current principal must be authorized for all of the resource-action pairs associated with this instance or the <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception is thrown.</source>
          <target state="translated">現在のプリンシパルは、このインスタンスに関連付けられているリソース操作のペアのすべての承認が必要、または<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>Although the constructor only takes a single resource and action, <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> objects can be combined through the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt;</ph> methods.</source>
          <target state="translated">コンス トラクターは、1 つのリソースと操作にのみかかりますが<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>を通じてオブジェクトを組み合わせることができます、<ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The permission created through these methods may contain multiple resource-action pairs.</source>
          <target state="translated">これらの方法を介して作成されたアクセス許可には、複数のリソース操作のペアが含まれます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> method invokes the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph> method of the configured claims authorization manager with an <ph id="ph3">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> composed of the active principal (<ph id="ph4">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph>), the resource, and the action for each of the resource-action pairs contained in the permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>メソッドを呼び出して、<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType&gt;</ph>で構成されている要求の承認マネージャーのメソッド、 <ph id="ph3">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> 、アクティブなプリンシパルで構成されます (<ph id="ph4">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph>)、リソース、およびアクセス許可に含まれるリソース操作ペアの各アクション。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>For the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>を成功させる、アクティブなプリンシパルは、アクセス許可に含まれるリソース操作のペアのすべての承認が必要です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The following example shows how to protect a resource by using the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> method.</source>
          <target state="translated">次の例を使用してリソースを保護する方法を示しています、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</source>
          <target state="translated">指定されたリソースと操作に対する現在のプリンシパルを評価する構成済みの要求の承認マネージャーが呼び出されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>If the current principal is not authorized for the specified action on the specified resource, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown; otherwise, execution proceeds.</source>
          <target state="translated">現在のプリンシパルが、指定したリソースで指定されたアクションの権限がない場合、<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>がスローされた場合に実行されます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The current principal is not assignable from <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>.</source>
          <target state="translated">現在のプリンシパルは <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> から割り当てることはできません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>There is no <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> configured.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> が構成されていません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
          <source>The authorization check failed.</source>
          <target state="translated">失敗した承認チェック。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the permission.</source>
          <target state="translated">アクセス許可の再構築に使用する XML エンコード。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs the current permission and its state from the specified XML encoding.</source>
          <target state="translated">指定された XML エンコーディングから現在のアクセス許可と状態を再構築します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a permission from the XML encoding created by a call to the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A&gt;</ph> method.</source>
          <target state="translated">呼び出しによって作成された XML エンコードからのアクセス許可を再構築、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;paramref name="element" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="element" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)">
          <source>The encoding contains unrecognized elements or attributes or improperly formed XML.</source>
          <target state="translated">エンコーディングに、認識されない要素または属性、あるいは不適切な形式の XML が含まれています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>The permission to intersect with the current permission.</source>
          <target state="translated">現在のアクセス許可との積集合を持つアクセス許可。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>It must be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> のインスタンスである必要があります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>Returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">現在のアクセス許可と指定したアクセス許可を統合 (論理積) して 1 つの新しいアクセス許可を返します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> that represents the intersection of the current permission and the specified permission; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="target" /&gt;</ph> is <ph id="ph4">&lt;paramref name="null" /&gt;</ph> or is not an instance of <ph id="ph5">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>.</source>
          <target state="translated">現在のアクセス許可と指定したアクセス許可の積集合を表す新しい <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>。または、<ph id="ph3">&lt;paramref name="target" /&gt;</ph> が <ph id="ph4">&lt;paramref name="null" /&gt;</ph> であるか、<ph id="ph5">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> のインスタンスではない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission.</source>
          <target state="translated">返されるアクセス許可は、現在のアクセス許可と、指定した権限の両方に存在していたリソース操作のペアのみをいます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>Resource-action pairs that existed in only one or the other of the permissions are not included.</source>
          <target state="translated">アクセス許可のどちらか 1 つだけに存在していたリソース操作のペアは含まれません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
          <source>For a <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>成功すると、新しいアクセス許可で、現在のプリンシパルのみ必要がありますが現在のアクセス許可と、指定した権限に共通するリソース操作のペアの承認されるようにします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The permission to be tested for the subset relationship.</source>
          <target state="translated">サブセットの関係を調べる対象のアクセス許可。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
          <source>It must be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> のインスタンスである必要があります。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Returns a value that indicates whether current permission is a subset of the specified permission.</source>
          <target state="translated">現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if current permission is a subset of the specified permission; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のアクセス許可が、指定したアクセス許可のサブセットである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission.</source>
          <target state="translated">現在のアクセス許可は、すべての現在のアクセス許可に含まれるリソース アクション ペアもがある場合、指定した権限の指定したアクセス許可のサブセットです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">`target`</ph> is <ph id="ph2">`null`</ph> or is not an instance of <ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>, the <ph id="ph4">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A&gt;</ph> returns <ph id="ph5">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`target`</ph>は<ph id="ph2">`null`</ph>のインスタンスではない、または<ph id="ph3">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph>、<ph id="ph4">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A&gt;</ph>返します<ph id="ph5">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted">
          <source>Returns a value that indicates whether the permission is unrestricted.</source>
          <target state="translated">アクセス許可が無制限かどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the permission is unrestricted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アクセス許可が無制限である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> indicating that permission is unrestricted.</source>
          <target state="translated">アクセス許可が制限されていることを示す <ph id="ph1">&lt;see langword="true" /&gt;</ph> を常に返します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml">
          <source>Returns the XML encoded form of the current permission and its state.</source>
          <target state="translated">現在のアクセス許可とその状態の XML にエンコードされたフォームを返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml">
          <source>The XML encoded form of the current permission and its state.</source>
          <target state="translated">現在のアクセス許可とその状態の XML にエンコードされたフォーム。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml">
          <source>The principal can be reconstructed from its XML encoded form by calling the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A&gt;</ph> method.</source>
          <target state="translated">プリンシパルを再構築できますでエンコードされた XML 形式から呼び出すことによって、<ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source>The permission to combine with current permission.</source>
          <target state="translated">現在のアクセス許可と和集合を持つアクセス許可。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source>It must be of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> 型でなければなりません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source>Returns a new permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">現在のアクセス許可と指定したアクセス許可を統合 (和集合) して 1 つの新しいアクセス許可を返します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> object that has all of the resource-action pairs that are present in the current instance and the target instance.</source>
          <target state="translated">現在のインスタンスとターゲット インスタンスにあるリソース操作のペアすべてがある <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> のオブジェクト。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> that represents the union of the current permission and the specified permission; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="target" /&gt;</ph> is <ph id="ph4">&lt;paramref name="null" /&gt;</ph> or is not an instance of <ph id="ph5">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>.</source>
          <target state="translated">現在のアクセス許可と指定したアクセス許可の和集合を表す新しい <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph>。または、<ph id="ph3">&lt;paramref name="target" /&gt;</ph> が <ph id="ph4">&lt;paramref name="null" /&gt;</ph> であるか、<ph id="ph5">&lt;see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /&gt;</ph> のインスタンスではない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source>The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission.</source>
          <target state="translated">返される権限にはすべての現在のアクセス許可に存在するリソース操作ペアと、指定した権限を表示できるリソース操作ペアのすべてです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
          <source>For a <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A&gt;</ph>成功すると、新しいアクセス許可には、すべての現在のアクセス許可に存在していたリソース アクション ペアと、指定した権限に存在していたリソース操作のペアのすべての現在のプリンシパルが承認される必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>