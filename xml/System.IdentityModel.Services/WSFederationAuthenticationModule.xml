<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84794e52ef0e355ba168bb4ee4a2b5b1926e30a9" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53751246" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> は、受信した要求にフェデレーション認証設定を適用して ASP.NET アプリケーションを安全に実行するために使用される HTTP モジュールです。 <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> は、ASP.NET アプリケーションでクレームベース ID によるアクセスを処理するために、WIF が独自に提供するメイン モジュールです。  
  
<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> は、複数のイベントを発生させます。それらのイベントにより、ASP.NET 開発者は既定の動作を変更したり、認証やクレームの処理方法の詳細を制御したりできるようになります。 <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> の機能は、タスク固有のメソッドに分割されています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Ws-federation 認証モジュール (WSFAM) と呼ばれる HTTP モジュールを実装するクラス。 WSFAM は、Windows Identity Foundation (WIF) で、すぐ実装されます。 WSFAM は、web.config ファイルにエントリを作成して、ASP.NET パイプラインに追加されます。 派生した<xref:System.IdentityModel.Services.HttpModuleBase>、実装する<xref:System.Web.IHttpModule>します。 リッスンするように、ASP.NET ランタイムを登録、<xref:System.Web.HttpApplication.EndRequest>と<xref:System.Web.HttpApplication.AuthenticateRequest>イベント。 リッスンする、<xref:System.Web.HttpApplication.EndRequest>イベントがセキュリティ トークン サービス (STS)、要求されたリソースの承認に失敗したときに、セキュリティ トークンを取得するクライアントをリダイレクト WSFAM ことができます。 リッスンする、<xref:System.Web.HttpApplication.AuthenticateRequest>イベントにより、要求されたトークンを含む、STS からの応答の HTTP 要求を監視する WSFAM します。 このようなトークンが存在し、有効の場合のインスタンスを作成します。<xref:System.Security.Claims.ClaimsPrincipal>トークンに含まれる要求を使用して、認証されたユーザー。  
  
 セッションの管理がインスタンスであるセッション認証モジュール (SAM) によって提供される、WSFAM を使用する場合の<xref:System.IdentityModel.Services.SessionAuthenticationModule>そこから派生したクラス、またはクラス。 SAM は、構成ファイルに ASP.NET パイプラインにも追加されます。 SAM は、(セッション) の認証クッキーの要求を監視します。 これらの cookie が存在し、有効な場合、モジュールを抽出、<xref:System.Security.Claims.ClaimsPrincipal>から認証済みユーザーに対して、<xref:System.IdentityModel.Tokens.SessionSecurityToken>設定と、<xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType>プロパティとスレッドのプリンシパル<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>プロパティ。  
  
 WSFAM を提供します。  
  
-   Ws-federation プロトコルを使用してセキュリティ トークン サービス (STS) への認証を外部委託する ASP.NET アプリケーションの権限です。 Id は、1 つまたは複数の id 領域間でフェデレーションでき、複数の Sts を伴います。  
  
-   ASP.NET アプリケーションでクレーム ベース id。 認証時に、WSFAM は STS によって送信されたセキュリティ トークンの要求からのプリンシパルを作成し、スレッドのプリンシパルとしてこの要求プリンシパルを設定します。 このプリンシパルは、さらに加える承認、プレゼンテーション、およびロジックの意思を表すユーザー コードで使用できます。  
  
 WSFAM は、Ws-federation のサインインおよびサインアウト要求で使用するメッセージ パラメーターの既定を提供するいくつかのプロパティを公開します。 これらのプロパティは通常の初期化、 [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)構成ファイル内の要素。 これらのプロパティの中で最も重要なは。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティで、Ws-federation のサインインおよびサインアウト要求を送信するセキュリティ トークン サービス (STS) のアドレスを指定します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A>プロパティで、Ws-federation サインイン要求で使用する wtrealm パラメーターを指定します。 Wtrealm パラメーターは、STS への証明書利用者 (rp) アプリケーションのセキュリティの領域を識別します。  
  
 イベント ハンドラー デリゲートを提供することで、サインイン メッセージ パラメーターで、要求ごとの変更することも、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。  
  
 2 つのプロパティは、モジュールの動作を制御します。 これらのプロパティの両方がから初期化されるも通常、`<wsFederation>`構成内の要素。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>プロパティは、モジュールが認証を STS にパッシブ リダイレクトを実行する必要があるかどうかを指定します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A>プロパティは、セッションを永続にするかどうかを指定します。 このプロパティを true に設定されている場合、SAM はセッション cookie をクライアントに書き込みに使用されます。 クライアントからの後続の要求では、SAM はセッション cookie にトークンを使用して認証が永続化を提供します。  
  
 WSFAM は、サインイン時にいくつかのイベントを発生させます、サインアウトを使用できる ASP.NET 開発者は、モジュールの既定の動作を変更し、認証やクレームの処理が場所を取得する方法の詳細を制御します。  
  
 Ws-federation サインイン要求が STS に送信される前に、次のイベントが発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>:パッシブ リダイレクトが有効になっており、要求されたリソースの承認に失敗したときに発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>:直前に発生します WSFAM は sts Ws-federation サインイン要求を送信します。 このイベントを使用して、サインイン要求のパラメーターを変更することができます。  
  
 (セキュリティ トークンを発行) サインイン応答は、STS から受信したときに、次のイベントが発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>:STS から送信されたセキュリティ トークンを応答から読み取った後にだけ発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>:トークンが検証された後にのみ発生します。 このイベントを使用してフィルター処理、変換、または要求クレーム プリンシパルを追加することができます (<xref:System.Security.Claims.ClaimsPrincipal>) セキュリティ トークンからを作成します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>:セッション トークンの直前に発生します (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) プリンシパルは、スレッドのプリンシパルを設定するための要求と現在のユーザーから作成され、セッション cookie に書き込まれます。 セッション トークンまたは有効または無効化、セッション クッキーを記述を変更できます。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>:スレッドのプリンシパルと現在のユーザーが設定された後だけに、認証の最後に発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>:サインイン時に例外が発生した場合に発生します。 要求をキャンセルしてから、呼び出し元に返される例外を防止できます。  
  
 セッションから、または Ws-federation サインアウト クリーンアップ要求 (wsignoutcleanup1.0) を処理するときに署名するときは、次のイベントが発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>:セッションに依存している任意のクリーンアップを実行するか、キャンセル サインアウトを有効にする、セッションが削除される直前に発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>:セッションが削除された直後に発生します。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>:サインアウト中に例外が発生した場合に発生します。サインアウトをキャンセルしてから、呼び出し元に返される例外を防止できます。  
  
> [!NOTE]
>  呼び出すことによって、STS でサインアウト時に、サインアウトのイベントは発生しませんが、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 WSFAM を使用して、STS へのサインインの 2 つの方法はあります。 パッシブ リダイレクトを有効にすると 1 つ目は、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>プロパティ。 要求されたリソースの承認に失敗したときにこの例では、返すのではなく、 `401:Access Denied` WSFAM は、クライアントへの応答はそのプロパティから Ws-federation サインイン要求メッセージを作成し、セキュリティ トークンを取得する STS にクライアントをリダイレクトします。 2 番目の方法が明示的に呼び出すことによって、クライアントを STS にリダイレクトするには、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> web ページまたはアプリケーションにカスタム コントロールからのメソッド。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>メソッドは、サインイン要求を構築する WSFAM のプロパティを使用することもできます。  
  
 いずれかのオーバー ロードされた<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>セッションからサインアウトするメソッドを使用できます。 これには、クライアント上のセッション cookie が削除されます。 Ws-federation サインアウト メッセージ ("wsignout1.0") を STS に送信しません。 STS でサインアウトに使用する必要があります、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 WSFAM は、クライアントと、そのセッションを削除することによって Ws-federation サインアウト クリーンアップ要求 ("wsignoutcleanup1.0") を処理します。 サインアウト クリーンアップ メッセージで wreply パラメーターが設定されていない場合、WSFAM は、メッセージを送信した STS に緑色のチェック マークのイメージを返します。 この機能は、RP がそのサインアウト完了したことを確認として、STS により使用できます。  
  
 WSFAM は、いくつかのタスク固有のメソッドを使用 - たとえば、その要求処理パイプライン - 機能を公開します。 WSFAM の動作を変更する派生クラスでこれらのメソッドをオーバーライドすることができます。  
  
 使用するには、次の XML に示すようにパイプラインにモジュールを追加する必要があります。  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 構成すると、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> HTTP 要求の処理のさまざまな段階でイベントを発生させます。 ASP.NET 開発者は、global.asax ファイルでこれらのイベントを処理できます。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> クラスを初期化するために、派生クラスのコンストラクターによって呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wauth パラメーターの値を取得または設定します。</summary>
        <value>認証の種類を指定する URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wauth パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A>プロパティに設定されて`null`または空の文字列、wauth パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証のため設定された発行元にユーザーをリダイレクトする必要があるかどうかをモジュールが決定するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> HTTP 要求の承認が失敗したときにイベントが発生します。 内から発生した、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>イベント ハンドラー デリゲートを呼び出すことによって、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A>メソッド。  
  
 設定することができます、<xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType>プロパティ、id プロバイダーに要求をリダイレクトするかどうかを制御するためです。 フレームワークには、このプロパティを初期化する`false`ユーザーが既に認証されている場合。 この場合、プロパティを設定する`true`STS に循環ループが発生する可能性があります。  
  
> [!NOTE]
>  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベントは、URL を変更またはキャンセルのリダイレクトを使用できます。  
  
 ASP.NET アプリケーションでは、このイベントを処理するという名前のメソッドを作成`WSFederationAuthentication_AuthorizationFailed`global.asax ファイルにします。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した HTTP 要求が WS-Federation サインイン応答メッセージであるかどうかを示す値を返します。 メッセージが WS-Federation サインアウト クリーンアップ メッセージ ("wsignoutcleanup1.0") の場合、このメソッドは要求を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サインイン応答メッセージは、サインイン要求メッセージに対する応答でセキュリティ トークン サービス (STS) によって、証明書利用者 (RP) に送信されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">受信 HTTP 要求。</param>
        <summary>指定した HTTP 要求が WS-Federation サインイン応答メッセージであるかどうかを示す値を返します。 メッセージが WS-Federation サインアウト クリーンアップ メッセージ ("wsignoutcleanup1.0") の場合、このメソッドは要求を処理します。</summary>
        <returns>wa パラメーターが "wsignout1.0" に設定され、wresult パラメーターが空でないフォーム POST が指定された HTTP 要求に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、受信 HTTP 要求が Ws-federation サインイン応答メッセージを含むフォーム ポストかどうかを要求処理パイプラインから呼び出されます。  
  
 呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType>オーバー ロード、`onPage`パラメーター セット`false`をページの処理中に、呼び出しが取得されなかったことを示します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">受信 HTTP 要求。</param>
        <param name="onPage">ページ要求の処理中に呼び出しが発生する場合は <see langword="true" />。 呼び出し元が HTTP モジュールの場合は <see langword="false" />。 このパラメーターは、処理を終了する方法、または、受信メッセージが WS-Federation サインアウト クリーンアップ メッセージ ("wsignoutcleanup1.0") の場合にリダイレクトを送信する方法を決定します。</param>
        <summary>指定した HTTP 要求が WS-Federation サインイン応答メッセージであるかどうかを示す値を返します。 メッセージが WS-Federation サインアウト クリーンアップ メッセージ ("wsignoutcleanup1.0") の場合、このメソッドは要求を処理します。</summary>
        <returns>wa パラメーターが "wsignout1.0" に設定され、wresult パラメーターが空でない FORM ポストが指定された HTTP 要求に含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求処理パイプラインからこのメソッドが呼び出され、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType>受信 HTTP 要求が Ws-federation サインイン応答メッセージを含む POST フォームであるかどうかを確認するオーバー ロードします。  
  
 既定の実装は、次を実行します。  
  
-   入力方向の要求が form POST の場合は、呼び出し、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A>フォーム POST がサインイン応答に含まれるかどうかを確認します。  
  
-   受信要求でないフォーム POST を要求には、Ws-federation サインアウト クリーンアップ要求 (の wa パラメーターが"wsignoutcleanup1.0") が含まれている場合は、サインアウト クリーンアップが実行されます。 ここで、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>メソッドが呼び出されます (パラメーターを設定して`true`をサインアウトのクリーンアップを示すために) セッションからサインアウトします。 また、サインアウトのイベントが発生します。 これにより。  
  
     次に、サインアウト クリーンアップ要求に wreply パラメーターが含まれている場合、クライアントがによって返される URL にリダイレクトされて、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A>メソッドを STS に緑色のチェック マークのイメージが返される場合は、します。 このイメージの受信は、STS によってサインアウト クリーンアップ要求が受信され、RP で正常に処理されたことの確認として使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM は、WS-Federation のサインイン要求の wctx パラメーターにこの値を保存します。ただし、モジュールは、サインイン要求またはサインイン応答を処理するときにこの値を使用しません。 任意の値に設定できます。 一意である必要はありません。</param>
        <param name="returnUrl">認証後にモジュールが戻る必要がある URL。</param>
        <param name="rememberMeSet">WSFAM は、WS-Federation のサインイン要求の wctx パラメーターにこの値を保存します。ただし、モジュールは、サインイン要求またはサインイン応答を処理するときにこの値を使用しません。 <see langword="true" /> または <see langword="false" /> に設定できます。</param>
        <summary>モジュールで構成された WS-Federation パラメーターを使用して WS-Federation サインイン要求メッセージを作成します。</summary>
        <returns>WS-Federation サインイン要求メッセージ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表される Ws-federation サインイン要求を作成、<xref:System.IdentityModel.Services.SignInRequestMessage>オブジェクト。 新しいプロパティ<xref:System.IdentityModel.Services.SignInRequestMessage>オブジェクトは次のように設定されます。  
  
-   <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A>プロパティ (wctx パラメーター) がメソッドのパラメーターを使用して作成された値に設定します。  
  
-   <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A>プロパティ (wct パラメーター) が、現在の時刻に設定します。  
  
-   その他のすべてのプロパティは、現在のインスタンスの同等のプロパティを使用して設定されます。  
  
 メソッドに渡されるパラメーターは、メッセージの wctx パラメーターの作成に使用されます。 これは、次の形式の文字列です:`ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`します。  
  
-   `ru`値の値に設定されます、`returnUrl`メソッドに渡されたパラメーターと、モジュールが、ブラウザーに次の認証が成功するを指示する必要があります、URL を指定します。 これは、WSFAM によって使用される wctx 文字列に格納されている唯一の値です。 モジュールの呼び出し、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> Ws-federation サインイン応答を処理するときに、wctx パラメーターからこの値を抽出するメソッド。 する必要がありますと混同しないで、wreply メッセージ パラメーターで指定されている、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>プロパティおよびセキュリティ トークン サービス (STS) がその応答を送信する必要があります、RP のアドレスを提供します。  
  
-   `cx`パラメーターがの値に設定されている、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>プロパティ。 このプロパティを公開する wctx 文字列に格納するアプリケーション定義のコンテキストを設定することを有効にします。ただし、WSFAM は、応答でこの値を抽出するメソッドを公開しません。 値が、アプリケーションで必要な場合は、wctx 文字列を解析し、応答を処理するときに、この値を読み取るコードを提供する必要があります。 オーバーライドすることでこれを実現する可能性があります、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>メソッド。  
  
-   どちらも、`rm`の値に設定されている値は、`rememberMeSet`パラメーターも`id`パラメーターの値に設定されている、 `uniqueId` WSFAM、パラメーターを使用します。 これらは、任意の値に設定することができます。  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>メソッドの呼び出し元、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> プロパティが <see langword="null" /> または空の文字列です。  
  
または 
<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> プロパティが <see langword="null" /> または空の文字列です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">WS-Federation のサインアウトの要求メッセージを受け取る STS の URL。 <see langword="null" /> にすることはできません。</param>
        <param name="replyUrl">サインアウトの要求メッセージで wreply 値として送信される URL。</param>
        <summary>WS-Federation プロトコルを使用して指定されたセキュリティ トークン サービス (STS) で署名します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した STS に Ws-federation サインアウト要求のメッセージを送信するには、このメソッドを呼び出します。 必要に応じて、サインアウト要求で wreply パラメーターの値を指定できます。  
  
 メソッドは、次を行います。  
  
1.  指定されたパラメーターを使用して Ws-federation サインアウト要求のメッセージを作成します。  
  
2.  呼び出し、<xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType>メソッドでは、SAM はセッション cookie を削除します。  
  
3.  最初の手順からサインアウト要求メッセージを使用して STS にリダイレクトします。  
  
 サインアウトのイベントの [なし]: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>、または<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>がこのメソッドによって発生します。 を STS にサインアウト要求メッセージを送信せずにセッションを削除するには、オーバー ロードされたのいずれかを呼び出して<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>メソッド。  
  
> [!NOTE]
>  パッシブ サインアウトを実行するには、セッション トークンを使用して、格納された値には依存モジュール、<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType>サインイン時に、詳細については、プロパティを参照してください、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutUrl" /> が <see langword="null" /> ではなく、絶対 URI でもありません。  
  
または 
 <paramref name="replyUrl" /> が <see langword="null" /> ではなく、絶対 URI でもありません。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="signOutUrl" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wfresh パラメーターの値を取得または設定します。</summary>
        <value>分単位の、希望する認証要求の最大期間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wfresh パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A>プロパティに設定されて`null`または空の文字列、wfresh パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">発行者アドレス。 要求を指示するセキュリティ トークン サービス (STS) のアドレス。</param>
        <param name="signOutReply">サインアウト後に戻るアドレスを指定する URL。これで、サインアウト要求の wreply パラメーターが設定されます。 生成されるサインアウト要求に wreply パラメーターを含める必要がない場合は、<see langword="null" /> または空にすることができます。 これは、絶対 URI である必要があります。</param>
        <param name="signOutQueryString">サインアウト要求に含まれる追加のクエリ文字列パラメーター。 生成されるサインアウト要求に追加のパラメーターが含まれない場合は、<see langword="null" /> または空にすることができます。 相対 URI にする必要があります。</param>
        <summary>指定した発行者に対処する WS-Federation サインアウト要求を表し、かつ指定した wreply パラメーターと指定した追加のパラメーターを含む URL を返します。</summary>
        <returns>指定されたパラメーターを使用して構築された WS-Federation パッシブ サインアウト要求を含む URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された URL で: に URI が設定されているベース`issuer`wreply パラメーターに設定されている; wa パラメーターが"wsignout1.0"に設定`signOutReply`; で指定されたパラメーターと`signOutQueryString`は追加のクエリ文字列パラメーターとして存在します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuer" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">発行の結果のアドレスを指定する URL。</param>
        <summary>指定した URL から発行の結果 (通常は発行されたトークン) を取得します。 サインインの応答メッセージの wresultptr パラメーターで指定される URL を解決します。</summary>
        <returns>URL によって参照された発行結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを呼び出して、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType>からセキュリティ トークン サービス (STS) から受信したサインイン応答メッセージの wresultptr パラメーターで指定された URL を解決するのには、処理パイプライン内のメソッド。  
  
 既定でこのメソッドがスローされます、<xref:System.NotSupportedException>します。 Wresultptr パラメーターをサポートするために派生クラスでこのメソッドをオーバーライドします。 Url は、発行の結果は、次のいずれかを指定する必要がありますには、:`<wst:RequestSecurityTokenResponse>`要素、`<wst:RequestSecurityTokenResponseCollection>`要素、SOAP 応答の場合、または SOAP`<S:Fault>`要素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドは、基本クラスではサポートされません。 派生クラスでオーバーライドする必要があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">フォーム POST を含む HTTP 要求で、WS-Federation のサインインの応答メッセージが含まれます。</param>
        <summary>サインイン応答から最初に要求されたページの URL を抽出します。</summary>
        <returns>クライアントによって初めに要求されたページの URL。 これは、サインインに成功した後にクライアントがリダイレクトされる (証明書利用者側の) URL です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、要求処理パイプラインから呼び出されます (、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>メソッド) に正常にサインインした後、証明書利用者 (RP) をクライアントに出力するためにページの URL を取得します。 これは、通常、RP をクライアントもともと要求されたリソースへのアクセスの URL です。  
  
 既定では、WSFAM は、セキュリティ トークン サービス (STS) に Ws-federation サインイン要求を送信するときにメッセージの wctx パラメーターの内部戻り先 URL を保存します。 エンティティ、メッセージを渡し、、Ws-federation 仕様に従って wctx パラメーターが保持されます、STS によって送信される Ws-federation サインイン応答メッセージでそのまま返されます。  
  
 既定の実装では、サインイン応答の wctx パラメーターからの戻り先 URL を取得します。 WSFAM によって使用される wctx パラメーターの書式設定に関する詳細については、次を参照してください。、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した要求からセキュリティ トークンを読み取ります。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">トークンを読み取るサインインの応答メッセージ。</param>
        <summary>指定した WS フェデレーション サインイン応答メッセージからセキュリティ トークンを読み取ります。</summary>
        <returns>メッセージから読み取られたセキュリティ トークン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装を呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType>トークンを取得して構成されているセキュリティ トークン ハンドラーから適切なハンドラーを使用して読み取る。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">トークンの読み取り元の HTTP 要求。</param>
        <summary>指定した HTTP 要求からセキュリティ トークンを読み取ります。</summary>
        <returns>読み取られたセキュリティ トークン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ws-federation サインイン要求メッセージを取得する要求処理パイプラインから呼び出される、<xref:System.IdentityModel.Tokens.SecurityToken>オブジェクト。  
  
 既定の実装を呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A>を取得するメソッド、<xref:System.IdentityModel.Services.SignInResponseMessage>オブジェクトし、呼び出され、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType>オーバー ロードします。  
  
 要求の特定の型を解釈するのにには、派生クラスを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" /> プロパティのセッション クッキーで永続化する必要がある文字列を取得します。</summary>
        <returns>セッション クッキーに保持する文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>メソッドの呼び出し元の要求処理パイプラインに格納する値を取得する Ws-federation サインイン応答メッセージを処理するときに、<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType>セッション cookie 内のプロパティ。  
  
 Cookie に格納されるアプリケーション固有の値を提供するには、このメソッドをオーバーライドすることができます。 WSFAM は、cookie の値を取得するメソッドを公開しません。 必要な場合、cookie から値を読み取るためにアプリケーションでは、ロジックを提供する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> プロパティが <see langword="null" /> である。</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">サインインの応答メッセージを読み取る HTTP 要求。 要求はフォーム POST を表す必要があります。</param>
        <summary>指定した HTTP 要求によって表されるフォーム POST から <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> オブジェクトを読み取ります。</summary>
        <returns>作成されたサインインの応答メッセージ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出される、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> form POST HTTP 要求に含まれているからサインイン応答メッセージを取得する要求処理パイプライン内のメソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">サインインの応答メッセージは、指定された要求から読み取ることができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">サインアウト クリーンアップ要求。</param>
        <summary>wreply パラメーターが含まれる WS-Federation サインアウト クリーンアップ要求 (wsignoutcleanup1.0) を処理する際のリダイレクト先 URL を判断します。</summary>
        <returns>リダイレクト先の URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの呼び出し元、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> Ws-federation サインアウト クリーンアップ要求を処理した後にリダイレクトする URL を確認する要求処理パイプライン内のメソッド。 メッセージの wreply パラメーターの場合のみ呼び出されます (、`signOutMessage`パラメーターには、<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A>もプロパティ`null`も空でも)。  
  
 既定の実装は、メッセージに含まれている応答 URL を検証します (、<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType>プロパティ) で指定されたセキュリティ トークン サービス (STS) のアドレスに対して、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。 次の条件は、有効である応答 URL の場合は true である必要があります。  
  
1.  応答 URL は、絶対 URL です。  
  
2.  応答 URL では、発行者と同じ構成を持ちます。  
  
3.  応答 URL は、発行者と同じポートです。  
  
4.  応答 URL、発行者と同じホストを持つか、応答 URL、発行者のサブドメインを指定します。  
  
 これらの条件すべてに当てはまる場合、返信 (Reply) が返されます。指定された URL のそれ以外の場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティが返されます。  
  
 追加の検証応答 URL を提供するには、このメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutMessage" /> には、<see langword="null" /> または空の <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> プロパティがあります。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="signOutMessage" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した WS フェデレーション サインイン応答メッセージから発行されたトークンを抽出します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">トークンの抽出元のサインインの応答メッセージ。 サインインの応答には STS によって発行されたトークンが含まれています。</param>
        <summary>指定した WS フェデレーション サインイン応答メッセージから発行されたトークンを抽出します。</summary>
        <returns>発行されたトークンを表す XML を含む文字列。 これは <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> 要素です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サインイン応答メッセージの wresult パラメーターがない場合、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> wresultptr パラメーターを使用してトークンを取得しようとするメソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="message" /> にはトークンは含まれません。 (これには有効な wresult または wresultptr パラメーターは含まれていません)。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">トークンの抽出元のサインインの応答メッセージ。 サインインの応答には STS によって発行されたトークンが含まれています。</param>
        <param name="federationSerializer">サインインの応答メッセージを逆シリアル化するために使用する WS-Federation のシリアライザー。</param>
        <summary>指定した WS-Federation シリアライザーを使用して、指定した WS-Federation サインイン応答メッセージから発行されたトークンを抽出します。</summary>
        <returns>発行されたトークンを表す XML を含む文字列。 これは <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> 要素です。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される whr パラメーターの値を取得または設定します。</summary>
        <value>ID プロバイダーのアドレス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Whr パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A>プロパティに設定されて`null`または空の文字列、whr パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">このモジュールを格納する HTTP アプリケーション オブジェクト。</param>
        <summary>モジュールを初期化し、モジュールの [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] アプリケーション オブジェクトからイベントを処理できるように準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に従って ASP.NET パイプライン イベント ハンドラーを追加します。  
  
|event|ハンドラー|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  モジュールのプロパティなど<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>がから初期化される、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>モジュールの <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> プロパティで指定した構成に基づいてモジュール プロパティを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 同等のプロパティを使用してモジュールのプロパティが初期化されて、<xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration>で指定されたオブジェクト、<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType>プロパティ。  
  
 構成ファイルで設定を指定できます、 [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">受信 HTTP 要求。</param>
        <summary>指定した要求が WS-Federation サインイン応答メッセージであるかどうかを示す値を取得します。</summary>
        <returns>要求が WS-Federation サインイン応答メッセージの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの呼び出し元、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A>受信 HTTP 要求が Ws-federation サインイン応答メッセージであるかどうかを確認する要求処理パイプライン内のメソッド。  
  
 既定の実装を返します`true`かどうかの wa パラメーターが"wsignin1.0"と、wreq と wreqptr パラメーター両方は設定されます。  
  
 追加の検証を実行するために派生クラスには、このメソッドをオーバーライドすることができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークンの目的の発行元を識別する URI 取得または設定します。</summary>
        <value>セキュリティ トークン サービス (STS) を識別する URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは必須です。 パッシブ リダイレクトが有効な場合に設定する必要があります。 Ws-federation 要求を発行するセキュリティ トークン サービス (STS) の URL を指定します。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティを <see langword="null" /> または空の文字列に設定しようとしました。  
  
または 
プロパティに無効な絶対 URI 値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。 これは <see cref="T:System.Web.HttpApplication" /> オブジェクトです。</param>
        <param name="args">イベントのデータ。</param>
        <summary>[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] パイプラインの <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベントを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>メソッドは、Ws-federation 要求処理パイプラインを実装します。 追加されて、<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>内のイベント、[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]パイプラインの<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A>メソッド。  
  
 次のメソッドを実行します。  
  
1.  呼び出し、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> Ws-federation サインイン応答メッセージ ("wsignin1.0") が受信されたかどうかを判断するメソッド。 応答が Ws-federation サインアウト クリーンアップ要求 ("wsignoutcleanup1.0") の場合<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29>メッセージを処理は、要求を終了し、要求で Ws-federation パラメーターに従ってクライアントをリダイレクトします。 メッセージがない場合、次のようにサインアウト クリーンアップ要求モジュールまたはサインイン応答だけを返します。それ以外の場合、サインインの応答を処理する次の手順を実行します。  
  
2.  呼び出し、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29>逆シリアル化するメソッド、<xref:System.IdentityModel.Tokens.SecurityToken>要求からのオブジェクト。  
  
3.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> イベントを発生させます。 さらに処理をキャンセルまたは、このイベントのハンドラーで受信したセキュリティ トークンを変更することができます。 ハンドラーは、通常、変更に使用、<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType>または<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType>プロパティ。  
  
4.  セキュリティ トークンを検証し、作成、<xref:System.Security.Claims.ClaimsPrincipal>セキュリティ トークンの要求からオブジェクト。  
  
5.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> イベントを発生させます。 さらに処理をキャンセルしたり、このイベントのハンドラーの要求プリンシパルを変更できます。  
  
6.  構成済みセッション認証モジュール (SAM) を使用して、作成、<xref:System.IdentityModel.Tokens.SessionSecurityToken>オブジェクト。 (構成されている、SAM は、<xref:System.IdentityModel.Services.SessionAuthenticationModule>によって返されるオブジェクト、<xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType>プロパティです)。セッション トークンは、手順 5. で返される要求プリンシパルを使用して作成されます。 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType>と<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType>プロパティは設定を使用して、<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>と<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>のプロパティ、<xref:System.IdentityModel.Tokens.SecurityToken>手順 3 で返され、現在の時刻と、いずれかので指定されたトークンの有効期間が検証されます<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>または<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>のプロパティ、 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> WSFAM によって使用されているトークン ハンドラー コレクション内のオブジェクト。 使用した構成でセッション トークン ハンドラーのトークンの有効期間を指定できます、 [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)要素。 メモ:<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> SAM は使用されません用に構成されたクッキー ハンドラーのプロパティ。  
  
7.  呼び出し、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A>メソッドのセッション クッキーを記述するセッション トークン。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A>メソッドの最初の発生させ、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>イベント。 セッション トークンのプロパティを変更したり、このイベントのハンドラーで、クッキーが永続化するかどうかを変更できます。 イベントが発生した後、メソッドは、SAM を使用して cookie を書き込みます。  
  
    > [!NOTE]
    >  <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>クッキーを記述する構成セットが使用されません。  
  
8.  呼び出し、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A>発生させるメソッドを<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>イベント。  
  
9. 呼び出し、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>クライアントをリダイレクトする RP のページを取得します。 既定では、このメソッドは、サインイン応答の wctx パラメーターからの戻り先 URL を読み込みます。 WSFAM 戻り先 URL を格納する方法の詳細については、次を参照してください。、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出される、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>承認が失敗したときに、イベント ハンドラーのデリゲート。  
  
 初期化します、<xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType>を発生させる前に、プロパティ、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>イベントをユーザーが既に認証されている場合、リダイレクトの循環を防ぐためにします。 プロパティが初期化されて、ユーザーが既に認証されている場合`false`を防ぐためにリダイレクト; に初期化される場合は、`true`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。 これは <see cref="T:System.Web.HttpApplication" /> オブジェクトです。</param>
        <param name="args">イベントのデータ。</param>
        <summary>[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] パイプラインの <see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 しない限り、イベントは無視されます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>プロパティは`true`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。 これは <see cref="T:System.Web.HttpApplication" /> オブジェクトです。</param>
        <param name="e">イベントのデータ。</param>
        <summary>[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] パイプラインの <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> イベントを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、これは、空のイベント ハンドラーです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出される、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>メソッド、セッションが削除された後だけです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出される、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>メソッド、セッションが削除される直前にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベントのデータ。</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出される、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>メソッドの処理中に例外が発生した場合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>モデルが WS-Federation プロトコル リダイレクトを開始できるかどうかを指定する値を取得または設定します。</summary>
        <value>リダイレクトを有効にするには <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このモードが有効でない場合、モジュールが、Ws-federation プロトコル リダイレクトを開始しません。 このプロパティが場合`true`、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>のセキュリティ トークン サービス (STS)、呼び出し元のリダイレクト先 URL にプロパティを設定する必要があります。  
  
> [!WARNING]
>  アプリケーション コードを使用して Ws-federation サインイン要求を明示的に発行できる、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>の値に関係なく、メソッド、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証が成功したら永続的なセッション クッキーを発行するかどうかを指定する値を取得または設定します。</summary>
        <value>永続的なセッション クッキーを発行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>イベント。 このイベントは、要求処理パイプラインのセキュリティ トークン サービス (STS) からの Ws-federation サインイン応答メッセージを処理するときに発生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wp パラメーターの値を取得または設定します。</summary>
        <value>使用するポリシーを識別する URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wp パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A>プロパティに設定されて`null`または空の文字列、wp パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wtrealm パラメーターの値を取得または設定します。</summary>
        <value>セキュリティ トークン サービス (STS) に対する証明書利用者 (RP) を識別する URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、Ws-federation サインイン要求の必須プロパティです。 パッシブ リダイレクトが有効な場合に設定する必要があります。 URI は、STS に RP を識別します。 (RP に STS を識別するため、次を参照してください。、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ)。  
  
 このプロパティの値は、Ws-federation プロトコルでは、wtrealm クエリ文字列パラメーターとしてシリアル化します。 STS に RP を識別します。 トークンの発行とトークンの発行後にユーザーをリダイレクトする場所に適用するには、どのようなポリシーを決定する STS によって使用されます。 (RP に STS を識別するため、次を参照してください<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>。)。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティを <see langword="null" /> または空の文字列に設定しようとしました。  
  
または 
プロパティに無効な絶対 URI 値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>モジュールが ID プロバイダーにユーザーをリダイレクトしようとしているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アクセスして Ws-federation サインイン要求を変更することができます、<xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType>プロパティ。 たとえば、変更、<xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A>サインイン メッセージ要求をリダイレクトする id プロバイダーを変更するプロパティ。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベントがキャンセル可能なイベントと、設定することができます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`リダイレクトをキャンセルします。  
  
 このイベントは内部で、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>メソッドを呼び出すことによって、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A>メソッド。  
  
 ASP.NET アプリケーションでは、このイベントを処理するために呼び出されるメソッドを作成`WSFederationAuthentication_RedirectingToIdentityProvider`global.asax ファイルにします。  
  
   
  
## Examples  
 次のコード ハンドラーを追加する方法を示しています、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>内のイベント、 `Application_Init` global.asax ファイル内のイベント。 コードから取得されますが、`FederationForWebApps`サンプル。 このサンプルの詳細については、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。  
  
  
  
 次のコードは、ハンドラーの<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>内のイベント、RP の global.asax ファイルにします。 コードは、受信 HTTP 要求 whr パラメーターを格納して場合は、STS に送信される Ws-federation サインイン要求でこのパラメーターを設定するかどうかを確認します。 コードから取得されますが、`FederationForWebApps`サンプル。 このサンプルの詳細については、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。  
  
  
  
 次のコードは、ハンドラーの<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>内のイベント、STS のフェデレーション プロバイダーの global.asax ファイルにします。 コードは、受信 HTTP 要求 whr パラメーターが含まれているかどうかを確認します。 クライアントはサインイン; IP-STS に送られますが、要求に whr パラメーターが含まれている場合それ以外の場合は、IP-STS は、サインインする位置を選択するクライアントがホーム領域検出ページに送られます。 コードから取得されますが、`FederationForWebApps`サンプル。 このサンプルの詳細については、次を参照してください。 [WIF コード サンプル インデックス](~/docs/framework/security/wif-code-sample-index.md)します。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM は、WS-Federation のサインイン要求の wctx パラメーターにこの値を保存します。ただし、モジュールは、サインイン要求またはサインイン応答を処理するときにこの値を使用しません。 任意の値に設定できます。 一意である必要はありません。 詳細については、<see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> メソッドのトピックを参照してください。</param>
        <param name="returnUrl">認証後にモジュールが戻る必要がある URL。</param>
        <param name="persist">WSFAM は、WS-Federation のサインイン要求の wctx パラメーターにこの値を保存します。ただし、モジュールは、サインイン要求またはサインイン応答を処理するときにこの値を使用しません。 <see langword="true" /> または <see langword="false" /> に設定できます。</param>
        <summary>WS-Federation プロトコルを使用してセキュリティ トークンを取得するために、<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> プロパティで指定されるセキュリティ トークン サービス (STS) にユーザーをリダイレクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>メソッドの呼び出し元、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>メソッドまたは利用者 (RP) が表示される web ページから、要求が発行されたときに、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>イベント ハンドラー デリゲートに対して、id プロバイダーにパッシブ リダイレクトを実行するには承認に失敗しました。  
  
 メソッドに渡されるパラメーターは、メッセージの wctx パラメーターの作成に使用されます。 唯一の大きなパラメーターは、`returnUrl`パラメーター。 これには、RP が、ブラウザーに次の認証が成功するを指示する必要があります、URL を指定します。 する必要がありますと混同しないで、wreply メッセージ パラメーターで指定されている、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>プロパティおよびセキュリティ トークン サービス (STS) がその応答を送信する必要があります、RP のアドレスを提供します。  
  
 次のメソッドを実行します。  
  
1.  呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A>メソッドをモジュールによって、有効なサインイン要求を発行することを確認します。  
  
2.  呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>モジュールで構成されているプロパティからのサインイン要求を作成するメソッド。  
  
3.  呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A>発生させるメソッドを<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 リダイレクトをキャンセルしたり、このイベントのイベント ハンドラーで、サインイン要求メッセージを変更できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> は、<see langword="null" /> または空の文字列です。  
  
または 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> は、<see langword="null" /> または空の文字列です。  
  
または 
<see cref="P:System.Web.HttpContext.Current" /> プロパティが <see langword="null" /> または空です。  
  
または 
<see cref="P:System.Web.HttpContext.Response" /> によって返されたコンテキストの <see cref="P:System.Web.HttpContext.Current" /> プロパティは、<see langword="null" /> または空です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wreply パラメーターの値を取得または設定します。</summary>
        <value>証明書利用者 (RP) アプリケーションがセキュリティ トークン サービス (STS) から応答を受信することを希望しているアドレスを識別する URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreply パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>プロパティに設定されて`null`またはサインイン要求で wreply パラメーターを空の文字列が含まれていません。  
  
 STS は wreply パラメーターを使用して、トークンの発行後にユーザーをリダイレクトする場所を決定します。 このようなリダイレクトは、セキュリティの脆弱性を持つユーザーをリダイレクトする盲目的にこのアドレスを使用する STS のことはお勧めできません。 返信先アドレスは、応答が理解されているよく知られていて、セキュリティで保護された場所に送信されているかどうかを確認する (可能性がありますでとの比較、一連の事前構成済みの返信アドレスを目的、またはその他の方法に)、STS によって検証する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティに無効な絶対 URI 値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wreq パラメーターの値を取得または設定します。</summary>
        <value><see langword="&lt;wst:RequestSecurityToken&gt;" /> 要素として表現されるトークン発行要求。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreq パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A>プロパティに設定されて`null`または空の文字列、wreq パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wreqptr パラメーターの値を取得または設定します。</summary>
        <value><see langword="&lt;wst:RequestSecurityToken&gt;" /> 要素として表現されるトークン インスタンス要求の場所を指定する URI</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreqptr パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A>プロパティに設定されて`null`または空の文字列、wreq パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティに無効な絶対 URI 値を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークン サービス (STS) での通信で HTTPS プロトコルを使用する必要があるかどうかを示す値を取得または設定します。</summary>
        <value>STS による通信を HTTPS で保護する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で使用される wres パラメーターの値を取得または設定します。</summary>
        <value>セキュリティ トークン サービスに対してアクセスされるリソース、証明書利用者 (RP) を識別する URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定される wtrealm パラメーター、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A>このパラメーターではなく、プロパティを使用する必要があります。  
  
 Wres パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A>プロパティに設定されて`null`または空の文字列、wres パラメーターはサインイン要求に含まれません。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークン サービス (STS) からセキュリティ トークンを受け取ったときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 検証する前に、トークンを変更するためのイベント ハンドラーを追加することができます。 イベント ハンドラーにアクセスできますをセキュリティ トークン、<xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType>プロパティ。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>イベントがキャンセルできるイベントは、設定することができます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`Ws-federation サインイン応答メッセージの処理を終了するイベント ハンドラーにします。  
  
 このイベントは、内部、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>セキュリティ トークン サービス (STS) から受信した Ws-federation サインイン応答メッセージ ("wsignin1.0") を処理するときに、イベント ハンドラーのデリゲート。 、Wresult または wresultptr パラメーターで、サインイン応答メッセージが、セキュリティ トークンを検証する前にセキュリティ トークンが逆シリアル化された直後後に発生します。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークン サービス (STS) から受け取ったセキュリティ トークンが検証されてからセッション セキュリティ トークンが作成されるまでに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作成されるセッション トークンを作成する前に、セキュリティ トークン サービス (STS) からの Ws-federation サインイン応答メッセージを処理中にプリンシパルを変更するイベント ハンドラーを追加できます。 イベント ハンドラーでアクセスできますでプリンシパル、<xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A>プロパティ。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>イベントがキャンセルできるイベントは、設定することができます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`Ws-federation サインイン応答メッセージの処理を終了するイベント ハンドラーにします。  
  
 このイベントは、内部、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>セキュリティ トークン サービス (STS) から受信した Ws-federation サインイン応答メッセージ ("wsignin1.0") を処理するときに、イベント ハンドラーのデリゲート。 Wresult から逆シリアル化されたセキュリティ トークンの直後に発生したやサインイン応答メッセージの wresultptr パラメーターが検証されると前のセッション セキュリティに、トークンが作成されます。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークン サービス (STS) から受け取ったセキュリティ トークンからセッション セキュリティ トークンが作成されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スレッドのプリンシパルを設定するために使用し、セッション cookie に書き込まれる前に、セッション トークンを変更するイベント ハンドラーを追加することができます。 イベント ハンドラーにアクセスできますでセッション トークン、<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>プロパティ。 セッションの cookie を設定して書き込むかどうかを指定することができます、<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType>プロパティ。  
  
 このイベントは、内部、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>セキュリティ トークン サービス (STS) から受信した Ws-federation サインイン応答メッセージ ("wsignin1.0") を処理するときに、イベント ハンドラーのデリゲート。 Wresult から逆シリアル化されたセキュリティ トークンの直後に発生したまたはサインイン応答メッセージの wresultptr パラメーターが検証されると、および要求する前に、プリンシパルに設定されて、 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (し、 <xref:System.Web.HttpContext.User%2A> のプロパティ<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  ハンドラーを提供することをお勧め参照モードでセッションを操作する、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> global.asax.cs ファイルと設定でイベント、<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>トークンで渡された、<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>プロパティ。 これにより、セッション トークンは要求ごとに参照モードで動作し、設定より優先されます、<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>セッション認証モジュールのプロパティ。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">STS からの WS-Federation サインインの応答メッセージで作成されたセッション セキュリティ トークン。</param>
        <param name="isSession">応答に含まれるセッションを表すクッキーを記述する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>スレッドのプリンシパルを設定し、オプションでセッション クッキーを記述します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求処理パイプラインの実装から呼び出される、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>イベント ハンドラーのデリゲート。 このメソッドは、次を行います。  
  
1.  呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A>発生させるメソッドを<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>イベント。 このイベントを使用して、スレッドのプリンシパルを設定するために使用され、セッション cookie に書き込まれる前に、セッション トークンを変更して、セッションの cookie を書き込むかどうかを指定することができます。  
  
2.  呼び出す、<xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>メソッドで構成されているセッション認証モジュール (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) にスレッドのプリンシパルを設定し、必要に応じて、セッション クッキーを書き込みます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sessionToken" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがサインインした後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ログイン ページに、要求が発行する場合、ページ上のコントロールにこのモジュールではなく、このイベントが発生します。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サインアウト中にセッションを削除した直後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことによってこのイベントは、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A>内からメソッド、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>利用者 (RP) にあるセッションからサインアウトするメソッド。 これはフェデレーションによるサインアウト時に、イベントは発生しません、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 セッション cookie が削除された後に、イベント ハンドラーを追加の処理を実行するが、アプリケーションで必要なを追加することができます。  
  
 このイベントは、すべてのセッションに対して呼び出されるようには保証されません。 Cookie が削除されます、クライアント側でなどのため、このイベントが発生することはありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM は、WS-Federation のサインイン要求の wctx パラメーターにこの値を保存します。ただし、モジュールは、サインイン要求またはサインイン応答を処理するときにこの値を使用しません。 任意の値に設定できます。 一意である必要はありません。 詳細については、<see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> メソッドのトピックを参照してください。</param>
        <summary>WS-Federation プロトコルでセキュリティ トークン サービス (STS) へのサインインを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装を呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>サインインを実行するメソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求の wctx パラメーターに含めるアプリケーション固有のコンテキスト値を取得または設定します。</summary>
        <value>サインイン要求の wctx パラメーターに含めるアプリケーション固有のコンテキスト値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>メソッドが呼び出される、生成されるサインイン メッセージには、次の形式を持つ wctx パラメーターが含まれています:`ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`します。 値、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>に格納されている場合は、`cx`パラメーター。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> コードから直接呼び出すことができます。 WSFAM はパッシブ リダイレクトを実行するときにも呼び出されますもときにいずれか、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>メソッドまたは<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>アプリケーション コードでメソッドが呼び出されます。  
  
 WSFAM を保存しますが、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>サインイン要求メッセージ、応答の処理中に、アプリケーションによって値が使用されている場合の値は、サインイン応答メッセージの wctx パラメーターからデータを抽出のロジックが提供する必要があります。  
  
 形式と wctx パラメーターの処理に関する詳細については、次を参照してください。、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サインイン中にエラーが発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ログイン ページに、要求が発行する場合、ページ上のコントロールにこのモジュールではなく、このイベントが発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サインアウト中にセッションを削除する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことによってこのイベントは、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A>内からメソッド、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>利用者 (RP) にあるセッションからサインアウトするメソッド。 これはフェデレーションによるサインアウト時に、イベントは発生しません、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 セッション cookie が削除される前に、アプリケーションで必要な追加の処理を実行するイベント ハンドラーを追加することができます。 読み取ることができます、<xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*>またはかどうか、サインアウトの Ws-federation サインアウト クリーンアップ要求メッセージ ("wsignoutcleanup1.0") の受信結果からセキュリティ トークン サービス (STS) で開始されたかどうかを判断するイベント ハンドラーのプロパティRP。  
  
 このイベントは、すべてのセッションに対して呼び出されるようには保証されません。 Cookie が削除されます、クライアント側でなどのため、このイベントが発生することはありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインイン要求 ("wsignin1.0") で送信される追加パラメーターを含むクエリ文字列を取得または設定します。</summary>
        <value>次の形式で追加のメッセージ パラメーターを含む URL フラグメント: <c>param1 = value1&amp;param2 = value2&amp;paramN の値を =</c>します。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、サインイン要求で追加のパラメーターを送信することができます。 Ws-federation プロトコルで指定されているパラメーターの 1 つではないアプリケーションに固有のパラメーターになります。 要求から追加のパラメーターを削除するには、空の文字列にプロパティを設定します。  
  
 ハンドラーを追加して各 HTTP 要求では、この設定をオーバーライドすることができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>イベント。 モジュールが Ws-federation サインイン要求メッセージをセキュリティ トークン サービス (STS) にリダイレクトする前に、このイベントが発生します。 STS がで指定された、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティに <see langword="null" /> を設定しようとしました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のセッションをサイン アウトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセッションを削除します。  
  
 セキュリティ トークン サービス (STS) には、サインアウト要求メッセージ ("wsignout1.0") は送信されません。 Ws-federation プロトコルを使用して、STS でサインアウトするには使用、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のセッションからサインアウトして、現在の HTTP 要求で指定された URL へのリダイレクトを要求します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセッションを削除し、ブラウザーを現在の HTTP 要求で指定された URL にリダイレクトします。  
  
 呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType>メソッドを`redirectUrl`パラメーターは、現在の要求の URL に設定します。  
  
 セキュリティ トークン サービス (STS) には、サインアウト要求メッセージ ("wsignout1.0") は送信されません。 Ws-federation プロトコルを使用して、STS でサインアウトするには使用、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">WS-Federation サインアウト クリーンアップ要求メッセージ ("wsignoutcleanup1.0") で IP-STS によって要求が開始された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在のセッションからサインアウトして、適切なイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、現在のセッションを削除して、適切なサインアウト イベントを発生させるは、実際の作業を実行します。 メソッドは、次を行います。  
  
1.  呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A>発生させるメソッドを<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>イベント。 イベント ハンドラーは、セッションが削除される前に、必要な処理を提供できます。 <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType>に従ってプロパティを設定、`isIPRequest`パラメーター。  
  
2.  呼び出し、<xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType>セッション cookie を削除する現在のセッションの認証マネージャーのメソッド。  
  
     呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A>発生させるメソッドを<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>イベント。  
  
3.  サインアウトの処理中にエラーが発生した場合を呼び出して、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A>発生させるメソッドを<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>イベント。 イベント ハンドラーは、処理をキャンセルし、例外が呼び出し元に返されるように <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 呼び出すことができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType>メソッドを`isIPRequest`パラメーター セット`false`リダイレクトを実行せず、セッションからサインアウトします。 メソッドがすべて、その他のオーバー ロードされたが最終的と呼ばれる<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>メソッド (で、`isIPRequest`パラメーターに設定`false`) サインアウト処理を実行します。 メソッドを呼び出した、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType>メソッドを`isIPRequest`パラメーター セット`true`Ws-federation サインアウト クリーンアップ メッセージ ("wsignoutcleanup1.0") を処理している場合、セッションからサインアウトします。  
  
 セキュリティ トークン サービス (STS) には、サインアウト要求メッセージ ("wsignout1.0") は送信されません。 Ws-federation プロトコルを使用して、STS でサインアウトするには使用、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">セッションの削除後にブラウザーのリダイレクト先となる URL。</param>
        <summary>現在のセッションからサインアウトして、指定された URL へのリダイレクトを要求します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセッションを削除し、ブラウザーを指定した URL にリダイレクトします。  
  
 呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>メソッドを`redirectUrl`パラメーターを使用して、`initiateSignoutCleanup`設定`false`します。  
  
 セキュリティ トークン サービス (STS) には、サインアウト要求メッセージ ("wsignout1.0") は送信されません。 Ws-federation プロトコルを使用して、STS でサインアウトするには使用、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> が有効な URI ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">サインアウト後にブラウザーのリダイレクト先となる URL。</param>
        <param name="initiateSignoutCleanup">常に <see langword="false" /> に設定します。 このパラメータを <see langword="true" /> に設定することは、サポートされていません。</param>
        <summary>現在のセッションからサインアウトして、指定された URL へのリダイレクトを要求します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のセッションを削除し、ブラウザーを指定した URL にリダイレクトします。  
  
 呼び出す、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>メソッドを`initiateSignoutCleanup`パラメーター セット`false`します。  
  
 セキュリティ トークン サービス (STS) には、サインアウト要求メッセージ ("wsignout1.0") は送信されません。 Ws-federation プロトコルを使用して、STS でサインアウトするには使用、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> が有効な URI ではありません。</exception>
        <exception cref="T:System.NotImplementedException"><paramref name="initiateSignoutCleanup" /> が <see langword="true" /> である場合、<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> クラスは例外をスローします。 このパラメーターを <see langword="true" /> に設定しないでください。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サインアウト中にエラーが発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことによってこのイベントは、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A>内からメソッド、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>利用者 (RP) にあるセッションからサインアウトするメソッド。 これはフェデレーションによるサインアウト時に、イベントは発生しません、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッド。  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>イベントがキャンセル可能なイベント。 設定することができます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>からサインアウトの発信側に返されるエラーの原因となった例外を防ぐため、イベント ハンドラーのプロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインアウト要求 ("wsignout1.0") で送信される追加パラメーターを含むクエリ文字列を取得または設定します。</summary>
        <value>次の形式で追加のメッセージ パラメーターを含む URL フラグメント: <c>param1 = value1&amp;param2 = value2&amp;paramN の値を =</c>します。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定からこのプロパティは初期化、`signOutQueryString`の属性、 [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)構成ファイル内の要素。 Ws-federation サインアウト要求で送信される、アプリケーション固有のパラメーターを格納するものでは。 これらのパラメーターを削除するには、空の文字列にプロパティを設定できます。  
  
 WSFAM がこのプロパティを直接使用できません。ただしを渡すことができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A>完全なコードで使用できる Ws-federation サインアウト URL を作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティに <see langword="null" /> を設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WS-Federation サインアウト要求 ("wsignout1.0") 中に使用される wreply パラメーターの値を取得または設定します。</summary>
        <value>WS-Federation プロトコルによるサインアウトの後にセキュリティ トークン サービス (STS) によるクライアントのリダイレクト先となる URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定からこのプロパティは初期化、`signOutReply`の属性、 [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)構成ファイル内の要素。 Ws-federation サインアウト要求で wreply パラメーターを表すものでは。  
  
 Wreply パラメーターは省略可能です。 場合、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A>プロパティに設定されて`null`またはサインアウト要求で wreply パラメーターを空の文字列が含まれていません。  
  
 WSFAM では、このプロパティを直接使用しません。 ただしを渡すことができます、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>メソッドから、コードまたは Ws-federation サインアウトを実行することができますに渡すときに、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A>完全な Ws-federation のサインアウト URL を作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> と <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> プロパティが空でないことと、<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> プロパティが <see langword="true" /> の場合に、<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> と <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> に指定された URI が HTTPS に準拠していることを確認します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> は、<see langword="null" /> または空の文字列です。  
  
または 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> は、<see langword="null" /> または空の文字列です。  
  
または 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> が <see langword="true" /> であり、<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> が HTTPS 準拠でない場合。  
  
または 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> が <see langword="true" /> であり、<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> が HTTPS 準拠でない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ トークン サービス (STS) によって発行されたトークンを取得するために WS-Federation サインイン応答メッセージを非シリアル化する際に使用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> オブジェクトを取得または設定します。</summary>
        <value>セキュリティ トークン サービス (STS) によって発行されたトークンを取得するために WS-Federation サインイン応答メッセージを非シリアル化する際に使用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">プロパティに <see langword="null" /> を設定しようとしました。</exception>
      </Docs>
    </Member>
  </Members>
</Type>