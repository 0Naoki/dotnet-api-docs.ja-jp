<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69d8f68c04b20c5dff55edf31c96edfb5b763433" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>zip アーカイブ形式の圧縮ファイルのパッケージを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zip アーカイブや、ファイルのエントリを操作するための方法は 3 つのクラス間で分散: <xref:System.IO.Compression.ZipFile>、 <xref:System.IO.Compression.ZipArchive>、および<xref:System.IO.Compression.ZipArchiveEntry>です。  
  
|終了|使用|  
|--------|---------|  
|ディレクトリからの zip のアーカイブを作成します。|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|ディレクトリの zip アーカイブのコンテンツを抽出します。|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|既存の zip アーカイブを新しいファイルを追加します。|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Zip アーカイブからファイルを取得します。|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Zip アーカイブからのすべてのファイルを取得します。|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Zip アーカイブに含まれている 1 つのファイル ストリームを開く|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Zip アーカイブからファイルを削除します。|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 新しいエントリを作成するときに、ファイルが圧縮し、zip パッケージに追加します。 <xref:System.IO.Compression.ZipArchive.CreateEntry%2A>メソッドでは、エントリを追加するときに、ディレクトリの階層を指定することができます。 Zip パッケージ内の新しいエントリの相対パスが含まれます。 たとえば、新しいエントリを作成する相対パスを持つ`AddedFolder\NewFile.txt`AddedFolder をという名前のディレクトリに圧縮されたテキスト ファイルを作成します。  
  
 参照する場合、`System.IO.Compression.FileSystem`アセンブリのプロジェクトで次の 3 つの拡張メソッドにアクセスすることができます (から、<xref:System.IO.Compression.ZipFileExtensions>クラス) の<xref:System.IO.Compression.ZipArchive>クラス: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>、 <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>、および<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>です。 これらの拡張メソッドでは、圧縮および圧縮解除をファイルにエントリの内容を有効にします。 `System.IO.Compression.FileSystem`アセンブリでは使用できません[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリ。 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリでは、圧縮し、を使用してファイルを圧縮解除することができます、<xref:System.IO.Compression.DeflateStream>または<xref:System.IO.Compression.GZipStream>を使用するか、クラス、[!INCLUDE[wrt](~/includes/wrt-md.md)]型[圧縮](http://go.microsoft.com/fwlink/p/?LinkID=246357)と[圧縮解除プログラム](http://go.microsoft.com/fwlink/p/?LinkID=246358)です。  
  
   
  
## Examples  
 最初の例では、新しいエントリを作成し、ストリームを使用して、書き込みにする方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 次の例では、zip アーカイブを開き、エントリのコレクションを反復処理する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 3 番目の例では、既存のファイルからの zip のアーカイブを新しいエントリを作成し、アーカイブの内容を抽出する拡張メソッドを使用する方法を示します。 参照する必要があります、`System.IO.Compression.FileSystem`アセンブリ コードを実行します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">読み取るアーカイブを格納しているストリーム。</param>
        <summary>指定したストリームから <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">ストリームが既に閉じているか、読み取りをサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip アーカイブのフォームにありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <summary>指定したストリームと指定したモードから <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Read>ストリームは読み取りをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Create>ストリームが書き込みをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Update>ストリームは、読み取り、書き込み、およびシークをサポートする必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> が無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
 - または -  
  
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
 - または -  
  
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <param name="leaveOpen">
          <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>指定されたモードの指定されたストリームで <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Read>ストリームは読み取りをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Create>ストリームが書き込みをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Update>ストリームは、読み取り、書き込み、およびシークをサポートする必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> が無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
 - または -  
  
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
 - または -  
  
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <param name="leaveOpen">
          <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <param name="entryNameEncoding">このアーカイブのエントリ名の読み取りまたは書き込み時に使用するエンコード。 エントリ名の UTF-8 エンコードをサポートしない zip アーカイブ ツールとライブラリとの相互運用性のためにエンコードが必要な場合にのみ、このパラメーターの値を指定してください。</param>
        <summary>指定されたモードの指定されたストリームで <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化し、エントリ名に指定されたエンコーディングを使用します。また、必要に応じて、ストリームを開いたままにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Read>ストリームは読み取りをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Create>ストリームが書き込みをサポートする必要があります。 場合、`mode`にパラメーターが設定されている<xref:System.IO.Compression.ZipArchiveMode.Update>ストリームは、読み取り、書き込み、およびシークをサポートする必要があります。  
  
 読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`に設定されている`null`エントリ名は、次の規則に従ってデコードします。  
  
-   エンコード (ローカル ファイル ヘッダーの汎用のビット フラグの内容) フラグが設定されていないときに現在のシステム既定のコード ページは、エントリ名のデコードに使用されます。  
  
-   言語エンコード フラグを設定すると、utf-8 が、エントリ名のデコードに使用されます。  
  
 読み取り用の zip アーカイブ ファイルを開くと`entryNameEncoding`以外の値に設定されて`null`エントリ名は、次の規則に従ってデコードします。  
  
-   ときにエンコード フラグが設定されていない、指定した`entryNameEncoding`エントリ名のデコードに使用します。  
  
-   言語エンコード フラグを設定すると、utf-8 が、エントリ名のデコードに使用されます。  
  
 アーカイブ ファイルを記述する場合と`entryNameEncoding`に設定されている`null`エントリ名は、次のルールに従ってエンコードします。  
  
-   ASCII の範囲外の文字を含むエントリ名、言語エンコード フラグを設定すると、し、エントリ名は、utf-8 を使用してエンコードされました。  
  
-   ASCII 文字のみを含むエントリ名、言語エンコード フラグが設定されていない、エントリ名は、現在のシステム既定のコード ページを使用してエンコードされました。  
  
 アーカイブ ファイルを記述する場合と`entryNameEncoding`以外の値に設定されて`null`、指定した`entryNameEncoding`エントリの名前をバイトにエンコードするために使用します。 フラグ (ローカル ファイル ヘッダーの汎用のビット フラグ) でのエンコード方法は、指定したエンコーディングが utf-8 エンコードの場合にのみ設定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> が無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
 - または -  
  
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
 - または -  
  
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>空のエントリを zip アーカイブに作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
        <summary>指定したパスとエントリ名を持つ空のエントリを zip アーカイブに作成します。</summary>
        <returns>zip アーカイブ内の空のエントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName`文字列は、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとしてフォーマットされていない場合、エントリが作成されると、zip アーカイブのコンテンツを抽出するときに例外を取得することがあります。 アーカイブに指定されたパスと名前を持つエントリが既に存在する場合は、パスと名前が同じで 2 番目のエントリが作成されます。  
  
 値、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新しいエントリのプロパティが現在の時刻に設定します。 エントリは、基になる圧縮アルゴリズムの既定の圧縮レベルを使用して圧縮されます。 ごとに異なる圧縮レベルを指定する場合は、使用、<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>メソッドです。  
  
   
  
## Examples  
 次の例では、エントリを作成し、ストリームを使用して、書き込みにする方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> は <see cref="F:System.String.Empty" />です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">zip アーカイブは書き込みをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
        <param name="compressionLevel">エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の 1 つ。</param>
        <summary>指定したエントリ名と圧縮レベルを持つ空のエントリを zip アーカイブに作成します。</summary>
        <returns>zip アーカイブ内の空のエントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName`文字列は、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとしてフォーマットされていない場合、エントリが作成されると、zip アーカイブのコンテンツを抽出するときに例外を取得することがあります。 アーカイブに指定した名前のエントリが既に存在する場合は、同じ名前の 2 番目のエントリが作成されます。  
  
 値、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新しいエントリのプロパティが現在の時刻に設定します。 設定、`compressionLevel`パラメーターを<xref:System.IO.Compression.CompressionLevel.Optimal>する場合、ファイルを圧縮するに可能な限りです。 設定、`compressionLevel`パラメーターを<xref:System.IO.Compression.CompressionLevel.Fastest>こと、圧縮操作を完了できません十分に速いシナリオでは、問題がある場合のみです。  
  
   
  
## Examples  
 次の例では、最適な圧縮レベルを持つエントリを作成する方法を示します。 これも、ストリームを使用して、新しいエントリを書き込みます。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> は <see cref="F:System.String.Empty" />です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">zip アーカイブは書き込みをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IO.Compression.ZipArchive" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アーカイブの書き込みが完了しで使用されるすべてのリソースを解放、<xref:System.IO.Compression.ZipArchive>オブジェクト。 使用してオブジェクトを構築する場合を除き、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>コンス トラクター オーバー ロードとセットの`leaveOpen`パラメーターを`true`、すべての基になるストリームが閉じていて、それ以降の書き込み操作で使用できなくします。  
  
 このインスタンスの使用が終了したときに<xref:System.IO.Compression.ZipArchive>、呼び出す<xref:System.IO.Compression.ZipArchive.Dispose>をこのインスタンスによって使用されているすべてのリソースを解放します。 これをさらに参照を削除する必要があります<xref:System.IO.Compression.ZipArchive>インスタンスのガベージ コレクターが終了処理の履歴に保持することではなく、インスタンスのメモリを再利用できるようにします。  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> 呼び出し、<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>メソッドで、マネージ コードとアンマネージ リソースを解放するコードが含まれています。 詳細については、次を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          アーカイブの書き込みを終了し、アンマネージ リソースとマネージ リソースを解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> クラスの現在のインスタンスによって使用されるアンマネージ リソースを解放するために、<see cref="M:System.Object.Finalize" /> メソッドと <see cref="T:System.IO.Compression.ZipArchive" /> メソッドによって呼び出されます。オプションで、アーカイブの書き込みを終了し、マネージ リソースを解放できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`disposing`に設定されている`true`を使用してオブジェクトを構築する場合を除き、すべての基になるストリームが閉じていて、それ以降の書き込み操作では使用できなく、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>コンス トラクター オーバー ロードとその`leaveOpen`パラメーターを`true`です。  
  
 このメソッドは、パブリックによってのみ呼び出さ<xref:System.IO.Compression.ZipArchive.Dispose>と<xref:System.Object.Finalize>メソッドです。 このメソッドを直接呼び出さないでください。  
  
 ブール型のパラメーター、dispose パターンを実装する場合、<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>メソッドを次のように使用する必要があります。  
  
-   <xref:System.IO.Compression.ZipArchive.Dispose>現在のオブジェクトのメソッドを呼び出す必要があります<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>ブール型のパラメーターを設定した`true`マネージ コードとアンマネージ リソースを解放します。  
  
-   <xref:System.Object.Finalize>現在のオブジェクトのメソッドを呼び出す必要があります<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>ブール型のパラメーターを設定した`false`アンマネージ リソースだけを解放します。  
  
 詳細については、次を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在 zip アーカイブ内にあるエントリのコレクションを取得します。</summary>
        <value>現在 zip アーカイブ内にあるエントリのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.IO.Compression.ZipArchive.Entries%2A>エントリのコレクション全体を取得するプロパティです。 使用して、<xref:System.IO.Compression.ZipArchive.GetEntry%2A>を名前で 1 つのエントリを取得する方法です。  
  
   
  
## Examples  
 次の例では、zip アーカイブを開き、エントリのコレクションを反復処理する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">zip アーカイブは読み取りをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
        <exception cref="T:System.IO.InvalidDataException">zip アーカイブが破損しているため、エントリを取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">取得するエントリを識別する、アーカイブのルートを基準とするパス。</param>
        <summary>zip アーカイブ内の指定したエントリのラッパーを取得します。</summary>
        <returns>アーカイブ内の指定されたエントリのラッパー。エントリがアーカイブに存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定した名前を持つ複数のエントリは、アーカイブに存在する場合は、最初の 1 つが返されます。 エントリの名前と比較されます`entryName`序数に基づく比較を使用します。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.IO.Compression.ZipArchive.GetEntry%2A>エントリを取得します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> は <see cref="F:System.String.Empty" />です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">zip アーカイブは読み取りをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
        <exception cref="T:System.IO.InvalidDataException">zip アーカイブが破損しているため、エントリを取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>zip アーカイブがエントリで実行できる操作の種類を示す値を取得します。</summary>
        <value>zip のアーカイブがエントリ上で実行できる操作の種類 (読み込み、作成、または更新) を示す列挙値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値を指定する、<xref:System.IO.Compression.ZipArchive>プロパティのインスタンスを作成するときに、<xref:System.IO.Compression.ZipArchive>クラスです。 使用して、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>または<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>の値を指定するコンス トラクター、<xref:System.IO.Compression.ZipArchive.Mode%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>