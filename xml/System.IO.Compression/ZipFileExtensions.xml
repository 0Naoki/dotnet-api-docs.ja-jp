<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc9c1088f45649b96e4af085879fde1dc4d8204f" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996864" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ZipFileExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFileExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFileExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>拡張メソッドを提供します、<see cref="T:System.IO.Compression.ZipArchive" />と<see cref="T:System.IO.Compression.ZipArchiveEntry" />クラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipFileExtensions>クラスには拡張する静的メソッドのみが含まれています、<xref:System.IO.Compression.ZipArchive>と<xref:System.IO.Compression.ZipArchiveEntry>クラス。 インスタンスを作成しない、<xref:System.IO.Compression.ZipFileExtensions>クラス以外のインスタンスからこれらのメソッドを使用する代わりに、<xref:System.IO.Compression.ZipArchive>または<xref:System.IO.Compression.ZipArchiveEntry>します。  
  
 拡張メソッドを使用する参照する必要があります、`System.IO.Compression.FileSystem`プロジェクト内のアセンブリ。 `System.IO.Compression.FileSystem`アセンブリが記載されていない[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリ。 そのため、<xref:System.IO.Compression.ZipFileExtensions>と<xref:System.IO.Compression.ZipFile>クラス (のどちらも、`System.IO.Compression.FileSystem`アセンブリ) では使用できない[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリ。 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]アプリ、ファイルを使用する圧縮で方法を使用して<xref:System.IO.Compression.ZipArchive>、 <xref:System.IO.Compression.ZipArchiveEntry>、 <xref:System.IO.Compression.DeflateStream>、および<xref:System.IO.Compression.GZipStream>します。  
  
 <xref:System.IO.Compression.ZipFileExtensions>クラスには拡張する 4 つのメソッドが含まれています<xref:System.IO.Compression.ZipArchive>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>  

-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.Boolean%29>  

 <xref:System.IO.Compression.ZipFileExtensions>クラスには拡張する 2 つのメソッドが含まれています<xref:System.IO.Compression.ZipArchiveEntry>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>  
  
   
  
## Examples  
 次の例では、既存のファイルから、zip アーカイブ内の新しいエントリを作成し、ディレクトリへのアーカイブの内容を抽出する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 次の例では、zip アーカイブの内容を反復処理し、.txt 拡張子を持つファイルを抽出する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateEntryFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ファイルを圧縮し、zip アーカイブに追加することでアーカイブします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">ファイルを追加する zip アーカイブ。</param>
        <param name="sourceFileName">アーカイブするファイルへのパス。 相対パスと絶対パスのどちらかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。</param>
        <param name="entryName">Zip アーカイブを作成するエントリの名前。</param>
        <summary>ファイルを圧縮し、zip アーカイブに追加することでアーカイブします。</summary>
        <returns>Zip アーカイブ内の新しいエントリのラッパーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アーカイブ内の新しいエントリで指定されたファイルの内容を格納する`sourceFileName`します。 場合、指定した名前のエントリ (`entryName`) 既に存在する、アーカイブと同じ名前の 2 番目のエントリを作成します。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>エントリのプロパティがファイル システム上のファイルが変更された最後の時刻に設定します。  
  
 ときに`ZipArchiveMode.Update`が存在するエントリのサイズの上限に限定<xref:System.Int32.MaxValue?displayProperty=nameWithType>します。 この制限は更新モードを使用するため、<xref:System.IO.MemoryStream>シーク、アーカイブを更新するときに必要な許可を内部的と<xref:System.IO.MemoryStream>が int のサイズが最大と等しい  
   
  
## Examples  
 次の例では、既存のファイルから、zip アーカイブ内の新しいエントリを作成する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> が <see cref="F:System.String.Empty" /> か、空白のみが含まれているか、無効な文字が少なくとも 1 つ含まれています。  
  
- または - 
 <paramref name="entryName" /> は <see cref="F:System.String.Empty" /> です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> または <paramref name="entryName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceFileName" />、指定したパス、ファイル名、またはその両方が、システム定義の最大長を超えています。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> が有効ではありません (たとえば、マップされていないドライブにあるなど)。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="sourceFileName" /> によって指定されたファイルは、開くことができないか、または大きすぎて更新できません (現在の制限は [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue))。</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> がディレクトリを指定しています。  
  
- または - 
指定されたファイルへのアクセスに必要なアクセス許可が呼び出し元にいない<paramref name="sourceFileName" />します。</exception>
        <exception cref="T:System.IO.FileNotFoundException">指定されたファイル<paramref name="sourceFileName" />が見つかりません。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> パラメーターの形式が正しくありません。  
  
- または - 
Zip アーカイブは書き込みをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip アーカイブが破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">ファイルを追加する zip アーカイブ。</param>
        <param name="sourceFileName">アーカイブするファイルへのパス。 相対パスと絶対パスのどちらかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。</param>
        <param name="entryName">Zip アーカイブを作成するエントリの名前。</param>
        <param name="compressionLevel">エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の 1 つ。</param>
        <summary>指定した圧縮レベルを使用して、zip アーカイブに追加して、圧縮することで、ファイルをアーカイブします。</summary>
        <returns>Zip アーカイブ内の新しいエントリのラッパーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アーカイブ内の新しいエントリで指定されたファイルの内容を格納する`sourceFileName`します。 場合、指定した名前のエントリ (`entryName`) 既に存在する、アーカイブと同じ名前の 2 番目のエントリを作成します。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>エントリのプロパティがファイル システム上のファイルが変更された最後の時刻に設定します。  
  
 ときに`ZipArchiveMode.Update`が存在するエントリのサイズの上限に限定<xref:System.Int32.MaxValue?displayProperty=nameWithType>します。 この制限は更新モードを使用するため、<xref:System.IO.MemoryStream>シーク、アーカイブを更新するときに必要な許可を内部的と<xref:System.IO.MemoryStream>が int のサイズが最大と等しい  
  
## Examples  
 次の例では、既存のファイルから、zip アーカイブ内の新しいエントリを作成し、圧縮レベルを指定する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> が <see cref="F:System.String.Empty" /> か、空白のみが含まれているか、無効な文字が少なくとも 1 つ含まれています。  
  
- または - 
 <paramref name="entryName" /> は <see cref="F:System.String.Empty" /> です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> または <paramref name="entryName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> が有効ではありません (たとえば、マップされていないドライブにあるなど)。</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceFileName" />、指定したパス、ファイル名、またはその両方が、システム定義の最大長を超えています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="sourceFileName" /> によって指定されたファイルは、開くことができないか、または大きすぎて更新できません (現在の制限は [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue))。</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> がディレクトリを指定しています。  
  
- または - 
指定されたファイルへのアクセスに必要なアクセス許可が呼び出し元にいない<paramref name="sourceFileName" />します。</exception>
        <exception cref="T:System.IO.FileNotFoundException">指定されたファイル<paramref name="sourceFileName" />が見つかりません。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> パラメーターの形式が正しくありません。  
  
- または - 
Zip アーカイブは書き込みをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip アーカイブが破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">ファイルの抽出元である zip アーカイブ。</param>
        <param name="destinationDirectoryName">抽出ファイルを置くディレクトリのパス。 相対パスと絶対パスのどちらかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。</param>
        <summary>zip アーカイブのすべてのファイルをファイル システムのディレクトリに抽出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドで指定されたディレクトリを作成します`destinationDirectoryName`します。 インストール先ディレクトリが既に存在する場合は、このメソッドは上書きされません。スローされます、<xref:System.IO.IOException>例外。 メソッドには、zip アーカイブ内の階層を反映するサブディレクトリも作成します。 抽出中にエラーが発生した場合、アーカイブは部分的に展開されたままになります。 抽出された各ファイルが同じ相対パスで指定されたディレクトリに`destinationDirectoryName`のソースとしてエントリがアーカイブのルートにあります。  
  
   
  
## Examples  
 次の例では、既存のファイルから、zip アーカイブ内の新しいエントリを作成し、新しいディレクトリにアーカイブを抽出する方法を示します。 コンパイラの順序でこのコード例を参照しなければなりません、`System.IO.Compression`と`System.IO.Compression.FileSystem`プロジェクト内のアセンブリ。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> が <see cref="F:System.String.Empty" /> か、空白のみが含まれているか、無効な文字が少なくとも 1 つ含まれています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパスがシステムで定義されている最大長を超えています。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" /> で指定したディレクトリが既に存在します。  
  
- または - 
アーカイブ内のエントリの名前が <see cref="F:System.String.Empty" /> か、空白のみが含まれているか、無効な文字が少なくとも 1 つ含まれています。  
  
- または - 
アーカイブからエントリを抽出すると、<paramref name="destinationDirectoryName" /> で指定されているディレクトリの外部にファイルが作成されます。 (たとえば、これはエントリ名に親ディレクトリのアクセサーが含まれている場合に発生する可能性があります。) 
- または - 
アーカイブの 2 つ以上のエントリの名前が同じです。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、目的のディレクトリに書き込みするために必要な許可がありません。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> に無効な書式指定が格納されています。</exception>
        <exception cref="T:System.IO.InvalidDataException">アーカイブ エントリが見つからないか、破損しています。  
  
- または - 
アーカイブ エントリがサポートされていない圧縮方式を使用して圧縮されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.IO.Compression.ZipArchive" />を抽出します。</param>
        <param name="destinationDirectoryName">ファイル システムのインストール先ディレクトリへのパス。 相対パスまたは絶対パスができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。</param>
        <param name="overwriteFiles"><see langword="true" /> 既存のファイルを上書きすることを示します<see langword="false" />それ以外の場合。</param>
        <summary>すべてのファイル システム上のディレクトリにアーカイブ ファイルを抽出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 指定されたディレクトリが既に存在します。 このメソッドは、指定されたディレクトリと必要な場合、すべてのサブディレクトリに作成されます。

 アーカイブを抽出中にエラーがある場合は、アーカイブが抽出された部分的には残ります。
 
 抽出されたファイルがある同じ相対パスになるように各エントリを抽出する`destinationDirectoryName`ように、エントリがアーカイブのルートにあります。
 
 アーカイブするファイルがある無効な場合は、最終更新時刻、最初日付と時刻のタイムスタンプの Zip 形式 (1980 年 1 月 1 日の午前 0 時) で表現できる使用されます。
 
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationArchiveFileName" /> 長さ 0 の文字列が唯一の空白を含むで定義されている 1 つまたは複数の無効な文字が含まれていますまたは<see cref="F:System.IO.Path.InvalidPathChars" />します。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationArchiveFileName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが無効です (たとえば、マップされていないドライブにあるなど)。</exception>
        <exception cref="T:System.IO.IOException">名前、<see cref="T:System.IO.Compression.ZipArchiveEntry" />長さ 0 の唯一の空白文字が含まれていますで定義されている 1 つまたは複数の無効な文字が含まれていますまたは<see cref="F:System.IO.Path.InvalidPathChars" />します。

- または -

抽出、<see cref="T:System.IO.Compression.ZipArchiveEntry" />外にある宛先ファイルが作成されてしまいます<paramref name="destinationArchiveFileName" />(たとえば、エントリ名には、親ディレクトリのアクセサーが含まれている) 場合。

- または -

A<see cref="T:System.IO.Compression.ZipArchiveEntry" />同じアーカイブから既に抽出されたエントリと同じ名前です。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationArchiveFileName" /> の形式が正しくありません。</exception>
        <exception cref="T:System.IO.InvalidDataException">A<see cref="T:System.IO.Compression.ZipArchiveEntry" />が見つからないか破損しています。

- または -

A<see cref="T:System.IO.Compression.ZipArchiveEntry" />サポートされていない圧縮方式を使用して圧縮されました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ファイルを zip アーカイブのエントリを抽出します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">ファイルを抽出する zip アーカイブ エントリ。</param>
        <param name="destinationFileName">エントリの内容から作成するファイルのパス。 相対パスまたは絶対パスを指定できます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。</param>
        <summary>ファイルを zip アーカイブのエントリを抽出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 先のファイルが既に存在する場合は、このメソッドは上書きされません。スローされます、<xref:System.IO.IOException>例外。 既存のファイルを上書きするには、使用、<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>メソッド オーバー ロードを代用します。  
  
 ファイルの最終書き込み時刻は、zip アーカイブ内のエントリが変更されました。 最後の時刻に設定されます。この値は、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>プロパティ。  
  
 このメソッドを使用してディレクトリを抽出することはできません。使用して、<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>メソッド代わりにします。  
  
   
  
## Examples  
 次の例では、zip のアーカイブ ファイルの内容を反復処理し、.txt 拡張子を持つファイルを抽出する方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。  
  
- または - 
 <paramref name="destinationFileName" /> がディレクトリを指定しています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> が既に存在します。  
  
- または - 
I/O エラーが発生しました。  
  
- または - 
エントリは現在書き込み用に開かれています  
  
- または - 
エントリはアーカイブから削除されました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、新しいファイルの作成に必要なアクセス許可がありません。</exception>
        <exception cref="T:System.IO.InvalidDataException">エントリでは、アーカイブから不足しているが破損しているしても読み取ることができません。  
  
- または - 
サポートされていない圧縮方式を使用してエントリが圧縮されています。</exception>
        <exception cref="T:System.ObjectDisposedException">このエントリが属している zip アーカイブが破棄されました。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> の形式が正しくありません。  
  
- または - 
このエントリの zip アーカイブが <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> モードで開かれています。このモードでは、エントリの取得が許可されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">ファイルを抽出する zip アーカイブ エントリ。</param>
        <param name="destinationFileName">エントリの内容から作成するファイルのパス。 相対パスと絶対パスのどちらかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。</param>
        <param name="overwrite">宛先ファイルと同じ名前の既存のファイルを上書きする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>zip アーカイブ内のエントリをファイルに抽出して、必要に応じて、同じ名前を持つ既存のファイルを上書きします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイルの最終書き込み時刻は、zip アーカイブ内のエントリが変更されました。 最後の時刻に設定されます。この値は、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>プロパティ。  
  
 このメソッドを使用してディレクトリを抽出することはできません。使用して、<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>メソッド代わりにします。  
  
   
  
## Examples  
 次の例では、zip アーカイブ ファイルの内容を反復処理し、.txt 拡張子を持つファイルを抽出する方法を示します。 コピー先のフォルダーで同じ名前を持つ既存のファイルが上書きされます。 コンパイラの順序でこのコード例を参照しなければなりません、`System.IO.Compression`と`System.IO.Compression.FileSystem`プロジェクト内のアセンブリ。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> は長さ 0 の文字列で、空白のみで構成されるか、または <see cref="F:System.IO.Path.InvalidPathChars" /> で定義される 1 つ以上の正しくない文字を含んでいます。  
  
- または - 
 <paramref name="destinationFileName" /> がディレクトリを指定しています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定されたパスが正しくありません (たとえば、マップされていないドライブにあるなど)。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> が既に存在し、<paramref name="overwrite" /> は <see langword="false" /> です。  
  
- または - 
I/O エラーが発生しました。  
  
- または - 
エントリは現在書き込み用に開かれています  
  
- または - 
エントリはアーカイブから削除されました。</exception>
        <exception cref="T:System.UnauthorizedAccessException">呼び出し元に、新しいファイルの作成に必要なアクセス許可がありません。</exception>
        <exception cref="T:System.IO.InvalidDataException">エントリがアーカイブにないか、破損して読み取ることができません。  
  
- または - 
サポートされていない圧縮方式を使用してエントリが圧縮されています。</exception>
        <exception cref="T:System.ObjectDisposedException">このエントリが属している zip アーカイブが破棄されました。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> の形式が正しくありません。  
  
- または - 
このエントリの zip アーカイブが <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> モードで開かれています。このモードでは、エントリの取得が許可されません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>