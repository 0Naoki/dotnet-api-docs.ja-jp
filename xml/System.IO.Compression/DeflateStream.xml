<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DeflateStream.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ee85e8760afca78c5281f748656703fd7bf7c83a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee85e8760afca78c5281f748656703fd7bf7c83a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Compression.DeflateStream">
          <source>Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.</source>
          <target state="translated">Deflate アルゴリズムを使用してストリームを圧縮および圧縮解除するためのメソッドとプロパティを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression.</source>
          <target state="translated">このクラスは、可逆ファイル圧縮および圧縮解除の業界標準アルゴリズムである、Deflate アルゴリズムを表します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the zlib library.</source>
          <target state="translated">以降で、 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>、<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラスは、zlib ライブラリを使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.</source>
          <target state="translated">その結果より優れた圧縮アルゴリズムが用意されていて、ほとんどの場合よりも小さい圧縮されたファイルは、.NET Framework の以前のバージョンで提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>This class does not inherently provide functionality for adding files to or extracting files from zip archives.</source>
          <target state="translated">このクラスにいない本質的に機能するファイルの追加または zip アーカイブからファイルを展開します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>To work with zip archives, use the <ph id="ph1">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph> and the <ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph> classes.</source>
          <target state="translated">Zip アーカイブを使用するを使用して、<ph id="ph1">&lt;xref:System.IO.Compression.ZipArchive&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.Compression.ZipArchiveEntry&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the same compression algorithm as the gzip data format used by the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラスによって使用される、gzip データ形式として同じ圧縮アルゴリズムを使用して、<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>The compression functionality in <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> is exposed as a stream.</source>
          <target state="translated">圧縮機能では、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>はストリームとして公開します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.</source>
          <target state="translated">ファイル全体、または大きいブロックのデータを圧縮するための最適な方法を決定する複数のパスを実行することはできませんので、バイト単位ごとにデータが読み取られます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> classes are best used on uncompressed sources of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>クラスは圧縮されていないデータ ソースで最も多く使用されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>If the source data is already compressed, using these classes may actually increase the size of the stream.</source>
          <target state="translated">場合は、ソース データが既に圧縮されて、これらのクラスを使用して増える場合があります、ストリームのサイズ。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress and decompress a directory of files.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラスして、ファイルのディレクトリを圧縮します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.IO.Compression.DeflateStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.DeflateStream">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress a file larger than 4 GB will cause an exception.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>例外が発生 4 GB より大きいファイルを圧縮するクラス。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The stream to compress.</source>
          <target state="translated">圧縮するストリーム。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</source>
          <target state="translated">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> class by using the specified stream and compression level.</source>
          <target state="translated">指定したストリームと圧縮レベルを使用して、<ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class.</source>
          <target state="translated">速度または圧縮の効率性がのインスタンスにとって重要になるかどうかを指定するときに、このコンス トラクターを使用する、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>This constructor overload uses the compression mode <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">このコンス トラクター オーバー ロードは、圧縮モードを使用して<ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>To set the compression mode to another value, use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">圧縮モードを別の値に設定するには、使用、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph>または<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The following example shows how to set the compression level when creating a <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object.</source>
          <target state="translated">次の例を作成するときに、圧縮レベルを設定する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The stream does not support write operations such as compression.</source>
          <target state="translated">ストリームは圧縮などの書き込み操作をサポートしません </target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> property on the stream object is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">(ストリーム オブジェクトの <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> プロパティは <ph id="ph2">&lt;see langword="false" /&gt;</ph> です)。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>The stream to compress or decompress.</source>
          <target state="translated">圧縮または圧縮解除するストリーム。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>One of the enumeration values that indicates whether to compress or decompress the stream.</source>
          <target state="translated">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> class by using the specified stream and compression mode.</source>
          <target state="translated">指定したストリームと圧縮モードを使用して、<ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> owns the underlying stream, so closing the stream also closes the underlying stream.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>基になるストリームを閉じますもストリームを閉じるために、基になるストリームを所有します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Note that the state of the underlying stream can affect the usability of the stream.</source>
          <target state="translated">基になるストリームの状態がストリームの使いやすさに影響する可能性ことに注意してください。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</source>
          <target state="translated">また、明示的なチェックは行われません、新しいインスタンスが作成される追加の例外がスローされないようにします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>If an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class is created with the <ph id="ph2">`mode`</ph> parameter equal to <ph id="ph3">`Compress`</ph>, header information is inserted immediately.</source>
          <target state="translated">インスタンスの場合、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>でクラスを作成、<ph id="ph2">`mode`</ph>パラメーターと等しい<ph id="ph3">`Compress`</ph>、ヘッダー情報がすぐに挿入します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>If no further action occurs, the stream appears as a valid, empty, compressed file.</source>
          <target state="translated">これ以上の操作が発生しなかった場合、ストリームが有効な空の圧縮ファイルとして表示されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress a file larger than 4 GB raises an exception.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>例外が発生 4 GB より大きいファイルを圧縮するクラス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>By default, the compression level is set to <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">既定では、圧縮レベルに設定が<ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph>と圧縮モードは<ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress and decompress a file.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラスして、ファイルを圧縮します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> で、<ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> が <ph id="ph4">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> で、<ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> が <ph id="ph4">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The stream to compress.</source>
          <target state="translated">圧縮するストリーム。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</source>
          <target state="translated">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream object open after disposing the <ph id="ph2">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> オブジェクトを破棄した後にストリーム オブジェクトを開いたままにする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> class by using the specified stream and compression level, and optionally leaves the stream open.</source>
          <target state="translated">指定したストリームと圧縮レベルを使用して <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class, and whether to leave the stream object open after disposing the <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object.</source>
          <target state="translated">速度または圧縮の効率性がのインスタンスにとって重要になるかどうかを指定するときに、このコンス トラクターを使用する、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラス、およびストリーム オブジェクトを破棄した後に開いたままにするかどうか、<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>This constructor overload uses the compression mode <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">このコンス トラクター オーバー ロードは、圧縮モードを使用して<ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>To set the compression mode to another value, use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">圧縮モードを別の値に設定するには、使用、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph>または<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The following example shows how to set the compression level when creating a <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object and how to leave the stream open.</source>
          <target state="translated">次の例を作成するときに、圧縮レベルを設定する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>オブジェクトと、ストリームを開いたままにする方法です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The stream does not support write operations such as compression.</source>
          <target state="translated">ストリームは圧縮などの書き込み操作をサポートしません </target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> property on the stream object is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">(ストリーム オブジェクトの <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> プロパティは <ph id="ph2">&lt;see langword="false" /&gt;</ph> です)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>The stream to compress or decompress.</source>
          <target state="translated">圧縮または圧縮解除するストリーム。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>One of the enumeration values that indicates whether to compress or decompress the stream.</source>
          <target state="translated">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after disposing the <ph id="ph2">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> オブジェクトを破棄した後にストリームを開いたままにする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> class by using the specified stream and compression mode, and optionally leaves the stream open.</source>
          <target state="translated">指定したストリームと圧縮モードを使用して <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> owns the underlying stream, so closing the stream also closes the underlying stream.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>基になるストリームを閉じますもストリームを閉じるために、基になるストリームを所有します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Note that the state of the underlying stream can affect the usability of the stream.</source>
          <target state="translated">基になるストリームの状態がストリームの使いやすさに影響する可能性ことに注意してください。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</source>
          <target state="translated">また、明示的なチェックは行われません、新しいインスタンスが作成される追加の例外がスローされないようにします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>If an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class is created with the <ph id="ph2">`mode`</ph> parameter equal to <ph id="ph3">`Compress`</ph>, header information is inserted immediately.</source>
          <target state="translated">インスタンスの場合、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>でクラスを作成、<ph id="ph2">`mode`</ph>パラメーターと等しい<ph id="ph3">`Compress`</ph>、ヘッダー情報がすぐに挿入します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>If no further action occurs, the stream appears as a valid, empty, compressed file.</source>
          <target state="translated">これ以上の操作が発生しなかった場合、ストリームが有効な空の圧縮ファイルとして表示されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Using the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress a file larger than 4 GB raises an exception.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>例外が発生 4 GB より大きいファイルを圧縮するクラス。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>By default, the compression level is set to <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">既定では、圧縮レベルに設定が<ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph>と圧縮モードは<ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class to compress and decompress a file.</source>
          <target state="translated">次のコード例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>クラスして、ファイルを圧縮します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> で、<ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> が <ph id="ph4">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> で、<ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> が <ph id="ph4">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.BaseStream">
          <source>Gets a reference to the underlying stream.</source>
          <target state="translated">基になるストリームへの参照を取得します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.DeflateStream.BaseStream">
          <source>A stream object that represents the underlying stream.</source>
          <target state="translated">基になるストリームを表すストリーム オブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.BaseStream">
          <source>The underlying stream is closed.</source>
          <target state="translated">基になるストリームが閉じられました。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin reading data from the stream.</source>
          <target state="translated">ストリームからのデータの読み込み開始位置を示す<bpt id="p1">&lt;c&gt;</bpt>配列<ept id="p1">&lt;/c&gt;</ept>内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">非同期の読み込み動作を開始します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(代わりに、<ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> メソッドの使用を検討します)。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An  object that represents the asynchronous read operation, which could still be pending.</source>
          <target state="translated">まだ保留中である可能性がある非同期の読み取り操作を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A&gt;</ph> method.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>を使用して、非同期読み取り操作を行うことができます、<ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph> method is still available in the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>メソッドはでまだ使用できる、<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>レガシ コードをサポートするために新しい非同期メソッドを使用して非同期 I/O 操作をより簡単に実装するただし、します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For more information, see .</source>
          <target state="translated">詳細については、次を参照してください。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Pass the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> return value to the <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">渡す、<ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>に値を返す、<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>読み取られたバイト数を決定しの読み取りに使用されているオペレーティング システム リソースを解放するストリームのメソッドです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You can do this either by using the same code that called <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph> or in a callback passed to <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">これを行うかを呼び出した同じコードを使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>またはに渡されたコールバックで<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.</source>
          <target state="translated">非同期の読み取りまたは書き込み操作が発行されると、I/O 操作の完了時ではなく、ストリームの現在の位置は更新されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">複数の非同期要求は、不定の要求の完了の順序をレンダリングします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object supports reading.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.CanRead%2A&gt;</ph>プロパティを決定するかどうか、現在<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>オブジェクトが読み取りをサポートします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">例外が直ちにスローされる場合は、ストリームが閉じているか、無効な引数を渡す、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期読み取り要求中に発生したエラーは、スレッド プールのスレッドで発生し、呼び出すときに例外をスロー<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method tried to read asynchronously past the end of the stream, or a disk error occurred.</source>
          <target state="translated">メソッドは、ストリームの末尾を越えて非同期的に読み取ろうとしました。または、ディスク エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">ストリームが閉じた後でメソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> implementation does not support the read operation.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> 実装は、読み取り操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This call cannot be completed.</source>
          <target state="translated">この呼び出しは完了できません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> to begin writing from.</source>
          <target state="translated">書き込むデータの開始位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(代わりに、<ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> メソッドの使用を検討します)。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An  object that represents the asynchronous write operation, which could still be pending.</source>
          <target state="translated">まだ保留中である可能性がある非同期の書き込み操作を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A&gt;</ph> method.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>を使用して非同期書き込み操作を行うことができます、<ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph> method is still available in the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>メソッドはでまだ使用できる、<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>レガシ コードをサポートするために新しい非同期メソッドを使用して非同期 I/O 操作をより簡単に実装するただし、します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For more information, see .</source>
          <target state="translated">詳細については、次を参照してください。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Pass the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> object returned by the current method to <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> to ensure that the write completes and frees resources appropriately.</source>
          <target state="translated">渡す、<ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>を現在のメソッドによって返されるオブジェクト<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>書き込みが完了して、リソースを適切に解放ことを確認します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You can do this either by using the same code that called <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph> or in a callback passed to <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">これを行うかを呼び出した同じコードを使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>またはに渡されたコールバックで<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If an error occurs during an asynchronous write operation, an exception will not be thrown until <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> is called with the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by this method.</source>
          <target state="translated">非同期の書き込み操作中にエラーが発生する場合まで例外はスローされません<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>してを呼び出すと、<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>このメソッドによって返されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is writable, writing at the end of the stream expands the stream.</source>
          <target state="translated">ストリームが書き込み可能な場合は、ストリームの末尾に書き込み、ストリームが拡張されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes.</source>
          <target state="translated">非同期の読み取りを発行または I/O 操作の完了時ではなく、操作を記述するときに、ストリーム内の現在位置が更新されます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">複数の非同期要求は、不定の要求の完了の順序をレンダリングします。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.CanWrite%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> object supports writing.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.CanWrite%2A&gt;</ph>プロパティを決定するかどうか、現在<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>オブジェクトが書き込みをサポートします。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">例外が直ちにスローされる場合は、ストリームが閉じているか、無効な引数を渡す、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期書き込み要求中に発生したエラーは、スレッド プールのスレッドで発生し、呼び出すときに例外をスロー<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method tried to write asynchronously past the end of the stream, or a disk error occurred.</source>
          <target state="translated">メソッドは、ストリームの末尾を越えて非同期的に書き込もうとしました。または、ディスク エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">1 つ以上の引数が無効です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">ストリームが閉じた後でメソッドが呼び出されました。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> implementation does not support the write operation.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> 実装は、書き込み操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The write operation cannot be performed because the stream is closed.</source>
          <target state="translated">ストリームが閉じているため、書き込み操作を実行できません。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.CanRead">
          <source>Gets a value indicating whether the stream supports reading while decompressing a file.</source>
          <target state="translated">ファイルの圧縮解除中にストリームが読み取りをサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.DeflateStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value is <ph id="ph3">&lt;see langword="Decompress" /&gt;</ph>, and the underlying stream is opened and supports reading; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 値が <ph id="ph3">&lt;see langword="Decompress" /&gt;</ph> で、基になるストリームが開いており、読み取りをサポートしている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.CanSeek">
          <source>Gets a value indicating whether the stream supports seeking.</source>
          <target state="translated">ストリームがシークをサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.DeflateStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.CanWrite">
          <source>Gets a value indicating whether the stream supports writing.</source>
          <target state="translated">ストリームが書き込みをサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.DeflateStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value is <ph id="ph3">&lt;see langword="Compress" /&gt;</ph>, and the underlying stream supports writing and is not closed; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 値が <ph id="ph3">&lt;see langword="Compress" /&gt;</ph> で、基になるストリームが書き込みをサポートし、閉じられていない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> プロテクト呼び出します<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Dispose%2A&gt;</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Dispose%2A&gt;</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" /&gt;</ph>既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see cref="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>Waits for the pending asynchronous read to complete.</source>
          <target state="translated">保留中の非同期読み取りが完了するまで待機します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(代わりに、<ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> メソッドの使用を検討します)。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.DeflateStream" /&gt;</ph> が 0 を返すのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み取り可能になるまでブロックします。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A&gt;</ph> method.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>を使用して、非同期読み取り操作を行うことができます、<ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph> method is still available in the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>メソッドはでまだ使用できる、<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>レガシ コードをサポートするために新しい非同期メソッドを使用して非同期 I/O 操作をより簡単に実装するただし、します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>For more information, see .</source>
          <target state="translated">詳細については、次を参照してください。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>Call this method to determine how many bytes were read from the stream.</source>
          <target state="translated">このメソッドを呼び出してストリームから読み取られたバイト数を決定します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>This method can be called once to return the amount of bytes read between calls to <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出せる 1 回の呼び出しの間の読み取りバイト数を返す<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.BeginRead%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.EndRead%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">このメソッドは、I/O 操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> did not originate from a <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> は現在のストリームの <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> メソッドから取得されませんでした。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>An exception was thrown during a call to <ph id="ph1">&lt;see cref="M:System.Threading.WaitHandle.WaitOne" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Threading.WaitHandle.WaitOne" /&gt;</ph> の呼び出し中に例外がスローされました。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
          <source>The stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ストリームが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation.</source>
          <target state="translated">非同期書き込み操作を終了します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">(代わりに、<ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> メソッドの使用を検討します)。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A&gt;</ph> method.</source>
          <target state="translated">以降で、<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>を使用して非同期書き込み操作を行うことができます、<ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> method is still available in the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>メソッドはでまだ使用できる、<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>レガシ コードをサポートするために新しい非同期メソッドを使用して非同期 I/O 操作をより簡単に実装するただし、します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>For more information, see .</source>
          <target state="translated">詳細については、次を参照してください。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> must be called only once for every call to the <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph> 呼び出しごとに 1 回だけ呼び出す必要があります、<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.BeginWrite%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">このメソッドは、I/O 操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>.</source>
          <target state="translated">I/O 要求時にディスク障害など、非同期書き込み要求中に発生したエラーは、スレッド プールのスレッドで発生しへの呼び出しに可視になる<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>Exceptions thrown by the thread pool thread will not be visible when calling <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>.</source>
          <target state="translated">呼び出すときに、スレッド プールのスレッドによってスローされた例外は表示されません<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.EndWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> did not originate from a <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> は現在のストリームの <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> メソッドから取得されませんでした。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>An exception was thrown during a call to <ph id="ph1">&lt;see cref="M:System.Threading.WaitHandle.WaitOne" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Threading.WaitHandle.WaitOne" /&gt;</ph> の呼び出し中に例外がスローされました。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
          <source>The end write call is invalid.</source>
          <target state="translated">終了書き込みの呼び出しは無効です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Flush">
          <source>The current implementation of this method has no functionality.</source>
          <target state="translated">現在実装されているこのメソッドは、何の機能も提供しません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Flush">
          <source>The current implementation of this method does not flush the internal buffer.</source>
          <target state="translated">このメソッドの現在の実装では、内部バッファーをフラッシュしません。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Flush">
          <source>The internal buffer is flushed when the object is disposed.</source>
          <target state="translated">オブジェクトが破棄されるときに、内部バッファーがフラッシュされます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Flush">
          <source>The stream is closed.</source>
          <target state="translated">ストリームは閉じられています。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.Length">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">このプロパティはサポートされていないため、常に <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.DeflateStream.Length">
          <source>A long value.</source>
          <target state="translated">long 値。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.Length">
          <source>This property is not supported on this stream.</source>
          <target state="translated">このストリームでは、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.Position">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">このプロパティはサポートされていないため、常に <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.DeflateStream.Position">
          <source>A long value.</source>
          <target state="translated">long 値。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.DeflateStream.Position">
          <source>This property is not supported on this stream.</source>
          <target state="translated">このストリームでは、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The array to store decompressed bytes.</source>
          <target state="translated">圧縮解除されたバイトを格納するための配列。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which the read bytes will be placed.</source>
          <target state="translated">読み取られるバイトが配置される<bpt id="p1">&lt;c&gt;</bpt>配列<ept id="p1">&lt;/c&gt;</ept>内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of decompressed bytes to read.</source>
          <target state="translated">読み取られる、圧縮解除されたバイトの最大数。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a number of decompressed bytes into the specified byte array.</source>
          <target state="translated">圧縮解除されたバイト数を、指定したバイト配列に読み取ります。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes that were read into the byte array.</source>
          <target state="translated">バイト配列に読み取られたバイト数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to compress and decompress bytes by using the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Write%2A&gt;</ph> methods.</source>
          <target state="translated">次の例は、圧縮し、を使用してバイトを圧縮解除する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.Read%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Write%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value was <ph id="ph2">&lt;see langword="Compress" /&gt;</ph> when the object was created.</source>
          <target state="translated">オブジェクトが作成されたとき、<ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 値が <ph id="ph2">&lt;see langword="Compress" /&gt;</ph> でした。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The underlying stream does not support reading.</source>
          <target state="translated">基になるストリームが読み取りをサポートしていません。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> length minus the index starting point is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> の長さからインデックスの開始点を引いた値が <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 未満です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The data is in an invalid format.</source>
          <target state="translated">データ形式が無効です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">ストリームは閉じられています。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The location in the stream.</source>
          <target state="translated">ストリーム内の位置。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This operation is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">この操作はサポートされていないため、常に <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A long value.</source>
          <target state="translated">long 値。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This property is not supported on this stream.</source>
          <target state="translated">このストリームでは、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)">
          <source>The length of the stream.</source>
          <target state="translated">ストリーム長。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)">
          <source>This operation is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">この操作はサポートされていないため、常に <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)">
          <source>This property is not supported on this stream.</source>
          <target state="translated">このストリームでは、このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer that contains the data to compress.</source>
          <target state="translated">圧縮するデータを格納しているバッファー。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> from which the bytes will be read.</source>
          <target state="translated">バイトの読み取り元となる<bpt id="p1">&lt;c&gt;</bpt>配列<ept id="p1">&lt;/c&gt;</ept>内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes compressed bytes to the underlying stream from the specified byte array.</source>
          <target state="translated">圧縮されたバイトを、指定したバイト配列から基になるストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to compress and decompress bytes by using the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Write%2A&gt;</ph> methods.</source>
          <target state="translated">次の例は、圧縮し、を使用してバイトを圧縮解除する方法を示しています、<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream.Read%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream.Write%2A&gt;</ph>メソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>