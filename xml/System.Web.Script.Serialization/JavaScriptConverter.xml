<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1e7934d8d1587adff38812ec02ac2e9499101eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ec584-101">カスタム型コンバーターの抽象基本クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec584-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec584-102"><xref:System.Web.Script.Serialization.JavaScriptConverter>クラスを使用すると、シリアル化を実装し、逆シリアル化のプロセスでネイティブにサポートされていないマネージ型の場合、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec584-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="ec584-103">使用することも<xref:System.Web.Script.Serialization.JavaScriptConverter>シリアル化および逆シリアル化のプロセスより詳細に制御する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="ec584-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="ec584-104"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>プロパティは、カスタムのコンバーターがコンバーターのサービスを提供する型を示します。</span><span class="sxs-lookup"><span data-stu-id="ec584-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="ec584-105">カスタムのコンバーターがある必要がありますを使用することを示すために、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンス、インスタンスと、コンバーターを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ec584-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="ec584-106">使用している場合、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスに直接、使用する必要があります、<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>コンバーターを登録します。</span><span class="sxs-lookup"><span data-stu-id="ec584-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="ec584-107">それ以外の場合、ECMAScript (JavaScript) の Web メソッドを呼び出して、カスタムのコンバーターを使用する場合は、登録できますを追加して、`converters`構成ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="ec584-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="ec584-108">詳細については、次を参照してください。[する方法: Microsoft Ajax の ASP.NET サービスを構成する](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)です。</span><span class="sxs-lookup"><span data-stu-id="ec584-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="ec584-109">ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスが登録されると、カスタムのコンバーターを持っている、型、シリアライザーの呼び出しをシリアル化する、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ec584-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="ec584-110">同様に、ときに、 <xref:System.Web.Script.Serialization.JavaScriptSerializer> JavaScript Object Notation (JSON) 文字列を逆シリアル化され、JSON 文字列内の型が、シリアライザーの呼び出しに関連付けられているカスタムのコンバーターを認識するインスタンス、<xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ec584-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec584-111">次の例は、カスタムのコンバーターを作成する方法を示します、<xref:System.Web.UI.WebControls.ListItemCollection>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec584-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="ec584-112">継承する場合<see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />、次のメンバーをオーバーライドする必要があります。</span>
        <span class="sxs-lookup">
          <span data-stu-id="ec584-112">When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:</span>
        </span>  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <span data-ttu-id="ec584-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 提供、<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />メソッドの実装によって使用される<see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />です。</span><span class="sxs-lookup"><span data-stu-id="ec584-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span></span><span data-ttu-id="ec584-114">コンバーター コードが、シリアライザーから渡されるディクショナリに含まれている値を取得できるようにして型のオブジェクトにその値を変換する必要があります<paramref name="T" />です。</span><span class="sxs-lookup"><span data-stu-id="ec584-114">Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />.</span></span><span data-ttu-id="ec584-115">これを実現する変換のカスタム コードを再実装するのではなく呼び出すことができます、<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ec584-115">Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec584-116">
            <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-116">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="ec584-117">名前/値ペアとして格納されているプロパティ データの <see cref="T:System.Collections.Generic.IDictionary`2" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-117">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="ec584-118">生成されるオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-118">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="ec584-119">
            <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-119">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec584-120">派生クラスでオーバーライドされた場合、提供されたディクショナリを、指定された型のオブジェクトに変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-120">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec584-121">逆シリアル化されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-121">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ec584-122">
              <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />内の値を反復処理メソッド、<paramref name="dictionary" />パラメーターで要求された型のインスタンスを構築するために、<paramref name="type" />パラメーター。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-122">The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter.</span>
            </span>
            <span data-ttu-id="ec584-123">コンバーターがから値を直接使用できますが<paramref name="dictionary" />、コンバーター実装者が使用することをお勧め、<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />メソッド代わりにします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-123">Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead.</span>
            </span>
            <span data-ttu-id="ec584-124">コンバーターがのこのメソッドを呼び出す必要があります、<see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />から使用可能なインスタンス、<paramref name="serializer" />パラメーター。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-124">The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.</span>
            </span>
            <span data-ttu-id="ec584-125">
              <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />メソッドによりからプロパティ値を渡すコンバーター <paramref name="dictionary" />、し、予期された型の値を返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-125">The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type.</span>
            </span>
            <span data-ttu-id="ec584-126">場合によっては、カスタム型のコンバーターをそれ自体が登録されていることのコンバーターのプロパティを持つ作業可能性があります (種類 B のプロパティを持つ型と型 B は、カスタムのコンバーターに関連付けられてもなど)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-126">In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</span>
            </span>
            <span data-ttu-id="ec584-127">その場合は、呼び出す<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />により、カスタムのコンバーターが呼び出されるプロパティのデータ ディクショナリに含まれている再帰的になることを確認します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-127">In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</span>
            </span>
            <span data-ttu-id="ec584-128">コンバーターがディクショナリ内のすべてのエントリを反復処理、対象の型の構築されたインスタンスが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-128">When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</span>
            </span>
            <span data-ttu-id="ec584-129">コンバーターでは、逆シリアル化中に問題が発生するがスローされます、<see cref="T:System.InvalidOperationException" />問題を説明するエラーです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-129">If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ec584-130">シリアル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-130">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="ec584-131">シリアル化を処理するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-131">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec584-132">派生クラスでオーバーライドされた場合、名前/値ペアのディクショナリを構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-132">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec584-133">オブジェクトのデータを表すキー/値ペアを含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-133">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec584-134">、カスタムのコンバーターが登録されている型をシリアル化する際、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスを起動、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ec584-134">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ec584-135">戻り値<see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />する必要があります、<see cref="T:System.Collections.Generic.IDictionary`2" />を JSON に変換するオブジェクトのデータを表す 0 個以上の名前/値ペアのインスタンス。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-135">The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</span>
            </span>
            <span data-ttu-id="ec584-136">コンバーター自体には、JSON としてデータがシリアル化されません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-136">The converter itself does not serialize data as JSON.</span>
            </span>
            <span data-ttu-id="ec584-137">コンバーターがプロパティの名前 (ディクショナリの文字列のキー) と対応するプロパティを格納する名前/値ペアのディクショナリを構築する代わりに、(ディクショナリ内でオブジェクトの値) の値。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-137">Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</span>
            </span>
            <span data-ttu-id="ec584-138">
              <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />インスタンスが、後でこれらを JSON に変換します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-138">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.</span>
            </span>
            <span data-ttu-id="ec584-139">コンバーターには、例外が発生するがスローされます、<see cref="T:System.InvalidOperationException" />問題を説明するエラーです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-139">If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec584-140">派生クラスでオーバーライドされた場合、サポートされている型のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-140">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec584-141">コンバーターによってサポートされている型を表す <see cref="T:System.Collections.Generic.IEnumerable`1" /> を実装するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec584-141">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec584-142"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>プロパティは、コンバーターでサポートされている型を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="ec584-142">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="ec584-143">実行時に、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスでは、このプロパティを使用して、対応するカスタムのコンバーターをマネージ型のマッピングを判断します。</span><span class="sxs-lookup"><span data-stu-id="ec584-143">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec584-144">次の例は、オーバーライドする方法を示します、<xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>派生クラスのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ec584-144">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="ec584-145">この例では、コンバーターでのみサポートしている、<xref:System.Web.UI.WebControls.ListItemCollection>型です。</span><span class="sxs-lookup"><span data-stu-id="ec584-145">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="ec584-146">このコード例に示されている例の一部である、<xref:System.Web.Script.Serialization.JavaScriptConverter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ec584-146">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ec584-147">
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> コレクション、およびコレクションには、少なくとも 1 つのエントリを含める必要がありますを返す常に必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ec584-147">
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>