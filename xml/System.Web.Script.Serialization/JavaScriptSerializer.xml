<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c600895e998de3cd0606108f6b2c1c3b3b6beb3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927360" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see href="https://www.newtonsoft.com/json">Json.NET</see> はシリアル化および逆シリアル化で使用する必要があります。 AJAX 対応アプリケーションにシリアル化および逆シリアル化の機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer>クラス、非同期通信レイヤーによって、ブラウザーと Web サーバーの間で渡されるデータを逆シリアル化およびシリアル化には内部的に使用します。 シリアライザーのインスタンスにアクセスできません。 ただし、このクラスは、パブリック API を公開します。 そのため、マネージ コードでの JavaScript Object Notation (JSON) を操作するときに、クラスを使用できます。  
  
 オブジェクトをシリアル化を使用して、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>メソッド。 JSON 文字列を逆シリアル化を使用して、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>または<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>メソッド。 ネイティブでサポートされていない型を逆シリアル化およびシリアル化する<xref:System.Web.Script.Serialization.JavaScriptSerializer>を使用してカスタムのコンバーターを実装、<xref:System.Web.Script.Serialization.JavaScriptConverter>クラス。 使用して、コンバーターを登録、<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>メソッド。  
  
## <a name="mapping-between-managed-types-and-json"></a>マネージ型と JSON の間のマッピング  
 次の表では、シリアル化のプロセスは、マネージ型と JSON の間のマッピングを示します。 これらのマネージ型がネイティブでサポートして<xref:System.Web.Script.Serialization.JavaScriptSerializer>します。 JSON 文字列をマネージ型にシリアル化するときと同じマッピングが適用されます。 ただし、逆シリアル化は非対称で、します。シリアル化可能なすべてのマネージ型は、JSON から逆シリアル化することができます。  
  
> [!NOTE]
>  多次元配列は 1 次元の配列としてシリアル化して、フラットな配列として使用する必要があります。  
  
|マネージ型|JSON と同等|  
|------------------|---------------------|  
|<xref:System.String> (Utf-8 エンコーディングのみ)。|String|  
|<xref:System.Char>|String|  
|1 つの null 文字 (\0) など|Null|  
|<xref:System.Boolean>|ブール型。 Json として表される`true`または `false`|  
|`null` (`null`オブジェクト参照と<xref:System.Nullable>型の値)。|文字列値は null です。|  
|<xref:System.DBNull>|文字列値は null です。|  
|プリミティブな数値 (または、数値型と互換性のある) の型: <xref:System.Byte>、 <xref:System.SByte>、 <xref:System.Int16>、 <xref:System.Int32>、 <xref:System.Int64>、 <xref:System.UInt16>、 <xref:System.UInt32>、 <xref:System.UInt64>、 <xref:System.Double>、および<xref:System.Single>します。 インバリアント カルチャの文字列表現が使用されます。|数値|  
|<xref:System.DateTime>|Date オブジェクト、として JSON で表される"\\(タイマー刻みの数) を日付/\\/"。 タイマー刻みの数は、01 年 1 月、1970 UTC 午前 0 時から経過したタイマー刻み (ミリ秒) の数を示す正または負 long 値です。<br /><br /> サポートされる最大の値が日付<xref:System.DateTime.MaxValue>(9999/12/31 11時 59分: 59 PM)、サポートされている日付の最小値は<xref:System.DateTime.MinValue>(1/1/0001 12時 00分: 00 AM)。|  
|整数型の列挙|等価の列挙値の整数|  
|実装する型<xref:System.Collections.IEnumerable>または<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>いるもの実装になっていない<xref:System.Collections.IDictionary>または<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>します。 などの種類が含まれます<xref:System.Array>、 <xref:System.Collections.ArrayList>、および<xref:System.Collections.Generic.List%601>します。|JSON 配列の構文を使用する配列|  
|実装する型<xref:System.Collections.IDictionary>または<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>します。 などの種類が含まれます<xref:System.Collections.Generic.Dictionary%602>と<xref:System.Collections.Hashtable>します。|JSON ディクショナリ構文を使用して JavaScript オブジェクト|  
|カスタムの具象 (抽象型) 型を持つパブリック インスタンス プロパティを持つは get アクセサーまたはパブリック インスタンス フィールドです。<br /><br /> 書き込み専用のパブリック プロパティ、パブリック プロパティまたはパブリック フィールドの属性でマークされたことに注意してください。 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>、これらの型のパブリックのインデックス付きプロパティは無視されます。|JSON ディクショナリ構文を使用する JavaScript オブジェクト。 "_ _Type"という名前の特殊なメタデータ プロパティが正しく逆シリアル化を確実に含まれています。 パブリック インスタンスのプロパティが get し、set アクセサーを正しく逆シリアル化を確認することを確認してください。|  
|<xref:System.Guid>|GUID の文字列表現|  
|<xref:System.Uri>|戻り値の文字列形式 <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 最初の例では、データ オブジェクトを逆シリアル化およびシリアル化する方法の簡単な図を提供します。 以下に示すようには、Person という名前のクラスが必要です。  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 次の例では、使用するより複雑な完全なプロジェクト、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスを保存し、JSON のシリアル化を使用して、オブジェクトの状態を復元します。 このコードに対して提供されているカスタムのコンバーターを使用して、<xref:System.Web.Script.Serialization.JavaScriptConverter>クラス。  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">ASP.NET AJAX での Web サービスの使用</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">ASP.NET AJAX でクライアント スクリプトから Web サービスの呼び出し</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>型リゾルバーを持たない <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インスタンス、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスのない型競合回避モジュールではシリアル化された JSON 文字列の種類のメタデータ プロパティ (名前は"_ _type") は含まれません。 型のメタデータ プロパティを使って、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>と<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>メソッドは、適切な管理を決定する型に JSON 文字列を変換します。 型競合回避モジュールの詳細については、次を参照してください。、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>クラス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">カスタムの型リゾルバー オブジェクト。</param>
        <summary>カスタムの型リゾルバーを持つ <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトをシリアル化時に、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスで使用、`resolver`型のメタデータ プロパティ ("_ _type") のシリアル化された JSON 文字列に含める適切な値を決定するパラメーター。 同様に、ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスが JSON 文字列を逆シリアル化、競合回避モジュールのインスタンスを使用して適切なマネージ型に型のメタデータ プロパティの値を解決します。  
  
 設定することができます、`resolver`パラメーターを`null`を呼び出すことと同等、<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>コンス トラクター。  
  
 インスタンス<xref:System.Web.Script.Serialization.JavaScriptSerializer>特殊な種類の競合回避モジュールを使用するクライアント スクリプトから Web サービスの呼び出しの非同期通信レイヤーで使用されます。 この種類の競合回避モジュールでは、逆シリアル化できる種類を制限で Web サービスのメソッドのシグネチャのどちらが定義されている、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>適用します。 この組み込みの型リゾルバーは、プログラムで変更することはできません。  
  
> [!IMPORTANT]
>  カスタム型リゾルバーで初期化されたこのオブジェクトのインスタンスを使用すると、セキュリティ リスクがあることができます。 このオブジェクトは信頼されたデータでのみ使用してください。 詳しくは、「[Data Validation](https://www.owasp.org/index.php/Data_Validation)」(データの入力規則) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">ASP.NET AJAX での Web サービスの使用</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">変換対象のオブジェクト。</param>
        <param name="targetType">オブジェクトの変換後の型。</param>
        <summary>指定したオブジェクトを指定した型に変換します。</summary>
        <returns>シリアル化された JSON 文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスが、カスタムのコンバーターで登録された型のシリアライザーの呼び出しをシリアル化、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>は JSON 形式の文字列に変換する名前/値ペアのディクショナリを取得します。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>オブジェクト グラフが複雑すぎる場合、またはのインスタンスが登録されている場合、メソッドは例外をスローできますできます<xref:System.Web.Script.Serialization.JavaScriptConverter>コンバーター再帰が発生します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">生成される JSON 形式の文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。  
  
または 
 <paramref name="obj" /> に循環参照が含まれています。 循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><paramref name="obj" /> の変換後の型。</typeparam>
        <param name="obj">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトを指定した型に変換します。</summary>
        <returns>ターゲットの型に変換されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>メソッドで表されるオブジェクトのインスタンスに変換しようとしました。`obj`型のインスタンスに`T`します。 この変換中には、オブジェクト参照の等価性が維持される保証はありません。 そのためとは限りませんが`obj`と`T`同じオブジェクトを参照してください。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 派生したクラスを実装する場合に使用するためのものでは、<xref:System.Web.Script.Serialization.JavaScriptConverter>します。 コンバーター コードする必要がありますが、シリアライザーがそれに渡されるディクショナリ内の値を使用できるように、型のインスタンスにその値を変換`T`します。 このタスクを実行する変換のカスタム コードを再実装するには、代わりに呼び出すことができます、<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>コンバーター コードからメソッド。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>メソッドを取得する、<xref:System.Web.UI.WebControls.ListItem>コンバーターに渡されるディクショナリ内の値からのオブジェクト。 このコード例が示されている例の一部、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラス。  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに関連付けられた型リゾルバーは対応するマネージド型を見つけることができません。  
  
または 
 <paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
または 
 <paramref name="obj" /> (または <paramref name="obj" /> の入れ子にされたメンバー) には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
または 
<paramref name="obj" /> を配列のようなマネージド型に変換しようとしました。このような型を変換先の型として逆シリアル化を実行することはできません。  
  
または 
<paramref name="obj" /> を <paramref name="T" /> に変換することはできません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
または 
 <paramref name="obj" /> には、型 <paramref name="T" /> に使用できないメンバー定義が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">逆シリアル化する JSON 文字列。</param>
        <param name="targetType">生成されるオブジェクトの型。</param>
        <summary>JSON 形式の文字列を指定した型のオブジェクトに変換します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この逆シリアル化メソッドを特定の種類の方法は、オブジェクト グラフのルートのキャストは試行されませんが、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>メソッドします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。  
  
または 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。  
  
または 
 <paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。  
  
または 
 <paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
または 
 <paramref name="input" /> には、変換先の型に使用できないメンバー定義が含まれています。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに現在関連付けられている型リゾルバーは対応するマネージド型を見つけることができません。  
  
または 
 <paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
または 
 <paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
または 
JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。  
  
または 
<paramref name="input" /> をターゲットの型に変換できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">生成されるオブジェクトの型。</typeparam>
        <param name="input">逆シリアル化する JSON 文字列。</param>
        <summary>指定した JSON 文字列を指定した型 <paramref name="T" /> のオブジェクトに変換します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>メソッドを使用して最初には、<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>メソッドは、オブジェクト グラフと型にキャストする試みを取得する`T`します。  
  
 逆シリアル化中に、シリアライザーの現在の型リゾルバーは参照されて、配列型と dictionary 型内で入れ子になっている要素を変換するときに使用するマネージ型を決定します。 逆シリアル化プロセスがの入れ子になったすべての要素を反復処理結果として、`input`します。 型競合回避モジュールの詳細については、次を参照してください。、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>クラス。  
  
   
  
## Examples  
次の例では、データ オブジェクトを逆シリアル化およびシリアル化する方法の簡単な図を提供します。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

という名前のクラスに要する`Person`、次の例に表示されます。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。  
  
または 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。  
  
または 
 <paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。  
  
または 
 <paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
または 
 <paramref name="input" /> には、型 <paramref name="T" /> に使用できないメンバー定義が含まれています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに関連付けられた型リゾルバーは対応するマネージド型を見つけることができません。  
  
または 
 <paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
または 
 <paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
または 
JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。  
  
または 
<paramref name="input" /> を <paramref name="T" /> に変換することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">逆シリアル化する JSON 文字列。</param>
        <summary>指定した JSON 文字列をオブジェクト グラフに変換します。</summary>
        <returns>逆シリアル化されたオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この逆シリアル化メソッドは、特定の種類、オブジェクト グラフのルートのキャストを試みませんと同様、<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> の長さが <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> の値を超えています。  
  
または 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。  
  
または 
 <paramref name="input" /> パラメーターに予期しない文字シーケンスが含まれています。  
  
または 
 <paramref name="input" /> はディクショナリ型であり、文字列ではないキー値が検出されました。  
  
または 
 <paramref name="input" /> には、変換先の型に使用できないメンバー定義が含まれています。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、シリアライザーに現在関連付けられている型リゾルバーは対応するマネージド型を見つけることができません。  
  
または 
 <paramref name="input" /> にはカスタムの型を示す "__type" プロパティが含まれていますが、対応する JSON 文字列を逆シリアル化した結果を指定のターゲットの型に代入できません。  
  
または 
 <paramref name="input" /> には、<see cref="T:System.Object" /> またはインスタンス化できない型 (抽象型やインターフェイスなど) を示す "__type" プロパティが含まれています。  
  
または 
JSON 配列を、JSON の逆シリアル化のターゲットとして使用できない、配列のようなマネージド型に変換しようとしました。  
  
または 
<paramref name="input" /> をターゲットの型に変換できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> クラスによって受け入れられる JSON 文字列の最大長を取得または設定します。</summary>
        <value>JSON 文字列の最大長。 既定値は Unicode 文字列データの 4 MB に相当ある 2,097, 152 文字です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A>のみときに明示的にインスタンスを作成するのにプロパティが適用される、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラス。 使用して、`jsonSerialization`非同期通信レイヤーで使用される内部のシリアライザーのインスタンスの最大の長さを設定する構成ファイルの要素。 シリアル化の構成要素の詳細については、次を参照してください。[方法。Microsoft Ajax での ASP.NET サービスの構成](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが 1 未満の値に設定されています。</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>処理されるオブジェクト レベル数の制限値を取得または設定します。</summary>
        <value>オブジェクト レベル数。 既定値は 100 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>プロパティは、オブジェクト階層のレベル数を参照する<xref:System.Web.Script.Serialization.JavaScriptSerializer>は、次の場合、処理します。  
  
-   ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスが JSON 文字列を逆シリアル化します。  
  
-   ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラスがシリアル化中に、オブジェクト グラフをウォークします。  
  
 値<xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>のみときに明示的にインスタンスを作成するを適用、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラス。 使用して、`jsonSerialization`の非同期通信レイヤーで使用される内部のシリアライザーのインスタンスを処理するオブジェクトの各レベルの数を設定する構成ファイルの要素。 シリアル化の構成要素の詳細については、次を参照してください。[方法。Microsoft Ajax での ASP.NET サービスの構成](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが 1 未満の値に設定されています。</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">登録するカスタムのコンバーターが格納されている配列。</param>
        <summary>カスタムのコンバーターを <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> インスタンスに登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1 つまたは複数のカスタムのコンバーターを登録することができます、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスを使用して、<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>メソッド。 カスタムのコンバーターが登録されると、<xref:System.Web.Script.Serialization.JavaScriptSerializer>マネージ型をシリアル化して、マネージ型を JSON 文字列を逆シリアル化するコンバーターを使用します。  
  
 同じ複数のコンバーターを登録できる<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンス、およびこれらのコンバーターが、同じ型のサポートを指定できます。 特定の種類に登録されている最後のコンバーターで使用される 1 つは、その結果、<xref:System.Web.Script.Serialization.JavaScriptSerializer>型をシリアル化します。  
  
 カスタムのコンバーターの詳細については、次を参照してください。、<xref:System.Web.Script.Serialization.JavaScriptConverter>クラス。  
  
   
  
## Examples  
 次の例では、カスタムのコンバーターを登録する方法を示しています、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンス。 このコード例が示されている例の一部、<xref:System.Web.Script.Serialization.JavaScriptSerializer>クラス。  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトを JSON 文字列に変換します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">シリアル化するオブジェクト。</param>
        <summary>オブジェクトを JSON 文字列に変換します。</summary>
        <returns>シリアル化された JSON 文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスが、カスタムのコンバーターで登録された型のシリアライザーの呼び出しをシリアル化、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>は JSON 文字列に変換する名前/値ペアのディクショナリを取得します。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>オブジェクト グラフが複雑すぎる場合、またはのインスタンスが登録されている場合、メソッドは例外をスローできますできます<xref:System.Web.Script.Serialization.JavaScriptConverter>コンバーター再帰が発生します。  
  
   
  
## Examples  
次の例では、データ オブジェクトを逆シリアル化およびシリアル化する方法の簡単な図を提供します。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

という名前のクラスに要する`Person`、次の例に表示されます。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">生成される JSON 文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。  
  
または 
 <paramref name="obj" /> に循環参照が含まれています。 循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">シリアル化するオブジェクト。</param>
        <param name="output">JSON 文字列の書き込み先の <see cref="T:System.Text.StringBuilder" /> オブジェクト。</param>
        <summary>オブジェクトをシリアル化し、生成された JSON 文字列を指定の <see cref="T:System.Text.StringBuilder" /> オブジェクトに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンスが、カスタムのコンバーターで登録された型のシリアライザーの呼び出しをシリアル化、<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>は JSON 文字列に変換する名前/値ペアのディクショナリを取得します。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>オブジェクト グラフが複雑すぎる場合、またはのインスタンスが登録されている場合、メソッドは例外をスローできますできます<xref:System.Web.Script.Serialization.JavaScriptConverter>コンバーター再帰が発生します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">生成される JSON 文字列が、<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 値を超えています。  
  
または 
 <paramref name="obj" /> に循環参照が含まれています。 循環参照は、子オブジェクトが親オブジェクトへの参照を持ち、親オブジェクトがその子オブジェクトへの参照を持つ場合に発生します。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> で定義された再帰制限を超えています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>