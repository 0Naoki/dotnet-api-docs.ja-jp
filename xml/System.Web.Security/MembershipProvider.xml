<Type Name="MembershipProvider" FullName="System.Web.Security.MembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd72bc85ad5d5c708c1aeb97b5a7d196b3b11146" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39903904" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MembershipProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MembershipProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MembershipProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MembershipProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type MembershipProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET がカスタム メンバーシップ プロバイダーを使用してメンバーシップ サービスを提供するために実装するコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET メンバーシップは、ASP.NET アプリケーションのさまざまなメンバーシップ プロバイダーを簡単に使用できるように設計されています。 .NET Framework に含まれている指定されたメンバーシップ プロバイダーを使用するまたは独自のプロバイダーを実装することができます。  
  
> [!NOTE]
>  ASP.NET のメンバーシップ機能に慣れていない場合は、次を参照してください。[メンバーシップの概要](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980)続行する前にします。 メンバーシップに関連するその他のトピックの一覧は、次を参照してください。[メンバーシップを使用したユーザーの管理](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)します。  
  
 カスタム メンバーシップ プロバイダーを実装する場合は、継承する必要が、<xref:System.Web.Security.MembershipProvider>抽象クラス。  
  
 カスタム メンバーシップ プロバイダーを作成する 2 つの主な理由があります。  
  
-   FoxPro データベース、Oracle データベース、またはその他のデータ ソースなど、.NET Framework に含まれるメンバーシップ プロバイダーによってサポートされていないデータ ソース内のメンバーシップ情報を格納する必要があります。  
  
-   .NET Framework に付属するプロバイダーで使用されるデータベース スキーマとは異なるデータベース スキーマを使用してメンバーシップ情報を管理する必要があります。 この一般的な例は、会社や Web サイトの SQL Server データベースに既に存在するメンバーシップ データになります。  
  
 <xref:System.Web.Security.MembershipProvider>抽象クラスから継承、<xref:System.Configuration.Provider.ProviderBase>抽象クラス。 <xref:System.Web.Security.MembershipProvider> 実装する必要がありますに必要なメンバーを実装しても<xref:System.Configuration.Provider.ProviderBase>します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Security.MembershipProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 継承するクラスのコンス トラクターを実装する必要はありません、<xref:System.Web.Security.MembershipProvider>抽象クラス。 初期化の値を<xref:System.Web.Security.MembershipProvider>に実装が渡される、<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>メソッドの実装。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.MembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム メンバーシップ プロバイダーを使用するアプリケーションの名前。</summary>
        <value>カスタム メンバーシップ プロバイダーを使用するアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>プロパティの値にユーザーを特定のアプリケーションに関連付ける関連ユーザーの情報を持つデータ ソースに格納されます。 このプロパティは読み取り/書き込みであり、既定値は、<xref:System.Web.HttpRequest.ApplicationPath%2A>プロパティの値を明示的に指定されていない場合。  
  
 メンバーシップ プロバイダーでは、アプリケーションごとに一意のユーザー情報を格納するため、複数の ASP.NET アプリケーションは、重複するユーザー名が作成されている場合、競合に実行することがなく、同じデータ ソースを使用することができます。 複数の ASP.NET アプリケーションが同じを指定することで、同じユーザーのデータ ソースを使用する代わりに、<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>します。  
  
 メンバーシップ プロバイダーの実装で、データ スキーマが含まれていることを確認する必要があります、<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>データ ソースのクエリと更新プログラムのこととも含まれ、<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public abstract bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="abstract member ChangePassword : string * string * string -&gt; bool" Usage="membershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードを更新するユーザー。</param>
        <param name="oldPassword">指定したユーザーの現在のパスワード。</param>
        <param name="newPassword">指定したユーザーの新しいパスワード。</param>
        <summary>メンバーシップ ユーザーに対するパスワードの更新要求を処理します。</summary>
        <returns>パスワードが正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー名、現在のパスワードと新しいパスワードを入力として受け取り、および指定されたユーザー名と現在のパスワードが有効な場合は、データ ソース内のパスワードを更新します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="abstract member ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="membershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードの質問と回答を変更するユーザー。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <param name="newPasswordQuestion">指定したユーザーの新しいパスワードの質問。</param>
        <param name="newPasswordAnswer">指定したユーザーの新しいパスワードの回答。</param>
        <summary>パスワードの質問とメンバーシップ ユーザーの回答を更新するための要求を処理します。</summary>
        <returns>パスワードの質問と回答が正常に更新された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力、ユーザー名、パスワード、パスワードの質問と、パスワードの回答として受け取り、および指定したユーザー名とパスワードが有効な場合に、パスワードの質問と、データ ソースで回答を更新します。  
  
 指定されたユーザー名とパスワードが有効でない場合`false`が返されます。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="abstract member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="membershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新しいユーザーのユーザー名。</param>
        <param name="password">新しいユーザーのパスワード。</param>
        <param name="email">新しいユーザーの電子メール アドレス。</param>
        <param name="passwordQuestion">新しいユーザーのパスワードの質問。</param>
        <param name="passwordAnswer">新しいユーザーのパスワードの答え。</param>
        <param name="isApproved">新しいユーザーを承認するかどうか。</param>
        <param name="providerUserKey">メンバーシップ データ ソースでのユーザーの一意の識別子。</param>
        <param name="status">ユーザーが正常に作成されたかどうかを示す <see cref="T:System.Web.Security.MembershipCreateStatus" /> 列挙値。</param>
        <summary>データ ソースに新しいメンバーシップ ユーザーを追加します。</summary>
        <returns>新しく作成されたユーザーの情報が格納された <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいユーザー、パスワード、および電子メール アドレスの名前を入力として受け取り、アプリケーションの新しいユーザーをデータ ソースに挿入します。 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>メソッドを返します。 を<xref:System.Web.Security.MembershipUser>新しく作成したユーザーの情報を使用して作成されたオブジェクト。 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>メソッドも定義、`out`パラメーター (Visual basic で使用することができます`ByRef`) を返す、<xref:System.Web.Security.MembershipCreateStatus>ユーザーが正常に作成、または理由をそのユーザーの作成に失敗したことを示す値。  
  
 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>メソッド発生させ、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベント場合、<xref:System.Web.Security.MembershipValidatePasswordEventHandler>イベント ハンドラーが指定されている、続行するか、イベントの結果に基づき、ユーザーの作成アクションを取り消します。 使用することができます、<xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A>仮想メソッドを指定された実行<xref:System.Web.Security.MembershipValidatePasswordEventHandler>イベント ハンドラー。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] DecryptPassword (byte[] encodedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] DecryptPassword(unsigned int8[] encodedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DecryptPassword (encodedPassword As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptPassword(cli::array &lt;System::Byte&gt; ^ encodedPassword);" />
      <MemberSignature Language="F#" Value="abstract member DecryptPassword : byte[] -&gt; byte[]&#xA;override this.DecryptPassword : byte[] -&gt; byte[]" Usage="membershipProvider.DecryptPassword encodedPassword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedPassword" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedPassword">暗号化を解除する暗号化されたパスワードを格納するバイト配列。</param>
        <summary>暗号化されたパスワードの暗号化を解除します。</summary>
        <returns>暗号化を解除されたパスワードを格納するバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A>メソッドはメンバーシップ プロバイダーの実装をサポートしているときに使用するにはパスワードの形式が暗号化されて提供されている仮想メソッドです。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> プロパティまたは <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> プロパティが <see langword="AutoGenerate" /> に設定されています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このメソッドは使用できません。 これは、アプリケーションのターゲットが [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)] の場合に発生する可能性があります。 この例外を防ぐには、メソッドをオーバーライドするか、アプリケーションのターゲットを .NET Framework の完全バージョンに変更します。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public abstract bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="abstract member DeleteUser : string * bool -&gt; bool" Usage="membershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">削除するユーザーの名前。</param>
        <param name="deleteAllRelatedData">データベースからユーザーに関連するデータを削除するには <see langword="true" />。データベース内のユーザーに関連するデータをそのままにするには <see langword="false" />。</param>
        <summary>メンバーシップ データ ソースからユーザーを削除します。</summary>
        <returns>ユーザーが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーの名前を入力として受け取るし、データ ソースからそのユーザーの情報を削除します。 場合`deleteAllRelatedData`は`true`、し、すべてのユーザー データをデータベースに格納されている、 <xref:System.Web.Security.Roles>、 <xref:System.Web.HttpContext.Profile%2A>、および<xref:System.Web.UI.WebControls.WebParts.WebPart>パーソナル化も削除されます。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.MembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーがユーザーに自分のパスワードのリセットを許可するように構成されているかどうかを示します。</summary>
        <value>メンバーシップ プロバイダーがパスワードのリセットをサポートしている場合は <see langword="true" />、そうでない場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> 使用して、構成ファイル (Web.config) で指定されたブール値を含む、`enablePasswordReset`属性。 値は、ユーザーが使用できるかどうかを示します、 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 、ランダムに生成された新しいパスワードを使用して、現在のパスワードを上書きする方法。 このプロパティは読み取り専用です。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.MembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーがユーザーに自分のパスワードの取得を許可するように構成されているかどうかを示します。</summary>
        <value>メンバーシップ プロバイダーがパスワードの取得をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>プロパティ使用して、構成ファイル (Web.config) で指定されたブール値を格納、`enablePasswordRetrieval`属性。 値は、ユーザーが使用できるかどうかを示します、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>データ ソースから、現在のパスワードを取得します。 このプロパティは読み取り専用です。  
  
 カスタム メンバーシップ プロバイダーが、ハッシュされたパスワードをサポートしている場合、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>場合、メソッドの実装は例外をスローする必要があります<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>に設定されている`true`パスワード形式に設定されてと`Hashed`します。 ハッシュされたパスワードを取得することはできません。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptPassword">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パスワードを暗号化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、暗号化されたパスワードを格納するバイト配列を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncryptPassword (password As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EncryptPassword(cli::array &lt;System::Byte&gt; ^ password);" />
      <MemberSignature Language="F#" Value="abstract member EncryptPassword : byte[] -&gt; byte[]&#xA;override this.EncryptPassword : byte[] -&gt; byte[]" Usage="membershipProvider.EncryptPassword password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">暗号化するパスワードを格納するバイト配列。</param>
        <summary>パスワードを暗号化します。</summary>
        <returns>暗号化されたパスワードを格納するバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>メソッドはメンバーシップ プロバイダーの実装をサポートしているときに使用するにはパスワードの形式が暗号化されて提供されている仮想メソッドです。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> プロパティまたは <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> プロパティが <see langword="AutoGenerate" /> に設定されています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このメソッドは使用できません。 これは、アプリケーションのターゲットが [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)] の場合に発生する可能性があります。 この例外を防ぐには、メソッドをオーバーライドするか、アプリケーションのターゲットを .NET Framework の完全バージョンに変更します。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password, System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password, valuetype System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncryptPassword (password As Byte(), legacyPasswordCompatibilityMode As MembershipPasswordCompatibilityMode) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EncryptPassword(cli::array &lt;System::Byte&gt; ^ password, System::Web::Configuration::MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberSignature Language="F#" Value="abstract member EncryptPassword : byte[] * System.Web.Configuration.MembershipPasswordCompatibilityMode -&gt; byte[]&#xA;override this.EncryptPassword : byte[] * System.Web.Configuration.MembershipPasswordCompatibilityMode -&gt; byte[]" Usage="membershipProvider.EncryptPassword (password, legacyPasswordCompatibilityMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="legacyPasswordCompatibilityMode" Type="System.Web.Configuration.MembershipPasswordCompatibilityMode" />
      </Parameters>
      <Docs>
        <param name="password">暗号化するパスワードを格納するバイト配列。</param>
        <param name="legacyPasswordCompatibilityMode">メンバーシップ パスワード互換モード。</param>
        <summary>指定されたパスワード互換モードを使用して、指定されたパスワードを暗号化します。</summary>
        <returns>暗号化されたパスワードを格納するバイト配列。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> プロパティまたは <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> プロパティが <see langword="AutoGenerate" /> に設定されています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">このメソッドは使用できません。 これは、アプリケーションのターゲットが [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)] の場合に発生する可能性があります。 この例外を防ぐには、メソッドをオーバーライドするか、アプリケーションのターゲットを .NET Framework の完全バージョンに変更します。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="membershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">検索対象の電子メール アドレス。</param>
        <param name="pageIndex">返される結果ページのインデックス。 <c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>指定したメール アドレスと一致するメール アドレスを持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns>
          <paramref name="pageSize" /> で指定されたページから始まる <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUserCollection" /> オブジェクトのページを格納している <see cref="T:System.Web.Security.MembershipUser" /> コレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> ユーザーの電子メール アドレスが指定された一致するメンバーシップ ユーザーの一覧を返します`emailToMatch`構成済みの<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>プロパティ。 データ ソースは、ワイルドカード文字をなど、追加の検索機能をサポートしている場合は、電子メール アドレスの検索機能を拡張を行うことができます。  
  
 によって返される結果<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの数を識別する<xref:System.Web.Security.MembershipUser>で返されるオブジェクト、<xref:System.Web.Security.MembershipUserCollection>コレクション。 `pageIndex`パラメーターが 0 の最初のページを識別する場所を取得する結果のページを識別します。 `totalRecords`パラメーターは、`out`パラメーターに一致するメンバーシップ ユーザーの合計数に設定されている、`emailToMatch`値。 たとえば、13 人のユーザーの場所が見つかりました`emailToMatch`の一部または全体の電子メール アドレスを一致と`pageIndex`値が 1 と、 `pageSize` 5 の場合、<xref:System.Web.Security.MembershipUserCollection>は 6 ~ 10 番目に返されるユーザーが含まれます。 `totalRecords` 13 に設定されます。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="membershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <param name="pageIndex">返される結果ページのインデックス。 <c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>指定したユーザー名と一致するユーザー名を持つメンバーシップ ユーザーのコレクションを取得します。</summary>
        <returns>
          <paramref name="pageSize" /> で指定されたページから始まる <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUserCollection" /> オブジェクトのページを格納している <see cref="T:System.Web.Security.MembershipUser" /> コレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> ユーザー名が指定された一致するメンバーシップ ユーザーの一覧を返します`usernameToMatch`構成済みの<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>プロパティ。 データ ソースは、ワイルドカード文字をなど、追加の検索機能をサポートしている場合は、ユーザー名の検索機能を拡張を行うことができます。  
  
 によって返される結果<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの数を識別する<xref:System.Web.Security.MembershipUser>で返されるオブジェクト、<xref:System.Web.Security.MembershipUserCollection>コレクション。 `pageIndex`パラメーターは、結果を返すには、0 が最初のページを識別する場所のどのページを識別します。 `totalRecords`パラメーターは、`out`パラメーターに一致するメンバーシップ ユーザーの合計数に設定されている、`usernameToMatch`値。 たとえば、13 人のユーザーの場所が見つかりました`usernameToMatch`の一部または全体のユーザー名と一致と`pageIndex`値が 1 と、 `pageSize` 5 の場合、<xref:System.Web.Security.MembershipUserCollection>は 6 ~ 10 番目に返されるユーザーが含まれます。 `totalRecords` 13 に設定されます。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="abstract member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="membershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">返される結果ページのインデックス。 <c>pageIndex</c> は 0 から始まります。</param>
        <param name="pageSize">返される結果ページのサイズ。</param>
        <param name="totalRecords">一致したユーザーの合計数。</param>
        <summary>データのページにあるデータ ソース内のすべてのユーザーのコレクションを取得します。</summary>
        <returns>
          <paramref name="pageSize" /> で指定されたページから始まる <paramref name="pageIndex" /><see cref="T:System.Web.Security.MembershipUserCollection" /> オブジェクトのページを格納している <see cref="T:System.Web.Security.MembershipUser" /> コレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> 構成済みのデータ ソースからのすべてのユーザーの一覧を返します<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>プロパティ。 ユーザーは、ユーザー名でアルファベット順で返されます。  
  
 によって返される結果<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A>によって制限されます、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの数を識別する<xref:System.Web.Security.MembershipUser>で返されるオブジェクト、<xref:System.Web.Security.MembershipUserCollection>コレクション。 `pageIndex`パラメーターは、結果を返すには、0 が最初のページを識別する場所のどのページを識別します。 `totalRecords`パラメーターは、`out`データベース内のメンバーシップ ユーザーの合計数に設定されているパラメーター。 データベースに 13 人のユーザーがある場合など、`pageIndex`値が 1 と、 `pageSize` 5 の場合、<xref:System.Web.Security.MembershipUserCollection>は 6 ~ 10 番目に返されるユーザーが含まれます。 `totalRecords` 13 に設定されます。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public abstract int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="abstract member GetNumberOfUsersOnline : unit -&gt; int" Usage="membershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーションに現在アクセスしているユーザーの数を取得します。</summary>
        <returns>アプリケーションに現在アクセスしているユーザーの数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ ソース内のすべてのユーザーの数を表す整数値を返します場所、<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>が現在の日付と時刻からより大きい、<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>します。 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>ときに使用する分単位の数を指定する正の整数値の決定が、ユーザーがオンラインかどうか。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public abstract string GetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPassword (username As String, answer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetPassword(System::String ^ username, System::String ^ answer);" />
      <MemberSignature Language="F#" Value="abstract member GetPassword : string * string -&gt; string" Usage="membershipProvider.GetPassword (username, answer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードを取得する対象となるユーザー。</param>
        <param name="answer">ユーザーのパスワードの回答。</param>
        <summary>データ ソースから指定されたユーザー名のパスワードを取得します。</summary>
        <returns>指定したユーザー名のパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー名とパスワードの解答を入力として受け取り、およびデータ ソースからそのユーザーのパスワードを取得しを文字列としてパスワードを返します。  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A>メソッドにより、<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>にフラグが設定されている`true`操作を実行する前にします。 場合<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>は`false`、<xref:System.NotSupportedException>例外がスローされます。  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> 値も確認、<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>プロパティ。 場合<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>は`true`、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>データ ソースに格納されているパスワード回答に対して指定された応答のパラメーターの値を確認します。 一致しない場合、<xref:System.Web.Security.MembershipPasswordException>例外がスローされます。  
  
 カスタム メンバーシップ プロバイダーが、ハッシュされたパスワードをサポートしている場合、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>場合、メソッドは例外をスローする必要があります、<xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A>プロパティに設定されて`true`パスワード形式に設定されてと`Hashed`。 ハッシュされたパスワードを取得することはできません。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データ ソースからメンバーシップ ユーザーの情報を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="abstract member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="membershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">情報を取得するメンバーシップ ユーザーの一意の識別子。</param>
        <param name="userIsOnline">ユーザーの最終利用日時スタンプを更新する場合は <see langword="true" />。ユーザーの最終利用日時スタンプを更新しないでユーザー情報を返す場合は <see langword="false" />。</param>
        <summary>メンバーシップ ユーザーの一意の識別子に基づいてデータ ソースからユーザー情報を取得します。 ユーザーの最終アクティビティの日時スタンプを更新するオプションを提供します。</summary>
        <returns>データ ソースから取得された指定のユーザーの情報が格納された <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー レコードを更新するかどうかを示すブール値を表す一意の識別子を入力として受け取り、<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>ユーザーが現在オンラインであるかを表示するユーザーの値。 <xref:System.Web.Security.MembershipProvider.GetUser%2A>メソッドを返します。 を<xref:System.Web.Security.MembershipUser>オブジェクトの指定したユーザーのデータ ソースから現在の値が入力されます。 データ ソースのユーザー名が見つからない場合<xref:System.Web.Security.MembershipProvider.GetUser%2A>返します`null`します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="abstract member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="membershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">情報を取得するユーザーの名前。</param>
        <param name="userIsOnline">ユーザーの最終利用日時スタンプを更新する場合は <see langword="true" />。ユーザーの最終利用日時スタンプを更新しないでユーザー情報を返す場合は <see langword="false" />。</param>
        <summary>データ ソースからユーザーの情報を取得します。 ユーザーの最終アクティビティの日時スタンプを更新するオプションを提供します。</summary>
        <returns>データ ソースから取得された指定のユーザーの情報が格納された <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー名とを更新するかどうかを示すブール値を入力として受け取り、<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>ユーザーが現在オンラインであるかを表示するユーザーのプロパティの値。 <xref:System.Web.Security.MembershipProvider.GetUser%2A> 返します、<xref:System.Web.Security.MembershipUser>オブジェクトの指定したユーザーのデータ ソースから現在の値が入力されます。 データ ソースのユーザー名が見つからない場合<xref:System.Web.Security.MembershipProvider.GetUser%2A>返します`null`します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public abstract string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="abstract member GetUserNameByEmail : string -&gt; string" Usage="membershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">検索対象の電子メール アドレス。</param>
        <summary>指定した電子メール アドレスに関連付けられているユーザー名を取得します。</summary>
        <returns>指定した電子メール アドレスに関連付けられているユーザー名。 一致する電子メール アドレスが見つからない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 電子メール アドレスを入力として受け取るし、電子メール アドレスが指定された一致するデータ ソースから最初のユーザー名を返します`email`パラメーターの値。  
  
 一致する電子メール アドレス、ユーザー名が見つからない場合`null`が返されます。  
  
 特定の電子メール アドレスに一致する複数のユーザー名が見つかった場合は最初のユーザー名のみが返されます。 各ユーザー名に対して一意の電子メール アドレスを確保するためのカスタムのメカニズムを実装することができます、<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>プロパティでサポートされている、<xref:System.Web.Security.SqlMembershipProvider>プロバイダー。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public abstract int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数を取得します。</summary>
        <value>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティの動作と組み合わせて、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>プロパティを不適切なソースからメンバーシップ ユーザーのパスワードの回答、パスワードの推測を防ぐ回繰り返し試行します。 無効なパスワードまたはパスワードの指定されたメンバーシップ ユーザーの質問の数がより大きいかに等しい場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティ値内で識別される時間を分単位で、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>、設定されたメンバーシップ ユーザーがロックアウトし、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>プロパティを`true`への呼び出しによって、ユーザーのロックを解除するまで、<xref:System.Web.Security.MembershipUser.UnlockUser%2A>メソッド。 有効なパスワードまたはパスワードの解答が前に指定されているかどうか、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>値に達すると、無効な試行回数を追跡するカウンターがゼロにリセットされます。  
  
 無効なパスワードとパスワードの解答の試行は、それぞれ個別に蓄積されます。 たとえば場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティが 5 に設定し、次の 3 つの無効なパスワード試行の 2 つの無効なパスワードの解答の試行後に、内では、2つ以上の無効なパスワード試行(または複数の無効なパスワード解答の試行を3つ)を行う必要があります<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>メンバーシップ ユーザーがロックアウトされるのです。  
  
 場合、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>プロパティに設定されて`false`、無効なパスワードの解答の試行は追跡されません。  
  
 追跡されます。 無効なパスワードとパスワードの解答の試行回数、 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>、 <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>、 <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>、 <xref:System.Web.Security.MembershipProvider.GetPassword%2A>、および<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>メソッド。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効なパスワードに存在する必要がある特殊文字の最小数を取得します。</summary>
        <value>有効なパスワードに存在する必要がある特殊文字の最小数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティが有効なパスワードを作成する入力する必要があります、特別なアルファベット以外の文字の最小数を返します、<xref:System.Web.Security.MembershipProvider>オブジェクト。  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ値の設定を使用してアプリケーションの構成、`minRequiredNonalphanumericCharacters`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。  
  
 英数字以外の文字は、対象の文字、<xref:System.Char.IsLetterOrDigit%2A>メソッドを返します。`false`します。  
  
   
  
## Examples  
 次の例は、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)内の構成要素、`system.web`アプリケーションの Web.config ファイルのセクション。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>メンバーシップ サービス、およびセットを提供するクラス、`minRequiredNonalphanumericCharacters`属性を 1 文字。  
  
```  
<membership>  
  <providers>  
    <clear/>  
    <add name="AspNetSqlMembershipProvider"   
      type="System.Web.Security.SqlMembershipProvider"   
      connectionStringName="ApplicationServices"   
      enablePasswordRetrieval="false"   
      enablePasswordReset="true"   
      requiresQuestionAndAnswer="false"   
      requiresUniqueEmail="false"   
      maxInvalidPasswordAttempts="5"   
      minRequiredPasswordLength="6"   
      minRequiredNonalphanumericCharacters="1"   
      passwordAttemptWindow="10"   
      applicationName="/"/>  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.MembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードに最低限必要な長さを取得します。</summary>
        <value>パスワードに最低限必要な長さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A>プロパティが有効なパスワードを作成する入力する必要があります文字の最小数を取得、<xref:System.Web.Security.MembershipProvider>オブジェクト。  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A>プロパティ値の設定を使用してアプリケーションの構成、`minRequiredPasswordLength`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。  
  
   
  
## Examples  
 次の例は、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)内の構成要素、`system.web`アプリケーションの Web.config ファイルのセクション。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>メンバーシップ サービス、およびセットを提供するクラス、`minRequiredPasswordLength`属性 7 文字をします。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidatingPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnValidatingPassword (System.Web.Security.ValidatePasswordEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidatingPassword(class System.Web.Security.ValidatePasswordEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidatingPassword (e As ValidatePasswordEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidatingPassword(System::Web::Security::ValidatePasswordEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidatingPassword : System.Web.Security.ValidatePasswordEventArgs -&gt; unit&#xA;override this.OnValidatingPassword : System.Web.Security.ValidatePasswordEventArgs -&gt; unit" Usage="membershipProvider.OnValidatingPassword e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.Security.ValidatePasswordEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.Security.ValidatePasswordEventArgs" /> イベント ハンドラーに渡される <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" />。</param>
        <summary>イベント ハンドラーが定義されている場合に <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A>中に仮想メソッドを使用、 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>、<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>と<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>させる方法、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベント場合、<xref:System.Web.Security.MembershipValidatePasswordEventHandler>が指定されています。 `e`に渡すパラメーターを使用する<xref:System.Web.Security.ValidatePasswordEventArgs>オブジェクトを<xref:System.Web.Security.MembershipValidatePasswordEventHandler>イベント ハンドラー。 ときに、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベントが完了するのプロパティ、<xref:System.Web.Security.ValidatePasswordEventArgs>として指定されたオブジェクト、`e`パラメーターを調べて特定し、現在のアクションを取り消す必要があるかどうかを判断<xref:System.Exception> 、保存されています。<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>プロパティをスローする必要があります。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public abstract int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.MembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ ユーザーがロックアウトされるまでに、無効なパスワードまたはパスワードの回答の最大試行回数が許可される時間 (分) を取得します。</summary>
        <value>メンバーシップ ユーザーがロックアウトされるまでに、無効なパスワードまたはパスワードの回答の最大試行回数が許可される時間 (分)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>プロパティの動作と組み合わせて、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティを不適切なソースからメンバーシップ ユーザーのパスワードの回答、パスワードの推測を防ぐ回繰り返し試行します。 無効なパスワードまたはパスワードの指定されたメンバーシップ ユーザーの質問の数を超えた場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>内で識別される時間を分単位で、 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>、メンバーシップ ユーザーが設定してロックアウトして、 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> プロパティ`true`への呼び出しによって、ユーザーのロックを解除するまで、<xref:System.Web.Security.MembershipUser.UnlockUser%2A>メソッド。 有効なパスワードまたはパスワードの回答をする前に指定した場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>に達すると、無効な試行回数を追跡するカウンターがゼロにリセットされます。  
  
 無効なパスワードとパスワードの解答の試行は、それぞれ個別に蓄積されます。 たとえば場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティが 5 に設定し、次の 3 つの無効なパスワード試行の 2 つの無効なパスワードの解答の試行後に、内では、2つ以上の無効なパスワード試行(または複数の無効なパスワード解答の試行を3つ)を行う必要があります<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>をロックアウトするメンバーシップ ユーザーの値。  
  
 場合、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>プロパティに設定されて`false`、無効なパスワードの解答の試行は追跡されません。  
  
 追跡されます。 無効なパスワードとパスワードの解答の試行回数、 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>、 <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>、 <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>、 <xref:System.Web.Security.MembershipProvider.GetPassword%2A>、および<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>メソッド。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.MembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ データ ソースにパスワードを格納する形式を示す値を取得します。</summary>
        <value>データ ソースにパスワードを格納する形式を示す <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A>プロパティにパスワードが格納されている形式を示します。 使用`Hashed`のみ、`Clear`と`Encrypted`安全ではありません。 `Hashed` パスワードは、一方向のハッシュ アルゴリズムと、データベースに格納されているときにランダムに生成された salt 値を使用してハッシュされます。 パスワードが検証されるは、検証用のデータベースの salt 値を使用してハッシュです。 ハッシュされたパスワードを取得することはできません。 `Encrypted` パスワードは、侵害、データベースの内容を表示することができます、暗号化キーを公開しても、安全で考慮されません。 つまり、暗号化されたパスワードを復号化、公開されている可能性があります。  
  
 使用することができます、<xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>と<xref:System.Web.Security.MembershipProvider.DecryptPassword%2A>の仮想メソッド、<xref:System.Web.Security.MembershipProvider>の暗号化し、パスワードの値または復号化するクラスは、独自の暗号化コードを指定できます。 使用する場合、<xref:System.Web.Security.MembershipProvider.EncryptPassword%2A>と<xref:System.Web.Security.MembershipProvider.DecryptPassword%2A>の仮想メソッド、<xref:System.Web.Security.MembershipProvider>クラス、`Encrypted`で指定されたキー情報を使用してパスワードが暗号化されて、 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)構成内の要素。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public abstract string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードの評価に使用される正規表現を取得します。</summary>
        <value>パスワードの評価に使用される正規表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A>プロパティのパスワードの複雑さを評価するために使用する正規表現を取得する、<xref:System.Web.Security.MembershipProvider>オブジェクト。  
  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A>プロパティが設定されて、アプリケーションの構成を使用して、`passwordStrengthRegularExpression`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。  
  
   
  
## Examples  
 次の例は、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)内の構成要素、`system.web`アプリケーションの Web.config ファイルのセクション。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>メンバーシップ サービス、およびセットを提供するクラス、`passwordStrengthRegularExpression`属性を次の条件を満たしていることを検証する正規表現。  
  
-   7 文字を超えています。  
  
-   少なくとも 1 つの数字が含まれています。  
  
-   少なくとも 1 つの特殊な (英数字以外) 文字が含まれています。  
  
 パスワードがこれらの条件を満たしていない場合、パスワードはメンバーシップ プロバイダーによっては許容されません。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードのリセットと取得においてパスワードの質問に対するユーザーの回答を要求するよう、メンバーシップ プロバイダーが構成されているかどうかを示す値を取得します。</summary>
        <value>パスワードをリセットまたは取得する際にパスワードの解答を要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構成ファイル (Web.config) で指定するブール値。 <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>プロパティは、ユーザーが自分のパスワードを使用して取得するには、パスワードの回答を指定する必要があるかどうかを示す、<xref:System.Web.Security.MembershipProvider.GetPassword%2A>メソッド、またはを使用して、パスワードのリセット、<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>メソッド。  
  
 このプロパティは読み取り専用です。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public abstract bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.MembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーが各ユーザー名に対して一意の電子メール アドレスを要求するように構成されているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> メンバーシップ プロバイダーが、一意の電子メール アドレスが必要な場合それ以外の場合、<see langword="false" />します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A>プロパティは、ユーザーの作成時に、ユーザーが一意の電子メール アドレスの値を指定する必要があるかどうかを示します。 現在のデータ ソースのユーザーが既に存在する場合<xref:System.Web.Security.MembershipProvider.ApplicationName%2A>、<xref:System.Web.Security.MembershipProvider.CreateUser%2A>メソッドを返します。`null`のステータス値および<xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public abstract string ResetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResetPassword (username As String, answer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResetPassword(System::String ^ username, System::String ^ answer);" />
      <MemberSignature Language="F#" Value="abstract member ResetPassword : string * string -&gt; string" Usage="membershipProvider.ResetPassword (username, answer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">パスワードをリセットするユーザー。</param>
        <param name="answer">指定したユーザーのパスワードの回答。</param>
        <summary>ユーザーのパスワードをリセットして、自動的に生成された新しいパスワードにします。</summary>
        <returns>指定したユーザーの新しいパスワード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー名とパスワードの解答を入力として受け取り、指定したユーザーの新しいランダム パスワードを生成します。  
  
> [!NOTE]
>  によって作成されたランダムなパスワード、<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>メソッドの正規表現は保証されません、<xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A>プロパティ。 ただし、ランダムなパスワードがによって確立された基準を満たして、<xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A>と<xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>メソッドは、新しいパスワード値を持つデータ ソース内のユーザー情報を更新し、新しいパスワードを文字列として返します。 ランダムなパスワードを生成するための便利なメカニズムは、<xref:System.Web.Security.Membership.GeneratePassword%2A>メソッド。  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> により、<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A>にフラグが設定されている`true`操作を実行する前にします。 場合<xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A>は`false`、<xref:System.NotSupportedException>例外がスローされます。  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> 値も確認、<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>プロパティ。 場合<xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A>は`true`、<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>データ ソースに格納されているパスワード回答に対して指定された応答のパラメーターの値を確認します。 一致しない場合、<xref:System.Web.Security.MembershipPasswordException>例外がスローされます。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public abstract bool UnlockUser (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnlockUser(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function UnlockUser (userName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool UnlockUser(System::String ^ userName);" />
      <MemberSignature Language="F#" Value="abstract member UnlockUser : string -&gt; bool" Usage="membershipProvider.UnlockUser userName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">ロック状態を解除するメンバーシップ ユーザー。</param>
        <summary>メンバーシップ ユーザーを検証できるようにロックを解除します。</summary>
        <returns>メンバーシップ ユーザーのロックが正常に解除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー名を入力として受け取るし、保存されているデータ ソースのフィールドを更新、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>プロパティを`false`します。 <xref:System.Web.Security.MembershipProvider.UnlockUser%2A>メソッドを返します。`true`メンバーシップ ユーザーのレコードを更新すると、正常に。 それ以外の場合`false`します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public abstract void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="abstract member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="membershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">更新するユーザーとそのユーザーの更新情報を表す <see cref="T:System.Web.Security.MembershipUser" /> オブジェクト。</param>
        <summary>データ ソース内のユーザーに関する情報を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力として受け取り、<xref:System.Web.Security.MembershipUser>オブジェクトは、ユーザー情報が設定し、指定された値を持つデータ ソースを更新します。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public abstract bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member ValidateUser : string * string -&gt; bool" Usage="membershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">検証するユーザーの名前。</param>
        <param name="password">指定したユーザーのパスワード。</param>
        <summary>データ ソースに指定したユーザー名とパスワードが存在することを確認します。</summary>
        <returns>指定したユーザー名とパスワードが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザー名とパスワードを入力として受け取り、およびデータ ソースの値に一致することを確認します。 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 返します`true`成功したユーザー名とパスワード一致です。 それ以外の場合、`false`します。  
  
 成功の検証のため<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>更新プログラム、<xref:System.Web.Security.MembershipUser.LastLoginDate%2A>指定したユーザー。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.MembershipProvider.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが作成されるとき、パスワードが変更されるとき、またはリセットされるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>中にイベントが発生した、 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>、 <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>、および<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>メソッド。  
  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベントは、要求された操作の前に発生し、ユーザーが続行するか、要求された操作をキャンセルできるようにします。 操作が取り消された場合、ユーザーがスローされる例外を指定できます。  
  
 ユーザーを使用して、<xref:System.Web.Security.MembershipValidatePasswordEventHandler>のハンドラーを指定するイベント ハンドラー、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベント。 プロバイダーの実装側が使用できる、<xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A>させる仮想メソッド、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベント。  
  
   
  
## Examples  
 例については、<xref:System.Web.Security.MembershipProvider>の実装を参照してください[プロファイル プロバイダーを実装する](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>