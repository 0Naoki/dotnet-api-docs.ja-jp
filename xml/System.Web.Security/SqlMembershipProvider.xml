<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c653fcd735b425b1a29ff05b8e411e9f2c59cc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36397777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは使用、<xref:System.Web.Security.Membership>と<xref:System.Web.Security.MembershipUser>SQL Server データベースを使用して ASP.NET アプリケーションのメンバーシップ サービスを提供するクラス。 使用することはできません、 <xref:System.Web.Security.SqlMembershipProvider> SQL サーバーがない場合。 お使いのコンピューターがあり、既定のインスタンス名でインストールされる SQL Server Express ユーザー インスタンスが有効なときに、<xref:System.Web.Security.SqlMembershipProvider>という名前のデータベース オブジェクトを作成`aspnetdb`アプリケーションの`App_Data`最初のディレクトリ、アプリケーションの時間実行されます。  
  
 データベースを手動で作成するには、実行、`Aspnet_regsql.exe`実行可能ファイルが含ま、`%systemroot%\Microsoft.NET\Framework\ versionNumber`フォルダーを指定し、`-A m`オプション (たとえば`aspnet_regsql.exe -A m`)。 作成されたデータベースには、Aspnetdb が呼び出されます。 また、実行`Aspnet_regsql.exe`を GUI モードの構成をプルし、すべての ASP.NET 機能を構成するを選択します。  
  
 メンバーシップ プロバイダーが統合セキュリティを使用する接続文字列で構成されている場合、ASP.NET アプリケーションのプロセス アカウントは、SQL Server データベースに接続する権限が必要です。  
  
 Machine.config ファイルには、既定値が定義されて<xref:System.Web.Security.SqlMembershipProvider>という名前のインスタンス`AspNetSqlMembershipProvider`ローカル コンピューターの既定の SQL Server Express インスタンスに接続します。 既定のインスタンス名で SQL Server Express をインストールするか、ASP.NET アプリケーションの Web.config ファイルに独自のインスタンスを定義することができる場合、プロバイダーのこのインスタンスを使用できます。  
  
 設定した場合、`passwordCompatMode`属性を<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>アプリケーションが、ハッシュを使用することができ、オプションの暗号化のメンバーシップ、ASP.NET 4 で追加されました。 ただし場合、`passwordCompatMode`属性に設定されている<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>ハッシュおよび暗号化のメンバーシップのみが ASP.NET 3.5、ASP.NET 2.0 のオプション、および ASP.NET 3.5 SP1 を使用することができます。 既定値は <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20> です。 詳細については、「<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>」を参照してください。  
  
   
  
## Examples  
 次のコード例を使用するように構成、ASP.NET アプリケーションの Web.config ファイルを示しています、<xref:System.Web.Security.SqlMembershipProvider>です。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A>コンス トラクターがのインスタンスを作成する ASP.NET によって呼び出されます、<xref:System.Web.Security.SqlMembershipProvider>アプリケーションの構成で指定したクラスです。 このコンス トラクターは、コードから使用するものではありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
        <value>メンバーシップ情報を格納および取得するアプリケーションの名前です。 既定値は、<see cref="P:System.Web.HttpRequest.ApplicationPath" />プロパティの値を現在の<see cref="P:System.Web.HttpContext.Request" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>によって使用される、<xref:System.Web.Security.SqlMembershipProvider>ユーザー情報のグループにします。 ユーザー情報をアプリケーション名を修飾することにより重複したユーザー名の間の競合を実行しなくても、1 つのデータベースで複数のアプリケーションの情報を格納できます。 複数の ASP.NET アプリケーションが同じユーザー データベースを使用して、内の同じ値を指定しても、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティです。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティは、プログラムによって設定できますか、Web アプリケーションの構成ファイルで宣言して設定されることができます、`applicationName`属性。  
  
 値が指定されていない場合、 `applicationName` Web アプリケーションの構成ファイル内の属性、<xref:System.Web.HttpRequest.ApplicationPath%2A>アプリケーションに行われた最初の要求のプロパティの値を使用します。  
  
> [!CAUTION]
>  すべてで処理された要求の 1 つの既定のメンバーシップ プロバイダーのインスタンスが使用されるため、<xref:System.Web.HttpApplication>オブジェクトを同時に実行して、設定しようとしています。 複数の要求を持つことができます、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティの値。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティは複数の書き込みでは、安全と変化するスレッドではありません、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティの値は、アプリケーションの複数のユーザーに対して予期しない動作になります。 ユーザー設定できるようにするコードを記述しないことをお勧め、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティする必要がありますしない限り、します。 アプリケーションの例の設定を<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティが必要な可能性があります複数のアプリケーションのメンバーシップ データを管理する管理アプリケーションは、します。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定<xref:System.Web.Security.SqlMembershipProvider>インスタンスとセット、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>に`MyApplication`です。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Modifies a user's password.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully. <see langword="false" /> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのパスワードを更新するクラス。  
  
 パスワードの最大長は、128 文字です。  
  
 正しくないパスワードを指定する場合、<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>メソッドは、内部カウンターをトラックが無効なパスワードの試行回数は 1 ずつ増加します。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッドです。 正しいパスワードを指定し、ユーザーがいない現在ロックアウトされて、内部カウンターを追跡の無効なパスワードとパスワードの解答の試行は、ゼロにリセットされます。 詳細については、次を参照してください。、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティです。  
  
 呼び出すことができます、<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>メソッドへの参照を最初に取得して直接、<xref:System.Web.Security.SqlMembershipProvider>を通じてインスタンス、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 <xref:System.Web.Security.Membership.Provider%2A>プロパティが公開、`defaultProvider`アプリケーションの Web.config ファイルで指定します。 構成済みのプロバイダーを使用して参照の既定のプロバイダーではない、<xref:System.Web.Security.Membership.Providers%2A>プロパティです。  
  
 使用して、ユーザーのパスワードを変更することも、<xref:System.Web.Security.MembershipUser.ChangePassword%2A>メソッドです。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## Examples  
 次のコード例では、指定したユーザーのパスワードを変更します。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスを呼び出す、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="oldPassword" /> is an empty string or longer than 128 characters.  \- or -  <paramref name="newPassword" /> is an empty string or longer than 128 characters.  \- or -  The encoded version of <paramref name="newPassword" /> is greater than 128 characters.  \- or -  The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.  \- or -  The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> was not found in the database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.Security.MembershipUser>クラスをパスワードの質問を更新および ASP.NET アプリケーションの構成ファイル (Web.config) で指定されている SQL Server データベース内のユーザーの回答します。 指定されている形式を使用してパスワードの回答が暗号化されて、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティです。  
  
 パスワードの質問と回答を必要とする、追加の取得、またはユーザーのパスワードをリセットする際のセキュリティの層を提供します。 ユーザー名を作成するときに、ユーザーの質問と答えを取得または忘れたパスワードのリセット後で使用できるに指定できます。 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>メソッドは、パスワードの質問とメンバーシップ ユーザーの回答を更新します。  
  
 正しくないパスワードを指定する場合、<xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>メソッドは、内部カウンターをトラック無効なパスワードの試行回数は 1 ずつ増加します。 これにより、ユーザーに、呼び出すことにより、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッドです。 正しいパスワードを指定し、ユーザーがいない現在ロックアウトされて、内部カウンターを追跡の無効なパスワードとパスワードの解答の試行は、ゼロにリセットされます。 詳細については、次を参照してください。、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティです。  
  
 パスワードの質問の最大長は、256 文字です。 パスワードの回答の最大長は、128 文字です。  
  
 詳細については、「<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>「<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>および「<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>」を参照してください。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## Examples  
 次のコード例では、パスワードの質問と、ユーザーの回答を更新します。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスを呼び出す、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="password" /> is an empty string or is longer than 128 characters.  \- or -  <paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.  \- or -  The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
        <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイルで指定された SQL Server データベースに新しいユーザーを作成するクラス。  
  
 新しいユーザーが識別される、構成された<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>です。  
  
 場合、<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>プロパティに設定されている`true`、および`null`または空の文字列 ("") が指定されて、`email`パラメーター、ユーザーの作成は失敗します。 場合、ユーザーの作成も失敗、<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>プロパティに設定されている`true`と指定された値、`email`パラメーターは、構成済みのデータベースの既存のユーザーの電子メール アドレスの重複する<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>です。  
  
 ユーザー名の最大長は、256 文字です。 電子メール アドレスの最大長は、256 文字です。 クリア テキストで、またはハッシュまたは暗号化された後にパスワードの最大長は、128 文字です。  
  
 ユーザーの作成に失敗すると、その他の条件。  
  
-   `password`パラメーターは`null`、またはトリミング後に空の文字列。  
  
-   長さ、`password`パラメーターがで指定された値より小さい、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティです。  
  
-   アルファベット以外の文字の数、`password`パラメーターがで指定された値より小さい、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティです。  
  
-   `password`パラメーターは内の正規表現を渡しません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティです。  
  
-   カスタム パスワード検証コードがユーザーの作成中に取り消された、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベント。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>プロパティは`true`と`passwordAnswer`パラメーターは、いずれかの`null`またはトリミング後に空の文字列。  
  
-   `passwordAnswer`パラメーターが空の文字列。  
  
-   `passwordAnswer`パラメーターは 128 文字より長くします。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>プロパティは`true`パスワードの質問があるか、および`null`またはトリミング後に空の文字列。  
  
-   `passwordQuestion`パラメーターが空の文字列。  
  
-   `passwordQuestion`パラメーターが 256 文字より長い。  
  
-   `providerUserKey`以外の型のオブジェクトにパラメーターが設定<xref:System.Guid?displayProperty=nameWithType>です。  
  
-   `providerUserKey`パラメーターは、既存のユーザー キーの重複します。  
  
-   `username`パラメーターは、既存のユーザー名と重複しています。  
  
 すべての文字列パラメーターの値からは、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## Examples  
 次のコード例は、フォーム認証を使用するように構成 ASP.NET アプリケーションの新しいユーザーを作成し、<xref:System.Web.Security.SqlMembershipProvider>です。 ユーザーが正常に作成されていない場合は、ユーザーにメッセージが表示されます。 それ以外の場合、ユーザーは、アプリケーションのサインイン ページにリダイレクトされます。  
  
> [!NOTE]
>  このサンプルを呼び出す、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルで使用して、<xref:System.Web.Security.Membership>クラスです。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user's membership information from the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイルで指定された SQL Server データベースからユーザーを削除するクラス。  
  
 削除されたユーザーが削除のみから構成された<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>です。  
  
 場合`deleteAllRelatedData`に設定されている`true`、し、すべてのユーザー データをデータベースに格納されている、 <xref:System.Web.Security.Roles>、 <xref:System.Web.HttpContext.Profile%2A>、または<xref:System.Web.UI.WebControls.WebParts.WebPart>パーソナル化機能が削除も構成済みの<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 メンバーシップ ユーザーが、データベースに存在しない場合と`deleteAllRelatedData`は`true`、し、関連するデータと格納されているのユーザー情報、 <xref:System.Web.Security.Roles>、 <xref:System.Web.HttpContext.Profile%2A>、または<xref:System.Web.UI.WebControls.WebParts.WebPart>のパーソナル化機能は削除されますが、指定されたアプリケーション、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティです。 その結果、<xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A>メソッドを簡単にユーザーに関連する情報を削除するために使用する場合でも、その、<xref:System.Web.Security.SqlMembershipProvider>認証されたユーザー情報を格納するオブジェクトは使用されません。  
  
 先頭および末尾のスペースがトリミング、`username`パラメーターの値。  
  
   
  
## Examples  
 次のコード例では、現在ログオンしているユーザーを削除します。  
  
> [!NOTE]
>  この例では<xref:System.Web.Security.SqlMembershipProvider>を呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
        <value>メンバーシップ プロバイダーがパスワードのリセットをサポートしている場合は <see langword="true" />、そうでない場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パスワード リセットには、現在のパスワードを新しいユーザー名をランダムに生成されたパスワードを交換するメンバーシップ プロバイダーことができます。 これが特に役立つ場合に、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat.Hashed>ユーザーがパスワードのハッシュ値を取得できません。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定<xref:System.Web.Security.SqlMembershipProvider>インスタンスし、パスワードをリセットします。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> メンバーシップ プロバイダーがパスワードの取得をサポートしている場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat.Hashed>ユーザーは、データベースから既存のパスワードを取得できません。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>パスワードの形式は、パスワードの値の一方向のエンコーディングを提供します。 パスワードがランダムに生成された salt 値を持つハッシュされ、認証用のデータベースに格納されている値と比較します。 ハッシュされた値を元のパスワード値を取得するエンコード前にすることはできません。  
  
 場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat.Hashed>、および<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>に設定されている`true`、<xref:System.Configuration.Provider.ProviderException>プロバイダーが初期化される場合にスローされます。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定<xref:System.Web.Security.SqlMembershipProvider>インスタンスし、パスワードの取得を有効にします。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Returns a collection of membership users for which the email address field contains the specified email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 電子メール アドレスに指定されたとの一致が含まれているメンバーシップ ユーザーの一覧を返します`emailToMatch`構成済みの<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 <xref:System.Web.Security.SqlMembershipProvider>ユーザー名と一致するものを検索、 `emailToMatch` LIKE 句を使用して、パラメーター値。 パラメーターの値には、SQL Server のワイルドカード文字を含めることができます。 たとえば場合、`emailToMatch`にパラメーターが設定されている"address@example.com"、電子メール アドレスを持つユーザーの情報を"address@example.com"が存在する場合は、返されます。 場合、`emailToMatch`にパラメーターが設定されている"%@example.com"、電子メール アドレスを持つユーザーの情報を"address@example.com「,」address2@example.com「,」admin@example.com"などが返されます。  
  
 によって返される結果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>によって制限されて、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を特定する<xref:System.Web.Security.MembershipUser>で返されるオブジェクト、<xref:System.Web.Security.MembershipUserCollection>です。 `pageIndex`パラメーターを返すには、0 が最初のページを識別する結果のページを識別します。 `totalRecords`パラメーターは、`out`構成済みのメンバーシップ ユーザーの合計数に設定されているパラメーター`applicationName`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値が 1 と、 `pageSize` 5 の<xref:System.Web.Security.MembershipUserCollection>返されるは 6 ~ 10 番目のユーザーが含まれます。 `totalRecords`パラメーターは 13 に設定するとします。  
  
 先頭および末尾のスペースがトリミング、`emailToMatch`パラメーターの値。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>メンバーシップ ユーザーの情報を表示データのページで結果を取得します。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> ユーザー名が指定されたとの一致が含まれますメンバーシップ ユーザーの一覧を返します`usernameToMatch`構成済みの<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>します。  
  
 <xref:System.Web.Security.SqlMembershipProvider>ユーザー名と一致するものを検索、 `usernameToMatch` LIKE 句を使用して、パラメーター値。 SQL Server のワイルドカード文字は、パラメーターの値に付属することはできます。 たとえば場合、`usernameToMatch`パラメーターが"user1"に設定し、存在する場合、"user1"のユーザー名を持つユーザーのユーザー情報が返されます。 場合、`usernameToMatch`パラメーターは「user %」、"user1"、"user2"、"user_admin"のユーザー名を持つユーザーのユーザー情報に設定されなどが返されます。  
  
 によって返される結果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>によって制限されて、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を特定する<xref:System.Web.Security.MembershipUser>で返されるオブジェクト、<xref:System.Web.Security.MembershipUserCollection>です。 `pageIndex`パラメーターを返すには、0 が最初のページを識別する結果のページを識別します。 `totalRecords`パラメーターは、`out`構成済みのメンバーシップ ユーザーの合計数に設定されているパラメーター`applicationName`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値が 1 と、 `pageSize` 5 の<xref:System.Web.Security.MembershipUserCollection>返されるは 6 ~ 返される 10 番目のユーザーが含まれます。 `totalRecords`パラメーターは 13 に設定するとします。  
  
 先頭および末尾のスペースがトリミング、`usernameToMatch`パラメーターの値。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>メンバーシップ ユーザーの情報を表示データのページで結果を取得します。  
  
> [!NOTE]
>  この例では、System.Web.Security.SqlMembershipProvider を使用して、呼び出し、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password that is at least 14 characters long.</summary>
        <returns>A random password that is at least 14 characters long.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>クラスを提供する<xref:System.Web.Security.Membership.GeneratePassword%2A>には、少なくとも指定された数の英数字以外の文字ので、メソッドで、指定したパスワードが生成されますがサイズします。 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>のメソッド、<xref:System.Web.Security.SqlMembershipProvider>呼び出し、<xref:System.Web.Security.Membership.GeneratePassword%2A>のメソッド、<xref:System.Web.Security.Membership>クラスには、少なくとも 14 文字のランダムなパスワードを取得します。 場合、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティが 14 より大きい場合、返されるパスワードの指定された長さになります、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティです。  
  
 具体的には呼び出すことができます、<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>メソッドを参照することによって、<xref:System.Web.Security.SqlMembershipProvider>クラスから直接、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。  
  
 文字の英数字と次の区切り記号のみ生成されたパスワードを含む:`!@#$%^&*()_-+=[{]};:<>|./?`です。 生成されたパスワードで非表示または印刷不可能な制御文字が含まれていません。  
  
> [!NOTE]
>  によって作成されたランダムなパスワード、<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>メソッド内の正規表現を渡すは保証されません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティです。 ただし、ランダムなパスワードがによって確立された条件を満たして、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>と<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例では、10 文字のランダムなパスワードを生成します。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからユーザー情報を取得するクラス。  
  
 によって返される結果<xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A>によって制限されて、`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーターの最大数を特定する<xref:System.Web.Security.MembershipUser>で返されるオブジェクト、<xref:System.Web.Security.MembershipUserCollection>です。 `pageIndex`パラメーターを返すには、0 が最初のページを識別する結果のページを識別します。 `totalRecords`パラメーターは、`out`構成済みのメンバーシップ ユーザーの合計数に設定されているパラメーター`applicationName`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値が 1 と、 `pageSize` 5 の<xref:System.Web.Security.MembershipUserCollection>返されるは 6 ~ 返される 10 番目のユーザーが含まれます。 `totalRecords`パラメーターは 13 に設定するとします。  
  
   
  
## Examples  
 次のコード例では、ユーザーの一覧を返しますのデータ ページのユーザーの数のカウントと共に現在オンラインです。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからオンライン状態であるユーザーの数を取得するクラス。  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 最後のアクティビティの日付と時刻が現在の日付と時刻の値以下より大きい、現在のアプリケーションのユーザーの数を返します、<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>プロパティ (分) です。  
  
 構成に関連付けられているユーザーのみ<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>カウントに含まれています。  
  
   
  
## Examples  
 次のコード例は、ユーザーのカウントを持つユーザーの一覧を返します現在オンラインです。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.MembershipUser> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからユーザーのパスワードを取得するクラス。  
  
 正しくないパスワードの回答を指定する場合、<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>メソッドは、内部カウンターを無効なパスワードの解答の試行のトラックが 1 ずつ増加します。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッドです。 正しいパスワードの回答を指定し、ユーザーが現在ロックされていない、無効なパスワードの解答の試行を追跡する内部カウンターはゼロにリセットし、します。 詳細については、次を参照してください。、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティです。  
  
 呼び出すことができます、<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>メソッドへの参照を最初に取得して直接、<xref:System.Web.Security.SqlMembershipProvider>を通じてインスタンス、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。  
  
 場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat.Hashed>、<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>メソッドは、パスワードを取得できません。 ハッシュされたパスワードは、一方向は暗号化され、復号化することはできません。 場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat.Hashed>、および<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>に設定されている`true`、<xref:System.Configuration.Provider.ProviderException>プロバイダーが初期化される場合にスローされます。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## Examples  
 次のコード例では、指定されたユーザー名のパスワードを取得し、電子メール メッセージでユーザーに送信します。  
  
> [!NOTE]
>  電子メールを使用してクリア テキストでパスワードを返すことは、高レベルのセキュリティを必要とするサイトには推奨されません。 高度なセキュリティのサイトでは、SSL などの暗号化を使用してパスワードを返すことをお勧めします。  
  
> [!NOTE]
>  このサンプルを呼び出す、<xref:System.Web.Security.SqlMembershipProvider>として指定された、`defaultProvider`を使用して、Web.config ファイルで、<xref:System.Web.Security.Membership>クラスです。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The membership user identified by <paramref name="username" /> is locked out.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.  \- or -  <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is greater than 128 characters.  \- or -  The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the specified user; otherwise, <see langword="false" />.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> データ ソースからユーザー情報を取得し、作成、<xref:System.Web.Security.MembershipUser>オブジェクトが返されるデータを設定します。 指定された一意の識別子を使用してユーザーを識別、`providerUserKey`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last activity date/time stamp for the user.</param>
        <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからユーザー情報を取得するクラス。  
  
 場合`userIsOnline`は`true`、現在の日付と時刻に、ユーザーの最終アクティビティの日付/時刻スタンプを更新します。 これに反映されて、<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>と<xref:System.Web.Security.MembershipUser.IsOnline%2A>プロパティによって返される値で<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>です。  
  
 先頭および末尾のスペースがトリミング、`username`パラメーターの値。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.Security.SqlMembershipProvider.GetUser%2A>ユーザーのパスワードを取得する前にユーザーが存在するかどうかを調べます。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> exceeds 256 characters.  \- or -  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.Security.Membership>クラス、電子メール アドレス、それを使用して ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースから、関連付けられているユーザー名を取得します。  
  
 メンバーシップ データベース内の 1 つ以上のユーザーは、同じ電子メール アドレスを持っている場合は、最初のユーザー名が返されます。 設定することができます、`requiresUniqueEmail`属性を`true`ことを確認する各電子メール アプリケーション構成ファイルでは、データベース内のアドレスは一意です。  
  
 先頭および末尾のスペースがトリミング、`email`パラメーターの値。  
  
   
  
## Examples  
 次のコード例では、指定された電子メール アドレスのユーザー名を取得します。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same email address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider.</param>
        <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、初期化、<xref:System.Web.Security.SqlMembershipProvider>プロパティを使用して値が ASP.NET アプリケーション構成ファイル (Web.config) で指定し、コードから直接使用するものではありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" />, or <see langword="requiresUniqueEmail" /> attribute is set to a value other than a <see langword="Boolean" />.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> or the <see langword="passwordAttemptWindow" /> attribute is set to a value other than a positive integer.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is set to a value other than a positive integer, or the value is greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \- or -  The value for the <see langword="passwordStrengthRegularExpression" /> attribute is not a valid regular expression.  \- or -  The <see langword="applicationName" /> attribute is set to a value that is greater than 256 characters.  \- or -  The <see langword="passwordFormat" /> attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the <see langword="enablePasswordRetrieval" /> attribute is set to <see langword="true" /> in the application configuration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see langword="Encrypted" /> and the  configuration element specifies <see langword="AutoGenerate" /> for the <see langword="decryptionKey" /> attribute.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The value of the connection string for the <see langword="connectionStringName" /> attribute value is empty, or the specified <see langword="connectionStringName" /> does not exist in the application configuration file.  \- or -  The value for the <see langword="commandTimeout" /> attribute is set to a value other than zero or a positive integer.  \- or -  The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>メンバーシップ ユーザーがロック アウトされるまでの無効なパスワードまたはパスワード解答の試行回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>と連携して、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>パスワードまたは繰り返しを試行するメンバーシップ ユーザーのパスワードの回答を推測する必要のないソースから保護します。 無効なパスワードまたはパスワードの指定されたメンバーシップ ユーザーの質問の数がより大きいかの値に等しい場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティの値によって識別される分単位の時間内で、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>プロパティ、そのメンバーシップ ユーザー設定してロックアウト、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>プロパティを`true`とユーザーのロックが解除されるまで、<xref:System.Web.Security.MembershipUser.UnlockUser%2A>メソッドです。 前に、有効なパスワードを指定する場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>値に達すると、無効なパスワードとパスワードの解答の試行回数を追跡するカウンターがゼロにリセットされます。 前に、有効なパスワードの回答を指定する場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>値に達すると、無効なパスワードの解答の試行回数を追跡するカウンターのみがゼロにリセットします。  
  
 <xref:System.Web.Security.SqlMembershipProvider>個別に無効なパスワードの試行回数と無効なパスワードの解答の試行の数を保持します。 無効なパスワードは、パスワードの試行カウンターのみがカウントの結果を試行します。 無効なパスワードの回答は、パスワードの回答カウンターのみがカウントの結果を試行します。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティ値がアプリケーションの構成を使用して、設定、`maxInvalidPasswordAttempts`構成セクションの属性です。  
  
 場合、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>プロパティに設定されている`false`、無効なパスワードの解答の試行は追跡されません。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>設定と、`maxInvalidPasswordAttempts`属性を 5 つが無効な場合に、`passwordAttemptWindow`を 30 分にします。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>有効なパスワードに存在する必要がある特殊文字の最小数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>作成の有効なパスワードを入力する必要があります、特別なアルファベット以外の文字の最小数を返します、<xref:System.Web.Security.SqlMembershipProvider>オブジェクト。  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ値がアプリケーションの構成を使用して、設定、`minRequiredNonalphanumericCharacters`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。  
  
 英数字以外の文字が対象の文字、<xref:System.Char.IsLetterOrDigit%2A>メソッドを返します。`false`です。  
  
   
  
## Examples  
 次の例は、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)内の構成要素、`system.web`アプリケーションの Web.config ファイルのセクションです。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>メンバーシップ サービス、およびセットを提供するクラス、`minRequiredNonalphanumericCharacters`属性を 1 つの文字です。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>パスワードに最低限必要な長さ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> プロパティの有効なパスワードを作成する入力する必要がありますの文字の最小数を取得する、<xref:System.Web.Security.SqlMembershipProvider>オブジェクト。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>プロパティ値がアプリケーションの構成を使用して、設定、`minRequiredPasswordLength`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。  
  
   
  
## Examples  
 次の例は、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)内の構成要素、`system.web`アプリケーションの Web.config ファイルのセクションです。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>メンバーシップ サービス、およびセットを提供するクラス、`minRequiredPasswordLength`属性 7 文字をします。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
        <value>時間枠中に、連続して分単位でしようとする有効なパスワードを指定すると失敗したか、パスワードの解答が追跡されます。 既定値は、10 分です。 現在の失敗した試行と失敗した前回の間隔がより大きい場合、<see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />プロパティを設定すると、失敗とが最初の試行失敗の場合と同様に扱われます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティの動作と組み合わせて、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>回繰り返し試行のパスワードまたはからメンバーシップ ユーザーのパスワードの回答を推測する必要のないソースから保護するためのプロパティです。 ユーザーへのログイン、パスワードの変更またはパスワードをリセットしようとしていますと、の連続した試行の特定の数だけが、指定された時間内で許可されます。 時間枠の長さがで指定された、<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティで、無効な試行間の許容時間を分単位を識別します。 ユーザーに連続した試行の失敗の数は、彼をリセットするか、または自分のパスワードに格納されている値に等しい場合、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>試行が最後に無効なは分に指定された数よりも少ないためプロパティ、および時間の経過時間、 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティ、そのメンバーシップ ユーザーがロックアウトを設定して、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>プロパティを`true`です。 呼び出すことによって、ユーザーのロックを解除することができます、<xref:System.Web.Security.MembershipUser.UnlockUser%2A>メソッドです。 現在の失敗した試行と失敗した前回の間隔がより大きい場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティを設定すると、現在無効な試行回数は 1 つ目としてカウントされます。 無効な試行の最大数に達する前に、有効なパスワードの回答を指定する場合、無効なパスワードの解答の試行回数は 0 に設定します。 最大数が無効な許可される前に、有効なパスワードが指定される場合は、試行回数に達すると、無効なパスワードの試行回数と無効なパスワードの解答の試行の回数が 0 に設定します。  
  
 <xref:System.Web.Security.SqlMembershipProvider>個別に無効なパスワードの試行回数と無効なパスワードの解答の試行の数を保持します。 無効なパスワードは、パスワードの試行カウンターのみがカウントの結果を試行します。 無効なパスワードの回答は、パスワードの回答カウンターのみがカウントの結果を試行します。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>プロパティ値がアプリケーションの構成を使用して、設定、`passwordAttemptWindow`構成セクションの属性です。  
  
 場合、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>プロパティに設定されている`false`、無効なパスワードの解答の試行は追跡されません。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>設定と、`maxInvalidPasswordAttempts`属性を 5 つが無効な場合に、`passwordAttemptWindow`を 30 分にします。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
        <value>SQL Server データベースにパスワードを格納する形式を示す <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して`Hashed`のみ、`Clear`と`Encrypted`安全ではありません。 `Hashed` パスワードでは、一方向のハッシュ アルゴリズムと、データベースに格納されているときにランダムに生成された salt 値を使用してハッシュされます。 パスワードが検証されると、検証用のデータベースの salt 値を使用してハッシュはします。 ハッシュされたパスワードを取得できません。 `Encrypted` パスワードは、データベースの内容を表示する、セキュリティ侵害公開することも、暗号化キーと、安全で考慮されません。 つまり、暗号化されたパスワードを復号化、公開されている可能性があります。  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>値は、ASP.NET アプリケーションの Web.config ファイルのセクションで指定します。  
  
 `Encrypted` および`Hashed`パスワードが暗号化または、既定では、構成内の要素に指定された情報に基づくハッシュします。 値を指定する場合は、`3DES`の`validation`属性を使用してハッシュされたパスワードがハッシュされる値が指定されていない場合、または、<xref:System.Security.Cryptography.SHA1>アルゴリズムです。  
  
 使用して、カスタムのハッシュ アルゴリズムを定義することができます、`hashAlgorithmType`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。 暗号化を選択した場合、既定のパスワードの暗号化は AES を使用します。 設定して、暗号化アルゴリズムを変更することができます、`decryption`構成要素の属性です。 パスワードを暗号化している場合は、明示的な値を指定する必要があります、`decryptionKey`要素の属性です。 既定値の`AutoGenerate`の`decryptionKey`ASP.NET メンバーシップとパスワードを使用して暗号化されている場合、属性がサポートされていません。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定<xref:System.Web.Security.SqlMembershipProvider>をインスタンス化し、そのパスワードの形式に設定`Hashed`です。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>パスワードの評価に使用される正規表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティのパスワードの複雑さの評価に使用される正規表現を取得する、<xref:System.Web.Security.SqlMembershipProvider>オブジェクト。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>アプリケーションの構成を使用して、プロパティが設定されて、`passwordStrengthRegularExpression`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。  
  
   
  
## Examples  
 次の例は、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)内の構成要素、`system.web`アプリケーションの Web.config ファイルのセクションです。 アプリケーションがのインスタンスを使用することを指定します、<xref:System.Web.Security.SqlMembershipProvider>メンバーシップ サービス、およびセットを提供するクラス、`passwordStrengthRegularExpression`パスワードが、次の条件を満たしていることを検証する正規表現に属性します。  
  
-   少なくとも 7 つの文字です。  
  
-   少なくとも 1 つの桁が含まれています。  
  
-   少なくとも 1 つの特殊 (アルファベット以外の) 文字が含まれています。  
  
 パスワードがこれらの条件を満たしていない場合、メンバーシップ プロバイダーによって、パスワードは受け入れられません。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> パスワードのリセットと取得に必要な場合は、パスワードの回答それ以外の場合、<see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パスワードの質問と回答を必要とする、追加の取得、またはユーザーのパスワードをリセットする際のセキュリティの層を提供します。 ユーザー名を作成するときに、ユーザーの質問と答えを取得または忘れたパスワードのリセット後で使用できるに指定できます。 場合、<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>プロパティおよび<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>プロパティが両方とも`false`の値、<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>プロパティは使用されません。  
  
 詳細については、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> および <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> を参照してください。  
  
   
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 アプリケーションの指定<xref:System.Web.Security.SqlMembershipProvider>インスタンスし、パスワードのリセットや取得のため、パスワードの回答を必要とするように構成します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> メンバーシップ プロバイダーが、一意の電子メール アドレスが必要な場合それ以外の場合、<see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例にある要素を示しています、 `system.web` ASP.NET アプリケーションの Web.config ファイルのセクションです。 指定して、<xref:System.Web.Security.SqlMembershipProvider>インスタンスし、各ユーザー名に対して一意の電子メール アドレスを要求するように構成します。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.Security.Membership>を新しい ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのパスワードをリセットするクラスが値をランダムに生成します。 新しいパスワードが返されます。  
  
> [!NOTE]
>  によって作成されたランダムなパスワード、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>メソッド内の正規表現を渡すは保証されません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティです。 ただし、ランダムなパスワードがによって確立された条件を満たして、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>と<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティです。  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>メソッドはほとんどよく使用するときに、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている`Hashed`です。 ユーザーがハッシュされるパスワードを忘れた場合、パスワードを取得できません。 ただし場合は、ユーザーが正しいパスワードの回答を提供に、プロバイダーは、パスワードを自動的に生成された、新しいパスワードにリセットできます。  
  
 正しくないパスワードの回答を指定する場合、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>メソッドは、内部カウンターをトラックが無効なパスワードの試行回数は 1 ずつ増加します。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッドです。 正しいパスワードの回答を指定し、ユーザーが現在ロックされていない、無効なパスワードの解答の試行を追跡する内部カウンターはゼロにリセットし、します。 詳細については、次を参照してください。、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティです。  
  
 呼び出すことができます、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>メソッドへの参照を最初に取得して直接、<xref:System.Web.Security.SqlMembershipProvider>インスタンスから、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 生成されたパスワードが 14 文字以上、またはで指定された長さ、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティで指定された文字の英数字以外の文字数を格納し、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティです。 格納されている正規表現を渡すには、パスワードは保証されません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>が指定されている場合は、プロパティです。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## Examples  
 次のコード例では、ユーザーのパスワードをリセットし、自動的に生成された、新しいパスワードを返します。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The user account is currently locked.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the locked-out status for.</param>
        <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーが最もよくロックアウトし、して検証することはできません、<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>メソッドと、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>内を超えると、<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>です。  
  
 先頭および末尾のスペースがトリミング、`username`パラメーターの値。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the SQL Server membership database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのユーザー情報を更新するクラス。 <xref:System.Web.Security.MembershipUser.Email%2A>、 <xref:System.Web.Security.MembershipUser.Comment%2A>、 <xref:System.Web.Security.MembershipUser.IsApproved%2A>、 <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>、および<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>プロパティの値が指定されたメンバーシップ ユーザー用に更新されます。  
  
 最大長、<xref:System.Web.Security.MembershipUser.UserName%2A>プロパティは、256 文字です。 最大長、<xref:System.Web.Security.MembershipUser.Email%2A>プロパティは、256 文字です。  
  
 使用してメンバーシップ ユーザーのパスワードを更新することはできません、<xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A>メソッドです。 メンバーシップ ユーザーのパスワードを更新するには、使用、<xref:System.Web.Security.MembershipUser.ChangePassword%2A>のメソッド、<xref:System.Web.Security.MembershipUser>クラスです。  
  
   
  
## Examples  
 次のコード例では、ユーザーの電子メール アドレスを更新します。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing email address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.  \- or -  The user update failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Web.Security.Membership> ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのユーザー情報を検証するクラス。  
  
 ユーザーが正常に検証されると、最後のアクティビティの日付と最後のサインインに日付値が現在の日付と時間、データベース内に更新されます。  
  
 正しくないパスワードを指定する場合、<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>メソッドは、内部カウンターをトラックが無効なパスワードの試行回数は 1 ずつ増加します。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッドです。 正しいパスワードを指定し、ユーザーがいない現在ロックアウトされて、内部カウンターを追跡の無効なパスワードとパスワードの解答の試行は、ゼロにリセットされます。 詳細については、次を参照してください。、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティです。  
  
 すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。  
  
   
  
## Examples  
 次のコード例は、フォーム認証を使用するように構成 ASP.NET アプリケーションのサインイン ページを示しています。 および<xref:System.Web.Security.SqlMembershipProvider>です。 指定されたユーザーの資格情報が有効でない場合は、ユーザーにメッセージが表示されます。 ユーザーは、最初に要求された URL にリダイレクトするそれ以外の場合を使用して、<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>メソッドです。  
  
> [!NOTE]
>  この例では、<xref:System.Web.Security.Membership>クラスを呼び出して、<xref:System.Web.Security.SqlMembershipProvider>として指定された、 `defaultProvider` Web.config ファイルにします。 かどうかは、型と既定のプロバイダーにアクセスする必要があります。 <xref:System.Web.Security.SqlMembershipProvider>、キャストすることができます、<xref:System.Web.Security.Membership.Provider%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスです。 その他にアクセスする構成済みのプロバイダー固有のプロバイダーの種類としてで構成されている名前を指定してアクセスすることができます、<xref:System.Web.Security.Membership.Providers%2A>のプロパティ、<xref:System.Web.Security.Membership>クラスし、特定のプロバイダーの種類としてキャストします。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>