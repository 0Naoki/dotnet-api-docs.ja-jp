<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="077ef4164aedbf597d4a7da0e4dcb2ba59ca9672" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69050864" /></Metadata><TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET のフォーム認証とビュー ステートに使用するのと同じアルゴリズムおよびキー値を使用してデータの暗号化またはハッシュ (またはそれら両方) を行う方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.Security.MachineKey>には、ASP.NET が提供するハッシュと暗号化のロジックを公開するメソッドが用意されています。 ASP.NET が使用する暗号化アルゴリズムとハッシュアルゴリズム、およびそれが使用するキー値の詳細については、「 [MachineKey 要素 (ASP.NET 設定スキーマ)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)」を参照してください。  
  
> [!WARNING]
>  Api <xref:System.Web.Security.MachineKey>は、ASP.NET アプリでのみ使用する必要があります。 ASP.NET アプリケーションのコンテキスト外での MachineKey Api の動作は定義されていません。  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">暗号化、ハッシュ、復号化、または検証するデータが存在しません</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">復号化/検証する、暗号化されたデータ。</param>
        <param name="protectionOption"><paramref name="encodedData" /> パラメーターを暗号化するかどうか、またハッシュするかどうかを指定します。</param>
        <summary>ハッシュ ベース メッセージ認証コード (HMAC) で暗号化または提供されたデータをデコードまたは検証します。</summary>
        <returns>復号化されたデータを表す <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET が渡されたデータの暗号化解除と検証に使用する暗号化アルゴリズムとハッシュアルゴリズムの詳細については、「 [MachineKey 要素 (ASP.NET 設定スキーマ)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)」を参照してください。  
  
   
  
## Examples  
 コード例については、 <xref:System.Web.Security.MachineKey>クラスの概要を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">暗号化するデータ。</param>
        <param name="protectionOption"><paramref name="data" /> パラメーターを暗号化するかどうか、またハッシュするかどうかを指定します。</param>
        <summary>データを暗号化するか、ハッシュ ベース メッセージ認証コード (HMAC) を追加します。</summary>
        <returns>暗号化された値、HMAC が追加された入力値、または HMAC が追加された入力値の暗号化の結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET が渡されたデータの暗号化解除と検証に使用する暗号化アルゴリズムとハッシュアルゴリズムの詳細については、「 [MachineKey 要素 (ASP.NET 設定スキーマ)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)」を参照してください。  
  
   
  
## Examples  
 コード例については、 <xref:System.Web.Security.MachineKey>クラスの概要を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="purposes" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">保護されるデータ。 このデータは、プレーンテキストとして渡されます。</param>
        <param name="purposes">データの目的の一覧。 この値が指定される場合、返された暗号文をデコードするために、同じリストが <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" /> メソッドに渡されます。</param>
        <summary>指定されたデータを、暗号化または署名により保護します。</summary>
        <returns>暗号文データ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは<xref:System.Web.Security.MachineKey.Encode%2A> 、メソッドよりも優先されます。これにより、呼び出し元はプレーンテキストデータを暗号化するか、署名するか、またはその両方を指定する必要があります。 メソッド<xref:System.Web.Security.MachineKey.Protect%2A>は、適切な操作を実行し、データを安全に保護します。 このメソッドによって生成される暗号化テキストデータは<xref:System.Web.Security.MachineKey.Unprotect%2A> 、メソッドによってのみ解読できます。  
  
 `purposes`パラメーターは、暗号化テキストを特定の目的にロックできる理由の省略可能なリストです。 このパラメーターを使用すると、アプリケーション内の異なるサブシステムによって実行される暗号化操作を分離できます。 悪意のあるクライアントは、1つのサブシステム<xref:System.Web.Security.MachineKey.Protect%2A>のメソッドの結果を取得し、別のサブシステムのメソッドに入力としてフィードできないようにする必要があります。これにより、アプリケーションの<xref:System.Web.Security.MachineKey.Unprotect%2A>セキュリティが侵害される可能性があります。 パラメーター `purposes`を使用すると、保護されたデータを最初に生成したコンポーネントだけが使用できるようになります。 アプリケーションでは、各サブシステムで一意`purposes`のリストが使用されるようにする必要があります。  
  
 たとえば、認証トークンを保護または保護解除するには、次の例のようなコードを使用してメソッドを呼び出すことができます。  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 アプリケーションでは、パラメーター `purposes`を動的に生成できます。 この場合、システムの他の部分で使用されているトークンと`Username:`一致する悪意のあるクライアントが入力されるリスクを最小限に抑えるために、ユーザーが指定した値を固定値 ("" +*ユーザー名*"など) にプレフィックスとして付けます。 動的に生成された文字列は、固定文字列の後に記述する必要があります。 たとえば、特定のユーザーに関連付けられているプライベートメッセージを保護または保護解除するには、次の例のようなコードを使用します。  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 メソッドを呼び出す場合、 `purposes`パラメーターに指定された値は、 <xref:System.Web.Security.MachineKey.Protect%2A>メソッドに指定された値と同じである必要があります。 <xref:System.Web.Security.MachineKey.Unprotect%2A> それ以外の場合、操作は<xref:System.Security.Cryptography.CryptographicException>失敗し、例外が発生します。  
  
 オプションに必要<xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType>な構成設定は、 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType>プロパティ<xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45>がオプションに設定されていない場合でも、このメソッドに必要です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userData" /> パラメーターが null です。</exception>
        <exception cref="T:System.ArgumentException">配列に空白のみのエントリが 1 つまたは複数含まれる目的。</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="purposes" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">保護を解除する暗号文。</param>
        <param name="purposes">データが意味するものを記述する目的のリスト。 これは、データが保護されるときに <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> メソッドに渡されたものと同じ値である必要があります。</param>
        <summary><see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> メソッドを使用して保護された、指定のデータの保護を解除します。</summary>
        <returns>プレーンテキスト データ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの詳細については<xref:System.Web.Security.MachineKey.Protect%2A> 、メソッドを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="protectedData" /> パラメーターが null です。</exception>
        <exception cref="T:System.ArgumentException">配列に空白のみのエントリが 1 つまたは複数含まれる目的。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">考えられる原因は次のとおりです。 
-   プロテクト データが改竄されています。  
  
-   <paramref name="purposes" /> パラメーターの値が、データが保護されている場合に指定した値と同じではありません。  
  
-   アプリケーションは複数のサーバーに配置され、自動生成された暗号化キーを使用します。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
