<Type Name="MachineKey" FullName="System.Web.Security.MachineKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="546b6002deb67f878eac033dbd58e8d51e34112e" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39141175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MachineKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MachineKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MachineKey" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKey abstract sealed" />
  <TypeSignature Language="F#" Value="type MachineKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET のフォーム認証とビュー ステートに使用するのと同じアルゴリズムおよびキー値を使用してデータの暗号化またはハッシュ (またはそれら両方) を行う方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MachineKey>クラスは、ASP.NET が提供するハッシュおよび暗号化のロジックを公開するメソッドを提供します。 ASP.NET が使用する暗号化とハッシュ アルゴリズムとキーの値を使用する方法については、次を参照してください。 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)します。  
  
> [!WARNING]
>  <xref:System.Web.Security.MachineKey> Api は、ASP.NET アプリでのみ使用する必要があります。 ASP.NET アプリケーションのコンテキスト外にある MachineKey Api の動作が定義されていません  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.ArgumentNullException">暗号化、ハッシュ、復号化、または検証するデータが存在しません</exception>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Decode(string encodedData, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedData As String, protectionOption As MachineKeyProtection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Decode(System::String ^ encodedData, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Decode : string * System.Web.Security.MachineKeyProtection -&gt; byte[]" Usage="System.Web.Security.MachineKey.Decode (encodedData, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedData" Type="System.String" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="encodedData">復号化/検証する、暗号化されたデータ。</param>
        <param name="protectionOption">
          <c>encodedData</c> パラメーターを暗号化するかどうか、またハッシュするかどうかを指定します。</param>
        <summary>ハッシュ ベース メッセージ認証コード (HMAC) で暗号化または提供されたデータをデコードまたは検証します。</summary>
        <returns>復号化されたデータを表す <see cref="T:System.Byte" /> 配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 対象の暗号化とハッシュ アルゴリズムの ASP.NET を使用して復号化し、渡されるデータの検証については、次を参照してください。 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)します。  
  
   
  
## Examples  
 コード例では、次を参照してください。、<xref:System.Web.Security.MachineKey>クラスの概要。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encode(unsigned int8[] data, valuetype System.Web.Security.MachineKeyProtection protectionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (data As Byte(), protectionOption As MachineKeyProtection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encode(cli::array &lt;System::Byte&gt; ^ data, System::Web::Security::MachineKeyProtection protectionOption);" />
      <MemberSignature Language="F#" Value="static member Encode : byte[] * System.Web.Security.MachineKeyProtection -&gt; string" Usage="System.Web.Security.MachineKey.Encode (data, protectionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and is only provided for compatibility with existing code. It is recommended that new code use the Protect and Unprotect methods instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="protectionOption" Type="System.Web.Security.MachineKeyProtection" />
      </Parameters>
      <Docs>
        <param name="data">暗号化するデータ。</param>
        <param name="protectionOption">
          <c>data</c> パラメーターを暗号化するかどうか、またハッシュするかどうかを指定します。</param>
        <summary>データを暗号化するか、ハッシュ ベース メッセージ認証コード (HMAC) を追加します。</summary>
        <returns>暗号化された値、HMAC が追加された入力値、または HMAC が追加された入力値の暗号化の結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 対象の暗号化とハッシュ アルゴリズムの ASP.NET を使用して復号化し、渡されるデータの検証については、次を参照してください。 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)します。  
  
   
  
## Examples  
 コード例では、次を参照してください。、<xref:System.Web.Security.MachineKey>クラスの概要。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Protect (userData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userData">保護されるデータ。 このデータは、プレーンテキストとして渡されます。</param>
        <param name="purposes">データの目的の一覧。 この値が指定される場合、返された暗号文をデコードするために、同じリストが <see cref="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" /> メソッドに渡されます。</param>
        <summary>指定されたデータを、暗号化または署名により保護します。</summary>
        <returns>暗号文データ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Web.Security.MachineKey.Encode%2A>または両方の方法を指定するかどうか、プレーン テキスト データを暗号化する、署名済み、呼び出し元が必要です。 <xref:System.Web.Security.MachineKey.Protect%2A>メソッドは、適切な操作を実行しのデータを安全に保護します。 このメソッドによって生成された暗号化テキスト データを解読することができますのみ、<xref:System.Web.Security.MachineKey.Unprotect%2A>メソッド。  
  
 `purposes`パラメーターが特定の目的の暗号化テキストをロックできる理由のオプションのリスト。 このパラメーターを使用して、アプリケーション内のさまざまなサブシステムによって実行される暗号化の操作を分離できます。 悪意のあるクライアントが 1 つのサブシステムの結果を取得すべき<xref:System.Web.Security.MachineKey.Protect%2A>メソッドと別のサブシステムへの入力としてフィード<xref:System.Web.Security.MachineKey.Unprotect%2A>メソッドで、アプリケーションのセキュリティを危険にさらす可能性があります。 `purposes`パラメーターにより、保護されたデータは生成されたコンポーネントでのみ使用できるようにします。 アプリケーションが各サブシステムを使用して、一意なことを確認してください`purposes`一覧。  
  
 たとえば、保護または認証トークンの保護を解除は、次の例のようなコードを使用して、メソッドを呼び出します。  
  
```csharp  
MachineKey.Protect(..., "Authentication token");  
MachineKey.Unprotect(..., "Authentication token");  
```  
  
```vb  
MachineKey.Protect(..., "Authentication token")  
MachineKey.Unprotect(..., "Authentication token")  
```  
  
 アプリケーションを動的に生成できる、`purposes`パラメーター。 その場合は、固定値を持つユーザーが指定した値をプレフィックス (のように"`Username:` "+*ユーザー名*)、システムの他の部分で使用されるトークンに一致する入力を練る悪意のあるクライアントのリスクを最小限にします。 動的に生成された文字列は、固定文字列の後にする必要があります。 たとえばで保護または特定のユーザーに関連付けられているプライベート メッセージの保護を解除するには、次の例のようなコードを使用します。  
  
```csharp  
MachineKey.Protect(..., "Private message", "Recipient: " + username);  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username);  
```  
  
```vb  
MachineKey.Protect(..., "Private message", "Recipient: " + username)  
MachineKey.Unprotect(..., "Private message", "Recipient: " + username)  
```  
  
 ときに、<xref:System.Web.Security.MachineKey.Unprotect%2A>メソッドを呼び出すために用意されている値、`purposes`パラメーターは指定された値と同じである必要があります、<xref:System.Web.Security.MachineKey.Protect%2A>メソッド。 それ以外の場合、操作は失敗し、<xref:System.Security.Cryptography.CryptographicException>例外。  
  
 必要な構成設定、<xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45?displayProperty=nameWithType>オプションは、このメソッドの場合でも必要な<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType>プロパティに設定されていない、<xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45>オプション。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData" /> パラメーターが null です。</exception>
        <exception cref="T:System.ArgumentException">配列に空白のみのエントリが 1 つまたは複数含まれる目的。</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] protectedData, params string[] purposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] protectedData, string[] purposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (protectedData As Byte(), ParamArray purposes As String()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ protectedData, ... cli::array &lt;System::String ^&gt; ^ purposes);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * string[] -&gt; byte[]" Usage="System.Web.Security.MachineKey.Unprotect (protectedData, purposes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protectedData" Type="System.Byte[]" />
        <Parameter Name="purposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="protectedData">保護を解除する暗号文。</param>
        <param name="purposes">データが意味するものを記述する目的のリスト。 これは、データが保護されるときに <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> メソッドに渡されたものと同じ値である必要があります。</param>
        <summary>
          <see cref="M:System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])" /> メソッドを使用して保護された、指定のデータの保護を解除します。</summary>
        <returns>プレーンテキスト データ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドについては、次を参照してください。、<xref:System.Web.Security.MachineKey.Protect%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="protectedData" /> パラメーターが null です。</exception>
        <exception cref="T:System.ArgumentException">配列に空白のみのエントリが 1 つまたは複数含まれる目的。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">考えられる原因は次のとおりです:  -   プロテクト データが改竄されています。  -   <paramref name="purposes" /> パラメーターの値が、データが保護されている場合に指定した値と同じではありません。  -   アプリケーションは複数のサーバーに配置され、自動生成された暗号化キーを使用します。</exception>
      </Docs>
    </Member>
  </Members>
</Type>