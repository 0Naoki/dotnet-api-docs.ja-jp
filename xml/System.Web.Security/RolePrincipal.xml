<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17aaf2ebe147f2c32fa84ceac97e2dca9979224a" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55342847" /></Metadata><TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RolePrincipal = class&#xA;    inherit ClaimsPrincipal&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ロール メンバーシップを含む現在の HTTP 要求のセキュリティ情報を表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal>オブジェクトの実装、<xref:System.Security.Principal.IPrincipal>インターフェイスし、の HTTP 要求の現在のセキュリティ コンテキストを表します。  
  
 ロール管理が有効な場合 (を参照してください<xref:System.Web.Security.Roles>)、<xref:System.Web.Security.RoleManagerModule>割り当てます、<xref:System.Web.Security.RolePrincipal>オブジェクトを<xref:System.Web.HttpContext.User%2A>のプロパティ、 <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>します。  
  
 <xref:System.Web.Security.RolePrincipal>クラスは、現在の HTTP 要求のセキュリティ id を公開し、さらにロールのメンバーシップのチェックを実行します。 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`、<xref:System.Web.Security.RolePrincipal>オブジェクトはキャッシュされたロールの一覧を管理し、キャッシュの現在のユーザー ロールのメンバーシップを検索リストの先頭に、ロール<xref:System.Web.Security.Roles.Provider%2A>します。 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`false`、<xref:System.Web.Security.RolePrincipal>オブジェクトは常にロール プロバイダーを使用してロールのメンバーシップを検索します。  
  
 <xref:System.Web.Security.RolePrincipal>オブジェクトを暗号化しで識別されるクッキーにキャッシュされたロール情報を復号化、<xref:System.Web.Security.Roles.CookieName%2A>に基づいて、<xref:System.Web.Security.Roles.CookieProtectionValue%2A>します。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> クラスの新しいインスタンスを作成します。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" /> を作成するユーザーの ID。</param>
        <summary>指定された <paramref name="identity" /> の <see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロード、<xref:System.Web.Security.RolePrincipal.%23ctor%2A>コンス トラクターを作成する新しい<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します。 キャッシュされたロール情報がで識別されるクッキーから読み取られません、<xref:System.Web.Security.Roles.CookieName%2A>プロパティ。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティに設定されて、<xref:System.Configuration.Provider.ProviderBase.Name%2A>の既定のロール プロバイダー。  
  
 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
   
  
## Examples  
 次のコード例を作成する新しい<xref:System.Web.Security.RolePrincipal>オブジェクト。 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`、例は、作成、<xref:System.Web.Security.RolePrincipal>で識別される cookie から cookie 情報を<xref:System.Web.Security.Roles.CookieName%2A>プロパティ。  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> は <see langword="null" />です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データを読み込む先の <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
        <param name="context">このシリアル化のシリアル化先。</param>
        <summary>指定された <see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトに格納されている情報、および指定されたストリーミング コンテキストを使用して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" /> を作成するユーザーの ID。</param>
        <param name="encryptedTicket">暗号化されたロール情報を格納する文字列。</param>
        <summary>指定された <paramref name="identity" /> のロール情報を使用して、指定された <paramref name="encryptedTicket" /> の <see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトのインスタンスを生成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 このオーバー ロード、<xref:System.Web.Security.RolePrincipal.%23ctor%2A>コンス トラクターを作成する新しい<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します。 現在のユーザーのロール情報は読み取り専用、指定した`encryptedTicket`でキャッシュされていると、<xref:System.Web.Security.RolePrincipal>オブジェクト。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティに設定されて、<xref:System.Configuration.Provider.ProviderBase.Name%2A>の既定のロール プロバイダー。  
  
 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
   
  
## Examples  
 次のコード例を作成する新しい<xref:System.Web.Security.RolePrincipal>オブジェクト。 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`、例は、作成、<xref:System.Web.Security.RolePrincipal>で識別される cookie から cookie 情報を<xref:System.Web.Security.Roles.CookieName%2A>プロパティ。  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> は <see langword="null" />です。  
  
- または - 
 <paramref name="encryptedTicket" /> は <see langword="null" />です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">ユーザーのロール プロバイダーの名前。</param>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" /> を作成するユーザーの ID。</param>
        <summary>指定した <paramref name="identity" /> を使用して、指定した <paramref name="providerName" /> の <see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロード、<xref:System.Web.Security.RolePrincipal.%23ctor%2A>コンス トラクターを作成する新しい<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティで指定された値に設定されて、`providerName`パラメーター。  
  
 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" /> は <see langword="null" />です。  
  
または 
 <paramref name="providerName" /> が、アプリケーションの構成に存在しないロール プロバイダーを参照しています。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">ユーザーのロール プロバイダーの名前。</param>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" /> を作成するユーザーの ID。</param>
        <param name="encryptedTicket">暗号化されたロール情報を格納する文字列。</param>
        <summary>指定された <paramref name="identity" /> のロール情報と <paramref name="providerName" /> を使用して、指定された <paramref name="encryptedTicket" /> の <see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 このオーバー ロード、<xref:System.Web.Security.RolePrincipal.%23ctor%2A>コンス トラクターを作成する新しい<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します。 現在のユーザーのロール情報は読み取り専用、指定した`encryptedTicket`でキャッシュされていると、<xref:System.Web.Security.RolePrincipal>オブジェクト。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティで指定された値に設定されて、`providerName`パラメーター。  
  
 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> は <see langword="null" />です。  
  
- または - 
 <paramref name="encryptedTicket" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" /> は <see langword="null" />です。  
  
または 
 <paramref name="providerName" /> が、アプリケーションの構成に存在しないロール プロバイダーを参照しています。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedListChanged : bool" Usage="System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトによってキャッシュされたロール名の一覧が変更されているかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.Security.RolePrincipal" /> オブジェクトによってキャッシュされたロール名が変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>が返される`true`ロール名が既定のロールから取得された後<xref:System.Web.Security.Roles.Provider%2A>によってキャッシュに追加し、<xref:System.Web.Security.RolePrincipal.GetRoles%2A>メソッド、または、<xref:System.Web.Security.RolePrincipal.IsInRole%2A>メソッドの呼び出し、<xref:System.Web.Security.RoleProvider.IsUserInRole%2A>のメソッド、既定のロール プロバイダーとの応答を受信`true`に渡されるロール名で結果として得られる、<xref:System.Web.Security.RolePrincipal.IsInRole%2A>キャッシュに追加されるメソッド。  
  
 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>場合プロパティは true を返しますも<xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>に設定されている`true`と<xref:System.Web.Security.RolePrincipal.ExpireDate%2A>が経過すると、その結果、新しい<xref:System.Web.Security.RolePrincipal.ExpireDate%2A>設定されています。  
  
   
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.RolePrincipal.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュされているロール名のクッキーへのパスを取得します。</summary>
        <value>ロール名がキャッシュされているクッキーのパス。 既定値は / です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.CookiePath%2A>プロパティの値を返す、 `cookiePath` ASP.NET アプリケーションの Web.config ファイルからの属性。 Cookie のパスの詳細については、次を参照してください。<xref:System.Web.HttpCookie.Path%2A>します。  
  
   
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Expired : bool" Usage="System.Web.Security.RolePrincipal.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール クッキーの有効期限が切れているかどうかを示す値を取得します。</summary>
        <value>ロール クッキーの有効期限が切れている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.Expired%2A>プロパティが返す、`Boolean`に基づいてロール クッキーの有効期限が切れているかどうかを示す値、<xref:System.Web.Security.RolePrincipal.ExpireDate%2A>と現在の日付と時刻。  
  
   
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpireDate : DateTime" Usage="System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール クッキーの有効期限が切れる日時を取得します。</summary>
        <value>ロール クッキーの有効期限が切れる <see cref="T:System.DateTime" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="rolePrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データを読み込む先の <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
        <param name="context">このシリアル化のシリアル化先。</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、指定されたストリーミング コンテキストを使用してターゲット オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、<xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> メソッドを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberSignature Language="F#" Value="member this.GetRoles : unit -&gt; string[]" Usage="rolePrincipal.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> がメンバーになっているロールの一覧を取得します。</summary>
        <returns><see cref="T:System.Web.Security.RolePrincipal" /> がメンバーになっているロールの一覧。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`によって表されるユーザーのロール名がキャッシュされていると、 <xref:System.Web.Security.RolePrincipal>、<xref:System.Web.Security.RolePrincipal.GetRoles%2A>メソッドは、ユーザーがのメンバーであるキャッシュでロール名の一覧を返します。 ロール名がキャッシュされていない場合、<xref:System.Web.Security.RolePrincipal.GetRoles%2A>メソッドは、ユーザーが既定のロールからのメンバーであるロール名の一覧を返します<xref:System.Web.Security.Roles.Provider%2A>します。 現在のロール名のみ<xref:System.Web.Security.Roles.ApplicationName%2A>が返されます。 ロール名にキャッシュされているかどうかを判断する、<xref:System.Web.Security.RolePrincipal>オブジェクト、チェック、<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例では、ロールのメンバーであるユーザーのログオンを表示します。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.RolePrincipal.Identity" /> プロパティが <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.Security.RolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の HTTP 要求のセキュリティ ID を取得します。</summary>
        <value>現在の HTTP 要求のセキュリティ ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.Identity%2A>の<xref:System.Web.Security.RolePrincipal>場合、オブジェクトが設定、<xref:System.Web.Security.RolePrincipal>コンス トラクターが呼び出されます。  
  
   
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="rolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">検索対象のロール。</param>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> が示すユーザーが、指定したロールに存在するかどうかを示す値を取得します。</summary>
        <returns><see cref="T:System.Web.Security.RolePrincipal" /> が示すユーザーが、指定したロールに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> まず、<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティを現在のユーザー ロール名のキャッシュ リストが使用できるかどうかを判断します。 場合、<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティは`true`、指定したロールのキャッシュ リストをチェックします。 場合、<xref:System.Web.Security.RolePrincipal.IsInRole%2A>返しますメソッドには、キャッシュされた一覧で、指定したロールが検出されると、`true`します。  
  
 場合<xref:System.Web.Security.RolePrincipal.IsInRole%2A>指定されたロールが見つからないが呼び出す、<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>メソッドは、既定の<xref:System.Web.Security.Roles.Provider%2A>ユーザー名が構成済みのデータ ソースからのロールに関連付けられているかどうかを判断するインスタンス<xref:System.Web.Security.Roles.ApplicationName%2A>値。  
  
   
  
## Examples  
 次のコード例は、ユーザー ロールを表示するユーザーを許可する前にログオンしているユーザーが管理者ロールがかどうかを確認します。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.RolePrincipal.Identity" /> プロパティが <see langword="null" /> です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRoleListCached : bool" Usage="System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーのロールの一覧がクッキーにキャッシュされているかどうかを示す値を取得します。</summary>
        <value>ロール名がクッキーにキャッシュされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、`cacheRolesInCookie`に設定されているアプリケーションの Web.config ファイルで属性`true`、特定のロールのユーザー メンバーシップをオンにすると、現在のユーザー ロール名の一覧がクッキーに書き込まれます。 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティは、ロール名が、cookie に書き込まれたかどうかを示します。 場合でもに注意してください、`cacheRolesInCookie`構成属性は、 `true`、<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティは返されません`true`までロール情報が cookie に書き込まれた後です。 ロールのチェック、ユーザーは行われません場合<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>戻ります`false`します。  
  
   
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IssueDate : DateTime" Usage="System.Web.Security.RolePrincipal.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール クッキーが発行された日時を取得します。</summary>
        <value>ロール クッキーが発行された <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Web.Security.RolePrincipal.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーのロール情報を保存および取得するロール プロバイダーの名前を取得します。</summary>
        <value>ユーザーのロール情報を保存および取得するロール プロバイダーの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティによって表されるユーザーのロール情報を管理するロール プロバイダーの名前を公開する、<xref:System.Web.Security.RolePrincipal>オブジェクト。 使用してユーザーの特定のロール プロバイダーのインスタンスにアクセスできます、<xref:System.Web.Security.Roles.Providers%2A>のプロパティ、<xref:System.Web.Security.Roles>プロバイダーは、アプリケーションの既定のプロバイダー、かどうかに関係なくクラス。 たとえばを受け取るメソッドを作成することがあります、<xref:System.Web.Security.RolePrincipal>と入力だけで表されるユーザーのロールの一覧を返します。 適切なロール プロバイダーを使用すると、ロールの一覧を返すことを確認することができます、<xref:System.Web.Security.RolePrincipal>呼び出すことによって、<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>からロール プロバイダーのメソッド、<xref:System.Web.Security.Roles.Providers%2A>によってインデックスが作成されているコレクション、<xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティの値。  
  
 設定する、<xref:System.Web.Security.RolePrincipal>オブジェクト要求ごとに使用する必要があります、<xref:System.Web.Security.RoleManagerModule.GetRoles>アプリケーションの Global.asax ファイルで定義されたイベント ハンドラー。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="rolePrincipal.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュされたロールの一覧に変更済のマークを付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.SetDirty%2A>メソッドは、キャッシュされたロールの一覧の設定によって変更されていることを示します<xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>に`true`と<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>に`false`します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">このシリアル化のシリアル化先。</param>
        <summary>このメンバーの説明については、<see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> のトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.Security.RolePrincipal> のインスタンスが <xref:System.Runtime.Serialization.ISerializable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberSignature Language="F#" Value="member this.ToEncryptedTicket : unit -&gt; string" Usage="rolePrincipal.ToEncryptedTicket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> に基づいて暗号化されている <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /> オブジェクトを使用してキャッシュされたロール情報を返します。</summary>
        <returns><see cref="T:System.Web.Security.RolePrincipal" /> に基づいて暗号化されている <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /> オブジェクトを使用してキャッシュされたロール情報。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返される値、<xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A>メソッドがロールのクッキーに格納されているときに<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`します。  
  
   
  
## Examples  
 次のコード例の結果を書き込みます、<xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A>メソッドをロールのクッキー。  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Web.Security.RolePrincipal.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール クッキーのバージョン番号を取得します。</summary>
        <value>ロール クッキーのバージョン番号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ロール クッキーのバージョン番号を含めても、ASP.NET の今後のリリースはロールの cookie の形式を変更し、を使用して、<xref:System.Web.Security.RolePrincipal.Version%2A>さまざまな形式を区別するプロパティ。  
  
   
  
## Examples  
 次の例では、ロール管理が有効になっている場合、現在のユーザー ロールのキャッシュ情報が表示されます。 ロール管理を有効にする方法の詳細については、次を参照してください。、<xref:System.Web.Security.Roles>クラス。  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET のロールを使用して承認を管理します。</related>
      </Docs>
    </Member>
  </Members>
</Type>