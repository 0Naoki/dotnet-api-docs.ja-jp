<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33a7ad2cf07f9ba52a5dfcde65d9f08df7a73804" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927982" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>カスタム ロール プロバイダーを使用してロール管理サービスを提供するために、ASP.NET が実装するコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET のロール管理は、ASP.NET アプリケーションの別のロール プロバイダーを簡単に使用できるように設計されています。 .NET Framework に含まれている指定されたロール プロバイダーを使用することができます。 または独自のプロバイダーを実装することができます。  
  
 カスタム ロール プロバイダーを実装する場合は、継承する必要が、<xref:System.Web.Security.RoleProvider>抽象クラス。  
  
 カスタム ロール プロバイダーを作成する 2 つの主な理由があります。  
  
-   FoxPro データベース、Oracle データベース、または他のデータ ソースなど、.NET Framework に含まれるロール プロバイダーによってサポートされていないデータ ソースにロール情報を保存する必要があります。  
  
-   .NET Framework に付属するプロバイダーで使用されるデータベース スキーマとは異なるデータベース スキーマを使用してロール情報を管理する必要があります。 この一般的な例は、会社や Web サイトの SQL Server データベースに既に存在するロールのデータになります。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.RoleProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 継承するクラスのコンス トラクターを実装する必要はありません、<xref:System.Web.Security.RoleProvider>抽象クラス。 初期化の値を<xref:System.Web.Security.RoleProvider>に実装が渡される、<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>メソッドの実装。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">指定したロールに追加するユーザー名の文字列配列。</param>
        <param name="roleNames">指定されたユーザー名の割り当て先となるロール名の文字列配列。</param>
        <summary>指定されたユーザー名を、構成済みの <see langword="applicationName" /> の指定されたロールに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> によって呼び出される、<xref:System.Web.Security.Roles>クラスに、指定されたユーザーをデータ ソースで指定されたロールに関連付けます。 ロールを追加する、構成された<xref:System.Web.Security.RoleProvider.ApplicationName%2A>します。  
  
 構成済みが見つかりません。 指定されたロール名のいずれかが場合`applicationName`、ご利用のプロバイダーがスローすることをお勧めします。、<xref:System.Configuration.Provider.ProviderException>します。  
  
 指定されたユーザー名のいずれかが構成済みの指定されたロール名のいずれかに関連付けられていないかどうか`applicationName`、ご利用のプロバイダーがスローすることをお勧め、<xref:System.Configuration.Provider.ProviderException>します。  
  
 場合、指定されたユーザー名のいずれかが`null`空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
 場合、指定されたロール名のいずれかが`null`空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
 各を含めることをお勧め、データ ソースは、トランザクションをサポートする場合、トランザクションで操作を追加し、トランザクションをロールバックし、いずれかの追加操作が失敗した場合に例外をスローします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ロール情報を保管および取得するアプリケーションの名前を取得または設定します。</summary>
        <value>ロール情報を保管および取得するアプリケーションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A>を使って、<xref:System.Web.Security.Roles>ユーザーおよびロールを別のアプリケーションと関連付けるクラス。 これにより、同じデータベースを使用して、重複するユーザー名またはロール名の間で競合を実行することがなく、ユーザーとロール情報を格納する複数のアプリケーション。 複数の ASP.NET アプリケーションで同じ値を指定することで、同じデータベースを使用できます、<xref:System.Web.Security.Roles.ApplicationName%2A>プロパティ。 <xref:System.Web.Security.Roles.ApplicationName%2A>プロパティをプログラムで設定できるかを使用して Web アプリケーション構成ファイルで宣言によって設定することができます、`applicationName`属性。  
  
 ない場合は<xref:System.Web.Security.RoleProvider.ApplicationName%2A>プロパティを指定すると、ことをお勧め、<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>プロパティの値が使用されます。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.ApplicationName%2A>プロパティ。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">作成するロールの名前。</param>
        <summary>構成された <see langword="applicationName" /> のデータ ソースに新しいロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> によって呼び出される、<xref:System.Web.Security.Roles.CreateRole%2A>のメソッド、<xref:System.Web.Security.Roles>構成済みのデータ ソースに指定されたロールを追加するクラス<xref:System.Web.Security.RoleProvider.ApplicationName%2A>します。  
  
 構成済みの指定されたロール名が既に存在する場合`applicationName`は`null`、空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
 指定されたロール名にコンマが含まれている場合ことをお勧め、プロバイダーから例外をスローします。  
  
 データベースでは、テーブルの固定長の列など、データ ソースは、ロール名の長さを制限、ロール名は、データ ソースで許可される最大長を超える場合は、例外をスローすることをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.CreateRole%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">削除するロールの名前。</param>
        <param name="throwOnPopulatedRole"><see langword="true" /> の場合、<paramref name="roleName" /> に 1 つ以上のメンバーがあれば例外をスローし、<paramref name="roleName" /> を削除しません。</param>
        <summary>構成済みの <see langword="applicationName" /> のデータ ソースからロールを削除します。</summary>
        <returns>ロールが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> によって呼び出される、<xref:System.Web.Security.Roles.DeleteRole%2A>と<xref:System.Web.Security.Roles.DeleteRole%2A>のメソッド、<xref:System.Web.Security.Roles>構成済みのデータ ソースから、指定したロールを削除するにはクラス<xref:System.Web.Security.RoleProvider.ApplicationName%2A>します。  
  
 データ ソースからロールを削除すると、すべてのユーザー名と構成済みの削除された役割の間の関連付けを削除することを確認`applicationName`します。  
  
 場合`throwOnPopulatedRole`は`true`とで識別される、ロール、`roleName`パラメーターが 1 つまたは複数のメンバー、スロー、<xref:System.Configuration.Provider.ProviderException>ロールは削除しないでください。 場合`throwOnPopulatedRole`は`false`が空かどうか、ロールを削除します。  
  
 指定されたロール名が存在しない場合は、 `null`、空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.DeleteRole%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="usernameToMatch" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">検索範囲とするロール。</param>
        <param name="usernameToMatch">検索するユーザー名。</param>
        <summary>指定されたロールで、ユーザー名が指定内容と一致するユーザーの配列を取得します。</summary>
        <returns><paramref name="usernameToMatch" /> に一致するユーザー名を持ち、指定されたロールのメンバーであるすべてのユーザーの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>メソッドを呼び出して、<xref:System.Web.Security.Roles>クラスし、ユーザー名が指定された一致が含まれているロールのユーザーの一覧を返します`usernameToMatch`構成済みの`applicationName`します。 データ ソースに基づいたワイルドカードのサポートが含まれます。 ユーザーは、ユーザー名でアルファベット順で返されます。  
  
 スローすることをお勧め、<xref:System.Configuration.Provider.ProviderException>場合`roleName`データ ソースに存在しません。  
  
   
  
## Examples  
 次のコード例は、サンプルを示しています。<xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>実装します。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>構成済みの <see langword="applicationName" /> のすべてのロールのリストを取得します。</summary>
        <returns>構成済みの <see langword="applicationName" /> のデータ ソースに保存されているすべてのロール名を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> によって呼び出される、<xref:System.Web.Security.Roles.GetAllRoles%2A>のメソッド、<xref:System.Web.Security.Roles>データ ソースからのロール名の一覧を取得するクラス。 指定したロールのみ<xref:System.Web.Security.RoleProvider.ApplicationName%2A>が取得されます。  
  
 構成済みのロールが存在しない場合`applicationName`、ご利用のプロバイダーが要素のない文字列配列を返すことをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.GetAllRoles%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">ロールの一覧を取得するユーザー。</param>
        <summary>構成済みの <see langword="applicationName" /> で指定されたユーザーに割り当てられたロールのリストを取得します。</summary>
        <returns>構成済みの <see langword="applicationName" /> で指定されたユーザーに割り当てられているすべてのロールの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> によって呼び出される、<xref:System.Web.Security.Roles.GetRolesForUser%2A>のメソッド、<xref:System.Web.Security.Roles>データ ソースから指定したユーザーが関連付けられているロール名を取得するクラス。 構成済みのロールのみ<xref:System.Web.Security.RoleProvider.ApplicationName%2A>が取得されます。  
  
 構成済みの指定したユーザーのロールが存在しないかどうかは`applicationName`、ご利用のプロバイダーが要素のない文字列配列を返すことをお勧めします。  
  
 指定されたユーザー名がある場合`null`空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">ユーザーについて一覧を取得するロールの名前。</param>
        <summary>構成済みの <see langword="applicationName" /> の指定されたロールに属するユーザーのリストを取得します。</summary>
        <returns>構成済みの <see langword="applicationName" /> の指定されたロールのメンバーであるすべてのユーザーの名前を格納している文字列配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> によって呼び出される、<xref:System.Web.Security.Roles.GetUsersInRole%2A>のメソッド、<xref:System.Web.Security.Roles>データ ソースからのロールに関連付けられたユーザー名を取得するクラス。 構成済みのロールのみ<xref:System.Web.Security.RoleProvider.ApplicationName%2A>が取得されます。  
  
 構成済みの指定されたロール名が存在しないかどうか`applicationName`である場合または`null`または空の文字列をお勧め、プロバイダーが例外をスローします。  
  
 ユーザーが構成済みの指定したロールに関連付けられていないかどうかは`applicationName`、ご利用のプロバイダーが要素のない文字列配列を返すことをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">検索するユーザー名。</param>
        <param name="roleName">検索範囲とするロール。</param>
        <summary>指定されたユーザーが、構成済みの <see langword="applicationName" /> の指定されたロールに存在するかどうかを示す値を取得します。</summary>
        <returns>指定されたユーザーが構成済みの <see langword="true" /> の指定されたロールにある場合は <see langword="applicationName" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>メソッドを呼び出して、<xref:System.Web.Security.Roles.IsUserInRole%2A>のメソッド、<xref:System.Web.Security.Roles>現在ログオンしているユーザーが構成済みのデータ ソースからのロールに関連付けられているかどうかを判断するにはクラス<xref:System.Web.Security.Roles.ApplicationName%2A>します。  
  
 指定されたユーザー名がある場合`null`空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
 指定されたロール名がある場合`null`または空の文字列が、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.IsUserInRole%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">指定されたロールから削除するユーザー名の文字列配列。</param>
        <param name="roleNames">指定されたユーザー名を削除するロール名の文字列配列。</param>
        <summary>指定したユーザー名を構成済みの <see langword="applicationName" /> の指定したロールから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> によって呼び出される<xref:System.Web.Security.Roles.RemoveUserFromRole%2A>、 <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> 、 <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> 、および<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>のメソッド、<xref:System.Web.Security.Roles>データ ソースで指定したロールから指定されたユーザーを削除するクラス。 構成済みのロールのみ<xref:System.Web.Security.RoleProvider.ApplicationName%2A>変更されます。  
  
 構成済みが見つかりません。 指定されたロール名のいずれかが場合`applicationName`、ご利用のプロバイダーがスローすることをお勧めします。、<xref:System.Configuration.Provider.ProviderException>します。  
  
 指定されたユーザー名のいずれかが構成済みの指定されたロール名のいずれかに関連付けられていないかどうか`applicationName`、ご利用のプロバイダーがスローすることをお勧め、<xref:System.Configuration.Provider.ProviderException>します。  
  
 場合、指定されたユーザー名のいずれかが`null`空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
 場合、指定されたロール名のいずれかが`null`空の文字列、または、プロバイダーが例外をスローすることをお勧めします。  
  
 データ ソースは、トランザクションをサポートする場合は、各削除操作は、トランザクションに含めること、およびそのトランザクションをロールバックして、削除操作が失敗した場合に例外をスローを勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">データ ソースで検索するロールの名前。</param>
        <summary>指定されたロール名が、構成済みの <see langword="applicationName" /> のロール データ ソースに既に存在するかどうかを示す値を取得します。</summary>
        <returns>ロール名が構成済みの <see langword="true" /> のデータ ソースに既に存在する場合は <see langword="applicationName" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> によって呼び出される、<xref:System.Web.Security.Roles.RoleExists%2A>のメソッド、<xref:System.Web.Security.Roles>ロール名が構成済みのデータ ソースに存在するかどうかを決めるクラスを<xref:System.Web.Security.Roles.ApplicationName%2A>します。  
  
 指定されたロール名がある場合`null`または空の文字列が、プロバイダーが例外をスローすることをお勧めします。  
  
   
  
## Examples  
 次のコード例の実装例を示しています、<xref:System.Web.Security.RoleProvider.RoleExists%2A>メソッド。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">ロール プロバイダーを実装します。</related>
      </Docs>
    </Member>
  </Members>
</Type>