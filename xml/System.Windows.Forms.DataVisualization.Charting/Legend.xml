<Type Name="Legend" FullName="System.Windows.Forms.DataVisualization.Charting.Legend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d51b1a7960619d9bbe03c2587b0c9767f30e8cbd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70523883" /></Metadata><TypeSignature Language="C#" Value="public class Legend : System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Legend extends System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Legend" />
  <TypeSignature Language="VB.NET" Value="Public Class Legend&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Legend : System::Windows::Forms::DataVisualization::Charting::ChartNamedElement" />
  <TypeSignature Language="F#" Value="type Legend = class&#xA;    inherit ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3f087-101">グラフ イメージの凡例を表します。</span><span class="sxs-lookup"><span data-stu-id="3f087-101">Represents the legend for the chart image.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-102">クラス<xref:System.Windows.Forms.DataVisualization.Charting.Legend>は、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart>コントロールの凡例のすべての機能をカプセル化<xref:System.Windows.Forms.DataVisualization.Charting.Chart.Legends%2A>し、ルート<xref:System.Windows.Forms.DataVisualization.Charting.Chart>オブジェクトのコレクションプロパティを使用して公開されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-102">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend> class encapsulates all the functionality of the <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control's legend, and is exposed using the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Legends%2A> collection property of the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.</span></span>  
  
 <span data-ttu-id="3f087-103">グラフイメージには、任意の数の凡例を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-103">There can be any number of legends for a chart image.</span></span>  
  
 <span data-ttu-id="3f087-104">凡例は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3f087-104">Legends can:</span></span>  
  
-   <span data-ttu-id="3f087-105">ドッキングしてアラインします。</span><span class="sxs-lookup"><span data-stu-id="3f087-105">Be docked and aligned.</span></span>  
  
-   <span data-ttu-id="3f087-106">プロットされたグラフ領域の内側または外側に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-106">Be displayed inside or outside the plotted chart areas.</span></span>  
  
-   <span data-ttu-id="3f087-107">コンテンツを自動的に調整します。</span><span class="sxs-lookup"><span data-stu-id="3f087-107">Automatically fit their contents.</span></span>  
  
-   <span data-ttu-id="3f087-108">行、列、テーブルなどの定義済みのスタイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="3f087-108">Use a predefined style, such as row, column or table.</span></span>  
  
-   <span data-ttu-id="3f087-109">陰影、グラデーションの色、および背景画像を使用します。</span><span class="sxs-lookup"><span data-stu-id="3f087-109">Use hatching, gradient colors and background images.</span></span>  
  
-   <span data-ttu-id="3f087-110">サイズを設定し、グラフイメージ内の任意の位置に配置します。</span><span class="sxs-lookup"><span data-stu-id="3f087-110">Be sized and positioned anywhere within the chart image.</span></span>  
  
 <span data-ttu-id="3f087-111">凡例項目は<xref:System.Windows.Forms.DataVisualization.Charting.LegendItem>オブジェクトによって表され、既定の項目またはカスタム項目です。</span><span class="sxs-lookup"><span data-stu-id="3f087-111">Legend items are represented by the <xref:System.Windows.Forms.DataVisualization.Charting.LegendItem> object, and are either default or custom items.</span></span> <span data-ttu-id="3f087-112">カスタム項目はデータに関連付けられておらず、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems%2A>プロパティを使用して追加、削除、および変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3f087-112">Custom items are not associated with data, and can be added, deleted and modified using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems%2A> property.</span></span>  
  
 <span data-ttu-id="3f087-113">既定では既定で凡例に自動的に追加され、ドーナツグラフおよび円グラフのプロットされたデータポイントの名前になります。</span><span class="sxs-lookup"><span data-stu-id="3f087-113">Default items are by default automatically added to the legend, and are the names of the plotted data points for doughnut and pie charts.</span></span>  
  
 <span data-ttu-id="3f087-114">その他のすべての種類のグラフでは、既定のアイテムはプロットされたデータ系列の名前です。</span><span class="sxs-lookup"><span data-stu-id="3f087-114">For all other chart types, the default items are the names of the plotted data series.</span></span> <span data-ttu-id="3f087-115">各系列には<xref:System.Windows.Forms.DataVisualization.Charting.Series.Legend%2A> 、使用する凡例の名前を定義するプロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="3f087-115">Each series has a <xref:System.Windows.Forms.DataVisualization.Charting.Series.Legend%2A> property that defines the name of the legend that will be used.</span></span> <span data-ttu-id="3f087-116"><xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A>プロパティがに`false`設定されている場合、系列の凡例項目は作成されません。</span><span class="sxs-lookup"><span data-stu-id="3f087-116">A legend item will not be created for a series if the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> property is set to `false`.</span></span> <span data-ttu-id="3f087-117">これらの既定の項目のテキストは、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>プロパティを使用して変更できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-117">The text for these default items can be changed using the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> property.</span></span> <span data-ttu-id="3f087-118">このプロパティを使用すると、実行時に適切な値に置換される定義済みのキーワードを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-118">This property will allow you to specify predefined keywords that will be replaced by their appropriate values at run-time.</span></span>  
  
 <span data-ttu-id="3f087-119">円グラフがある場合は、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A>プロパティを設定すると、凡例のテキストもラベルに設定した値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-119">If you have a pie chart and you set the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A> property, it will also set the legend text to the value you set for the labels.</span></span> <span data-ttu-id="3f087-120">テキストを別の値に設定する場合は、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-120">If you want to set the text to a different value, you can set the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> property.</span></span> <span data-ttu-id="3f087-121">ほとんどの場合、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>プロパティを "#AXISLABEL" または "#VALX" に設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-121">In most cases, you would want to set the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> property to "#AXISLABEL" or "#VALX".</span></span>  
  
 <span data-ttu-id="3f087-122">凡例の系列の記号は、四角形、ドット、または線です。</span><span class="sxs-lookup"><span data-stu-id="3f087-122">Legend series symbols are rectangles, dots or lines.</span></span> <span data-ttu-id="3f087-123">シンボルの種類は、グラフによって自動的に設定され、プロットされたグラフの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="3f087-123">The symbol type is set automatically by the chart and depends on the plotted chart type.</span></span>  
  
 <span data-ttu-id="3f087-124">既定では、凡例のテキストのサイズが自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-124">Legend text by default is automatically sized.</span></span> <span data-ttu-id="3f087-125">凡例テキストの自動サイズ変更を無効にするに<xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A>は、プロパティを無効にします。</span><span class="sxs-lookup"><span data-stu-id="3f087-125">You can disable automatic sizing of legend text by disabling the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property.</span></span> <span data-ttu-id="3f087-126">このプロパティがに`false`設定されている場合、凡例のテキストのサイズは凡例<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Font%2A>のサイズプロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="3f087-126">When this property is set to `false`, the size of the legend text is determined by the Size property of the legend <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Font%2A>.</span></span> <span data-ttu-id="3f087-127">プロパティが有効になっている<xref:System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A>場合、プロパティは、サイズ変更時に凡例項目が持つことのできる最小のフォントサイズを決定します。 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A></span><span class="sxs-lookup"><span data-stu-id="3f087-127">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property is enabled, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A> property determines the minimum font size that a legend item can have when resizing.</span></span>  
  
 <span data-ttu-id="3f087-128">プロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A>は、テキストが別の行に折り返される前に1行に表示できる文字数の制限を定義します。</span><span class="sxs-lookup"><span data-stu-id="3f087-128">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> property defines a limit on the number of characters that can be shown on one line before text is wrapped to another line.</span></span> <span data-ttu-id="3f087-129">凡例にテキストを折り返したくない場合は、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A>プロパティの値を0に設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-129">If you do not wish to wrap text in the legend, set the value of the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> property to zero.</span></span> <span data-ttu-id="3f087-130">既定では、凡例のテキスト全体が凡例に表示されない場合、テキストは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="3f087-130">By default, when the entire legend text does not fit in the legend, the text will be truncated.</span></span> <span data-ttu-id="3f087-131">凡例にを設定<xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A>して、切り捨てられるのではなく、折り返しの対象となるテキストを取得できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-131">You can set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> on the legend to get the text to wrap instead of being truncated.</span></span>  
  
 <span data-ttu-id="3f087-132">凡例の内容が指定されたスペースに合わない場合、凡例のエントリは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="3f087-132">If the contents of the legend cannot fit into the given space, legend entries are truncated.</span></span> <span data-ttu-id="3f087-133">凡例にスペースが含まれているよりも多くのエントリがあることを示す省略記号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-133">An ellipsis is shown to indicate that there are more entries than the legend has space for.</span></span> <span data-ttu-id="3f087-134">凡例項目が切り詰められないようにするには、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A>プロパティを使用して凡例の位置とサイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-134">To prevent the legend items from being truncated, set the position and size of the legend using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property.</span></span> <span data-ttu-id="3f087-135">凡例の位置またはサイズを設定すると、グラフ内の要素を自動的に配置できなくなります。</span><span class="sxs-lookup"><span data-stu-id="3f087-135">When setting the legend position or size, the chart can no longer automatically position the elements in the chart.</span></span> <span data-ttu-id="3f087-136">場合によっては、必要な外観を実現するために、他のグラフ要素を手動で配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-136">In some cases, you many need to manually position other chart elements to achieve the desired appearance.</span></span>  
  
 <span data-ttu-id="3f087-137">別の方法として、既定の凡例の設定を使用する代わりに、独自のセル列を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="3f087-137">Another option would be to define your own cell columns instead of using the default legend settings.</span></span>  
  
 <span data-ttu-id="3f087-138">オブジェクト<xref:System.Windows.Forms.DataVisualization.Charting.Legend>には cellcolumn コレクションがあり、各 cellcolumn オブジェクトは凡例の列を表します。</span><span class="sxs-lookup"><span data-stu-id="3f087-138">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend> object has a CellColumn Collection; each CellColumn object represents a column in the Legend.</span></span> <span data-ttu-id="3f087-139">セル列には<xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A> 、 <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A>列のサイズを調整するために使用できるプロパティとプロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="3f087-139">A cell column has <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A> properties that can be used to adjust the size of the columns.</span></span>  
  
 <span data-ttu-id="3f087-140">凡例に多くのエントリが含ま<xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A>れている場合は、を使用して読みやすさを向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="3f087-140">When the legend contains many entries, <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A> can be used to improve readability.</span></span> <span data-ttu-id="3f087-141">このプロパティを True に設定すると、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A>プロパティを使用して設定できる背景色が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-141">When this property is set to True, it will display a back color that you can set using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> property.</span></span>  
  
 <span data-ttu-id="3f087-142">既定では、凡例はグラフの右上隅に配置されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-142">By default, the legend is positioned in the top-right corner of the chart.</span></span> <span data-ttu-id="3f087-143">この位置は、凡例のプロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A>プロパティを使用して変更できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-143">This position can be modified by using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> properties of the legend.</span></span> <span data-ttu-id="3f087-144">凡例は、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A>プロパティを使用してグラフ領域に関連付けることもできます。</span><span class="sxs-lookup"><span data-stu-id="3f087-144">The legend can also be associated with a chart area by use of the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> property.</span></span> <span data-ttu-id="3f087-145">このプロパティは、凡例をドッキングするグラフ領域の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-145">This property specifies the name of the chart area for which the legend should be docked.</span></span> <span data-ttu-id="3f087-146">また、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>プロパティを使用して、グラフ領域内に凡例を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="3f087-146">In addition, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property can be used to display the legend inside a chart area.</span></span>  
  
 <span data-ttu-id="3f087-147">が False に設定されて<xref:System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize%2A>いる場合、プロパティは、凡例が自動的に配置されるときに、使用できるグラフ内の凡例の最大サイズをパーセントで定義します。 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A></span><span class="sxs-lookup"><span data-stu-id="3f087-147">When <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> is set to False, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize%2A> property defines the maximum size, in percent, of the legend within the available chart when the legend is automatically positioned.</span></span> <span data-ttu-id="3f087-148">ドッキングプロパティが設定された後に凡例の幅または高さを調整する場合は、このプロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-148">This property should be set if you wish to adjust the width or height of the legend after the docking properties have been set.</span></span>  
  
 <span data-ttu-id="3f087-149">凡例は、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend>イベントを使用して変更できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-149">The legend can be modified using the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> event.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f087-150"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3f087-150">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Legend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f087-151"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3f087-151">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Legend.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Legend : string -&gt; System.Windows.Forms.DataVisualization.Charting.Legend" Usage="new System.Windows.Forms.DataVisualization.Charting.Legend name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3f087-152"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="3f087-152">The name of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> object.</span></span></param>
        <summary><span data-ttu-id="3f087-153">凡例の名前を指定して、<see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3f087-153">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> class with the specified legend name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-154">凡例の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-154">Gets or sets the alignment of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-155">凡例の配置を表す .NET Framework <see cref="T:System.Drawing.StringAlignment" /> の列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-155">A .NET Framework <see cref="T:System.Drawing.StringAlignment" /> enumeration value that represents the alignment of the legend.</span></span> <span data-ttu-id="3f087-156">既定値は <see cref="F:System.Drawing.StringAlignment.Near" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-156">The default value is <see cref="F:System.Drawing.StringAlignment.Near" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-157">凡例は<xref:System.Drawing.StringAlignment.Near>、、、 <xref:System.Drawing.StringAlignment.Center>または<xref:System.Drawing.StringAlignment.Far>のように配置できます。配置は<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A>プロパティ設定によっても影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="3f087-157">The legend can be aligned so that it is <xref:System.Drawing.StringAlignment.Near>, <xref:System.Drawing.StringAlignment.Center> or <xref:System.Drawing.StringAlignment.Far>; its alignment is also affected by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A> property setting.</span></span>  
  
 <span data-ttu-id="3f087-158">凡例が上または下にドッキングされて<xref:System.Drawing.StringAlignment.Near>いる場合、は左に配置されます。左または右<xref:System.Drawing.StringAlignment.Near>にドッキングされている場合は、が上部に配置されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-158">If the legend is docked to the top or bottom, <xref:System.Drawing.StringAlignment.Near> is to the left; if it is docked to the left or right, <xref:System.Drawing.StringAlignment.Near> is at the top.</span></span> <span data-ttu-id="3f087-159">プロパティ<xref:System.Drawing.StringAlignment.Far>の設定は、逆の場合にのみ、ドッキングされている場所に応じて、凡例を右または下に配置します。</span><span class="sxs-lookup"><span data-stu-id="3f087-159">The <xref:System.Drawing.StringAlignment.Far> property setting is just the opposite, and aligns the legend to the right or the bottom, depending on where it is docked.</span></span>  
  
 <span data-ttu-id="3f087-160"><xref:System.Drawing.StringAlignment.Center>凡例は、垂直方向または水平方向に常に中央揃えで配置されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-160"><xref:System.Drawing.StringAlignment.Center> always centers the legend, either vertically or horizontally.</span></span>  
  
 <span data-ttu-id="3f087-161">プロパティがに<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> 設定されていない場合、プロパティを設定しても効果は <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A> ありません。</span><span class="sxs-lookup"><span data-stu-id="3f087-161">Setting the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> property will have no effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property is not set to <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int AutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFitMinFontSize : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-162">凡例のテキストの自動調整アルゴリズムで使用できる最小のフォント サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-162">Gets or sets the minimum font size that can be used by the autofitting algorithm for the legend text.</span></span></summary>
        <value><span data-ttu-id="3f087-163">凡例のテキストの自動調整アルゴリズムで使用できる最小のフォント サイズを表す <see langword="integer" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-163">An <see langword="integer" /> value that represents the minimum font size that can be used by the autofitting algorithm for the legend text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-164">凡例の背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-164">Gets or sets the background color of a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-165">凡例の背景色を描画するために使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-165">A <see cref="T:System.Drawing.Color" /> value used to draw the background color of a legend.</span></span> <span data-ttu-id="3f087-166">既定の色は <see cref="P:System.Drawing.Color.White" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-166">The default color is <see cref="P:System.Drawing.Color.White" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-167">このプロパティは、任意の有効な ARGB (アルファ、赤、緑、青) 値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-167">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="3f087-168">この<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A>値は、背景にグラデーションの色を指定した場合に使用される最初の色になります。</span><span class="sxs-lookup"><span data-stu-id="3f087-168">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> value will be the first color used if you have specified gradient colors for the background.</span></span>  
  
 <span data-ttu-id="3f087-169">アルファ値は、色の不透明度を制御します。</span><span class="sxs-lookup"><span data-stu-id="3f087-169">The alpha value controls the opacity of a color.</span></span> <span data-ttu-id="3f087-170">この色を "透明" に設定した場合 (つまり、アルファ値を0に設定した場合)、凡例の背景に色は割り当てられません。</span><span class="sxs-lookup"><span data-stu-id="3f087-170">If you set this color to "transparent" - that is, if you use an alpha value of 0 - no color will be assigned to the background of the legend.</span></span> <span data-ttu-id="3f087-171">その結果、背景は透明になります。</span><span class="sxs-lookup"><span data-stu-id="3f087-171">As a result, the background will be transparent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Windows::Forms::DataVisualization::Charting::GradientStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Windows.Forms.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-172">凡例の背景グラデーションの向きを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-172">Gets or sets the orientation for the background gradient of a legend.</span></span> <span data-ttu-id="3f087-173">グラデーションが使用されているかどうかも判断します。</span><span class="sxs-lookup"><span data-stu-id="3f087-173">Also determines whether a gradient is used.</span></span></summary>
        <value><span data-ttu-id="3f087-174">凡例の背景のグラデーションの方向を指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> 列挙。</span><span class="sxs-lookup"><span data-stu-id="3f087-174">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> enumeration that specifies the orientation for the background gradient of a legend.</span></span> <span data-ttu-id="3f087-175">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-175">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-176"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A>プロパティを使用して、凡例にグラデーションを表示するかどうかを決定し、グラデーションが使用されている場合はグラデーションの向きを決定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-176">Use the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> property to determine whether a legend will display a gradient, and to determine the orientation of the gradient if one is used.</span></span>  
  
 <span data-ttu-id="3f087-177">使用可能なパターンの一覧については<xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle> 、列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f087-177">For a listing of available patterns, refer to the <xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle> enumeration.</span></span>  
  
 <span data-ttu-id="3f087-178">グラデーションの色を使用するには:</span><span class="sxs-lookup"><span data-stu-id="3f087-178">To use gradient colors:</span></span>  
  
 <span data-ttu-id="3f087-179"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A>プロパティを使用して、凡例の背景のプライマリ色を設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-179">Set the primary color of the legend background with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> property.</span></span>  
  
 <span data-ttu-id="3f087-180"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A>プロパティを使用して、凡例の背景の2番目の色を設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-180">Set the secondary color of the legend background with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property.</span></span>  
  
 <span data-ttu-id="3f087-181">この<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A>プロパティを目的のグラデーションスタイルに設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-181">Set this <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> property to the desired gradient style.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-182">凡例のハッチング スタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-182">Gets or sets the hatching style of a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-183">凡例のハッチング スタイルを指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> 列挙。</span><span class="sxs-lookup"><span data-stu-id="3f087-183">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> enumeration that specifies the hatching style of a legend.</span></span> <span data-ttu-id="3f087-184">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-184">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-185">列挙<xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle>体は、型<xref:System.Drawing.Drawing2D.HatchBrush>のブラシによって使用されるハッチパターンを指定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-185">The <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> enumeration specifies the hatch pattern used by a brush of type <xref:System.Drawing.Drawing2D.HatchBrush>.</span></span> <span data-ttu-id="3f087-186">ハッチパターンは、背景色と背景上に描画された直線で構成されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-186">The hatch pattern consists of a solid background color and lines drawn over the background.</span></span>  
  
 <span data-ttu-id="3f087-187">使用できるハッチングスタイルの一覧については、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle>列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f087-187">For a listing of available hatching styles, refer to the <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> enumeration.</span></span>  
  
 <span data-ttu-id="3f087-188">**メモ**陰影の線の色は、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A>プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="3f087-188">**Note** The color of hatching lines is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-189">凡例の背景イメージを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-189">Gets or sets the background image of a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-190">イメージ ファイルの URL を表す <see langword="string" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-190">A <see langword="string" /> value that represents the URL of an image file.</span></span> <span data-ttu-id="3f087-191">既定値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3f087-191">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-192">このプロパティは、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart>凡例の背景イメージへのパスを定義します。絶対 URL または相対 URL を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-192">This property defines a path to a background image for a <xref:System.Windows.Forms.DataVisualization.Charting.Chart> legend, and can be an absolute or relative URL.</span></span>  
  
 <span data-ttu-id="3f087-193">イメージを配置するには、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A>プロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A>とプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="3f087-193">To position the image, use the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> properties.</span></span>  
  
 <span data-ttu-id="3f087-194">また、プロパティを<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor%2A>設定して、画像によって表示される色の1つを "透明" として指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3f087-194">You can also specify one of the colors displayed by the image as "transparent", by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor%2A> property.</span></span>  
  
 <span data-ttu-id="3f087-195">画像は、.NET Framework でサポートされている有効なグラフィックスファイル (アイコンを含む) から生成される場合があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-195">An image can originate from any valid graphics file supported by .NET Framework, including icons.</span></span>  
  
 <span data-ttu-id="3f087-196">背景画像は、グラデーションの色など、他の背景プロパティよりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-196">Background images take precedence over other background properties such as gradient color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-197"><see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> 描画モードに使用される背景イメージの配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-197">Gets or sets the background image alignment used for the <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> drawing mode.</span></span></summary>
        <value><span data-ttu-id="3f087-198">背景イメージの配置を指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-198">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value that specifies the background image alignment.</span></span> <span data-ttu-id="3f087-199">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-199">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-200">このプロパティは、凡例の背景イメージの配置を決定します。<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A>プロパティがに<xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>設定されている場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-200">This property determines the alignment of the background image for the legend; it is only applied when the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-201">背景イメージが描画されるときに透明色で置き換えられる色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-201">Gets or sets a color that will be replaced with a transparent color when the background image is drawn.</span></span></summary>
        <value><span data-ttu-id="3f087-202">背景イメージを描画するときに透明色として表示される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-202">A <see cref="T:System.Drawing.Color" /> value that will be displayed as transparent color when the background image is drawn.</span></span> <span data-ttu-id="3f087-203">既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-203">The default value is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-204">凡例の背景イメージの描画モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-204">Gets or sets the legend background image drawing mode.</span></span></summary>
        <value><span data-ttu-id="3f087-205">凡例の背景イメージの描画モードを指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-205">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> enumeration value that specifies the legend background image drawing mode.</span></span> <span data-ttu-id="3f087-206">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-206">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-207">プロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A>は、画像の表示方法を決定します。画像は、並べて表示したり、拡大縮小したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="3f087-207">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> property determines how the image is displayed; the image can be tiled, scaled, and so forth.</span></span>  
  
 <span data-ttu-id="3f087-208">画像が拡大縮小されると、凡例の境界内に収まるように拡大されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-208">If an image is scaled, it will be stretched to fit within the bounds of the legend.</span></span> <span data-ttu-id="3f087-209">画像が並べて表示されている場合は、凡例の左上隅から開始して、繰り返し描画されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-209">If the image is tiled, it is repeatedly drawn, starting from the top-left corner of the legend.</span></span>  
  
 <span data-ttu-id="3f087-210">使用できる折り返しモードの詳細については、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>列挙のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f087-210">For more information about the available wrapping modes, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> enumeration topic.</span></span>  
  
 <span data-ttu-id="3f087-211">プロパティがに<xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>設定されている場合、イメージが描画される場所は、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A>プロパティの設定によって決まります。 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A></span><span class="sxs-lookup"><span data-stu-id="3f087-211">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, the location where the image is drawn is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A> property setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-212">凡例の背景の 2 番目の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-212">Gets or sets the secondary color of a legend background.</span></span></summary>
        <value><span data-ttu-id="3f087-213">ハッチングまたはグラデーションの塗りが適用される背景の 2 番目の色に使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-213">A <see cref="T:System.Drawing.Color" /> value used for the secondary color of background with hatching or gradient fill.</span></span> <span data-ttu-id="3f087-214">既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-214">The default value is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-215">プロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A>は、多く<xref:System.Windows.Forms.DataVisualization.Charting.Chart>のオブジェクトの2番目の背景色を決定し、グラデーションの色を適用するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-215">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property determines the secondary background color of many <xref:System.Windows.Forms.DataVisualization.Charting.Chart> objects, and is used when gradient colors are being applied.</span></span>  
  
 <span data-ttu-id="3f087-216">は、任意<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A>の有効な ARGB (アルファ、赤、緑、青) 値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-216">You can set <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="3f087-217">陰影が使用されて<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A>いる場合、プロパティは凡例の陰影線の色を決定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-217">If hatching is used, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property determines the color of the hatching lines for the legend.</span></span>  
  
 <span data-ttu-id="3f087-218">凡例の背景にグラデーションの色を使用するには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="3f087-218">To use gradient colors for the background of a legend:</span></span>  
  
-   <span data-ttu-id="3f087-219"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A>プロパティを使用して、プライマリ色を設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-219">Set the primary color with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> property.</span></span>  
  
-   <span data-ttu-id="3f087-220"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A>プロパティを使用して2番目の色を設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-220">Set the secondary color with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property.</span></span>  
  
-   <span data-ttu-id="3f087-221"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A>プロパティを目的のグラデーションスタイルに設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-221">Set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> property to the desired gradient style.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-222">凡例の境界線の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-222">Gets or sets the border color of a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-223">凡例の境界線の色を描画するために使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-223">A <see cref="T:System.Drawing.Color" /> value used to draw  the border color of a legend.</span></span> <span data-ttu-id="3f087-224">既定の色は <see cref="F:System.Drawing.Color.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-224">The default color is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-225">このプロパティは、任意の有効な ARGB (アルファ、赤、緑、青) 値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-225">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-226">凡例の境界線スタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-226">Gets or sets the border style of a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-227">グラフ要素の境界線スタイルを決定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-227">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border style of the chart element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-228">プロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle%2A>は、罫線に使用する線のスタイルを決定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-228">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle%2A> property determines the line style to use for a border.</span></span> <span data-ttu-id="3f087-229">線は、実線、点線などにすることができます。</span><span class="sxs-lookup"><span data-stu-id="3f087-229">The line can be solid, dotted, and so forth.</span></span>  
  
 <span data-ttu-id="3f087-230">その他の境界線スタイルに<xref:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle>ついては、列挙のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f087-230">For other border styles, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle> enumeration topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-231">凡例の境界線の幅を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-231">Gets or sets the border width of a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-232">凡例の境界線の幅 (ピクセル単位) を決定する <see langword="integer" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-232">An <see langword="integer" /> value that determines the border width, in pixels, of the legend.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-233"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth%2A>プロパティでは、このような要素の線の幅を折れ線グラフ、カスタムの凡例項目を "線" スタイルで設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3f087-233">Note that <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth%2A> property can also set the width of lines in such elements as line charts, custom legend items displayed with a "line" style, and so forth.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellColumns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection CellColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection CellColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.CellColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellColumns As LegendCellColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendCellColumnCollection ^ CellColumns { System::Windows::Forms::DataVisualization::Charting::LegendCellColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CellColumns : System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.CellColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-234">凡例のセル列のコレクションを含む <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3f087-234">Gets the <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" /> object that contains the collection of cell columns for a legend.</span></span></summary>
        <value><span data-ttu-id="3f087-235">凡例のセル列のコレクションを含む <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f087-235">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" /> object that contains the collection of cell columns for a legend.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection CustomItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection CustomItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomItems As LegendItemsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendItemsCollection ^ CustomItems { System::Windows::Forms::DataVisualization::Charting::LegendItemsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomItems : System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-236">カスタムの凡例項目に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3f087-236">Gets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> object used for custom legend items.</span></span></summary>
        <value><span data-ttu-id="3f087-237"><see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f087-237">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-238">このコレクションプロパティを使用して、カスタムの凡例項目を追加、削除、または変更できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-238">This collection property can be used to add, delete or modify custom legend items.</span></span>  
  
 <span data-ttu-id="3f087-239">既定の凡例項目とは異なり、カスタムの凡例項目に系列またはデータポイントが関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="3f087-239">Custom legend items, unlike default legend items, do not have associated series or data points.</span></span>  
  
 <span data-ttu-id="3f087-240">凡例項目を変更するには<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> 、イベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="3f087-240">To modify legend items, use the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Legend.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="legend.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3f087-241">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f087-241"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3f087-242"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="3f087-242">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockedToChartArea">
      <MemberSignature Language="C#" Value="public string DockedToChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockedToChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property DockedToChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DockedToChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DockedToChartArea : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-243">凡例のドッキング先の <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-243">Gets or sets the name of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> where the legend will be docked.</span></span></summary>
        <value><span data-ttu-id="3f087-244">この凡例のドッキング先の <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> の名前を表す <see langword="string" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-244">A <see langword="string" /> value that represents the name of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> where this legend will be docked.</span></span> <span data-ttu-id="3f087-245">既定値は、空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3f087-245">The default value is the empty string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Docking">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Docking Docking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.Docking Docking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />
      <MemberSignature Language="VB.NET" Value="Public Property Docking As Docking" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Docking Docking { System::Windows::Forms::DataVisualization::Charting::Docking get(); void set(System::Windows::Forms::DataVisualization::Charting::Docking value); };" />
      <MemberSignature Language="F#" Value="member this.Docking : System.Windows.Forms.DataVisualization.Charting.Docking with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Docking</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-246">凡例をドッキングするかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-246">Gets or sets a value that determines whether the legend is docked.</span></span></summary>
        <value><span data-ttu-id="3f087-247">凡例がドッキングされるかどうかを決定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.Docking" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-247">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Docking" /> enumeration value that determines whether the legend is docked.</span></span> <span data-ttu-id="3f087-248">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.Docking.Right" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-248">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.Docking.Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-249">は<xref:System.Windows.Forms.DataVisualization.Charting.Legend> 、グラフイメージ全体またはグラフ領域の内側または外側のいずれかの上、左、下、または右にドッキングできます。</span><span class="sxs-lookup"><span data-stu-id="3f087-249">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend> can be docked to the top, left, bottom or right of either the entire chart image, or the inside or outside of a chart area.</span></span> <span data-ttu-id="3f087-250">プロパティが<xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A>に`false`設定されている場合、ドッキングはグラフイメージ全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-250">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property is set to `false`, docking applies to the entire chart image.</span></span> <span data-ttu-id="3f087-251">プロパティがに`true`設定されている場合は、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A>プロパティによって指定されたオブジェクトにドッキングが適用されます。 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A></span><span class="sxs-lookup"><span data-stu-id="3f087-251">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property is set to `true`, docking applies to the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object specified by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> property</span></span>  
  
 <span data-ttu-id="3f087-252">プロパティがに<xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>設定されて<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A>いない場合、このプロパティは無効です。</span><span class="sxs-lookup"><span data-stu-id="3f087-252">This property has no effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property is not set to <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-253">凡例が有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-253">Gets or sets a value that indicates whether the legend is enabled.</span></span></summary>
        <value><span data-ttu-id="3f087-254">凡例が有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f087-254"><see langword="true" /> if the legend is enabled; otherwise,  <see langword="false" />.</span></span> <span data-ttu-id="3f087-255">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-255">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-256">凡例を非表示にするには、 `false`このプロパティをに設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-256">To hide a legend, set this property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-257">凡例のフォント プロパティの設定に使用する <see cref="T:System.Drawing.Font" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-257">Gets or sets a <see cref="T:System.Drawing.Font" /> object, which is used to set font properties of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-258">凡例のフォント プロパティを設定するために使用される <see cref="T:System.Drawing.Font" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f087-258">A <see cref="T:System.Drawing.Font" /> object which is used to set font properties of the legend.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-259">実行時にこの<xref:System.Drawing.Font>オブジェクトのプロパティを変更しようとすると、コンパイルエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="3f087-259">If you attempt to change the properties of this <xref:System.Drawing.Font> object at run time, a compilation error will occur.</span></span> <span data-ttu-id="3f087-260">実行時にフォントプロパティを設定するには、新しい<xref:System.Drawing.Font>オブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-260">To set font properties at run time, you must create a new <xref:System.Drawing.Font> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3f087-261">"Legend. Font. Size" プロパティを<xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A>設定すると、プロパティは false に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-261">If you set the Legend.Font.Size property, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property will be set to false.</span></span> <span data-ttu-id="3f087-262">また、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A>プロパティを true に設定した場合、このプロパティは既定値である8ポイントにリセットされます。</span><span class="sxs-lookup"><span data-stu-id="3f087-262">Also, if you set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property to true, this property will be reset to its default, which is 8 points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-263">凡例のテキストの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-263">Gets or sets the color of the legend text.</span></span></summary>
        <value><span data-ttu-id="3f087-264">凡例のテキストの色を指定する <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-264">A <see cref="T:System.Drawing.Color" /> value that specifies the color of the legend text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-265">プロパティ<xref:System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor%2A>は、凡例のテキストの色を設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-265">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor%2A> property is used to set the legend text color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle HeaderSeparator { System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderSeparator : System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-266">凡例の見出しに表示する区切り記号の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-266">Gets or sets the visual separator type for the legend header.</span></span></summary>
        <value><span data-ttu-id="3f087-267">凡例の見出しに表示する区切り記号の種類を指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-267">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> enumeration value that specifies the visual separator type for the legend header.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderSeparatorColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-268">凡例の見出しの区切り記号の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-268">Gets or sets the color of the separator for the legend header.</span></span></summary>
        <value><span data-ttu-id="3f087-269">凡例の見出しの区切り記号の色を指定する <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-269">A <see cref="T:System.Drawing.Color" /> value that specifies the color of the separator for the legend header.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsideChartArea">
      <MemberSignature Language="C#" Value="public string InsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsideChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsideChartArea : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-270">凡例の描画先であるグラフ エリアの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-270">Gets or sets the name of the chart area in which the legend is drawn.</span></span></summary>
        <value><span data-ttu-id="3f087-271">グラフ エリアの名前を表す <see langword="string" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-271">A <see langword="string" /> value that represents the name of the chart area.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRows">
      <MemberSignature Language="C#" Value="public bool InterlacedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterlacedRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterlacedRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedRows : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-272">凡例の行をインターレース背景色で描画するかどうかを示すフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-272">Gets or sets a flag that indicates whether legend rows will be drawn with interlaced background color.</span></span></summary>
        <value><span data-ttu-id="3f087-273">凡例の行がインターレース背景色で描画される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f087-273"><see langword="true" /> if legend rows will be drawn with interlaced background color; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-274">凡例に多くの<xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A>エントリが含まれている場合は、プロパティを使用して読みやすさを向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="3f087-274">When the legend contains many entries, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A> property can be used to improve readability.</span></span> <span data-ttu-id="3f087-275">このプロパティをに`true`設定すると、インターレースされている行の背景色が凡例に表示されます。これは、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A>プロパティを使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-275">When this property is set to `true`, the legend will display a background color for the rows that are interlaced, which can be set using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRowsColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedRowsColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedRowsColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRowsColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedRowsColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedRowsColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-276">凡例のインターレース行の背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-276">Gets or sets the background color of the legend's interlaced rows.</span></span></summary>
        <value><span data-ttu-id="3f087-277">凡例のインターレース行の背景色を指定する <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-277">A <see cref="T:System.Drawing.Color" /> value that specifies the background color of the legend's interlaced rows.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-278">このプロパティは、インターレース行が使用されている場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-278">This property is only applicable if interlaced rows are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDockedInsideChartArea">
      <MemberSignature Language="C#" Value="public bool IsDockedInsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDockedInsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDockedInsideChartArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDockedInsideChartArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDockedInsideChartArea : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-279">凡例をグラフ エリアの内側にドッキングするか、外側にドッキングするかを示すフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-279">Gets or sets a flag that indicates whether the legend is docked inside or outside the chart area.</span></span></summary>
        <value><span data-ttu-id="3f087-280">凡例をグラフ エリアの内側にドッキングする場合は <see langword="true" />、グラフ エリアの外側にドッキングする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f087-280"><see langword="true" /> is the legend is docked inside the chart area; <see langword="false" /> if it is docked outside the chart area.</span></span> <span data-ttu-id="3f087-281">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-281">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-282">このプロパティは、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A>プロパティが<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクトの名前に設定されている場合にのみ効果があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-282">This property will only have an effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> property is set to the name of a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3f087-283">プロパティが<xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>以外 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> の値に設定されている場合は、プロパティも影響を及ぼしません。 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A></span><span class="sxs-lookup"><span data-stu-id="3f087-283">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property is set to any value other than <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property also has no effect.</span></span> <span data-ttu-id="3f087-284">これは、凡例の位置が<xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A>プロパティの設定によって決まるためです。</span><span class="sxs-lookup"><span data-stu-id="3f087-284">This is because the position of the legend is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquallySpacedItems">
      <MemberSignature Language="C#" Value="public bool IsEquallySpacedItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEquallySpacedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEquallySpacedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEquallySpacedItems { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEquallySpacedItems : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-285">すべての凡例項目を等間隔で配置するかどうかを示すフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-285">Gets or sets a flag that indicates whether all legend items are equally spaced.</span></span></summary>
        <value><span data-ttu-id="3f087-286">凡例項目を等間隔で配置する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f087-286"><see langword="true" /> if legend items are equally spaced; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3f087-287">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-287">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextAutoFit">
      <MemberSignature Language="C#" Value="public bool IsTextAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextAutoFit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTextAutoFit : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-288">凡例のテキストのサイズが自動的に設定されるかどうかを示すフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-288">Gets or sets a flag that indicates whether the legend text is automatically sized.</span></span></summary>
        <value><span data-ttu-id="3f087-289">凡例のテキストのサイズが自動的に設定される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f087-289"><see langword="true" /> if the legend text is automatically sized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle ItemColumnSeparator { System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSeparator : System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-290">凡例のテーブル列に表示する区切り記号の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-290">Gets or sets the visual separator type for the legend table columns.</span></span></summary>
        <value><span data-ttu-id="3f087-291">凡例のテーブル列に表示する区切り記号の種類を指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-291">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> enumeration value that specifies the visual separator type for the legend table columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ItemColumnSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ItemColumnSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ItemColumnSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSeparatorColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-292">凡例のテーブル列の区切り記号の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-292">Gets or sets the color of the legend table column separator.</span></span></summary>
        <value><span data-ttu-id="3f087-293">凡例のテーブル列の区切り記号の色を描画するために使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-293">A <see cref="T:System.Drawing.Color" /> value used to draw the color of the legend table column separator.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSpacing">
      <MemberSignature Language="C#" Value="public int ItemColumnSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemColumnSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemColumnSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSpacing : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-294">凡例のテーブル列の間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-294">Gets or sets the legend table column spacing.</span></span></summary>
        <value><span data-ttu-id="3f087-295">テーブル列の間隔を表す <see langword="integer" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-295">An <see langword="integer" /> value that represents the table column spacing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-296"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing%2A>プロパティ値は、凡例テキストのフォントに対する比率として計算されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-296">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing%2A> property value is calculated as a percentage of the legend text font.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendItemOrder">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendItemOrder LegendItemOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendItemOrder LegendItemOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendItemOrder As LegendItemOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendItemOrder LegendItemOrder { System::Windows::Forms::DataVisualization::Charting::LegendItemOrder get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendItemOrder value); };" />
      <MemberSignature Language="F#" Value="member this.LegendItemOrder : System.Windows.Forms.DataVisualization.Charting.LegendItemOrder with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendItemOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-297">凡例項目を表示する順序を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-297">Gets or sets a value that specifies the order in which legend items are displayed.</span></span> <span data-ttu-id="3f087-298">このプロパティは、グラフの系列に自動的に追加された凡例項目にのみ影響します。カスタムの凡例項目には影響しません。</span><span class="sxs-lookup"><span data-stu-id="3f087-298">This property only affects legend items automatically added for the chart series; it has no effect on custom legend items.</span></span></summary>
        <value><span data-ttu-id="3f087-299">凡例項目を表示する順序を指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-299">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder" /> enumeration value that specifies the order in which legend items are displayed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-300">プロパティが<xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder>に<xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder.Auto>設定されている場合、StackedColumn、StackedColumn100、StackedArea、または StackedArea100 のいずれかのグラフの種類が使用されると、凡例は自動的に反転されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-300">If the <xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder.Auto>, the legend will automatically be reversed if StackedColumn, StackedColumn100, StackedArea or StackedArea100 chart types are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendStyle LegendStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendStyle LegendStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendStyle As LegendStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendStyle LegendStyle { System::Windows::Forms::DataVisualization::Charting::LegendStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LegendStyle : System.Windows.Forms.DataVisualization.Charting.LegendStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-301">凡例のスタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-301">Gets or sets the style of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-302">凡例のスタイルを決定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-302">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendStyle" /> enumeration value that determines the legend style.</span></span> <span data-ttu-id="3f087-303">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-303">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-304">既定では、凡例はテーブル内の一連の項目として表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-304">By default, the legend is displayed as a series of items in a table.</span></span> <span data-ttu-id="3f087-305"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A>プロパティを設定することによって、テーブルの幅または高さによって項目を展開するかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-305">You can specify whether to expand items in the table width-wise or height-wise by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A> property.</span></span> <span data-ttu-id="3f087-306">プロパティをに<xref:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle.Auto>設定すると、グラフ<xref:System.Windows.Forms.DataVisualization.Charting.Chart>の配置と配置に応じて、幅の広いテーブルと高さのテーブルのどちらを描画するかがコントロールによって決定されます。 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A></span><span class="sxs-lookup"><span data-stu-id="3f087-306">When the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control will determine whether to draw a wide table or a tall table, depending on the alignment and positioning of the chart.</span></span> <span data-ttu-id="3f087-307">これにより、複数の凡例項目列を使用して凡例が描画される場合があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-307">This may cause the legend to be drawn using multiple legend item columns.</span></span>  
  
 <span data-ttu-id="3f087-308">凡例に使用できるスタイルには、列、行、およびテーブルの3種類があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-308">There are three possible styles for a legend: Column, Row and Table.</span></span> <span data-ttu-id="3f087-309">これらのスタイルの概要については、次の表を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f087-309">Refer to the table below for a summary of these styles:</span></span>  
  
|<span data-ttu-id="3f087-310">スタイル</span><span class="sxs-lookup"><span data-stu-id="3f087-310">Style</span></span>|<span data-ttu-id="3f087-311">説明</span><span class="sxs-lookup"><span data-stu-id="3f087-311">Description</span></span>|  
|-|-|  
|<span data-ttu-id="3f087-312">Column</span><span class="sxs-lookup"><span data-stu-id="3f087-312">Column</span></span>|<span data-ttu-id="3f087-313">凡例項目は、複数の行を含む1つの列に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-313">Legend items are displayed in one column, with multiple rows.</span></span> <span data-ttu-id="3f087-314">凡例がグラフの左側または右側にドッキングされている場合に最もよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-314">Most commonly used when the legend is docked to the left or right of the chart.</span></span>|  
|<span data-ttu-id="3f087-315">行</span><span class="sxs-lookup"><span data-stu-id="3f087-315">Row</span></span>|<span data-ttu-id="3f087-316">凡例項目は、複数の列を含む1行に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-316">Legend items are displayed in one row, with multiple columns.</span></span> <span data-ttu-id="3f087-317">凡例をグラフの上部または下部にドッキングするときに最もよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-317">Most commonly used when the legend is docked to the top or bottom of the chart.</span></span>|  
|<span data-ttu-id="3f087-318">テーブル</span><span class="sxs-lookup"><span data-stu-id="3f087-318">Table</span></span>|<span data-ttu-id="3f087-319">複数の列と行を使用して凡例項目を表示します。</span><span class="sxs-lookup"><span data-stu-id="3f087-319">Legend items are displayed using multiple columns and rows.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumAutoSize : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-320">グラフ エリアの割合として示される、凡例の最大サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-320">Gets or sets the maximum size of the legend, measured as a percentage of the chart area.</span></span> <span data-ttu-id="3f087-321">この値は自動レイアウト アルゴリズムで使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-321">This value is used by the automatic layout algorithm.</span></span></summary>
        <value><span data-ttu-id="3f087-322">凡例の最大サイズを表す値。 <see langword="float" /></span><span class="sxs-lookup"><span data-stu-id="3f087-322">A <see langword="float" /> value that represents the maximum size of the legend.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-323">凡例がグラフ領域の左側または右側にドッキングされている場合、このプロパティによって凡例の最大幅が決まります。これは、グラフ領域に対する比率として計測されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-323">If the legend is docked to the left or right of the chart area, this property determines the maximum width of the legend, which is measured as a percentage of the chart area.</span></span> <span data-ttu-id="3f087-324">凡例が上または下にドッキングされている場合、このプロパティは凡例の最大の高さを決定します。これは比率としても測定されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-324">If the legend is docked to the top or bottom, this property determines the maximum height of the legend, which is also measured as a percentage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-325">凡例の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-325">Gets or sets the name of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-326">凡例の名前を表す <see langword="string" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-326">A <see langword="string" /> value that represents the name of the legend.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ElementPosition ^ Position { System::Windows::Forms::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Windows.Forms.DataVisualization.Charting.ElementPosition with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-327">凡例の位置の取得または設定に使用できる <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-327">Gets or sets an <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" /> object, which can be used to get or set the position of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-328"><see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Position" /> プロパティが自動に設定されている場合 (つまり、Legend.Position.Auto = <see langword="true" /> の場合)、<see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />、<see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />、および <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" /> の各プロパティの設定が考慮され、凡例の位置が <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> コントロールによって自動的に計算されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-328">If the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Position" /> property is automatic (that is, Legend.Position.Auto = <see langword="true" />) the legend position is calculated automatically by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control, taking into account the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />, <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" /> and <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> property settings.</span></span>  
  
<span data-ttu-id="3f087-329">自動に設定されていない場合、<see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />、<see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" />、および <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> の各プロパティは無視され、凡例の位置は、返された <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" /> オブジェクトの値のみを基に決定されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-329">If it is not automatic, the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />, <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" /> and <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> properties are ignored, and the legend position is solely determined by the value of the returned <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 0, 0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-330">凡例の影色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-330">Gets or sets the shadow color of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-331">凡例の影の色を指定する <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-331">A <see cref="T:System.Drawing.Color" /> value that specifies the shadow color of the legend.</span></span> <span data-ttu-id="3f087-332">既定の色は <see cref="P:System.Drawing.Color.Black" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-332">The default color is <see cref="P:System.Drawing.Color.Black" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-333">このプロパティは、任意の有効な ARGB (アルファ、赤、緑、青) 値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-333">This property can be set to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="3f087-334">アルファ値を使用して、"現実的な" シャドウ効果を実現できます。影の色の値として "128, 0, 0, 0" を指定してください。</span><span class="sxs-lookup"><span data-stu-id="3f087-334">The alpha value can be used to achieve a "realistic" shadowing effect; try a color value of "128,0,0,0" for shadows.</span></span>  
  
 <span data-ttu-id="3f087-335">影を実装するには、 <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset%2A>プロパティをゼロ (0) 以外の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-335">To implement a shadow, set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset%2A> property to a value other than zero (0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-336">凡例の影のオフセット (ピクセル単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-336">Gets or sets the shadow offset, in pixels, of the legend.</span></span></summary>
        <value><span data-ttu-id="3f087-337">凡例の影のオフセット (ピクセル単位) を表す <see langword="integer" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-337">An <see langword="integer" /> value that represents the shadow offset, in pixels, of the legend.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-338">シャドウを実装するには、このプロパティをゼロ (0) 以外の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-338">To implement shadowing, set this property to a value other than zero (0).</span></span> <span data-ttu-id="3f087-339">正の値を指定すると、影が下と右に移動します。負の値を指定すると、影が左および左にシフトされます。</span><span class="sxs-lookup"><span data-stu-id="3f087-339">A positive value will result in a shadow that shifts down and to the right; a negative value will result in a shadow that shifts up and to the left.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendTableStyle TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendTableStyle TableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As LegendTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendTableStyle TableStyle { System::Windows::Forms::DataVisualization::Charting::LegendTableStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendTableStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TableStyle : System.Windows.Forms.DataVisualization.Charting.LegendTableStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-340">凡例のテーブルのスタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-340">Gets or sets the legend table style.</span></span></summary>
        <value><span data-ttu-id="3f087-341">凡例テーブルのスタイルを指定する <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-341">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle" /> enumeration value that specifies the legend table style.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-342">このプロパティは、プロパティがに<xref:System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle%2A>設定されて<xref:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table>いる場合にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-342">This property is only applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapThreshold">
      <MemberSignature Language="C#" Value="public int TextWrapThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextWrapThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextWrapThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapThreshold : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-343">テキストを折り返す前に凡例に連続して表示できる文字数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-343">Gets or sets the number of characters that can be sequentially displayed in the legend before the text is wrapped.</span></span></summary>
        <value><span data-ttu-id="3f087-344">テキストを折り返す前に凡例に連続して配置できる文字数を表す <see langword="integer" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-344">An <see langword="integer" /> value that represents the number of characters that can be placed in the legend sequentially before the text is wrapped.</span></span> <span data-ttu-id="3f087-345">既定値は 25 です。</span><span class="sxs-lookup"><span data-stu-id="3f087-345">The default value is 25.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-346">凡例のテキストがこのプロパティで指定された値を超えると、次の空白文字が見つかったときにテキストが自動的に折り返されます。</span><span class="sxs-lookup"><span data-stu-id="3f087-346">When the legend text exceeds the value specified by this property, text will be automatically wrapped when the next white-space character is encountered.</span></span> <span data-ttu-id="3f087-347">テキストに空白文字がない場合、テキストは折り返されません。</span><span class="sxs-lookup"><span data-stu-id="3f087-347">Text will not be wrapped if there are no white-space characters in the text.</span></span>  
  
 <span data-ttu-id="3f087-348">この機能<xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A>を無効にするには、プロパティを0に設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-348">Set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> property to zero to disable the feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-349">凡例のタイトルのテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-349">Gets or sets the text of the legend title.</span></span></summary>
        <value><span data-ttu-id="3f087-350">凡例のタイトルのテキストを表す <see langword="string" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-350">A <see langword="string" /> value that represents the legend title text.</span></span> <span data-ttu-id="3f087-351">既定値は、長さ 0 の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3f087-351">The default value is a zero-length string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TitleAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-352">凡例のタイトルの配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-352">Gets or sets the alignment of the legend title.</span></span></summary>
        <value><span data-ttu-id="3f087-353">凡例のタイトルの配置を表す <see cref="T:System.Drawing.StringAlignment" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="3f087-353">A <see cref="T:System.Drawing.StringAlignment" /> enumeration value that represents the alignment of the legend title.</span></span> <span data-ttu-id="3f087-354">既定値は <see cref="F:System.Drawing.StringAlignment.Center" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-354">The default value is <see cref="F:System.Drawing.StringAlignment.Center" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-355">凡例のタイトルの背景色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-355">Gets or sets the background color of the legend title.</span></span></summary>
        <value><span data-ttu-id="3f087-356">凡例のタイトルの背景を描画するために使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-356">A <see cref="T:System.Drawing.Color" /> value used to draw the background of the legend title.</span></span> <span data-ttu-id="3f087-357">既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-357">The default value is <see cref="F:System.Drawing.Color.Empty" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt, style=Bold")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-358">凡例のタイトルのフォントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-358">Gets or sets the font for the legend title.</span></span></summary>
        <value><span data-ttu-id="3f087-359">凡例のタイトルのフォントを表す <see cref="T:System.Drawing.Font" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f087-359">A <see cref="T:System.Drawing.Font" /> object that represents the font for the legend title.</span></span> <span data-ttu-id="3f087-360">既定値は、"Microsoft Sans Serif, 8pt, Bold" です。</span><span class="sxs-lookup"><span data-stu-id="3f087-360">The default value is "Microsoft Sans Serif, 8pt, Bold".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f087-361">このプロパティを使用して、凡例のタイトルのフォントプロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="3f087-361">This property can be used to set font properties of the legend title.</span></span>  
  
 <span data-ttu-id="3f087-362">実行時にこの<xref:System.Drawing.Font>オブジェクトのプロパティを変更しようとすると、コンパイルエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="3f087-362">If you attempt to change the properties of this <xref:System.Drawing.Font> object at run time, a compilation error will occur.</span></span> <span data-ttu-id="3f087-363">実行時にフォントプロパティを設定するには、新しい<xref:System.Drawing.Font>オブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f087-363">To set font properties at run time, you must create a new <xref:System.Drawing.Font> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-364">凡例のタイトルのテキストの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-364">Gets or sets the text color of the legend title.</span></span></summary>
        <value><span data-ttu-id="3f087-365">タイトルのテキストの色を描画するために使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-365">A <see cref="T:System.Drawing.Color" /> value used to draw the title text color.</span></span> <span data-ttu-id="3f087-366">既定値は <see cref="P:System.Drawing.Color.Black" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-366">The default value is <see cref="P:System.Drawing.Color.Black" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle TitleSeparator { System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TitleSeparator : System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-367">凡例のタイトルに表示する区切り記号の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-367">Gets or sets the visual separator type for the legend title.</span></span></summary>
        <value><span data-ttu-id="3f087-368">タイトルの下に描画される区切り記号の種類を表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-368">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> value that represents the type of separator that will be drawn below the title.</span></span> <span data-ttu-id="3f087-369">既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-369">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleSeparatorColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f087-370">凡例のタイトルの区切り記号の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f087-370">Gets or sets the color of the legend title separator.</span></span></summary>
        <value><span data-ttu-id="3f087-371">凡例のタイトルの区切り記号の色を描画するために使用される <see cref="T:System.Drawing.Color" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f087-371">A <see cref="T:System.Drawing.Color" /> value used to draw the color of the legend title separator.</span></span> <span data-ttu-id="3f087-372">既定値は <see cref="P:System.Drawing.Color.Black" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f087-372">The default value is <see cref="P:System.Drawing.Color.Black" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
