<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0ec8389554bf19b63ece4d799f45e79a7965552" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f09b1-101">軸に沿った位置を定義する水平方向の線と垂直方向の線を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f09b1-101">Represents a horizontal or vertical line that defines a position along an axis.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-102">カーソルは、水平または垂直の行で、軸の位置を定義します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-102">A cursor is a horizontal or vertical line that defines a position along an axis.</span></span> <span data-ttu-id="f09b1-103">範囲の選択は、先頭と末尾の位置によって定義され、半透明の色を使用して表示する軸に沿った範囲です。</span><span class="sxs-lookup"><span data-stu-id="f09b1-103">A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.</span></span>  
  
 <span data-ttu-id="f09b1-104">カーソルと範囲選択の両方がによって実装される、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor>として公開されるクラス、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>のプロパティ、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f09b1-104">Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object.</span></span> <span data-ttu-id="f09b1-105"><xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>オブジェクトは、グラフ領域の X 軸と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>オブジェクトは、Y 軸にします。</span><span class="sxs-lookup"><span data-stu-id="f09b1-105">The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis.</span></span> <span data-ttu-id="f09b1-106"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>これらのオブジェクトのプロパティは、関連付けられた軸がプライマリかセカンダリかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-106">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.</span></span>  
  
 <span data-ttu-id="f09b1-107">外側で見つかりましただけのカーソルと範囲選択の機能、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor>クラスは、ルートにあるカーソルと範囲選択に関連するイベント<xref:System.Windows.Forms.DataVisualization.Charting.Chart>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f09b1-107">The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-108">
            <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-108">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-109">範囲の選択操作がグラフ エリアの境界を越えて行われた場合に、スクロールするかどうかを示すフラグを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-109">Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-110">データ ビューが自動的にスクロール可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-110">
              <see langword="true" /> if the data view can be scrolled automatically; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-111">データ ビューには、プロットされる系列のすべてのデータ ポイントは表示されません、範囲が、ユーザーが選択されている場合は、ビューの自動スクロールは、このプロパティは`true`とマウス — とカーソルしたがって — がグラフ領域の境界外に移動します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-111">If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse—and therefore the cursor—is moved outside the chart area boundary.</span></span>  
  
 <span data-ttu-id="f09b1-112">スクロールがのみ発生する軸に沿ったを表示できる使用可能な多くのデータがある場合。</span><span class="sxs-lookup"><span data-stu-id="f09b1-112">Scrolling will only occur along an axis if there is more data available to be viewed.</span></span>  
  
 <span data-ttu-id="f09b1-113">通常のすべてのデータを表示しないデータ ビューは、エンドユーザーがデータのサブセットにズーム インする場合になります。</span><span class="sxs-lookup"><span data-stu-id="f09b1-113">A data view that does not display all data usually results if the end-user zooms into a subset of data.</span></span> <span data-ttu-id="f09b1-114">ビューとズームはによって実装される、<xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>クラスです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-114">Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-115">カーソルのアタッチ先の軸の種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-115">Gets or sets the type of axis that the cursor is attached to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-116">軸が主軸と第 2 軸のどちらにアタッチされるかを表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-116">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> enumeration value that represents whether the axis is attached to the primary or secondary axis.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-117">軸の 2 つのセットがあります。 プライマリおよびセカンダリ。</span><span class="sxs-lookup"><span data-stu-id="f09b1-117">There are two sets of axes: primary and secondary.</span></span> <span data-ttu-id="f09b1-118">プライマリ軸の横棒グラフを除くすべてのグラフは、下 (主軸の x 軸) と、グラフ領域の境界線を左 (主軸の y 軸) にあります。</span><span class="sxs-lookup"><span data-stu-id="f09b1-118">Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.</span></span>  
  
 <span data-ttu-id="f09b1-119">セカンダリ軸は、右 (第 2 x 軸) と、グラフ領域の境界線の上部 (第 2 y 軸) にあります。</span><span class="sxs-lookup"><span data-stu-id="f09b1-119">The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f09b1-120">プロット グラフ領域内のすべての系列が軸 (たとえば、プライマリ x 軸) の 1 つの種類の (このケースでは、第 2 x 軸) 内の系列では使用されません軸の種類をこのプロパティを設定には効果はありませんのみを使用する場合カーソルは、系列のプロットに使用されている唯一の軸に自動的に添付されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-120">If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-121">
            <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> クラスによって使用されているリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-121">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-122">アンマネージ リソースを解放またはリセットするアプリケーション定義のタスクを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-122">Performs application-defined tasks that free, release, or reset unmanaged resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f09b1-123">アンマネージ リソースとマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-123">
              <see langword="true" /> to release both unmanaged and managed resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f09b1-124">アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-124">Releases unmanaged and, optionally, managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-125">カーソルの間隔を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-125">Gets or sets the cursor interval.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-126">カーソルの間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-126">The cursor interval.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-127"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>プロパティは、エンドユーザーがカーソルに描画できる頻度および場所を決定だけでなく、先頭と範囲選択の終点に描画できる場所です。</span><span class="sxs-lookup"><span data-stu-id="f09b1-127">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn.</span></span> <span data-ttu-id="f09b1-128">既定値には、0 の値は、カーソルまたは範囲の選択にグラフ領域内で任意の場所描画できることを表します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-128">A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area.</span></span> <span data-ttu-id="f09b1-129">0 以外の値は、そのカーソルまたは先頭の選択範囲の終点はユーザーの操作によって設定すると、指定した間隔に描画だけことを示します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-129">A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.</span></span>  
  
 <span data-ttu-id="f09b1-130">測定単位がによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-130">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.</span></span>  
  
 <span data-ttu-id="f09b1-131">このプロパティと組み合わせても使用できます、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティで、指定した間隔のオフセットを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-131">This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval.</span></span> <span data-ttu-id="f09b1-132">たとえば、毎週土曜日にのみ表示されますへのカーソルは、1 週間間隔必要がありますと共に指定する、6 日間の間隔のオフセット。</span><span class="sxs-lookup"><span data-stu-id="f09b1-132">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="f09b1-133">.NET framework では、日曜日は、週の最初の日であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-133">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="f09b1-134">設定してカーソルのユーザー インターフェイスが有効になっている場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>プロパティ、およびマウスが、グラフ領域の内側がクリックされると、カーソルの位置に設定されます、許容される場所に最も近いです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-134">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f09b1-135"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>プロパティには効果がない場合は、カーソルの位置を設定するか、選択範囲をプログラムによって範囲です。</span><span class="sxs-lookup"><span data-stu-id="f09b1-135">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-136">ユーザーによって設定されたカーソルと範囲選択を描画できる位置に影響する間隔のオフセットを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-136">Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-137">間隔のオフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-137">The offset from the interval.</span>
          </span>
          <span data-ttu-id="f09b1-138">既定値は 0 です。この場合は制限はありません。負の値も使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-138">The default value is zero, which signifies no limitations, and negative values are allowed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-139"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティは、カーソルと開始の間隔のオフセットと範囲選択の終了点を決定します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-139">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection.</span></span> <span data-ttu-id="f09b1-140">組み合わせて、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>プロパティ、このプロパティは、カーソルを決定し、グラフ領域内に範囲を表示することができます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-140">In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area.</span></span> <span data-ttu-id="f09b1-141">既定では、ゼロの値は、オフセットがないことを示します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-141">A value of zero, which is the default, signifies that there is no offset.</span></span>  
  
 <span data-ttu-id="f09b1-142">測定単位がによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-142">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.</span></span>  
  
 <span data-ttu-id="f09b1-143">オフセットは、カーソルと先頭と範囲選択の終了点を描画することができますを場所に影響します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-143">The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn.</span></span> <span data-ttu-id="f09b1-144">たとえば、毎週土曜日にのみ表示されますへのカーソルは、1 週間間隔必要がありますと共に指定する、6 日間の間隔のオフセット。</span><span class="sxs-lookup"><span data-stu-id="f09b1-144">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="f09b1-145">.NET framework では、日曜日は、週の最初の日であると見なされます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-145">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="f09b1-146">設定してカーソルのユーザー インターフェイスが有効になっている場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>プロパティ、およびマウスが、グラフ領域の内側がクリックされると、カーソルの位置に設定されます、許容される場所に最も近いです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-146">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f09b1-147">間隔に関連するプロパティがある影響しない場合、範囲の選択 またはカーソルの位置をプログラムで設定されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-147">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-148">軸のカーソルと選択範囲の間隔のオフセットの種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-148">Gets or sets the interval offset type of a cursor and selected range for an axis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-149">間隔のオフセットの単位を示す <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 列挙値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-149">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measurement for the interval offset.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-150"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>プロパティを使用して指定されている間隔のオフセットの種類を決定する、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-150">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.</span></span>  
  
 <span data-ttu-id="f09b1-151">場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>プロパティに設定されている<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>プロパティ設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-151">If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f09b1-152">間隔に関連するプロパティがある影響しない場合、範囲の選択 またはカーソルの位置をプログラムで設定されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-152">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-153">軸のカーソルと選択範囲の間隔の種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-153">Gets or sets the interval type for the cursor and selected range of an axis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-154">軸のカーソルと選択範囲の間隔の種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-154">The interval type for the cursor and selected range of an axis.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-155"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>プロパティを使用して指定されている間隔の種類を決定する、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-155">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="f09b1-156">間隔の種類がある場合<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>、間隔の単位として扱われます、`double`は 1 日に相当するときに<xref:System.DateTime>値を指定します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-156">If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f09b1-157">間隔に関連するプロパティがある影響しない場合、範囲の選択 またはカーソルの位置をプログラムで設定します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-157">Interval-related properties have no effect when a range selection or cursor position is set programmatically.</span></span>  
  
 <span data-ttu-id="f09b1-158">軸の間隔の種類は、時刻を表す場合 — 時間、分、およびなど — し正しくズームの関数では、有効にするために、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>時刻値に設定することも必要があります。</span><span class="sxs-lookup"><span data-stu-id="f09b1-158">If the axis interval type represents a time—for example, hours, minutes, and so forth—then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value.</span></span> <span data-ttu-id="f09b1-159">たとえば場合は、ChartArea1.AxisX.IntervalType は時間単位で表す、分に、ChartArea1.CursorX.IntervalType を設定可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f09b1-159">For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-160">カーソルのユーザー インターフェイスを有効または無効にするフラグを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-160">Gets or sets a flag that enables or disables the cursor user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-161">カーソルのユーザー インターフェイスを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-161">
              <see langword="true" /> if the cursor user interface is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-162">範囲選択ユーザー インターフェイスを有効または無効にするフラグを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-162">Gets or sets a flag that enables or disables the range selection user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-163">範囲選択ユーザー インターフェイスを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-163">
              <see langword="true" /> if the range selection user interface is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-164">カーソルの線の色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-164">Gets or sets the cursor line color.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-165">カーソルの行の色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-165">The line color of the cursor.</span>
          </span>
          <span data-ttu-id="f09b1-166">既定値は <see cref="P:System.Drawing.Color.Red" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-166">The default value is <see cref="P:System.Drawing.Color.Red" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-167">カーソルの線のスタイルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-167">Gets or sets the style of the cursor line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-168">カーソルの線のスタイル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-168">The style of the cursor line.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-169">カーソルの線の幅をピクセル単位で取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-169">Gets or sets the line width, in pixels, of a cursor</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-170">ラインの幅 (ピクセル単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-170">The line width, in pixels.</span>
          </span>
          <span data-ttu-id="f09b1-171">既定値は 1 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-171">The default value is one (1).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-172">このプロパティを使用して、カーソルのピクセル単位で、線の幅を指定します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-172">Use this property to specify the line width, in pixels, of a cursor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-173">カーソルの位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-173">Gets or sets the position of a cursor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-174">カーソルの位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-174">The position of a cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-175">このプロパティと、カーソル、カーソルの位置をプログラムで設定についての位置を取得するためにことができます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-175">This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.</span></span>  
  
 <span data-ttu-id="f09b1-176">位置が計算によって決定されるカーソルが所属する軸の値として、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-176">The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property.</span></span> <span data-ttu-id="f09b1-177">たとえば、主軸の X 軸、2000 年 1 月 1 日の値にこのプロパティを設定する、カーソルが属している場合が軸に沿った 2000 年 1 月 1 日の位置に描画されている x 軸カーソルで発生します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-177">For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis.</span></span> <span data-ttu-id="f09b1-178">この軸の値が存在しない場合、カーソルは表示されません。</span><span class="sxs-lookup"><span data-stu-id="f09b1-178">If this axis value does not exist, the cursor will not be displayed.</span></span>  
  
 <span data-ttu-id="f09b1-179">このプロパティを設定する場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティには影響はありません。 この指定された場所にカーソルが表示されます、します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-179">Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.</span></span>  
  
 <span data-ttu-id="f09b1-180">設定がこのプロパティを生成しませんが、<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>または<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>イベント。</span><span class="sxs-lookup"><span data-stu-id="f09b1-180">Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.</span></span>  
  
 <span data-ttu-id="f09b1-181">または、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>メソッドは、カーソルを設定するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-181">Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.</span></span>  
  
 <span data-ttu-id="f09b1-182">プログラムで削除するには、カーソルをカーソルの位置を設定するこのプロパティを使用して<xref:System.Double.NaN>です。</span><span class="sxs-lookup"><span data-stu-id="f09b1-182">To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-183">データ範囲を強調表示する半透明の色を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-183">Gets or sets a semi-transparent color that highlights a range of data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-184">強調表示された範囲の色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-184">The color of the highlighted range.</span>
          </span>
          <span data-ttu-id="f09b1-185">既定値は、アルファ値が 120 の <see cref="P:System.Drawing.Color.LightGray" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-185">The default value is <see cref="P:System.Drawing.Color.LightGray" />, with an alpha value of 120.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-186">このプロパティは、範囲選択の色を決定し、有効な ARGB (アルファ、赤、緑、青) 値に設定することができます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-186">This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value.</span></span> <span data-ttu-id="f09b1-187">透明度のレベルを決定する、アルファ値が指定されていない場合、既定のアルファ値は 120 は使用されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-187">If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.</span></span>  
  
 <span data-ttu-id="f09b1-188">選択した色に設定できる、X と Y 軸カーソルを使用して実装される、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>のプロパティ、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクト、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="f09b1-188">The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively.</span></span> <span data-ttu-id="f09b1-189">範囲は、x 軸にのみ選択した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> x 軸カーソルが使用されます。 値の範囲は、y 軸に沿ってのみ選択した場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>値、y 軸カーソルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-189">If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used.</span></span> <span data-ttu-id="f09b1-190">両方の軸に沿って範囲が選択されている場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A>値、y 軸カーソルは、選択した色にも使用します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-190">If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-191">範囲選択の終了位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-191">Gets or sets the end position of a range selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-192">範囲選択の終了位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-192">The end position of a range selection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-193">ユーザーは、マウスの左ボタンをクリックしてマウスをドラッグして、グラフ領域内の範囲を選択できます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-193">A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse.</span></span> <span data-ttu-id="f09b1-194">なお、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>プロパティを設定する必要がありますも`true`します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-194">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="f09b1-195">プログラムでいずれかを使用して選択範囲を設定できますさらに、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティ、または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-195">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="f09b1-196">範囲選択の終了位置は、カーソルが所属する軸の値として計算されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-196">The end position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="f09b1-197">たとえば、カーソルが主軸の x 軸に属しており、設定する場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>プロパティに 2000 年 12 月 31 日の値を選択した領域の末尾が 2000 年 12 月 31 日にに沿って行わプライマリ X 軸です。</span><span class="sxs-lookup"><span data-stu-id="f09b1-197">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="f09b1-198">プログラムで削除するには、範囲の選択 設定、先頭と範囲の終点<xref:System.Double.NaN>を使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティ、またはを使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-198">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f09b1-199">カーソルの選択範囲の開始位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-199">Gets or sets the start position of a cursor's selected range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f09b1-200">カーソルの選択範囲の開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-200">The start position of a cursor’s selected range.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f09b1-201">ユーザーは、マウスの左ボタンをクリックすると、マウスをドラッグして、カーソルの位置を移動して、範囲を選択できます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-201">A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse.</span></span> <span data-ttu-id="f09b1-202">なお、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>プロパティを設定する必要がありますも`true`します。</span><span class="sxs-lookup"><span data-stu-id="f09b1-202">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="f09b1-203">プログラムでいずれかを使用して選択範囲を設定できますさらに、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティ、または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-203">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="f09b1-204">範囲選択の開始位置は、カーソルが所属する軸の値として計算されます。</span><span class="sxs-lookup"><span data-stu-id="f09b1-204">The start position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="f09b1-205">たとえば、カーソルが主軸の x 軸に属しており、設定する場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティに 2000 年 1 月 1 日の値を選択した領域の先頭が 2000 年 1 月 1 日にに沿って行わプライマリ X 軸です。</span><span class="sxs-lookup"><span data-stu-id="f09b1-205">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="f09b1-206">プログラムで削除するには、範囲の選択 設定、先頭と範囲の終点<xref:System.Double.NaN>を使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティ、またはを使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="f09b1-206">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="f09b1-207">カーソルが描画される位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-207">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the cursor will be drawn.</span>
          </span>
        </param>
        <param name="roundToBoundary">
          <span data-ttu-id="f09b1-208">
            <see langword="true" /> の場合、指定された位置が <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクト内にないときは、カーソルは最も近いグラフ エリアの境界に沿って描画されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-208">If <see langword="true" />, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f09b1-209">指定された位置にカーソルを表示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-209">Displays a cursor at the specified position.</span>
          </span>
          <span data-ttu-id="f09b1-210">単位はピクセルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-210">Measured in pixels.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition">
          <span data-ttu-id="f09b1-211">カーソルの新しい位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-211">The new position of the cursor.</span>
          </span>
          <span data-ttu-id="f09b1-212">計測には、関連する軸に沿った値が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-212">Measured as a value along the relevant axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f09b1-213">グラフ エリア内で、指定された軸の値を使用してカーソルの位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-213">Sets the position of a cursor within a chart area at the specified axis value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">
          <span data-ttu-id="f09b1-214">範囲選択の開始位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-214">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection begins.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="f09b1-215">範囲選択の終了位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-215">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection ends.</span>
          </span>
        </param>
        <param name="roundToBoundary">
          <span data-ttu-id="f09b1-216">
            <see langword="true" /> の場合、指定された位置が <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクト内にないときは、開始点および終了点として、最も近いグラフ エリアの境界が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-216">If <see langword="true" />, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f09b1-217">範囲選択の開始位置と終了位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-217">Sets the start and end positions of a range selection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart">
          <span data-ttu-id="f09b1-218">範囲選択の新しい開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-218">The new start position of the range selection.</span>
          </span>
          <span data-ttu-id="f09b1-219">計測には、関連する軸に沿った値が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-219">Measured as a value along the relevant axis.</span>
          </span>
        </param>
        <param name="newEnd">
          <span data-ttu-id="f09b1-220">範囲選択の新しい終了位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-220">The new end position of the range selection.</span>
          </span>
          <span data-ttu-id="f09b1-221">計測には、関連する軸に沿った値が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-221">Measured as a value along the relevant axis.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f09b1-222">グラフ エリア内で、指定された軸の値を使用して選択範囲の位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f09b1-222">Sets the position of a selected range within a chart area at the specified axis values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>