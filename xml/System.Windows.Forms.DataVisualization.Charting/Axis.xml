<Type Name="Axis" FullName="System.Windows.Forms.DataVisualization.Charting.Axis">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96238fd6a19ddbd1b36586a32b4b1d227348529c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36361055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Axis : System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Axis extends System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Axis" />
  <TypeSignature Language="VB.NET" Value="Public Class Axis&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Axis : System::Windows::Forms::DataVisualization::Charting::ChartNamedElement" />
  <TypeSignature Language="F#" Value="type Axis = class&#xA;    inherit ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロール内の軸を管理するメソッドおよびプロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスでの軸のすべての機能をカプセル化、<xref:System.Windows.Forms.DataVisualization.Charting.Chart>制御、およびによって公開される、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX%2A>、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY%2A>、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX2%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY2%2A>プロパティの<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクト。  
  
 すべてのグラフに-を除くバー、積み上げ横棒グラフ、円グラフおよびドーナツ グラフ-、プライマリとセカンダリ軸は次のように。  
  
|軸の種類|説明|  
|---------------|-----------------|  
|主軸の x 軸|下の水平軸です。|  
|第 2 x 軸|上部の水平軸です。|  
|主軸の y 軸|左側は縦軸です。|  
|第 2 y 軸|右の垂直の軸です。|  
  
 グラフ、時計回りに 90 ° 回転、軸のないバーおよび積み上げ横棒グラフのため、これらの 2 つの種類のグラフの X 軸はプライマリは、左の垂直軸です。  
  
 **注**軸の 1 つだけのセットがあります: 2 つの垂直方向および水平方向の 2 つ — ごと<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクト。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Axis>クラスには、絶対ピクセル座標を 2D のカスタム描画有用なまたは相対座標は、カスタムの 3D の描画に便利です、軸の値を変換に使用できるいくつかのメソッドも含まれています。 絶対と相対座標は、軸の値に変換することもできます。  
  
 によって公開される最も重要な軸要素は、次のとおり、<xref:System.Windows.Forms.DataVisualization.Charting.Axis>クラス。  
  
|Axis 要素|説明|  
|------------------|-----------------|  
|軸ラベル|軸、およびその関連プロパティのラベル。|  
|グリッド線|軸の目盛りと補助グリッド線。|  
|目盛り|軸の目盛りと補助目盛りはします。|  
|ストリップ ライン|ストリップ ライン。|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Axis ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Axis();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Axis (System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, System.Windows.Forms.DataVisualization.Charting.AxisName axisTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.ChartArea chartArea, valuetype System.Windows.Forms.DataVisualization.Charting.AxisName axisTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.#ctor(System.Windows.Forms.DataVisualization.Charting.ChartArea,System.Windows.Forms.DataVisualization.Charting.AxisName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Axis(System::Windows::Forms::DataVisualization::Charting::ChartArea ^ chartArea, System::Windows::Forms::DataVisualization::Charting::AxisName axisTypeName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Axis : System.Windows.Forms.DataVisualization.Charting.ChartArea * System.Windows.Forms.DataVisualization.Charting.AxisName -&gt; System.Windows.Forms.DataVisualization.Charting.Axis" Usage="new System.Windows.Forms.DataVisualization.Charting.Axis (chartArea, axisTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chartArea" Type="System.Windows.Forms.DataVisualization.Charting.ChartArea" />
        <Parameter Name="axisTypeName" Type="System.Windows.Forms.DataVisualization.Charting.AxisName" />
      </Parameters>
      <Docs>
        <param name="chartArea">グラフ領域。</param>
        <param name="axisTypeName">軸の名前。</param>
        <summary>
          <paramref name="chartArea" /> と <paramref name="axisTypeName" />の値を指定して、<see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle ArrowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle ArrowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ArrowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrowStyle As AxisArrowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisArrowStyle ArrowStyle { System::Windows::Forms::DataVisualization::Charting::AxisArrowStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisArrowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ArrowStyle : System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.ArrowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2D 軸の矢印のスタイルを取得または設定します。このスタイルは 3D グラフ エリアには適用されません。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisArrowStyle" /> 列挙値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisName">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.AxisName AxisName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisName AxisName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.AxisName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AxisName As AxisName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::AxisName AxisName { System::Windows::Forms::DataVisualization::Charting::AxisName get(); };" />
      <MemberSignature Language="F#" Value="member this.AxisName : System.Windows.Forms.DataVisualization.Charting.AxisName" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.AxisName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の名前 (X、Y、X2、または Y2) を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisName" /> 列挙値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Crossing">
      <MemberSignature Language="C#" Value="public virtual double Crossing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Crossing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Crossing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Crossing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double Crossing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Crossing : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Crossing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisCrossingValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸が関連付けられている軸と交差する位置を取得または設定します。</summary>
        <value>軸が関連付けられている軸と交差する位置を表す <see langword="double" /> 値。 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ここで、その他のプライマリ軸と交差すると同様に、セカンダリ軸の設定が他のセカンダリ軸と交差する位置に決定されます、プライマリ軸のプロパティをこの設定が決定されます。 たとえば、設定、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Crossing%2A>主軸の x 軸のプロパティは、主軸の y 軸がクロスを決定します。  
  
 4 つのモードを使用できる、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Crossing%2A>軸のプロパティ。  
  
-   "Auto"、交差する値を関連する軸の最小値または最大値に設定されることを意味します。 軸の主な場合、値になります、最小値軸がセカンダリの場合、最大値になります。 実行時に、"Auto"に設定するには、使用、<xref:System.Double.NaN>値。  
  
-   「最小」は、軸の交差する値の意味は、その最小値になります。 実行時の使用時の「最小」に設定する、<xref:System.Double.MinValue>値。  
  
-   「最大」は、軸の交差する値の意味は、その最大値になります。 実行時の使用時の「最大」に設定する、<xref:System.Double.MaxValue>値。  
  
-   指定した`double`値は、関連する軸の最小値と最大値の間です。 交差する値は、最小値未満か、交差する値が最大値より大きい場合、例外がスローされます。  
  
 時に既定以外の交差する値を使用すると、ラベルと目盛りは軸の場合もに応じて、交差軸に従わない、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsMarksNextToAxis%2A>プロパティの設定。 既定では、交差軸と共に移動されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLabels">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection CustomLabels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection CustomLabels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.CustomLabels" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomLabels As CustomLabelsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::CustomLabelsCollection ^ CustomLabels { System::Windows::Forms::DataVisualization::Charting::CustomLabelsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomLabels : System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.CustomLabels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" /> オブジェクトを格納するために使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.CustomLabel" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 追加または軸のカスタム ラベルを削除するには、このプロパティを使用します。 使用して<xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel>オブジェクトには、軸ラベルのテキストを任意に設定する、開発者ができるようにします。  
  
 ラベルの 2 行目では、カスタム ラベルのみを使用できます。 また、カスタム ラベルが最初のラベル行で使用されている場合、この最初の行のすべてのラベルもカスタム ラベルにする必要があります。  
  
 ラベルをデータ ポイントの設定もまたは軸のスケールを自動的に生成できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="axis.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">アンマネージ リソースとマネージ リソースの両方を解放する場合は <see langword="True" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisEnabled Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisEnabled Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As AxisEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisEnabled Enabled { System::Windows::Forms::DataVisualization::Charting::AxisEnabled get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisEnabled value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : System.Windows.Forms.DataVisualization.Charting.AxisEnabled with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.AxisEnabled), "Auto")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisEnabled</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸が有効かどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisEnabled" /> 列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 軸が有効でない場合 (目盛りは、ストリップ ライン、ラベル、およびなど) は、その属性と共に、軸は表示されません。  
  
 軸が有効になっている場合のプロットに使用されているかどうかに関係なくすべての属性 (目盛りは、ストリップ ライン、ラベル、およびなど) と共に、軸が表示されます、<xref:System.Windows.Forms.DataVisualization.Charting.Series>です。  
  
 値の場合<xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>が使用して、軸がまたはが表示されない、プロットに使用されているかどうかに応じて、<xref:System.Windows.Forms.DataVisualization.Charting.Series>です。 データのプロットに使用されている軸はによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Series.XAxisType%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Series.YAxisType%2A>プロパティの設定。  
  
> [!NOTE]
>  軸が有効になっていない場合は、隣接する軸はグリッド線を使用して、これらのグリッド線の 1 つが無効になって、軸の代わりに表示されます。 同じ状況が発生、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A>軸のプロパティに設定されて<xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>が、軸がデータのプロットに使用されていない。 隣接する軸のグリッド線が代わりに表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public double GetPosition (double axisValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetPosition(float64 axisValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.GetPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (axisValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetPosition(double axisValue);" />
      <MemberSignature Language="F#" Value="member this.GetPosition : double -&gt; double" Usage="axis.GetPosition axisValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axisValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="axisValue">軸の値。</param>
        <summary>軸の値を相対位置 (0 ～ 100%) に変換します。 軸が対数の場合、値は線形スケールに変換されます。</summary>
        <returns>相対位置 (0 ～ 100%) を表す <see langword="double" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インターレースされた背景の縞模様の色を取得または設定します。</summary>
        <value>インターレースされた背景の縞模様の色を表す <see cref="T:System.Drawing.Color" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すときに表示されているインター レース ストリップ ラインの色を指定するこのプロパティを使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor%2A>プロパティです。  
  
 インター レース ストリップ ラインの境界線の色を指定するを使用してストリップを表示する必要があります、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.StripLines%2A>コレクション プロパティの代わりに、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.InterlacedColor%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の間隔を取得または設定します。</summary>
        <value>軸の間隔を表す <see langword="double" /> 値。 既定値は "Auto" です。これは値 0 で表されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、どのくらいの頻度、ラベル、目盛りを決定し、場合、軸に関連付けられているグリッド線は描画、`Interval`にラベル、目盛り、またはグリッド線のプロパティの値を設定<xref:System.Double.NaN>、設定されていないことを意味します。  
  
 `Interval`目盛り、グリッド線または軸のラベルのプロパティでは、優先順位を持つ経由で、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>プロパティの設定、<xref:System.Windows.Forms.DataVisualization.Charting.Axis>オブジェクト。  
  
 ゼロの値では、"Auto"の値を表します。 これは、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>プロパティに設定することはできません<xref:System.Double.NaN>です。 このプロパティの値を割り当てた場合<xref:System.Double.NaN>ゼロの値が使用されます。  
  
 **注**軸の目盛りと補助グリッド線の間隔のこのプロパティを使用しません。  
  
 軸の間隔の種類はによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalAutoMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode IntervalAutoMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode IntervalAutoMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalAutoMode As IntervalAutoMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::IntervalAutoMode IntervalAutoMode { System::Windows::Forms::DataVisualization::Charting::IntervalAutoMode get(); void set(System::Windows::Forms::DataVisualization::Charting::IntervalAutoMode value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalAutoMode : System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸上に固定数の間隔を使用するか、間隔の数を軸のサイズに応じて決めるかを指定するフラグを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode" /> 列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode.FixedCount" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>プロパティが「自動」に設定されている、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode%2A>プロパティは、間隔の数を計算するかを決定します。 グラフがサイズ変更または多くの場合、再描画される場合は、設定、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalAutoMode%2A>プロパティを<xref:System.Windows.Forms.DataVisualization.Charting.IntervalAutoMode.VariableCount>、いる場合、グラフで軸の間隔に動的に計算します。 これは、ここで、グラフの間隔は、データに応じて異なる形式で表示する場合に特に便利です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の間隔のオフセットを取得または設定します。</summary>
        <value>軸の間隔のオフセットを表す <see langword="double" /> 値。 既定値は "Auto" です。これは値 0 で表されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>プロパティが軸の間隔のオフセットを決定します。 この値は、軸のラベルと目盛りおよびグリッド線の場合、軸に関連付けられたの間隔のオフセットとして使用、 `IntervalOffset` 、ラベル、目盛り、またはグリッド線のプロパティの値が設定されていないの値で表される<xref:System.Double.NaN>です。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> 、目盛り、ラベルと軸のグリッド線のプロパティでは、優先順位を持つ経由で、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>プロパティの設定、<xref:System.Windows.Forms.DataVisualization.Charting.Axis>オブジェクト。  
  
 ゼロの値では、"Auto"の値を表します。 また、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>を設定しないように設定することはできません (つまり、 <xref:System.Double.NaN>)。 割り当てる場合<xref:System.Double.NaN>、"Auto"の値-0 の値は、— が使用されます。  
  
 **注**軸の目盛りと補助グリッド線の間隔のオフセットのこのプロパティを使用しません。  
  
 軸の間隔のオフセットの種類はによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の間隔のオフセットの種類を取得または設定します。</summary>
        <value>軸の間隔のオフセットの種類。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、軸の間隔のオフセットの種類を決定し、場合は、軸のラベルと目盛りまたはグリッド線の間隔のオフセットの種類に対して使用軸要素の独自`IntervalOffsetType`にプロパティの値が設定されている<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>です。  
  
 このプロパティを設定<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>の値になります<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>使用されている (にグリッド線など、軸要素のみを設定することができます<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>)。  
  
> [!NOTE]
>  軸の目盛りと補助グリッド線の間隔のオフセット型に対してこのプロパティを使用しないでください。  
  
 軸の間隔はによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の間隔の種類を取得または設定します。</summary>
        <value>軸の間隔の種類を表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" />。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、軸の間隔の種類を決定し、場合は、軸のラベル、目盛り、またはグリッド線の間隔の種類に対して使用軸要素の独自`IntervalType`にプロパティの値が設定されている<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>です。  
  
 このプロパティを設定<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>の値になります<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>使用されています。 グリッド線などの軸要素のみに設定することができます<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet>です。  
  
 **注**軸の目盛りと補助グリッド線の間隔の種類このプロパティを使用しません。  
  
 軸の間隔はによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A>プロパティです。  
  
> [!IMPORTANT]
>  軸の間隔の種類が正しく機能するズームの順序でし、時間、分、およびなどの時間で表される場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>も時刻の値に設定する必要があります。 たとえば、ChartArea1.AxisX.IntervalType が時間に設定されている場合分に ChartArea1.CursorX.IntervalType を設定可能性があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterlaced">
      <MemberSignature Language="C#" Value="public bool IsInterlaced { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterlaced" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsInterlaced" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInterlaced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInterlaced { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInterlaced : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsInterlaced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インターレースされた背景の縞模様が軸に表示されるかどうかを示すフラグを取得または設定します。</summary>
        <value>インターレースされた背景の縞模様が軸に表示される場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLabelAutoFit">
      <MemberSignature Language="C#" Value="public bool IsLabelAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLabelAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLabelAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLabelAutoFit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLabelAutoFit : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸ラベルのサイズを自動調整するかどうかを示すフラグを取得または設定します。</summary>
        <value>軸ラベルのサイズを自動調整する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogarithmic">
      <MemberSignature Language="C#" Value="public bool IsLogarithmic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLogarithmic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsLogarithmic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLogarithmic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLogarithmic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLogarithmic : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsLogarithmic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸が対数であるかどうかを示すフラグを取得または設定します。 対数グラフでは、0 または負のデータ値を使用できません。</summary>
        <value>軸が対数の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarginVisible">
      <MemberSignature Language="C#" Value="public bool IsMarginVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarginVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsMarginVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMarginVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarginVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMarginVisible : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsMarginVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸にマージンを追加するかどうかを指定するフラグを取得または設定します。</summary>
        <value>最初または最後のデータ ポイントとグラフ エリアの境界線との間に空間を追加する場合は <see langword="True" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarksNextToAxis">
      <MemberSignature Language="C#" Value="public virtual bool IsMarksNextToAxis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarksNextToAxis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsMarksNextToAxis" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsMarksNextToAxis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMarksNextToAxis { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMarksNextToAxis : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsMarksNextToAxis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の交差するポイントが変更されたときに目盛りおよび軸ラベルが軸と一緒に移動するかどうかを指定するフラグを取得または設定します。</summary>
        <value>軸の交差するポイントが変更されたときに目盛りおよび軸ラベルが軸と一緒に移動する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReversed">
      <MemberSignature Language="C#" Value="public bool IsReversed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReversed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsReversed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReversed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReversed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReversed : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸を反転するかどうかを示すフラグを取得または設定します。</summary>
        <value>軸を反転する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定取り消された、軸の値は逆の並べ替え順序におけると軸の値の方向を反転します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartedFromZero">
      <MemberSignature Language="C#" Value="public bool IsStartedFromZero { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStartedFromZero" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.IsStartedFromZero" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStartedFromZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStartedFromZero { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsStartedFromZero : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.IsStartedFromZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてのデータ ポイント値が正の値であるときに軸の最小値を自動的に 0 に設定するかどうかを示すフラグを取得または設定します。 負のデータ ポイント値が存在する場合、データ ポイントの最小値が使用されます。</summary>
        <value>すべてのデータ ポイント値が正の値であるときに軸の最小値を自動的に 0 に設定する場合は <see langword="True" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelAutoFitMaxFontSize">
      <MemberSignature Language="C#" Value="public int LabelAutoFitMaxFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelAutoFitMaxFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitMaxFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelAutoFitMaxFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LabelAutoFitMaxFontSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LabelAutoFitMaxFontSize : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitMaxFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ラベルの自動調整アルゴリズムで使用できる最大のフォント サイズを取得または設定します。</summary>
        <value>
          <see langword="integer" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フォント サイズは、5 未満にすることはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelAutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int LabelAutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelAutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelAutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LabelAutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LabelAutoFitMinFontSize : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitMinFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ラベルの自動調整アルゴリズムで使用できる最小のフォント サイズを取得または設定します。</summary>
        <value>
          <see langword="integer" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelAutoFitStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles LabelAutoFitStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles LabelAutoFitStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelAutoFitStyle As LabelAutoFitStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LabelAutoFitStyles LabelAutoFitStyle { System::Windows::Forms::DataVisualization::Charting::LabelAutoFitStyles get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelAutoFitStyles value); };" />
      <MemberSignature Language="F#" Value="member this.LabelAutoFitStyle : System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LabelAutoFitStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸に沿ったラベルの調整を可能にするために許容されるラベルの変更を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelAutoFitStyles" /> 列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit%2A>プロパティに設定する必要があります`true`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LabelStyle LabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LabelStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelStyle As LabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LabelStyle ^ LabelStyle { System::Windows::Forms::DataVisualization::Charting::LabelStyle ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::LabelStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LabelStyle : System.Windows.Forms.DataVisualization.Charting.LabelStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" /> プロパティを取得または設定します。</summary>
        <value>軸ラベルのスタイルを定義する <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、書式設定、スタイルを指定するなど、軸のラベル。  
  
 場合、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit%2A>プロパティは`true`、フォント サイズ、フォントの角度、およびオフセット ラベルの使用が自動的に決定されます。 LabelStyle.Font.Size のいずれかを設定した場合<xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Angle%2A>または<xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IsStaggered%2A>、プロパティ、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLabelAutoFit%2A>プロパティ設定されます`false`です。  
  
 ラベルの時刻を使用せずに、日付ので構成される書式をする場合に注意してください、<xref:System.DateTime>使用されるデータ ポイント値が時間を指定、ラベルの書式設定によっては表示されない場合でも、時間がデータ ポイントの位置に影響します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の線の色を取得または設定します。</summary>
        <value>軸の描画に使用する線の色を表す <see cref="T:System.Drawing.Color" /> オブジェクト。 既定値は、<see cref="P:System.Drawing.Color.Black" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineColor%2A>軸の線の色を指定するプロパティです。  
  
 **注**軸が有効ではありませんが、隣接する軸はグリッド線を使用して、そのグリッド線のいずれかが表示されますが有効でない軸の代わりにします。 同じ状況が発生、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A>軸のプロパティに設定されて<xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>です。 この場合、軸は、データのプロットに使用されていないと、隣接する軸のグリッド線が代わりに表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の線スタイルを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineDashStyle%2A>プロパティが軸を使用する線のスタイルを決定します。 行には、純色、ピリオドで区切られたなどを指定できます。  
  
 **注**軸が有効ではありませんが、隣接する軸はグリッド線を使用して、そのグリッド線のいずれかが表示されますが有効でない軸の代わりにします。 同じ状況が発生、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A>軸のプロパティに設定されて<xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>です。 この場合、軸は、データのプロットに使用されていないと、隣接する軸のグリッド線が代わりに表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の線の幅 (ピクセル単位) を取得または設定します。</summary>
        <value>軸の線の幅を表す <see langword="integer" /> 値。 既定値は 1 ピクセルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.LineWidth%2A>プロパティを取得または、軸線の幅をピクセル単位で設定します。 幅がゼロ (0) に設定されている場合、行は表示されません。  
  
 **注**軸が有効ではありませんが、隣接する軸はグリッド線を使用して、そのグリッド線のいずれかが表示されますが有効でない軸の代わりにします。 同じ状況が発生、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Enabled%2A>軸のプロパティに設定されて<xref:System.Windows.Forms.DataVisualization.Charting.AxisEnabled.Auto>です。 この場合、軸は、データのプロットに使用されていないと、隣接する軸のグリッド線が代わりに表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogarithmBase">
      <MemberSignature Language="C#" Value="public double LogarithmBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LogarithmBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.LogarithmBase" />
      <MemberSignature Language="VB.NET" Value="Public Property LogarithmBase As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LogarithmBase { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LogarithmBase : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.LogarithmBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>対数軸の対数の底の値を取得または設定します。</summary>
        <value>
          <see langword="double" /> 値。 既定値は底 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、特殊効果、ときに、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsLogarithmic%2A>プロパティに設定されている`true`です。  
  
 このプロパティは、データのプロットに使用される値軸に適用のみに注意してください。 カテゴリ軸には、このプロパティを設定すると、スローされた例外が発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorGrid">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Grid MajorGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Grid MajorGrid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property MajorGrid As Grid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Grid ^ MajorGrid { System::Windows::Forms::DataVisualization::Charting::Grid ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::Grid ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MajorGrid : System.Windows.Forms.DataVisualization.Charting.Grid with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Grid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のグリッド線のプロパティの設定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> オブジェクトを取得または設定します。</summary>
        <value>軸のグリッド線のプロパティの取得または設定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グリッド線は常にデータ ポイントと共にを描画します。 つまり、カテゴリ軸の目盛りに、データ ポイントと軸に沿って同じ位置にそれらが発生します。 値軸のラベルされる場所に、既定ではグリッド線が描画されます。  
  
 グリッド線、色、およびなどを変更するのには、このプロパティを使用することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorTickMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TickMark MajorTickMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TickMark MajorTickMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MajorTickMark" />
      <MemberSignature Language="VB.NET" Value="Public Property MajorTickMark As TickMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TickMark ^ MajorTickMark { System::Windows::Forms::DataVisualization::Charting::TickMark ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::TickMark ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MajorTickMark : System.Windows.Forms.DataVisualization.Charting.TickMark with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.MajorTickMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TickMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の大目盛りのプロパティの設定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> オブジェクトを取得または設定します。</summary>
        <value>軸の大目盛りのプロパティの設定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目盛りは常にデータ ポイントと共にを描画します。 カテゴリ軸の目盛りが軸に沿ったデータ ポイントと同じ位置に発生します。 値軸の目盛りにはラベルされる場所に既定で描画されます。  
  
 このプロパティを使用して、頻度、色、サイズなどの目盛りマーク プロパティを変更することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisMinMaxAutoValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の最大値を取得または設定します。</summary>
        <value>軸の最大値を表す <see langword="double" /> 値。 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自動的に最大と最小軸を丸めるに値を呼び出し、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues%2A>メソッドです。 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Maximum%2A>値より大きくなければなりません、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A>値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumAutoSize : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.MaximumAutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラフ エリアの割合として示される、軸の最大サイズを取得または設定します。 この値は自動レイアウト アルゴリズムで使用されます。</summary>
        <value>A<see langword="float" />軸の最大サイズを表す値です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisMinMaxAutoValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の最小値を取得または設定します。</summary>
        <value>軸の最小値を表す <see langword="double" /> 値。 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ある場合、この値を明示的に設定すると、データ要素の X 値に考慮しなければならないアカウントに注意してください。 すべてのデータ ポイントの X-値がゼロの場合、<xref:System.Windows.Forms.DataVisualization.Charting.Chart>コントロールは最初のデータ ポイントが 0 時に発生すると仮定します。 また場合、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A>値が明示的に設定されて、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.IsStartedFromZero%2A>プロパティは無視されます。 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A>値である必要がありますよりも低い<xref:System.Windows.Forms.DataVisualization.Charting.Axis.Maximum%2A>値。  
  
 自動的に最大と最小の軸の値を丸める。 呼び出す、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues%2A>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorGrid">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Grid MinorGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.Grid MinorGrid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property MinorGrid As Grid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Grid ^ MinorGrid { System::Windows::Forms::DataVisualization::Charting::Grid ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::Grid ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MinorGrid : System.Windows.Forms.DataVisualization.Charting.Grid with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Grid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の補助グリッド線の属性の指定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> オブジェクトを取得または設定します。</summary>
        <value>軸の補助グリッド線の属性の取得または設定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 グリッド線の間に、補助グリッド線が描画されます。  
  
 このプロパティを使用すると、頻度、色、およびなどなどの補助グリッド線の属性を変更できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorTickMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TickMark MinorTickMark { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TickMark MinorTickMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.MinorTickMark" />
      <MemberSignature Language="VB.NET" Value="Public Property MinorTickMark As TickMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TickMark ^ MinorTickMark { System::Windows::Forms::DataVisualization::Charting::TickMark ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::TickMark ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MinorTickMark : System.Windows.Forms.DataVisualization.Charting.TickMark with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.MinorTickMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TickMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の補助目盛りのプロパティの設定に使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> オブジェクトを取得または設定します。</summary>
        <value>軸の補助目盛りのプロパティに使用される <see cref="T:System.Windows.Forms.DataVisualization.Charting.TickMark" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目盛りには、ラベルが通常発生間には、補助目盛りを作成する必要があります。  
  
 このプロパティを使用すると、補助目盛りの頻度、色、およびなどを変更できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸の名前を取得または設定します。</summary>
        <value>軸のテキスト名を表す <see langword="string" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelPositionToValue">
      <MemberSignature Language="C#" Value="public double PixelPositionToValue (double position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 PixelPositionToValue(float64 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.PixelPositionToValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelPositionToValue (position As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PixelPositionToValue(double position);" />
      <MemberSignature Language="F#" Value="member this.PixelPositionToValue : double -&gt; double" Usage="axis.PixelPositionToValue position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="position">ピクセル位置。</param>
        <summary>軸に沿った絶対ピクセル位置を軸の値に変換します。 このメソッドは描画イベントでのみ使用できます。</summary>
        <returns>軸の値を表す <see langword="double" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionToValue">
      <MemberSignature Language="C#" Value="public double PositionToValue (double position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 PositionToValue(float64 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.PositionToValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PositionToValue (position As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PositionToValue(double position);" />
      <MemberSignature Language="F#" Value="member this.PositionToValue : double -&gt; double" Usage="axis.PositionToValue position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="position">相対位置 (0 ～ 100%)。</param>
        <summary>軸に沿った相対座標を軸の値に変換します。 このメソッドは描画イベントでのみ使用できます。</summary>
        <returns>軸の値を表す <see langword="double" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundAxisValues">
      <MemberSignature Language="C#" Value="public void RoundAxisValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RoundAxisValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub RoundAxisValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RoundAxisValues();" />
      <MemberSignature Language="F#" Value="member this.RoundAxisValues : unit -&gt; unit" Usage="axis.RoundAxisValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>軸の値を自動的に丸めます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.RoundAxisValues%2A>軸の値を丸めます。 このメソッドが呼び出されたときに、軸で使用される間隔は変更されないことに注意してください。 このメソッドは、X 軸と X2 でのみサポート軸です。 既定では、Y および Y2 軸の値が丸められます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBreakStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle ScaleBreakStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle ScaleBreakStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ScaleBreakStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScaleBreakStyle As AxisScaleBreakStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataVisualization::Charting::AxisScaleBreakStyle ^ ScaleBreakStyle { System::Windows::Forms::DataVisualization::Charting::AxisScaleBreakStyle ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisScaleBreakStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScaleBreakStyle : System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.ScaleBreakStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のスケール区切りのスタイルを取得または設定します。</summary>
        <value>グラフの軸のスケール区切りのスタイルを表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisScaleBreakStyle" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisScaleView ScaleView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AxisScaleView ScaleView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ScaleView" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleView As AxisScaleView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisScaleView ^ ScaleView { System::Windows::Forms::DataVisualization::Charting::AxisScaleView ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisScaleView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScaleView : System.Windows.Forms.DataVisualization.Charting.AxisScaleView with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.ScaleView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisScaleView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のビューを取得または設定します。</summary>
        <value>軸のスケール ビューを表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisScaleView" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisScrollBar ScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AxisScrollBar ScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBar As AxisScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisScrollBar ^ ScrollBar { System::Windows::Forms::DataVisualization::Charting::AxisScrollBar ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisScrollBar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBar : System.Windows.Forms.DataVisualization.Charting.AxisScrollBar with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.ScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のスクロール バーを取得または設定します。</summary>
        <value>軸のスクロール バーを表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisScrollbar" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、軸のスクロール バーを操作できます。  
  
 詳細についてを参照してください、<xref:System.Windows.Forms.DataVisualization.Charting.AxisScrollBar>クラスのドキュメントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StripLines">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.StripLinesCollection StripLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.StripLinesCollection StripLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.StripLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StripLines As StripLinesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::StripLinesCollection ^ StripLines { System::Windows::Forms::DataVisualization::Charting::StripLinesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StripLines : System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.StripLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.StripLinesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" /> コレクション オブジェクトを取得します。</summary>
        <value>軸のすべての <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" /> オブジェクトを格納する <see cref="T:System.Windows.Forms.DataVisualization.Charting.StripLine" /> コレクション オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ストリップ ラインは全体の四角形のストリップを描画に使用する、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクト、および全体には常に描か\<A href =""> 領域。  
  
 これらのストリップ グリッド線には関連しません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOrientation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextOrientation TextOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TextOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOrientation As TextOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TextOrientation TextOrientation { System::Windows::Forms::DataVisualization::Charting::TextOrientation get(); void set(System::Windows::Forms::DataVisualization::Charting::TextOrientation value); };" />
      <MemberSignature Language="F#" Value="member this.TextOrientation : System.Windows.Forms.DataVisualization.Charting.TextOrientation with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.TextOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のタイトルのテキストの向きを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextOrientation" /> 列挙値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のタイトルを取得または設定します。</summary>
        <value>軸のタイトルを表す <see langword="string" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 軸のタイトルを取得または設定します。  
  
 使用して、タイトルのフォントのプロパティを設定することができます、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.TitleFont%2A>プロパティです。  
  
 使用して、タイトルの色を設定することができます、<xref:System.Windows.Forms.DataVisualization.Charting.Axis.TitleForeColor%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TitleAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.TitleAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のタイトルの配置を取得または設定します。</summary>
        <value>
          <see cref="T:System.Drawing.StringAlignment" /> 列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能なアラインメント値は<xref:System.Drawing.StringAlignment.Center>、 <xref:System.Drawing.StringAlignment.Far>、および<xref:System.Drawing.StringAlignment.Near>です。 値<xref:System.Drawing.StringAlignment.Far>上部または軸またはストリップ ラインの向きに応じて、右に配置のようになります。 同様の値で<xref:System.Drawing.StringAlignment.Near>下または右に配置のようになります。  
  
 使用してカスタム描画を実行する必要があります、軸のタイトルの位置より詳細に制御する場合、<xref:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint>または<xref:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint>イベント。  
  
 さらに配置しのタイトルを配置できます<xref:System.Windows.Forms.DataVisualization.Charting.StripLine>オブジェクトを使用して、<xref:System.Windows.Forms.DataVisualization.Charting.StripLine.TextLineAlignment%2A>と TitleAngle プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.TitleFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のタイトルのフォント プロパティを取得または設定します。</summary>
        <value>タイトルのフォント プロパティに使用する <see cref="T:System.Drawing.Font" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得またはフェイスやサイズなどのタイトルのフォント プロパティを設定します。  
  
 プロパティを設定するフォントの実行時、新しい<xref:System.Windows.Forms.DataVisualization.Charting.AnnotationGroup.Font%2A>オブジェクトを作成する必要があります。 現在のプロパティを変更しようとすると<xref:System.Windows.Forms.DataVisualization.Charting.AnnotationGroup.Font%2A>実行時にオブジェクトが、コンパイル エラーになります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.TitleForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のタイトルのテキストの色を取得または設定します。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 構造。 既定の色は <see cref="P:System.Drawing.Color.Black" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得または設定のテキストの色、<xref:System.Windows.Forms.DataVisualization.Charting.Axis>オブジェクトのタイトル。  
  
 任意の有効な (アルファ、赤、緑、青) ARGB 色を使用することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Axis.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Axis.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸に使用されるツールヒントを取得または設定します。</summary>
        <value>
          <see langword="string" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueToPixelPosition">
      <MemberSignature Language="C#" Value="public double ValueToPixelPosition (double axisValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ValueToPixelPosition(float64 axisValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPixelPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueToPixelPosition (axisValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ValueToPixelPosition(double axisValue);" />
      <MemberSignature Language="F#" Value="member this.ValueToPixelPosition : double -&gt; double" Usage="axis.ValueToPixelPosition axisValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axisValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="axisValue">軸の値。</param>
        <summary>軸の値を軸に沿った絶対座標に変換します。 単位はピクセルです。 このメソッドは描画イベントでのみ使用できます。</summary>
        <returns>ピクセル位置を表す <see langword="double" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueToPosition">
      <MemberSignature Language="C#" Value="public double ValueToPosition (double axisValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ValueToPosition(float64 axisValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValueToPosition (axisValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ValueToPosition(double axisValue);" />
      <MemberSignature Language="F#" Value="member this.ValueToPosition : double -&gt; double" Usage="axis.ValueToPosition axisValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axisValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="axisValue">軸の値。</param>
        <summary>軸の値を相対位置 (0 ～ 100%) に変換します。 軸のスケールが対数の場合、値は線形スケールに変換されます。 このメソッドは描画イベントでのみ使用できます。</summary>
        <returns>相対位置 (0 ～ 100%) を表す <see langword="double" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>